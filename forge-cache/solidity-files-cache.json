{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "contracts",
    "tests": "test/foundry",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "contracts/AppStorage.sol": {
      "lastModificationDate": 1705672066934,
      "contentHash": "c1931e8c8bad455a171c155bfa956e0a",
      "sourceName": "contracts/AppStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "AppStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AppStorage.sol/AppStorage.json"
        }
      }
    },
    "contracts/Diamond.sol": {
      "lastModificationDate": 1696451144027,
      "contentHash": "af15bfcd430491a3798ccb3620024d02",
      "sourceName": "contracts/Diamond.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/libraries/LibDiamond.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Diamond": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Diamond.sol/Diamond.json"
        }
      }
    },
    "contracts/Errors.sol": {
      "lastModificationDate": 1704929234914,
      "contentHash": "f9ad074cc24a03ea7a6d9911c5f2ef5d",
      "sourceName": "contracts/Errors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Errors": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Errors.sol/Errors.json"
        }
      }
    },
    "contracts/Modifiers.sol": {
      "lastModificationDate": 1705272921405,
      "contentHash": "439360f9459160834b8031db20ac7ba4",
      "sourceName": "contracts/Modifiers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Modifiers": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Modifiers.sol/Modifiers.json"
        }
      }
    },
    "contracts/OZL.sol": {
      "lastModificationDate": 1705850340726,
      "contentHash": "f632acc87c44c0ba7d06359927776162",
      "sourceName": "contracts/OZL.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/TradingLib.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "OZL": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OZL.sol/OZL.json"
        }
      }
    },
    "contracts/OZLrewards.sol": {
      "lastModificationDate": 1705407496245,
      "contentHash": "0344a81ccea5a96863f16508c0bdd3a3",
      "sourceName": "contracts/OZLrewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "OZLrewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OZLrewards.sol/OZLrewards.json"
        }
      }
    },
    "contracts/ProxyAdmin.sol": {
      "lastModificationDate": 1703199620078,
      "contentHash": "4d1bbff0611334b325ad798e43fcd83f",
      "sourceName": "contracts/ProxyAdmin.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ProxyAdmin": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ProxyAdmin.sol/ProxyAdmin.json"
        }
      }
    },
    "contracts/StakingRewards.sol": {
      "lastModificationDate": 1704211519421,
      "contentHash": "b3c2b8ce57b63a13c53bb68062d6702a",
      "sourceName": "contracts/StakingRewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "StakingRewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StakingRewards.sol/StakingRewards.json"
        }
      }
    },
    "contracts/facets/DiamondCutFacet.sol": {
      "lastModificationDate": 1697894671794,
      "contentHash": "e4ef88a55e3f841c72e68872d39d12a5",
      "sourceName": "contracts/facets/DiamondCutFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/libraries/LibDiamond.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "DiamondCutFacet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DiamondCutFacet.sol/DiamondCutFacet.json"
        }
      }
    },
    "contracts/facets/DiamondLoupeFacet.sol": {
      "lastModificationDate": 1696451144029,
      "contentHash": "ea3b2e64013d792244d705627a7d1aa9",
      "sourceName": "contracts/facets/DiamondLoupeFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/libraries/LibDiamond.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "DiamondLoupeFacet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DiamondLoupeFacet.sol/DiamondLoupeFacet.json"
        }
      }
    },
    "contracts/facets/MirrorExchange.sol": {
      "lastModificationDate": 1697916203204,
      "contentHash": "8ac0997bef91add4da1888514bc185eb",
      "sourceName": "contracts/facets/MirrorExchange.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "MirrorExchange": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MirrorExchange.sol/MirrorExchange.json"
        }
      }
    },
    "contracts/facets/OZLadmin.sol": {
      "lastModificationDate": 1703199768698,
      "contentHash": "801dfbf1c231cbb2d5bfa9b35e2152d2",
      "sourceName": "contracts/facets/OZLadmin.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/libraries/LibDiamond.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "OZLadmin": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OZLadmin.sol/OZLadmin.json"
        }
      }
    },
    "contracts/facets/OwnershipFacet.sol": {
      "lastModificationDate": 1697663681173,
      "contentHash": "b30ba9202a57961d9cf1596881af7c62",
      "sourceName": "contracts/facets/OwnershipFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/libraries/LibDiamond.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OwnershipFacet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OwnershipFacet.sol/OwnershipFacet.json"
        }
      }
    },
    "contracts/facets/Pools.sol": {
      "lastModificationDate": 1697916203205,
      "contentHash": "470d1edea80507bd2df22b6a5a276f95",
      "sourceName": "contracts/facets/Pools.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Pools": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Pools.sol/Pools.json"
        }
      }
    },
    "contracts/facets/ROImoduleL1.sol": {
      "lastModificationDate": 1705850547578,
      "contentHash": "e126a77e5037c4654e5c456040b37874",
      "sourceName": "contracts/facets/ROImoduleL1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ROImoduleL1": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ROImoduleL1.sol/ROImoduleL1.json"
        }
      }
    },
    "contracts/facets/ozBeacon.sol": {
      "lastModificationDate": 1697916203208,
      "contentHash": "0cedc2ce99a580989eda0cfb53dc6305",
      "sourceName": "contracts/facets/ozBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozBeacon": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozBeacon.sol/ozBeacon.json"
        }
      }
    },
    "contracts/facets/ozCut.sol": {
      "lastModificationDate": 1704449292130,
      "contentHash": "4ecb9fe9110e2f4607a196908ba32c99",
      "sourceName": "contracts/facets/ozCut.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/libraries/LibDiamond.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozCut": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozCut.sol/ozCut.json"
        }
      }
    },
    "contracts/facets/ozLoupe.sol": {
      "lastModificationDate": 1705672303457,
      "contentHash": "ff15290104631e587e63a9cf5e00e33e",
      "sourceName": "contracts/facets/ozLoupe.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/libraries/LibDiamond.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozLoupe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozLoupe.sol/ozLoupe.json"
        }
      }
    },
    "contracts/facets/ozOracle.sol": {
      "lastModificationDate": 1705850407649,
      "contentHash": "1da08ef504ef4196675a6d6da7f693a1",
      "sourceName": "contracts/facets/ozOracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozOracle": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozOracle.sol/ozOracle.json"
        }
      }
    },
    "contracts/facets/ozTokenFactory.sol": {
      "lastModificationDate": 1704738224193,
      "contentHash": "b5a102ac9b47eb1b19855012baed3aed",
      "sourceName": "contracts/facets/ozTokenFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/ozTokenProxy.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozTokenFactory": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozTokenFactory.sol/ozTokenFactory.json"
        }
      }
    },
    "contracts/interfaces/IBalancer.sol": {
      "lastModificationDate": 1704754583362,
      "contentHash": "d5a450476d3e75dba40a7257d83ec437",
      "sourceName": "contracts/interfaces/IBalancer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IAsset": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBalancer.sol/IAsset.json"
        },
        "IPool": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBalancer.sol/IPool.json"
        },
        "IQueries": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBalancer.sol/IQueries.json"
        },
        "IVault": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBalancer.sol/IVault.json"
        }
      }
    },
    "contracts/interfaces/IDiamondCut.sol": {
      "lastModificationDate": 1697916203210,
      "contentHash": "ebc11020f9fcf78a19f1f54c50564481",
      "sourceName": "contracts/interfaces/IDiamondCut.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IDiamondCut": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IDiamondCut.sol/IDiamondCut.json"
        }
      }
    },
    "contracts/interfaces/IDiamondLoupe.sol": {
      "lastModificationDate": 1696451144035,
      "contentHash": "a471cd6a18e337530aa0fb37a1dd2294",
      "sourceName": "contracts/interfaces/IDiamondLoupe.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IDiamondLoupe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IDiamondLoupe.sol/IDiamondLoupe.json"
        }
      }
    },
    "contracts/interfaces/IERC165.sol": {
      "lastModificationDate": 1696451144036,
      "contentHash": "f8f9ee2c76e1678bfead7a3fad131934",
      "sourceName": "contracts/interfaces/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "contracts/interfaces/IERC173.sol": {
      "lastModificationDate": 1696451144037,
      "contentHash": "65e379207bc221335d0eedfe7b077af6",
      "sourceName": "contracts/interfaces/IERC173.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC173": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC173.sol/IERC173.json"
        }
      }
    },
    "contracts/interfaces/IERC20Permit.sol": {
      "lastModificationDate": 1701100010798,
      "contentHash": "8e3873dce1e8f30b89e0269986dfa23e",
      "sourceName": "contracts/interfaces/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2",
      "artifacts": {
        "IERC20Permit": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20Permit.sol/IERC20Permit.json"
        }
      }
    },
    "contracts/interfaces/IOZL.sol": {
      "lastModificationDate": 1705101829981,
      "contentHash": "810cb79fd5d32cdbd390d075d454d575",
      "sourceName": "contracts/interfaces/IOZL.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IOZL": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IOZL.sol/IOZL.json"
        }
      }
    },
    "contracts/interfaces/IOZLrewards.sol": {
      "lastModificationDate": 1705326855971,
      "contentHash": "e97ba19f1dc1b50fca667cbf7718d80e",
      "sourceName": "contracts/interfaces/IOZLrewards.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IOZLrewards": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IOZLrewards.sol/IOZLrewards.json"
        }
      }
    },
    "contracts/interfaces/IQueries.sol": {
      "lastModificationDate": 1696605074315,
      "contentHash": "0f75c98d0d13df17f9a3c875fabe175e",
      "sourceName": "contracts/interfaces/IQueries.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBalancer.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IQueries": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IQueries.sol/IQueries.json"
        }
      }
    },
    "contracts/interfaces/IRocketPool.sol": {
      "lastModificationDate": 1700760508263,
      "contentHash": "815d13e2d4a75e915c62b18c23347319",
      "sourceName": "contracts/interfaces/IRocketPool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">0.5.0, <0.9.0",
      "artifacts": {
        "DAOdepositSettings": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRocketPool.sol/DAOdepositSettings.json"
        },
        "IRocketDAOProtocolSettingsDeposit": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRocketPool.sol/IRocketDAOProtocolSettingsDeposit.json"
        },
        "IRocketDepositPool": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRocketPool.sol/IRocketDepositPool.json"
        },
        "IRocketStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRocketPool.sol/IRocketStorage.json"
        },
        "IRocketTokenRETH": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRocketPool.sol/IRocketTokenRETH.json"
        },
        "IRocketVault": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IRocketPool.sol/IRocketVault.json"
        }
      }
    },
    "contracts/interfaces/IWETH.sol": {
      "lastModificationDate": 1696599862199,
      "contentHash": "b85ebb41a28bc78ec72390b0f70b0ff3",
      "sourceName": "contracts/interfaces/IWETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IWETH": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IWETH.sol/IWETH.json"
        }
      }
    },
    "contracts/interfaces/ozIDiamond.sol": {
      "lastModificationDate": 1705672303070,
      "contentHash": "132728df855225b6e2d87083c4325792",
      "sourceName": "contracts/interfaces/ozIDiamond.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozIDiamond": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozIDiamond.sol/ozIDiamond.json"
        }
      }
    },
    "contracts/interfaces/ozIToken.sol": {
      "lastModificationDate": 1703006968297,
      "contentHash": "3b7ccd9679d63199bab3eec994b17c9e",
      "sourceName": "contracts/interfaces/ozIToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozIToken": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozIToken.sol/ozIToken.json"
        }
      }
    },
    "contracts/libraries/FixedPointMathLib.sol": {
      "lastModificationDate": 1700760508265,
      "contentHash": "494511524292c48049bda27e43c32edc",
      "sourceName": "contracts/libraries/FixedPointMathLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {
        "FixedPointMathLib": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "FixedPointMathLib.sol/FixedPointMathLib.json"
        }
      }
    },
    "contracts/libraries/Helpers.sol": {
      "lastModificationDate": 1705620718999,
      "contentHash": "dc8efe1410e4ca8645b600c8ce485fc2",
      "sourceName": "contracts/libraries/Helpers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Helpers": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Helpers.sol/Helpers.json"
        }
      }
    },
    "contracts/libraries/LibDiamond.sol": {
      "lastModificationDate": 1705326937046,
      "contentHash": "ad99c555b443b1011aba93333e65bb3a",
      "sourceName": "contracts/libraries/LibDiamond.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IDiamondCut.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "LibDiamond": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LibDiamond.sol/LibDiamond.json"
        }
      }
    },
    "contracts/libraries/SafeMath.sol": {
      "lastModificationDate": 1700830246635,
      "contentHash": "1fbef163603f0c4732275f44c033238a",
      "sourceName": "contracts/libraries/SafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "SafeMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SafeMath.sol/SafeMath.json"
        }
      }
    },
    "contracts/libraries/TradingLib.sol": {
      "lastModificationDate": 1705847089895,
      "contentHash": "10a39c1a645f617bd58bf88d2081eeb0",
      "sourceName": "contracts/libraries/TradingLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TradingLib": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TradingLib.sol/TradingLib.json"
        }
      }
    },
    "contracts/ozToken.sol": {
      "lastModificationDate": 1705582734692,
      "contentHash": "d76135aab7c1f893c6b9e1320d629e89",
      "sourceName": "contracts/ozToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozToken": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozToken.sol/ozToken.json"
        }
      }
    },
    "contracts/ozTokenProxy.sol": {
      "lastModificationDate": 1697918987062,
      "contentHash": "358f13d7634ea69cfaf733f32666408c",
      "sourceName": "contracts/ozTokenProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ozTokenProxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ozTokenProxy.sol/ozTokenProxy.json"
        }
      }
    },
    "contracts/tests-diamond/Test1Facet.sol": {
      "lastModificationDate": 1696451144042,
      "contentHash": "907ac5e5d40fe7ef827a700d5159c6d8",
      "sourceName": "contracts/tests-diamond/Test1Facet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Test1Facet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Test1Facet.sol/Test1Facet.json"
        }
      }
    },
    "contracts/tests-diamond/Test2Facet.sol": {
      "lastModificationDate": 1696451144043,
      "contentHash": "4477ed5c4b2d62c5aee6dd471a1fa9aa",
      "sourceName": "contracts/tests-diamond/Test2Facet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Test2Facet": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Test2Facet.sol/Test2Facet.json"
        }
      }
    },
    "contracts/upgradeInitializers/DiamondInit.sol": {
      "lastModificationDate": 1705674036992,
      "contentHash": "51572ed60ee79cf0bbf2d7895e954df0",
      "sourceName": "contracts/upgradeInitializers/DiamondInit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/libraries/LibDiamond.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "DiamondInit": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DiamondInit.sol/DiamondInit.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1679244653606,
      "contentHash": "abdafe4b187f548ef0145173f5b93247",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1679244653607,
      "contentHash": "8f04bbbb2c16f79e14fdc321695a8ec2",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1679244653607,
      "contentHash": "9de0f799a1b1664749ddd6ce6492eae1",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1679244653608,
      "contentHash": "f73fef006f384b898c755b0e404b84a2",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1679244653608,
      "contentHash": "bc3e9c79e8a604fa6204de0168fe275d",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1679244653609,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1679244653609,
      "contentHash": "12c06010ec43ce935ed209d5aca30828",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1679244653610,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1679244653610,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1679244653610,
      "contentHash": "3cb9868082df39a53927db09dbc21f23",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1679244653611,
      "contentHash": "820e6f6b7704f0c980fae604b1e34b18",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1679244653611,
      "contentHash": "45fc08daaa17b7908fa5de7d758d8c86",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1679244653611,
      "contentHash": "bc9d74a0c612e1c2b66cca2973bcc803",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1679244653611,
      "contentHash": "7ca2e92dbe1abdc52e68bfd58bca1cc1",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1679244653612,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1679244653612,
      "contentHash": "2096b4e5f252c5df9909cccbe3d2da2e",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1679244653614,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
      "lastModificationDate": 1696361511403,
      "contentHash": "29c520cd24ad9a3f2c9cf285fee25f05",
      "sourceName": "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AggregatorV3Interface": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AggregatorV3Interface.sol/AggregatorV3Interface.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "lastModificationDate": 1696361508101,
      "contentHash": "5a20b2cad87ddb61c7a3a6af21289e28",
      "sourceName": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
      "lastModificationDate": 1696361507152,
      "contentHash": "d0d060231a45da7a1eecbb5cd286fa40",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1967": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC1967.sol/IERC1967.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1696361505504,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "draft-IERC1822.sol/IERC1822Proxiable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "lastModificationDate": 1696361505876,
      "contentHash": "3fc3c7c0a2956f36e766691bb9473b06",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/console.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1967Proxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC1967Proxy.sol/ERC1967Proxy.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1704317008173,
      "contentHash": "42422686e6d01156760f880a7fcfa18b",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/console.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967Upgrade": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC1967Upgrade.sol/ERC1967Upgrade.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
      "lastModificationDate": 1696361508124,
      "contentHash": "40b3d81a836d50ff47e03893dcaaf204",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Proxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proxy.sol/Proxy.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol": {
      "lastModificationDate": 1696361505139,
      "contentHash": "dc9dcb6e542154d9cfbfaece646c1092",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "BeaconProxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BeaconProxy.sol/BeaconProxy.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1696361506678,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeacon": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBeacon.sol/IBeacon.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
      "lastModificationDate": 1696361508648,
      "contentHash": "8ffefb755605824cf730ce4092b2f581",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/console.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UpgradeableBeacon": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UpgradeableBeacon.sol/UpgradeableBeacon.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
      "lastModificationDate": 1696361508618,
      "contentHash": "1286aa8d056c7120d1a2da252e310d2f",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/console.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ITransparentUpgradeableProxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TransparentUpgradeableProxy.sol/ITransparentUpgradeableProxy.json"
        },
        "TransparentUpgradeableProxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TransparentUpgradeableProxy.sol/TransparentUpgradeableProxy.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1696361507171,
      "contentHash": "df36f7051335cd1e748b1b6463b7fdd3",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
      "lastModificationDate": 1696361507290,
      "contentHash": "aa849939a4ae83a4dcb2dca9b3e9e707",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Permit": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20Permit.sol/IERC20Permit.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1696361508286,
      "contentHash": "1b5d667d3740d866eca0352758e59827",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "lastModificationDate": 1704318353125,
      "contentHash": "211ffd288c1588ba8c10eae668ca3c66",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "lastModificationDate": 1696361505243,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1696361508446,
      "contentHash": "682f7dd1f2e1147c8390e7575deceb2d",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlot": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StorageSlot.sol/StorageSlot.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol": {
      "lastModificationDate": 1696361506459,
      "contentHash": "f571ec6e875f9b4931281c34b4c4fa50",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC4626Upgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC4626Upgradeable.sol/IERC4626Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1696361506986,
      "contentHash": "b98e2f3a856e6e7f2106fb919bacab9e",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Initializable.sol/Initializable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
      "lastModificationDate": 1705669992453,
      "contentHash": "f6a254bc3e3c9c456a7a630fc4cb8ca4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Upgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC20Upgradeable.sol/ERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
      "lastModificationDate": 1696361506421,
      "contentHash": "a9ed3c7bc7d9ebb5e34f20829274f088",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Upgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20Upgradeable.sol/IERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol": {
      "lastModificationDate": 1699097672762,
      "contentHash": "76ee431e8ca5822c77e46a3bcac06e6e",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/console.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC4626Upgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC4626Upgradeable.sol/ERC4626Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
      "lastModificationDate": 1696361506406,
      "contentHash": "9efcd5467a7f0bf533910ee8a267adb2",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20MetadataUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC20MetadataUpgradeable.sol/IERC20MetadataUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
      "lastModificationDate": 1696361504611,
      "contentHash": "afab576c4d1f55fbf293a0daf3826e31",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20PermitUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "draft-IERC20PermitUpgradeable.sol/IERC20PermitUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol": {
      "lastModificationDate": 1696361507681,
      "contentHash": "c7dc9c967eb71371d53462f02b280441",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20Upgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SafeERC20Upgradeable.sol/SafeERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
      "lastModificationDate": 1696361503821,
      "contentHash": "d42e87f4fba2b03ab4d3c14cb53d0c51",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "AddressUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AddressUpgradeable.sol/AddressUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1696361504096,
      "contentHash": "6200b84950eb05b4a92a39fd1d6e0f9b",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ContextUpgradeable.sol/ContextUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol": {
      "lastModificationDate": 1696361504124,
      "contentHash": "2e908c762a799baea365e68a50500e2c",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CountersUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CountersUpgradeable.sol/CountersUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol": {
      "lastModificationDate": 1696361507729,
      "contentHash": "b9d00086379b2524eb287c850a1b2e54",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StringsUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StringsUpgradeable.sol/StringsUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol": {
      "lastModificationDate": 1696361504624,
      "contentHash": "57eba3b8fbf5ed2f2baa7dfdb7beb693",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSAUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ECDSAUpgradeable.sol/ECDSAUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol": {
      "lastModificationDate": 1696361504498,
      "contentHash": "58bfd44eb122c6d88351e8eda0590068",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "EIP712Upgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "draft-EIP712Upgradeable.sol/EIP712Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol": {
      "lastModificationDate": 1696361507158,
      "contentHash": "bd2782c8789a3d3084d67c351a55ab92",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MathUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "MathUpgradeable.sol/MathUpgradeable.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
      "lastModificationDate": 1696361501234,
      "contentHash": "f0eeb76e5ae42bcbacc8efc10e091716",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3Factory": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3Factory.sol/IUniswapV3Factory.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
      "lastModificationDate": 1696361501444,
      "contentHash": "e6badd8268772b99e7ca397aff11a965",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol"
      ],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3Pool": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3Pool.sol/IUniswapV3Pool.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
      "lastModificationDate": 1696361502053,
      "contentHash": "a8ba2d37b0107911ae0e3b0e123cbd83",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3SwapCallback": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3SwapCallback.sol/IUniswapV3SwapCallback.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
      "lastModificationDate": 1696361501580,
      "contentHash": "83d338eb1394008c808a20ac7c5bab0c",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolActions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolActions.sol/IUniswapV3PoolActions.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
      "lastModificationDate": 1696361501647,
      "contentHash": "25b71180ec9f5132a158334971ee2ace",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolDerivedState": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolDerivedState.sol/IUniswapV3PoolDerivedState.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
      "lastModificationDate": 1696361501706,
      "contentHash": "05abb59ec113db1046f7dadc78bb297b",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolEvents": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolEvents.sol/IUniswapV3PoolEvents.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
      "lastModificationDate": 1696361501787,
      "contentHash": "e236e09a9d654fb2f20a6da5dba2bd2f",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolImmutables": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolImmutables.sol/IUniswapV3PoolImmutables.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
      "lastModificationDate": 1696361501836,
      "contentHash": "1b06ecc79e75f836c446ccf286e671e4",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolOwnerActions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolOwnerActions.sol/IUniswapV3PoolOwnerActions.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
      "lastModificationDate": 1696361501923,
      "contentHash": "0488495ef9087b4513d3b43634035ef9",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3PoolState": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IUniswapV3PoolState.sol/IUniswapV3PoolState.json"
        }
      }
    },
    "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
      "lastModificationDate": 1696361505529,
      "contentHash": "ffd42687b3db01d30c24213d961fcf9f",
      "sourceName": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol"
      ],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "ISwapRouter": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ISwapRouter.sol/ISwapRouter.json"
        }
      }
    },
    "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
      "lastModificationDate": 1696361505904,
      "contentHash": "f0616d1842da6584f8454c9b323d777f",
      "sourceName": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": ">=0.6.0",
      "artifacts": {
        "TransferHelper": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TransferHelper.sol/TransferHelper.json"
        }
      }
    },
    "test/foundry/AppStorageTests.sol": {
      "lastModificationDate": 1699401797389,
      "contentHash": "5b19d07e387c6f5f3e0c90586837e244",
      "sourceName": "test/foundry/AppStorageTests.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/interfaces/IBalancer.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "AppStorageTests": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AppStorageTests.sol/AppStorageTests.json"
        }
      }
    },
    "test/foundry/BaseMethods.sol": {
      "lastModificationDate": 1705408288682,
      "contentHash": "1ad10e6cfc867152b33ecf0bb6f1e896",
      "sourceName": "test/foundry/BaseMethods.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "BaseMethods": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BaseMethods.sol/BaseMethods.json"
        }
      }
    },
    "test/foundry/CoreTokenLogic/BalancerPath.t.sol": {
      "lastModificationDate": 1703200063517,
      "contentHash": "b16a7137b1cc5f2c45275a0a9a172295",
      "sourceName": "test/foundry/CoreTokenLogic/BalancerPath.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol",
        "test/foundry/TestMethods.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "BalancerPathTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BalancerPath.t.sol/BalancerPathTest.json"
        }
      }
    },
    "test/foundry/CoreTokenLogic/PausedPath.t.sol": {
      "lastModificationDate": 1705060517124,
      "contentHash": "857ecce6febb919bcd963fbcbafabd48",
      "sourceName": "test/foundry/CoreTokenLogic/PausedPath.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol",
        "test/foundry/TestMethods.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PausedPathTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PausedPath.t.sol/PausedPathTest.json"
        }
      }
    },
    "test/foundry/CoreTokenLogic/RocketPoolPath.t.sol": {
      "lastModificationDate": 1702938728631,
      "contentHash": "2b5dd78f5137a9a31514bfe722caee87",
      "sourceName": "test/foundry/CoreTokenLogic/RocketPoolPath.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol",
        "test/foundry/TestMethods.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "RocketPoolPathTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RocketPoolPath.t.sol/RocketPoolPathTest.json"
        }
      }
    },
    "test/foundry/HelpersLib.sol": {
      "lastModificationDate": 1705100540235,
      "contentHash": "f7fa00da24e86ac9eddc8bc41d89a553",
      "sourceName": "test/foundry/HelpersLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "lib/forge-std/src/console.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "test/foundry/AppStorageTests.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "HelpersLib": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "HelpersLib.sol/HelpersLib.json"
        }
      }
    },
    "test/foundry/OZLrewards.t.sol": {
      "lastModificationDate": 1704462391910,
      "contentHash": "7a01fa5808f0f3a233756d6098a4fabc",
      "sourceName": "test/foundry/OZLrewards.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol",
        "test/foundry/TestMethods.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "OZLrewardsTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OZLrewards.t.sol/OZLrewardsTest.json"
        }
      }
    },
    "test/foundry/OZLtoken.t.sol": {
      "lastModificationDate": 1705850547120,
      "contentHash": "5a7898a8ef20065217e667927067d34c",
      "sourceName": "test/foundry/OZLtoken.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol",
        "test/foundry/TestMethods.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "OZLtokenTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OZLtoken.t.sol/OZLtokenTest.json"
        }
      }
    },
    "test/foundry/OtherTests.t.sol": {
      "lastModificationDate": 1704299709572,
      "contentHash": "7a1ddf8d635648f814e871e4b5b84f12",
      "sourceName": "test/foundry/OtherTests.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol",
        "test/foundry/TestMethods.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "OtherTests": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "OtherTests.t.sol/OtherTests.json"
        }
      }
    },
    "test/foundry/ROImoduleL1.t.sol": {
      "lastModificationDate": 1702938728635,
      "contentHash": "1ca3942d798abb57058eb2b9a5f2c070",
      "sourceName": "test/foundry/ROImoduleL1.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/Setup.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ROImoduleL1Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ROImoduleL1.t.sol/ROImoduleL1Test.json"
        }
      }
    },
    "test/foundry/Setup.sol": {
      "lastModificationDate": 1705850872585,
      "contentHash": "86959bb0c17566e6d0f8929fd5140fe6",
      "sourceName": "test/foundry/Setup.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/libraries/TradingLib.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "Setup": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Setup.sol/Setup.json"
        }
      }
    },
    "test/foundry/TestMethods.sol": {
      "lastModificationDate": 1705177720309,
      "contentHash": "040abb0f208d22c320fc6c0dea3ec668",
      "sourceName": "test/foundry/TestMethods.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/AppStorage.sol",
        "contracts/Diamond.sol",
        "contracts/Errors.sol",
        "contracts/Modifiers.sol",
        "contracts/OZL.sol",
        "contracts/OZLrewards.sol",
        "contracts/ProxyAdmin.sol",
        "contracts/facets/DiamondCutFacet.sol",
        "contracts/facets/DiamondLoupeFacet.sol",
        "contracts/facets/MirrorExchange.sol",
        "contracts/facets/OZLadmin.sol",
        "contracts/facets/OwnershipFacet.sol",
        "contracts/facets/Pools.sol",
        "contracts/facets/ROImoduleL1.sol",
        "contracts/facets/ozBeacon.sol",
        "contracts/facets/ozCut.sol",
        "contracts/facets/ozLoupe.sol",
        "contracts/facets/ozOracle.sol",
        "contracts/facets/ozTokenFactory.sol",
        "contracts/interfaces/IBalancer.sol",
        "contracts/interfaces/IDiamondCut.sol",
        "contracts/interfaces/IDiamondLoupe.sol",
        "contracts/interfaces/IERC165.sol",
        "contracts/interfaces/IERC173.sol",
        "contracts/interfaces/IERC20Permit.sol",
        "contracts/interfaces/IOZL.sol",
        "contracts/interfaces/IOZLrewards.sol",
        "contracts/interfaces/IRocketPool.sol",
        "contracts/interfaces/IWETH.sol",
        "contracts/interfaces/ozIDiamond.sol",
        "contracts/interfaces/ozIToken.sol",
        "contracts/libraries/FixedPointMathLib.sol",
        "contracts/libraries/Helpers.sol",
        "contracts/libraries/LibDiamond.sol",
        "contracts/ozToken.sol",
        "contracts/ozTokenProxy.sol",
        "contracts/upgradeInitializers/DiamondInit.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "test/foundry/AppStorageTests.sol",
        "test/foundry/BaseMethods.sol",
        "test/foundry/HelpersLib.sol",
        "test/foundry/Setup.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "TestMethods": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TestMethods.sol/TestMethods.json"
        }
      }
    }
  }
}