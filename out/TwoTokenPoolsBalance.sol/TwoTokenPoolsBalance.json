{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "AuthorizerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExternalBalanceTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "InternalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "protocolFeeAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "PoolBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "cashDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "managedDelta",
          "type": "int256"
        }
      ],
      "name": "PoolBalanceManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RelayerApprovalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokensDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "TokensRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "batchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "deregisterTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.ExitPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getActionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getInternalBalance",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNextNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "managed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPoolTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeesCollector",
      "outputs": [
        {
          "internalType": "contract ProtocolFeesCollector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "hasApprovedRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxAmountsIn",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.JoinPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.PoolBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.PoolBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "managePoolBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.UserBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct IVault.UserBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "manageUserBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "queryBatchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "assetDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "registerPool",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "registerTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setRelayerApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "WETH()": "ad5c4648",
    "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "945bcec9",
    "deregisterTokens(bytes32,address[])": "7d3aeb96",
    "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913",
    "flashLoan(address,address[],uint256[],bytes)": "5c38449e",
    "getActionId(bytes4)": "851c1bb3",
    "getAuthorizer()": "aaabadc5",
    "getDomainSeparator()": "ed24911d",
    "getInternalBalance(address,address[])": "0f5a6efa",
    "getNextNonce(address)": "90193b7c",
    "getPausedState()": "1c0de051",
    "getPool(bytes32)": "f6c00927",
    "getPoolTokenInfo(bytes32,address)": "b05f8e48",
    "getPoolTokens(bytes32)": "f94d4668",
    "getProtocolFeesCollector()": "d2946c2b",
    "hasApprovedRelayer(address,address)": "fec90d72",
    "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28",
    "managePoolBalance((uint8,bytes32,address,uint256)[])": "e6c46092",
    "manageUserBalance((uint8,address,uint256,address,address)[])": "0e8e3e84",
    "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": "f84d066e",
    "registerPool(uint8)": "09b2760f",
    "registerTokens(bytes32,address[],address[])": "66a9c7d2",
    "setAuthorizer(address)": "058a628f",
    "setPaused(bool)": "16c38b3c",
    "setRelayerApproval(address,address,bool)": "fa6e671d",
    "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "52bbbe29"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract ProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol\":\"TwoTokenPoolsBalance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"test/foundry/Vault/contracts/lib/helpers/Authentication.sol\":{\"keccak256\":\"0xea892213ec2967f53e26a0dd833bde01e4d9b6e49dd91e6c59ff00044f83c28d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0bc36f6335254bef8a4515e898a7ce5b3f36350e4d7d1dd45a0aa3d1356fdae5\",\"dweb:/ipfs/QmRRatu77hTPReUnRidk3wjgEMyGYVgh9wDrkiMiKmtWtR\"]},\"test/foundry/Vault/contracts/lib/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xcf81c3938bee334cb8cb88603f59768754c297e2bce76ab8cc2a4b5877146219\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49273bc36bde574f90c23d0bf033455f9f069e106e7fdb0d1040ec87f96dc19b\",\"dweb:/ipfs/QmUQt4QisHsBdh7SELzkTcfw9okBuxFCHeipiEzYCq3Vnr\"]},\"test/foundry/Vault/contracts/lib/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"test/foundry/Vault/contracts/lib/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"test/foundry/Vault/contracts/lib/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"test/foundry/Vault/contracts/lib/helpers/InputHelpers.sol\":{\"keccak256\":\"0xd58eb6851269729d3ea0d739f812c67c3e750b046ef1653ae12134e668925d28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9cb5db2184b915b6640593f2e0840de1c39144b1d692f5f1bb13958b28647d7c\",\"dweb:/ipfs/QmbdfxJJo5hwJMG1Cvi2DoBthwENVkdAGJ6JDAWP8JLzW9\"]},\"test/foundry/Vault/contracts/lib/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x1b370c5532ea1439d3c2d66ab993cc4851921d9aa38f0639a81a2d04113077dd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5d7fe92b224f90cb49204f04db3e71103eeea885df8562a9e886a73f6acbeea9\",\"dweb:/ipfs/QmXb4NEm8DAjUecZ3qKn9QY2vencdpdEE6ytfmLi4egT3u\"]},\"test/foundry/Vault/contracts/lib/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xd20f7cbc60072fc73aa137ce644777195de3143bc6ce910c43501647f3ce6c60\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b3c5a3589b0d85a051977e77e1fe1e9b41c4d005a8a4ac3156995e9fddd9d926\",\"dweb:/ipfs/QmZwwhQQFL9tK1vNBTKB4E5ZGBdwfgGrgv2fjHgBaZTENi\"]},\"test/foundry/Vault/contracts/lib/math/Math.sol\":{\"keccak256\":\"0x98cf5d1e9b91be5a4315c1aa7bf6480e097113c5f9a9200c92d123bc4ece9ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9617a16524a7e9b82f6962f76ef2d8a47d14285c001d4bb5e88574cb33e0ebe3\",\"dweb:/ipfs/QmRBvV1X5FEsyxDAfMPZ4GNp7HvfK5gaKaLpp6o1EYwfFF\"]},\"test/foundry/Vault/contracts/lib/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0cf3ec5d6130aac057e69df14b1ff87baf9c6c2cb13bc545952def004e629ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://446419367266d271bf6953e4ae0423356a5cc4717f7b9a5a0532436de4be2d70\",\"dweb:/ipfs/QmPV56wHs1Mqif6et6TYrhZ2QYPNmiVTmXWvQMhqWfKLk9\"]},\"test/foundry/Vault/contracts/lib/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"test/foundry/Vault/contracts/lib/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xe055f8c5d34af6e615892acf192c74d2d83784713bd98b2f8e44751f5ffe2bed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac81cac0143f50682c322258a5d5a8ba125140571cbd08e68bd91137001a105d\",\"dweb:/ipfs/QmXC7eHNwLdrnA74NjAAQcwPfDkkk63dkAYhKJ9QYENBNg\"]},\"test/foundry/Vault/contracts/lib/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0x8db59e0924c72228865dddcadc07e25507809582c50679c8efec6fa737704aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b48616e2731312a5b462cd2a82b57de7e01cc30bab5756fe732905de8693039f\",\"dweb:/ipfs/QmTQovrnEYZBVLyUiFarhRDXj42Y1MhM7kW2tpNuaJ9uGK\"]},\"test/foundry/Vault/contracts/vault/PoolRegistry.sol\":{\"keccak256\":\"0xa0aa1b73a0aebbbc26c95c8ed87d4c506ca17e8af2b35cec20a845f6a0fc7cc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d3b83f0909fc416806e86160450775b6bc36cdfd4a134f26312896a9306805da\",\"dweb:/ipfs/Qmb1PHkzNmj6B17Nid3M4V6ZEq2V1KzL3ZBs8LATjPjW2S\"]},\"test/foundry/Vault/contracts/vault/ProtocolFeesCollector.sol\":{\"keccak256\":\"0x67a0898b29a356085f4d7a83c52d1c794ebf07b6522133c9b9c7f5faf10d2184\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2bc6a0209840b9b6b695241122646ce9040716237e05b67cdb5445a961e8b374\",\"dweb:/ipfs/QmfCtZLSbBXqMTZBFfzxx3VFquXbbaFD9tsRNc3y5jXozn\"]},\"test/foundry/Vault/contracts/vault/VaultAuthorization.sol\":{\"keccak256\":\"0x28355b8b6d7a5c532708cd86e8bf3bc69daf7d43dc868caba55fe2058cb5e2e9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1b6b90d24b25aa98efed8b733f7652c7531132db7119cbfff2278b486284213b\",\"dweb:/ipfs/QmdxxvRCSDBJV72d74mXAHG9Wzgvz79KyNsWK8khcyDPwC\"]},\"test/foundry/Vault/contracts/vault/balances/BalanceAllocation.sol\":{\"keccak256\":\"0x20961781812c61dcd2d7f2063598cbe1bdfd806ad9cadb857e3350d2cc132f17\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8eb6a318e9dc7ae7bd9c24ea5afe8433014674c2d2e8a3b2b5e8b29d47d3469b\",\"dweb:/ipfs/QmaAaCAx1EbjKx1oGGGP2dE6YAxR7Qat4eWZcKiyaq3NyM\"]},\"test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol\":{\"keccak256\":\"0x2cd5a8f9bee0addefa4e63cb7380f9b133d2e482807603fed931d42e3e1f40f4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a93a5597c1afe33729693e9852804ed27e5b3f333e02d0f42c4027f8c61ca14\",\"dweb:/ipfs/QmNr8EDoyguYNCUis8ES6y5ZTE4eiPw3rgYEjsQppgwTgF\"]},\"test/foundry/Vault/contracts/vault/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"test/foundry/Vault/contracts/vault/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"test/foundry/Vault/contracts/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x6886740dcaebfb24a25f914ce5b4299aeab3fe0cc135a1707c0fe4e3d6d02cb6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a379297af3e38f7ba24c9c26285382bf5d7e36260590f9d06ce1b573cadd7d4\",\"dweb:/ipfs/QmZWeYKn3UDBPJUrFCHty9g9fHWG46Q4BhhddmyfB1Ugj8\"]},\"test/foundry/Vault/contracts/vault/interfaces/IVault.sol\":{\"keccak256\":\"0xc1b1344fcb93f499269d9687514f0a72cc8164cfd3dd3da08a6af1f9e7c60168\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b7bf8d441a1fdbb2c040c1ee781f0c55b7ba28c1c4f829b6876fc301566b83ba\",\"dweb:/ipfs/QmU2C7d4SKT8nwyXr3MEo2FHPgLUNBVoE1ngcrNHTq3h8q\"]},\"test/foundry/Vault/contracts/vault/interfaces/IWETH.sol\":{\"keccak256\":\"0x621a25d9e3f3a4cd9e4493ab330a50a4456b6ea8fc568911fdd5486f78a4d3ab\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://93a5ad052b725c300232952ba067abce53c0b167f0e55c44bfd5ba308d9d542b\",\"dweb:/ipfs/QmdsRjQShAUbA1KGWhoKsvWTR2PffgfXNJBCU5hTmgLJVb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExternalBalanceTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashLoan",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InternalBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PausedStateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "deltas",
              "type": "int256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "protocolFeeAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "cashDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "managedDelta",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolBalanceManaged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelayerApprovalChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensRegistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "int256[]",
              "name": "limits",
              "type": "int256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "batchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterTokens"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exitPool"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlashLoanRecipient",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashLoan"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuthorizer",
          "outputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDomainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInternalBalance",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNextNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPausedState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "pauseWindowEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bufferPeriodEndTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokenInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "managed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetManager",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "balances",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "lastChangeBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolFeesCollector",
          "outputs": [
            {
              "internalType": "contract ProtocolFeesCollector",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasApprovedRelayer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinPool"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.PoolBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.PoolBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "managePoolBalance"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.UserBalanceOp[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum IVault.UserBalanceOpKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "manageUserBalance"
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queryBatchSwap",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "assetDeltas",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IVault.PoolSpecialization",
              "name": "specialization",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPool",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "assetManagers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTokens"
        },
        {
          "inputs": [
            {
              "internalType": "contract IAuthorizer",
              "name": "newAuthorizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthorizer"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelayerApproval"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "WETH()": {
            "details": "Returns the Vault's WETH instance."
          },
          "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
            "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
          },
          "deregisterTokens(bytes32,address[])": {
            "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
          },
          "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
          },
          "flashLoan(address,address[],uint256[],bytes)": {
            "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
          },
          "getActionId(bytes4)": {
            "details": "Returns the action identifier associated with the external function described by `selector`."
          },
          "getAuthorizer()": {
            "details": "Returns the Vault's Authorizer."
          },
          "getDomainSeparator()": {
            "details": "Returns the EIP712 domain separator."
          },
          "getInternalBalance(address,address[])": {
            "details": "Returns `user`'s Internal Balance for a set of tokens."
          },
          "getNextNonce(address)": {
            "details": "Returns the next nonce used by an address to sign messages."
          },
          "getPausedState()": {
            "details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."
          },
          "getPool(bytes32)": {
            "details": "Returns a Pool's contract address and specialization setting."
          },
          "getPoolTokenInfo(bytes32,address)": {
            "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
          },
          "getPoolTokens(bytes32)": {
            "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
          },
          "getProtocolFeesCollector()": {
            "details": "Returns the current protocol fee module."
          },
          "hasApprovedRelayer(address,address)": {
            "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
          },
          "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
            "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
          },
          "managePoolBalance((uint8,bytes32,address,uint256)[])": {
            "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
          },
          "manageUserBalance((uint8,address,uint256,address,address)[])": {
            "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
          },
          "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
            "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
          },
          "registerPool(uint8)": {
            "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
          },
          "registerTokens(bytes32,address[],address[])": {
            "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
          },
          "setAuthorizer(address)": {
            "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
          },
          "setPaused(bool)": {
            "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
          },
          "setRelayerApproval(address,address,bool)": {
            "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
          },
          "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
            "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol": "TwoTokenPoolsBalance"
      },
      "libraries": {}
    },
    "sources": {
      "test/foundry/Vault/contracts/lib/helpers/Authentication.sol": {
        "keccak256": "0xea892213ec2967f53e26a0dd833bde01e4d9b6e49dd91e6c59ff00044f83c28d",
        "urls": [
          "bzz-raw://0bc36f6335254bef8a4515e898a7ce5b3f36350e4d7d1dd45a0aa3d1356fdae5",
          "dweb:/ipfs/QmRRatu77hTPReUnRidk3wjgEMyGYVgh9wDrkiMiKmtWtR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/BalancerErrors.sol": {
        "keccak256": "0xcf81c3938bee334cb8cb88603f59768754c297e2bce76ab8cc2a4b5877146219",
        "urls": [
          "bzz-raw://49273bc36bde574f90c23d0bf033455f9f069e106e7fdb0d1040ec87f96dc19b",
          "dweb:/ipfs/QmUQt4QisHsBdh7SELzkTcfw9okBuxFCHeipiEzYCq3Vnr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/IAuthentication.sol": {
        "keccak256": "0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6",
        "urls": [
          "bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d",
          "dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1",
        "urls": [
          "bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995",
          "dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562",
        "urls": [
          "bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b",
          "dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/InputHelpers.sol": {
        "keccak256": "0xd58eb6851269729d3ea0d739f812c67c3e750b046ef1653ae12134e668925d28",
        "urls": [
          "bzz-raw://9cb5db2184b915b6640593f2e0840de1c39144b1d692f5f1bb13958b28647d7c",
          "dweb:/ipfs/QmbdfxJJo5hwJMG1Cvi2DoBthwENVkdAGJ6JDAWP8JLzW9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/SignaturesValidator.sol": {
        "keccak256": "0x1b370c5532ea1439d3c2d66ab993cc4851921d9aa38f0639a81a2d04113077dd",
        "urls": [
          "bzz-raw://5d7fe92b224f90cb49204f04db3e71103eeea885df8562a9e886a73f6acbeea9",
          "dweb:/ipfs/QmXb4NEm8DAjUecZ3qKn9QY2vencdpdEE6ytfmLi4egT3u"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/helpers/TemporarilyPausable.sol": {
        "keccak256": "0xd20f7cbc60072fc73aa137ce644777195de3143bc6ce910c43501647f3ce6c60",
        "urls": [
          "bzz-raw://b3c5a3589b0d85a051977e77e1fe1e9b41c4d005a8a4ac3156995e9fddd9d926",
          "dweb:/ipfs/QmZwwhQQFL9tK1vNBTKB4E5ZGBdwfgGrgv2fjHgBaZTENi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/lib/math/Math.sol": {
        "keccak256": "0x98cf5d1e9b91be5a4315c1aa7bf6480e097113c5f9a9200c92d123bc4ece9ec4",
        "urls": [
          "bzz-raw://9617a16524a7e9b82f6962f76ef2d8a47d14285c001d4bb5e88574cb33e0ebe3",
          "dweb:/ipfs/QmRBvV1X5FEsyxDAfMPZ4GNp7HvfK5gaKaLpp6o1EYwfFF"
        ],
        "license": "MIT"
      },
      "test/foundry/Vault/contracts/lib/openzeppelin/EIP712.sol": {
        "keccak256": "0x0cf3ec5d6130aac057e69df14b1ff87baf9c6c2cb13bc545952def004e629ac0",
        "urls": [
          "bzz-raw://446419367266d271bf6953e4ae0423356a5cc4717f7b9a5a0532436de4be2d70",
          "dweb:/ipfs/QmPV56wHs1Mqif6et6TYrhZ2QYPNmiVTmXWvQMhqWfKLk9"
        ],
        "license": "MIT"
      },
      "test/foundry/Vault/contracts/lib/openzeppelin/IERC20.sol": {
        "keccak256": "0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76",
        "urls": [
          "bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a",
          "dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4"
        ],
        "license": "MIT"
      },
      "test/foundry/Vault/contracts/lib/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xe055f8c5d34af6e615892acf192c74d2d83784713bd98b2f8e44751f5ffe2bed",
        "urls": [
          "bzz-raw://ac81cac0143f50682c322258a5d5a8ba125140571cbd08e68bd91137001a105d",
          "dweb:/ipfs/QmXC7eHNwLdrnA74NjAAQcwPfDkkk63dkAYhKJ9QYENBNg"
        ],
        "license": "MIT"
      },
      "test/foundry/Vault/contracts/lib/openzeppelin/SafeERC20.sol": {
        "keccak256": "0x8db59e0924c72228865dddcadc07e25507809582c50679c8efec6fa737704aed",
        "urls": [
          "bzz-raw://b48616e2731312a5b462cd2a82b57de7e01cc30bab5756fe732905de8693039f",
          "dweb:/ipfs/QmTQovrnEYZBVLyUiFarhRDXj42Y1MhM7kW2tpNuaJ9uGK"
        ],
        "license": "MIT"
      },
      "test/foundry/Vault/contracts/vault/PoolRegistry.sol": {
        "keccak256": "0xa0aa1b73a0aebbbc26c95c8ed87d4c506ca17e8af2b35cec20a845f6a0fc7cc6",
        "urls": [
          "bzz-raw://d3b83f0909fc416806e86160450775b6bc36cdfd4a134f26312896a9306805da",
          "dweb:/ipfs/Qmb1PHkzNmj6B17Nid3M4V6ZEq2V1KzL3ZBs8LATjPjW2S"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/ProtocolFeesCollector.sol": {
        "keccak256": "0x67a0898b29a356085f4d7a83c52d1c794ebf07b6522133c9b9c7f5faf10d2184",
        "urls": [
          "bzz-raw://2bc6a0209840b9b6b695241122646ce9040716237e05b67cdb5445a961e8b374",
          "dweb:/ipfs/QmfCtZLSbBXqMTZBFfzxx3VFquXbbaFD9tsRNc3y5jXozn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/VaultAuthorization.sol": {
        "keccak256": "0x28355b8b6d7a5c532708cd86e8bf3bc69daf7d43dc868caba55fe2058cb5e2e9",
        "urls": [
          "bzz-raw://1b6b90d24b25aa98efed8b733f7652c7531132db7119cbfff2278b486284213b",
          "dweb:/ipfs/QmdxxvRCSDBJV72d74mXAHG9Wzgvz79KyNsWK8khcyDPwC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/balances/BalanceAllocation.sol": {
        "keccak256": "0x20961781812c61dcd2d7f2063598cbe1bdfd806ad9cadb857e3350d2cc132f17",
        "urls": [
          "bzz-raw://8eb6a318e9dc7ae7bd9c24ea5afe8433014674c2d2e8a3b2b5e8b29d47d3469b",
          "dweb:/ipfs/QmaAaCAx1EbjKx1oGGGP2dE6YAxR7Qat4eWZcKiyaq3NyM"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol": {
        "keccak256": "0x2cd5a8f9bee0addefa4e63cb7380f9b133d2e482807603fed931d42e3e1f40f4",
        "urls": [
          "bzz-raw://7a93a5597c1afe33729693e9852804ed27e5b3f333e02d0f42c4027f8c61ca14",
          "dweb:/ipfs/QmNr8EDoyguYNCUis8ES6y5ZTE4eiPw3rgYEjsQppgwTgF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/interfaces/IAsset.sol": {
        "keccak256": "0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6",
        "urls": [
          "bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1",
          "dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/interfaces/IAuthorizer.sol": {
        "keccak256": "0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5",
        "urls": [
          "bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0",
          "dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0x6886740dcaebfb24a25f914ce5b4299aeab3fe0cc135a1707c0fe4e3d6d02cb6",
        "urls": [
          "bzz-raw://6a379297af3e38f7ba24c9c26285382bf5d7e36260590f9d06ce1b573cadd7d4",
          "dweb:/ipfs/QmZWeYKn3UDBPJUrFCHty9g9fHWG46Q4BhhddmyfB1Ugj8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/interfaces/IVault.sol": {
        "keccak256": "0xc1b1344fcb93f499269d9687514f0a72cc8164cfd3dd3da08a6af1f9e7c60168",
        "urls": [
          "bzz-raw://b7bf8d441a1fdbb2c040c1ee781f0c55b7ba28c1c4f829b6876fc301566b83ba",
          "dweb:/ipfs/QmU2C7d4SKT8nwyXr3MEo2FHPgLUNBVoE1ngcrNHTq3h8q"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/foundry/Vault/contracts/vault/interfaces/IWETH.sol": {
        "keccak256": "0x621a25d9e3f3a4cd9e4493ab330a50a4456b6ea8fc568911fdd5486f78a4d3ab",
        "urls": [
          "bzz-raw://93a5ad052b725c300232952ba067abce53c0b167f0e55c44bfd5ba308d9d542b",
          "dweb:/ipfs/QmdsRjQShAUbA1KGWhoKsvWTR2PffgfXNJBCU5hTmgLJVb"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3805,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 716,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_nextNonce",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 967,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 8639,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_authorizer",
        "offset": 1,
        "slot": "2",
        "type": "t_contract(IAuthorizer)11086"
      },
      {
        "astId": 8645,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_approvedRelayers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 5769,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_isPoolRegistered",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 5771,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_nextPoolNonce",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 10373,
        "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
        "label": "_twoTokenPoolTokens",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_struct(TwoTokenPoolTokens)10369_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IAuthorizer)11086": {
        "encoding": "inplace",
        "label": "contract IAuthorizer",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)3793": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(TwoTokenPoolBalances)10360_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances)",
        "numberOfBytes": "32",
        "value": "t_struct(TwoTokenPoolBalances)10360_storage"
      },
      "t_mapping(t_bytes32,t_struct(TwoTokenPoolTokens)10369_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens)",
        "numberOfBytes": "32",
        "value": "t_struct(TwoTokenPoolTokens)10369_storage"
      },
      "t_struct(TwoTokenPoolBalances)10360_storage": {
        "encoding": "inplace",
        "label": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 10357,
            "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
            "label": "sharedCash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 10359,
            "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
            "label": "sharedManaged",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_struct(TwoTokenPoolTokens)10369_storage": {
        "encoding": "inplace",
        "label": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 10362,
            "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
            "label": "tokenA",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3793"
          },
          {
            "astId": 10364,
            "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
            "label": "tokenB",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3793"
          },
          {
            "astId": 10368,
            "contract": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol:TwoTokenPoolsBalance",
            "label": "balances",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_struct(TwoTokenPoolBalances)10360_storage)"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "ast": {
    "absolutePath": "test/foundry/Vault/contracts/vault/balances/TwoTokenPoolsBalance.sol",
    "id": 11068,
    "exportedSymbols": {
      "Authentication": [
        206
      ],
      "BalanceAllocation": [
        9483
      ],
      "EIP712": [
        3156
      ],
      "Errors": [
        518
      ],
      "IAsset": [
        11071
      ],
      "IAuthentication": [
        529
      ],
      "IAuthorizer": [
        11086
      ],
      "IERC20": [
        3793
      ],
      "IFlashLoanRecipient": [
        11164
      ],
      "ISignaturesValidator": [
        547
      ],
      "ITemporarilyPausable": [
        566
      ],
      "IVault": [
        11692
      ],
      "IWETH": [
        11707
      ],
      "InputHelpers": [
        697
      ],
      "Math": [
        3005
      ],
      "PoolRegistry": [
        6026
      ],
      "ProtocolFeesCollector": [
        6704
      ],
      "ReentrancyGuard": [
        3849
      ],
      "SafeERC20": [
        3973
      ],
      "SignaturesValidator": [
        948
      ],
      "TemporarilyPausable": [
        1128
      ],
      "TwoTokenPoolsBalance": [
        11067
      ],
      "VaultAuthorization": [
        8844
      ],
      "_require": [
        224
      ],
      "_revert": [
        232
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:15685:35",
    "nodes": [
      {
        "id": 10345,
        "nodeType": "PragmaDirective",
        "src": "688:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ]
      },
      {
        "id": 10346,
        "nodeType": "PragmaDirective",
        "src": "712:33:35",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 10347,
        "nodeType": "ImportDirective",
        "src": "747:46:35",
        "nodes": [],
        "absolutePath": "test/foundry/Vault/contracts/lib/helpers/BalancerErrors.sol",
        "file": "../../lib/helpers/BalancerErrors.sol",
        "scope": 11068,
        "sourceUnit": 519,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10348,
        "nodeType": "ImportDirective",
        "src": "794:43:35",
        "nodes": [],
        "absolutePath": "test/foundry/Vault/contracts/lib/openzeppelin/IERC20.sol",
        "file": "../../lib/openzeppelin/IERC20.sol",
        "scope": 11068,
        "sourceUnit": 3794,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10349,
        "nodeType": "ImportDirective",
        "src": "839:33:35",
        "nodes": [],
        "absolutePath": "test/foundry/Vault/contracts/vault/balances/BalanceAllocation.sol",
        "file": "./BalanceAllocation.sol",
        "scope": 11068,
        "sourceUnit": 9484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10350,
        "nodeType": "ImportDirective",
        "src": "873:29:35",
        "nodes": [],
        "absolutePath": "test/foundry/Vault/contracts/vault/PoolRegistry.sol",
        "file": "../PoolRegistry.sol",
        "scope": 11068,
        "sourceUnit": 6027,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11067,
        "nodeType": "ContractDefinition",
        "src": "904:15468:35",
        "nodes": [
          {
            "id": 10355,
            "nodeType": "UsingForDirective",
            "src": "965:36:35",
            "nodes": [],
            "libraryName": {
              "id": 10353,
              "name": "BalanceAllocation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9483,
              "src": "971:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BalanceAllocation_$9483",
                "typeString": "library BalanceAllocation"
              }
            },
            "typeName": {
              "id": 10354,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "993:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 10360,
            "nodeType": "StructDefinition",
            "src": "1797:94:35",
            "nodes": [],
            "canonicalName": "TwoTokenPoolsBalance.TwoTokenPoolBalances",
            "members": [
              {
                "constant": false,
                "id": 10357,
                "mutability": "mutable",
                "name": "sharedCash",
                "nodeType": "VariableDeclaration",
                "scope": 10360,
                "src": "1835:18:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 10356,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1835:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10359,
                "mutability": "mutable",
                "name": "sharedManaged",
                "nodeType": "VariableDeclaration",
                "scope": 10360,
                "src": "1863:21:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 10358,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1863:7:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TwoTokenPoolBalances",
            "scope": 11067,
            "visibility": "public"
          },
          {
            "id": 10369,
            "nodeType": "StructDefinition",
            "src": "3273:138:35",
            "nodes": [],
            "canonicalName": "TwoTokenPoolsBalance.TwoTokenPoolTokens",
            "members": [
              {
                "constant": false,
                "id": 10362,
                "mutability": "mutable",
                "name": "tokenA",
                "nodeType": "VariableDeclaration",
                "scope": 10369,
                "src": "3309:13:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$3793",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 10361,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3793,
                  "src": "3309:6:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10364,
                "mutability": "mutable",
                "name": "tokenB",
                "nodeType": "VariableDeclaration",
                "scope": 10369,
                "src": "3332:13:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$3793",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 10363,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3793,
                  "src": "3332:6:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10368,
                "mutability": "mutable",
                "name": "balances",
                "nodeType": "VariableDeclaration",
                "scope": 10369,
                "src": "3355:49:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_$",
                  "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances)"
                },
                "typeName": {
                  "id": 10367,
                  "keyType": {
                    "id": 10365,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "3355:40:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_$",
                    "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances)"
                  },
                  "valueType": {
                    "id": 10366,
                    "name": "TwoTokenPoolBalances",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10360,
                    "src": "3374:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TwoTokenPoolTokens",
            "scope": 11067,
            "visibility": "public"
          },
          {
            "id": 10373,
            "nodeType": "VariableDeclaration",
            "src": "3417:66:35",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_twoTokenPoolTokens",
            "scope": 11067,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
              "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens)"
            },
            "typeName": {
              "id": 10372,
              "keyType": {
                "id": 10370,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3425:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3417:38:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens)"
              },
              "valueType": {
                "id": 10371,
                "name": "TwoTokenPoolTokens",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 10369,
                "src": "3436:18:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                  "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 10436,
            "nodeType": "FunctionDefinition",
            "src": "3805:982:35",
            "nodes": [],
            "body": {
              "id": 10435,
              "nodeType": "Block",
              "src": "3927:860:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        "id": 10386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10384,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10378,
                          "src": "4100:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 10385,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10380,
                          "src": "4110:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4100:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 10387,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "4118:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$518_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 10388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TOKEN_ALREADY_REGISTERED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 490,
                        "src": "4118:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10383,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "4091:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 10389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10390,
                  "nodeType": "ExpressionStatement",
                  "src": "4091:59:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        "id": 10394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10392,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10378,
                          "src": "4170:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10393,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10380,
                          "src": "4179:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4170:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 10395,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "4187:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$518_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 10396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "UNSORTED_TOKENS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 271,
                        "src": "4187:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10391,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "4161:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 10397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4161:49:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10398,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:49:35"
                },
                {
                  "assignments": [
                    10400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10400,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 10435,
                      "src": "4334:37:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                      },
                      "typeName": {
                        "id": 10399,
                        "name": "TwoTokenPoolTokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10369,
                        "src": "4334:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10404,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10401,
                      "name": "_twoTokenPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10373,
                      "src": "4374:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                      }
                    },
                    "id": 10403,
                    "indexExpression": {
                      "id": 10402,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10376,
                      "src": "4394:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4374:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4334:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          },
                          "id": 10411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10406,
                              "name": "poolTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10400,
                              "src": "4420:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                                "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                              }
                            },
                            "id": 10407,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10362,
                            "src": "4420:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 10409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4448:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10408,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3793,
                              "src": "4441:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$3793_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4441:9:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4420:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          },
                          "id": 10417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10412,
                              "name": "poolTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10400,
                              "src": "4454:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                                "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                              }
                            },
                            "id": 10413,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10364,
                            "src": "4454:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 10415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4482:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10414,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3793,
                              "src": "4475:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$3793_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4475:9:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4454:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4420:64:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 10419,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "4486:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$518_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 10420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TOKENS_ALREADY_SET",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 493,
                        "src": "4486:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10405,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "4411:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 10421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:101:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10422,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:101:35"
                },
                {
                  "expression": {
                    "id": 10427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10423,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10400,
                        "src": "4585:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 10425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10362,
                      "src": "4585:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10426,
                      "name": "tokenX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10378,
                      "src": "4605:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4585:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10428,
                  "nodeType": "ExpressionStatement",
                  "src": "4585:26:35"
                },
                {
                  "expression": {
                    "id": 10433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10429,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10400,
                        "src": "4621:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 10431,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenB",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10364,
                      "src": "4621:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10432,
                      "name": "tokenY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10380,
                      "src": "4641:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4621:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10434,
                  "nodeType": "ExpressionStatement",
                  "src": "4621:26:35"
                }
              ]
            },
            "documentation": {
              "id": 10374,
              "nodeType": "StructuredDocumentation",
              "src": "3490:310:35",
              "text": " @dev Registers tokens in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the Two Token specialization setting.\n Requirements:\n - `tokenX` and `tokenY` must not be the same\n - The tokens must be ordered: tokenX < tokenY"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerTwoTokenPoolTokens",
            "parameters": {
              "id": 10381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10376,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10436,
                  "src": "3851:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10375,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10378,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nodeType": "VariableDeclaration",
                  "scope": 10436,
                  "src": "3875:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10377,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "3875:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10380,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nodeType": "VariableDeclaration",
                  "scope": 10436,
                  "src": "3898:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10379,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "3898:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3841:76:35"
            },
            "returnParameters": {
              "id": 10382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3927:0:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10480,
            "nodeType": "FunctionDefinition",
            "src": "5124:666:35",
            "nodes": [],
            "body": {
              "id": 10479,
              "nodeType": "Block",
              "src": "5248:542:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10447,
                    10449,
                    10451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10447,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10479,
                      "src": "5272:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10446,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5272:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10449,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10479,
                      "src": "5302:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10448,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5302:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10451,
                      "mutability": "mutable",
                      "name": "poolBalances",
                      "nodeType": "VariableDeclaration",
                      "scope": 10479,
                      "src": "5332:41:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                      },
                      "typeName": {
                        "id": 10450,
                        "name": "TwoTokenPoolBalances",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10360,
                        "src": "5332:20:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10457,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10453,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10439,
                        "src": "5417:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10454,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10441,
                        "src": "5425:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10455,
                        "name": "tokenY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10443,
                        "src": "5433:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 10452,
                      "name": "_getTwoTokenPoolSharedBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10989,
                      "src": "5386:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$returns$_t_bytes32_$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$",
                        "typeString": "function (bytes32,contract IERC20,contract IERC20) view returns (bytes32,bytes32,struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer)"
                      }
                    },
                    "id": 10456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5386:54:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5258:182:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10459,
                              "name": "balanceA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10447,
                              "src": "5460:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 10460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isZero",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9062,
                            "src": "5460:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bool)"
                            }
                          },
                          "id": 10461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5460:17:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10462,
                              "name": "balanceB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10449,
                              "src": "5481:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 10463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isZero",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9062,
                            "src": "5481:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$",
                              "typeString": "function (bytes32) pure returns (bool)"
                            }
                          },
                          "id": 10464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5481:17:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5460:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 10466,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "5500:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$518_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 10467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NONZERO_TOKEN_BALANCE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 499,
                        "src": "5500:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10458,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "5451:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 10468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:78:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10469,
                  "nodeType": "ExpressionStatement",
                  "src": "5451:78:35"
                },
                {
                  "expression": {
                    "id": 10473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5540:34:35",
                    "subExpression": {
                      "baseExpression": {
                        "id": 10470,
                        "name": "_twoTokenPoolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10373,
                        "src": "5547:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                          "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                        }
                      },
                      "id": 10472,
                      "indexExpression": {
                        "id": 10471,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10439,
                        "src": "5567:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5547:27:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10474,
                  "nodeType": "ExpressionStatement",
                  "src": "5540:34:35"
                },
                {
                  "expression": {
                    "id": 10477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5753:30:35",
                    "subExpression": {
                      "expression": {
                        "id": 10475,
                        "name": "poolBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10451,
                        "src": "5760:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 10476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sharedCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10357,
                      "src": "5760:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10478,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:30:35"
                }
              ]
            },
            "documentation": {
              "id": 10437,
              "nodeType": "StructuredDocumentation",
              "src": "4793:326:35",
              "text": " @dev Deregisters tokens in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the Two Token specialization setting.\n Requirements:\n - `tokenX` and `tokenY` must be registered in the Pool\n - both tokens must have zero balance in the Vault"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deregisterTwoTokenPoolTokens",
            "parameters": {
              "id": 10444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10439,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10480,
                  "src": "5172:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10438,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10441,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nodeType": "VariableDeclaration",
                  "scope": 10480,
                  "src": "5196:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10440,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "5196:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10443,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nodeType": "VariableDeclaration",
                  "scope": 10480,
                  "src": "5219:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10442,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "5219:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5162:76:35"
            },
            "returnParameters": {
              "id": 10445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5248:0:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10521,
            "nodeType": "FunctionDefinition",
            "src": "6003:433:35",
            "nodes": [],
            "body": {
              "id": 10520,
              "nodeType": "Block",
              "src": "6178:258:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10495,
                      "mutability": "mutable",
                      "name": "pairHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 10520,
                      "src": "6188:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10494,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6188:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10500,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10497,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10485,
                        "src": "6228:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10498,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10489,
                        "src": "6236:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 10496,
                      "name": "_getTwoTokenPairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11042,
                      "src": "6207:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (bytes32)"
                      }
                    },
                    "id": 10499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6207:36:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6188:55:35"
                },
                {
                  "assignments": [
                    10502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10502,
                      "mutability": "mutable",
                      "name": "poolBalances",
                      "nodeType": "VariableDeclaration",
                      "scope": 10520,
                      "src": "6253:41:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                      },
                      "typeName": {
                        "id": 10501,
                        "name": "TwoTokenPoolBalances",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10360,
                        "src": "6253:20:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10509,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 10503,
                          "name": "_twoTokenPoolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10373,
                          "src": "6297:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                          }
                        },
                        "id": 10505,
                        "indexExpression": {
                          "id": 10504,
                          "name": "poolId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10483,
                          "src": "6317:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6297:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                        }
                      },
                      "id": 10506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10368,
                      "src": "6297:36:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref)"
                      }
                    },
                    "id": 10508,
                    "indexExpression": {
                      "id": 10507,
                      "name": "pairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10495,
                      "src": "6334:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6297:46:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6253:90:35"
                },
                {
                  "expression": {
                    "id": 10518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10510,
                        "name": "poolBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10502,
                        "src": "6353:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 10512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sharedCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10357,
                      "src": "6353:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10515,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10487,
                          "src": "6410:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10516,
                          "name": "balanceB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10491,
                          "src": "6420:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10513,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "6379:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toSharedCash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9433,
                        "src": "6379:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6379:50:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6353:76:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10519,
                  "nodeType": "ExpressionStatement",
                  "src": "6353:76:35"
                }
              ]
            },
            "documentation": {
              "id": 10481,
              "nodeType": "StructuredDocumentation",
              "src": "5796:202:35",
              "text": " @dev Sets the cash balances of a Two Token Pool's tokens.\n WARNING: this assumes `tokenA` and `tokenB` are the Pool's two registered tokens, and are in the correct order."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTwoTokenPoolCashBalances",
            "parameters": {
              "id": 10492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10483,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10521,
                  "src": "6050:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10482,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6050:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10485,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "scope": 10521,
                  "src": "6074:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "6074:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10487,
                  "mutability": "mutable",
                  "name": "balanceA",
                  "nodeType": "VariableDeclaration",
                  "scope": 10521,
                  "src": "6097:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6097:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10489,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "scope": 10521,
                  "src": "6123:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10488,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "6123:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10491,
                  "mutability": "mutable",
                  "name": "balanceB",
                  "nodeType": "VariableDeclaration",
                  "scope": 10521,
                  "src": "6146:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10490,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6146:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6040:128:35"
            },
            "returnParameters": {
              "id": 10493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6178:0:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10540,
            "nodeType": "FunctionDefinition",
            "src": "6714:226:35",
            "nodes": [],
            "body": {
              "id": 10539,
              "nodeType": "Block",
              "src": "6835:105:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10532,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10524,
                        "src": "6878:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10533,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10526,
                        "src": "6886:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10534,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "6893:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cashToManaged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9230,
                        "src": "6893:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        }
                      },
                      {
                        "id": 10536,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10528,
                        "src": "6926:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10531,
                      "name": "_updateTwoTokenPoolSharedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10682,
                      "src": "6845:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (bytes32,contract IERC20,function (bytes32,uint256) returns (bytes32),uint256) returns (int256)"
                      }
                    },
                    "id": 10537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6845:88:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 10538,
                  "nodeType": "ExpressionStatement",
                  "src": "6845:88:35"
                }
              ]
            },
            "documentation": {
              "id": 10522,
              "nodeType": "StructuredDocumentation",
              "src": "6442:267:35",
              "text": " @dev Transforms `amount` of `token`'s balance in a Two Token Pool from cash into managed.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_twoTokenPoolCashToManaged",
            "parameters": {
              "id": 10529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10524,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10540,
                  "src": "6759:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10523,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6759:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10526,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10540,
                  "src": "6783:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10525,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "6783:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10528,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10540,
                  "src": "6805:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6805:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6749:76:35"
            },
            "returnParameters": {
              "id": 10530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6835:0:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10559,
            "nodeType": "FunctionDefinition",
            "src": "7218:226:35",
            "nodes": [],
            "body": {
              "id": 10558,
              "nodeType": "Block",
              "src": "7339:105:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10551,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10543,
                        "src": "7382:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10552,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10545,
                        "src": "7390:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10553,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "7397:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "managedToCash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9271,
                        "src": "7397:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        }
                      },
                      {
                        "id": 10555,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10547,
                        "src": "7430:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) pure returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10550,
                      "name": "_updateTwoTokenPoolSharedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10682,
                      "src": "7349:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (bytes32,contract IERC20,function (bytes32,uint256) returns (bytes32),uint256) returns (int256)"
                      }
                    },
                    "id": 10556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7349:88:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 10557,
                  "nodeType": "ExpressionStatement",
                  "src": "7349:88:35"
                }
              ]
            },
            "documentation": {
              "id": 10541,
              "nodeType": "StructuredDocumentation",
              "src": "6946:267:35",
              "text": " @dev Transforms `amount` of `token`'s balance in a Two Token Pool from managed into cash.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_twoTokenPoolManagedToCash",
            "parameters": {
              "id": 10548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10543,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10559,
                  "src": "7263:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10542,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7263:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10545,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10559,
                  "src": "7287:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10544,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "7287:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10547,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10559,
                  "src": "7309:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7309:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7253:76:35"
            },
            "returnParameters": {
              "id": 10549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7339:0:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10580,
            "nodeType": "FunctionDefinition",
            "src": "7775:251:35",
            "nodes": [],
            "body": {
              "id": 10579,
              "nodeType": "Block",
              "src": "7917:109:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10572,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10562,
                        "src": "7967:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10573,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10564,
                        "src": "7975:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 10574,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "7982:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setManaged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9299,
                        "src": "7982:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) view returns (bytes32)"
                        }
                      },
                      {
                        "id": 10576,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10566,
                        "src": "8012:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,uint256) view returns (bytes32)"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10571,
                      "name": "_updateTwoTokenPoolSharedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10682,
                      "src": "7934:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (bytes32,contract IERC20,function (bytes32,uint256) returns (bytes32),uint256) returns (int256)"
                      }
                    },
                    "id": 10577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7934:85:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 10570,
                  "id": 10578,
                  "nodeType": "Return",
                  "src": "7927:92:35"
                }
              ]
            },
            "documentation": {
              "id": 10560,
              "nodeType": "StructuredDocumentation",
              "src": "7450:320:35",
              "text": " @dev Sets `token`'s managed balance in a Two Token Pool to `amount`.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool.\n Returns the managed balance delta as a result of this call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTwoTokenPoolManagedBalance",
            "parameters": {
              "id": 10567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10562,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "7824:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7824:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10564,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "7848:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10563,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "7848:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10566,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "7870:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7870:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7814:76:35"
            },
            "returnParameters": {
              "id": 10570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10569,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10580,
                  "src": "7909:6:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10568,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7909:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7908:8:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10682,
            "nodeType": "FunctionDefinition",
            "src": "8435:1028:35",
            "nodes": [],
            "body": {
              "id": 10681,
              "nodeType": "Block",
              "src": "8641:822:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10603,
                    10605,
                    10607,
                    null,
                    10609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10603,
                      "mutability": "mutable",
                      "name": "balances",
                      "nodeType": "VariableDeclaration",
                      "scope": 10681,
                      "src": "8665:37:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                      },
                      "typeName": {
                        "id": 10602,
                        "name": "TwoTokenPoolBalances",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10360,
                        "src": "8665:20:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10605,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10681,
                      "src": "8716:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10604,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "8716:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10607,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10681,
                      "src": "8743:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10606,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8743:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 10609,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10681,
                      "src": "8787:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10608,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8787:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10613,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10611,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10583,
                        "src": "8841:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 10610,
                      "name": "_getTwoTokenPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10844,
                      "src": "8816:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$_t_contract$_IERC20_$3793_$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                      }
                    },
                    "id": 10612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8816:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$_t_contract$_IERC20_$3793_$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_bytes32_$",
                      "typeString": "tuple(struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8651:197:35"
                },
                {
                  "assignments": [
                    10615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10615,
                      "mutability": "mutable",
                      "name": "delta",
                      "nodeType": "VariableDeclaration",
                      "scope": 10681,
                      "src": "8859:12:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 10614,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8859:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10616,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8859:12:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    },
                    "id": 10619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10617,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10585,
                      "src": "8885:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 10618,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10605,
                      "src": "8894:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "8885:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10657,
                    "nodeType": "Block",
                    "src": "9070:193:35",
                    "statements": [
                      {
                        "assignments": [
                          10640
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10640,
                            "mutability": "mutable",
                            "name": "newBalance",
                            "nodeType": "VariableDeclaration",
                            "scope": 10657,
                            "src": "9115:18:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 10639,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9115:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10645,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10642,
                              "name": "balanceB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10609,
                              "src": "9145:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10643,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10597,
                              "src": "9155:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10641,
                            "name": "mutation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10595,
                            "src": "9136:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256) returns (bytes32)"
                            }
                          },
                          "id": 10644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9136:26:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9115:47:35"
                      },
                      {
                        "expression": {
                          "id": 10651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10646,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10615,
                            "src": "9176:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10649,
                                "name": "balanceB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10609,
                                "src": "9208:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 10647,
                                "name": "newBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10640,
                                "src": "9184:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 10648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "managedDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8971,
                              "src": "9184:23:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (int256)"
                              }
                            },
                            "id": 10650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9184:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "9176:41:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 10652,
                        "nodeType": "ExpressionStatement",
                        "src": "9176:41:35"
                      },
                      {
                        "expression": {
                          "id": 10655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10653,
                            "name": "balanceB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10609,
                            "src": "9231:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10654,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10640,
                            "src": "9242:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9231:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 10656,
                        "nodeType": "ExpressionStatement",
                        "src": "9231:21:35"
                      }
                    ]
                  },
                  "id": 10658,
                  "nodeType": "IfStatement",
                  "src": "8881:382:35",
                  "trueBody": {
                    "id": 10638,
                    "nodeType": "Block",
                    "src": "8902:162:35",
                    "statements": [
                      {
                        "assignments": [
                          10621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10621,
                            "mutability": "mutable",
                            "name": "newBalance",
                            "nodeType": "VariableDeclaration",
                            "scope": 10638,
                            "src": "8916:18:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 10620,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8916:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10626,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 10623,
                              "name": "balanceA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10607,
                              "src": "8946:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10624,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10597,
                              "src": "8956:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10622,
                            "name": "mutation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10595,
                            "src": "8937:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,uint256) returns (bytes32)"
                            }
                          },
                          "id": 10625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8937:26:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8916:47:35"
                      },
                      {
                        "expression": {
                          "id": 10632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10627,
                            "name": "delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10615,
                            "src": "8977:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 10630,
                                "name": "balanceA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10607,
                                "src": "9009:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 10628,
                                "name": "newBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10621,
                                "src": "8985:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 10629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "managedDelta",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8971,
                              "src": "8985:23:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_int256_$bound_to$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (int256)"
                              }
                            },
                            "id": 10631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8985:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "8977:41:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 10633,
                        "nodeType": "ExpressionStatement",
                        "src": "8977:41:35"
                      },
                      {
                        "expression": {
                          "id": 10636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10634,
                            "name": "balanceA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10607,
                            "src": "9032:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10635,
                            "name": "newBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10621,
                            "src": "9043:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9032:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 10637,
                        "nodeType": "ExpressionStatement",
                        "src": "9032:21:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10659,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10603,
                        "src": "9273:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 10661,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sharedCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10357,
                      "src": "9273:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10664,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10607,
                          "src": "9326:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10665,
                          "name": "balanceB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10609,
                          "src": "9336:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10662,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "9295:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toSharedCash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9433,
                        "src": "9295:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9295:50:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9273:72:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10668,
                  "nodeType": "ExpressionStatement",
                  "src": "9273:72:35"
                },
                {
                  "expression": {
                    "id": 10677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10669,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10603,
                        "src": "9355:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                        }
                      },
                      "id": 10671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sharedManaged",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10359,
                      "src": "9355:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10674,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10607,
                          "src": "9414:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10675,
                          "name": "balanceB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10609,
                          "src": "9424:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10672,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "9380:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toSharedManaged",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9454,
                        "src": "9380:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9380:53:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9355:78:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10678,
                  "nodeType": "ExpressionStatement",
                  "src": "9355:78:35"
                },
                {
                  "expression": {
                    "id": 10679,
                    "name": "delta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10615,
                    "src": "9451:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 10601,
                  "id": 10680,
                  "nodeType": "Return",
                  "src": "9444:12:35"
                }
              ]
            },
            "documentation": {
              "id": 10581,
              "nodeType": "StructuredDocumentation",
              "src": "8032:398:35",
              "text": " @dev Sets `token`'s balance in a Two Token Pool to the result of the `mutation` function when called with\n the current balance and `amount`.\n This function assumes `poolId` exists, corresponds to the Two Token specialization setting, and that `token` is\n registered for that Pool.\n Returns the managed balance delta as a result of this call."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTwoTokenPoolSharedBalance",
            "parameters": {
              "id": 10598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10583,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "8486:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10582,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8486:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10585,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "8510:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10584,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "8510:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10595,
                  "mutability": "mutable",
                  "name": "mutation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "8532:53:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                    "typeString": "function (bytes32,uint256) returns (bytes32)"
                  },
                  "typeName": {
                    "id": 10594,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 10590,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 10587,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 10594,
                          "src": "8541:7:35",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 10586,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8541:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 10589,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 10594,
                          "src": "8550:7:35",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 10588,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8550:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "8540:18:35"
                    },
                    "returnParameterTypes": {
                      "id": 10593,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 10592,
                          "mutability": "mutable",
                          "name": "",
                          "nodeType": "VariableDeclaration",
                          "scope": 10594,
                          "src": "8568:7:35",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 10591,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8568:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "8567:9:35"
                    },
                    "src": "8532:53:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                      "typeString": "function (bytes32,uint256) returns (bytes32)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10597,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "8595:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8595:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8476:139:35"
            },
            "returnParameters": {
              "id": 10601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10600,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10682,
                  "src": "8633:6:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10599,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8633:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8632:8:35"
            },
            "scope": 11067,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 10771,
            "nodeType": "FunctionDefinition",
            "src": "9748:864:35",
            "nodes": [],
            "body": {
              "id": 10770,
              "nodeType": "Block",
              "src": "9898:714:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    10694,
                    10696,
                    10698,
                    10700
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 10694,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10770,
                      "src": "9911:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10693,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "9911:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10696,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10770,
                      "src": "9926:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10695,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9926:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10698,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10770,
                      "src": "9944:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10697,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "9944:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10700,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10770,
                      "src": "9959:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10699,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9959:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10704,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10702,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10684,
                        "src": "10004:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 10701,
                      "name": "_getTwoTokenPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10844,
                      "src": "9979:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$_t_contract$_IERC20_$3793_$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                      }
                    },
                    "id": 10703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9979:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$_t_contract$_IERC20_$3793_$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_bytes32_$",
                      "typeString": "tuple(struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9908:103:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "id": 10709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10705,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10694,
                        "src": "10167:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10184:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10706,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3793,
                          "src": "10177:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3793_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10177:9:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "10167:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "id": 10714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10710,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10698,
                        "src": "10190:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 10712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10207:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10711,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3793,
                          "src": "10200:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3793_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10200:9:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "10190:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10167:42:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10729,
                  "nodeType": "IfStatement",
                  "src": "10163:115:35",
                  "trueBody": {
                    "id": 10728,
                    "nodeType": "Block",
                    "src": "10211:67:35",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 10719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10246:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "10233:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 10716,
                                    "name": "IERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 3793,
                                    "src": "10237:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3793",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 10717,
                                  "nodeType": "ArrayTypeName",
                                  "src": "10237:8:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_storage_ptr",
                                    "typeString": "contract IERC20[]"
                                  }
                                }
                              },
                              "id": 10720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10233:15:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 10724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10264:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "10250:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes32[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 10721,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10254:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 10722,
                                  "nodeType": "ArrayTypeName",
                                  "src": "10254:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                    "typeString": "bytes32[]"
                                  }
                                }
                              },
                              "id": 10725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10250:16:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "id": 10726,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10232:35:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "tuple(contract IERC20[] memory,bytes32[] memory)"
                          }
                        },
                        "functionReturnParameters": 10692,
                        "id": 10727,
                        "nodeType": "Return",
                        "src": "10225:42:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10730,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10688,
                      "src": "10423:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 10734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10445:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 10733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10432:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 10731,
                            "name": "IERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 3793,
                            "src": "10436:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10732,
                          "nodeType": "ArrayTypeName",
                          "src": "10436:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 10735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10432:15:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "10423:24:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 10737,
                  "nodeType": "ExpressionStatement",
                  "src": "10423:24:35"
                },
                {
                  "expression": {
                    "id": 10742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10738,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10688,
                        "src": "10457:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 10740,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 10739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10464:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10457:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10741,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10694,
                      "src": "10469:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "10457:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10743,
                  "nodeType": "ExpressionStatement",
                  "src": "10457:18:35"
                },
                {
                  "expression": {
                    "id": 10748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10744,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10688,
                        "src": "10485:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 10746,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 10745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10492:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10485:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10747,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10698,
                      "src": "10497:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "10485:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10749,
                  "nodeType": "ExpressionStatement",
                  "src": "10485:18:35"
                },
                {
                  "expression": {
                    "id": 10756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10750,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10691,
                      "src": "10514:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 10754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10539:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 10753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10525:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes32[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 10751,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10529:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 10752,
                          "nodeType": "ArrayTypeName",
                          "src": "10529:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        }
                      },
                      "id": 10755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10525:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "10514:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 10757,
                  "nodeType": "ExpressionStatement",
                  "src": "10514:27:35"
                },
                {
                  "expression": {
                    "id": 10762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10758,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10691,
                        "src": "10551:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 10760,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 10759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10560:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10551:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10761,
                      "name": "balanceA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10696,
                      "src": "10565:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10551:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10763,
                  "nodeType": "ExpressionStatement",
                  "src": "10551:22:35"
                },
                {
                  "expression": {
                    "id": 10768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10764,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10691,
                        "src": "10583:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 10766,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 10765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10592:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10583:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10767,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10700,
                      "src": "10597:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10583:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10769,
                  "nodeType": "ExpressionStatement",
                  "src": "10583:22:35"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolTokens",
            "parameters": {
              "id": 10685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10684,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10771,
                  "src": "9780:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10683,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9780:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9779:16:35"
            },
            "returnParameters": {
              "id": 10692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10688,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 10771,
                  "src": "9843:22:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10686,
                      "name": "IERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3793,
                      "src": "9843:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 10687,
                    "nodeType": "ArrayTypeName",
                    "src": "9843:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$3793_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10691,
                  "mutability": "mutable",
                  "name": "balances",
                  "nodeType": "VariableDeclaration",
                  "scope": 10771,
                  "src": "9867:25:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10689,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "9867:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 10690,
                    "nodeType": "ArrayTypeName",
                    "src": "9867:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9842:51:35"
            },
            "scope": 11067,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10844,
            "nodeType": "FunctionDefinition",
            "src": "10934:843:35",
            "nodes": [],
            "body": {
              "id": 10843,
              "nodeType": "Block",
              "src": "11213:564:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10788,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 10843,
                      "src": "11223:37:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                      },
                      "typeName": {
                        "id": 10787,
                        "name": "TwoTokenPoolTokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10369,
                        "src": "11223:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10792,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10789,
                      "name": "_twoTokenPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10373,
                      "src": "11263:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                      }
                    },
                    "id": 10791,
                    "indexExpression": {
                      "id": 10790,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10774,
                      "src": "11283:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11263:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11223:67:35"
                },
                {
                  "expression": {
                    "id": 10796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10793,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10779,
                      "src": "11300:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10794,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10788,
                        "src": "11309:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 10795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10362,
                      "src": "11309:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "11300:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10797,
                  "nodeType": "ExpressionStatement",
                  "src": "11300:26:35"
                },
                {
                  "expression": {
                    "id": 10801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10798,
                      "name": "tokenB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10783,
                      "src": "11336:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10799,
                        "name": "poolTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10788,
                        "src": "11345:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                        }
                      },
                      "id": 10800,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenB",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10364,
                      "src": "11345:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "11336:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10802,
                  "nodeType": "ExpressionStatement",
                  "src": "11336:26:35"
                },
                {
                  "assignments": [
                    10804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10804,
                      "mutability": "mutable",
                      "name": "pairHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 10843,
                      "src": "11373:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10803,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11373:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10809,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10806,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10779,
                        "src": "11413:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10807,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10783,
                        "src": "11421:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 10805,
                      "name": "_getTwoTokenPairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11042,
                      "src": "11392:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (bytes32)"
                      }
                    },
                    "id": 10808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11392:36:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11373:55:35"
                },
                {
                  "expression": {
                    "id": 10815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10810,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10777,
                      "src": "11438:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10811,
                          "name": "poolTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10788,
                          "src": "11453:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                            "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                          }
                        },
                        "id": 10812,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10368,
                        "src": "11453:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_$",
                          "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref)"
                        }
                      },
                      "id": 10814,
                      "indexExpression": {
                        "id": 10813,
                        "name": "pairHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10804,
                        "src": "11473:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11453:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref"
                      }
                    },
                    "src": "11438:44:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                    }
                  },
                  "id": 10816,
                  "nodeType": "ExpressionStatement",
                  "src": "11438:44:35"
                },
                {
                  "assignments": [
                    10818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10818,
                      "mutability": "mutable",
                      "name": "sharedCash",
                      "nodeType": "VariableDeclaration",
                      "scope": 10843,
                      "src": "11493:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10817,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11493:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10821,
                  "initialValue": {
                    "expression": {
                      "id": 10819,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10777,
                      "src": "11514:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 10820,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sharedCash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10357,
                    "src": "11514:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11493:44:35"
                },
                {
                  "assignments": [
                    10823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10823,
                      "mutability": "mutable",
                      "name": "sharedManaged",
                      "nodeType": "VariableDeclaration",
                      "scope": 10843,
                      "src": "11547:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10822,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11547:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10826,
                  "initialValue": {
                    "expression": {
                      "id": 10824,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10777,
                      "src": "11571:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 10825,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sharedManaged",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10359,
                    "src": "11571:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11547:50:35"
                },
                {
                  "expression": {
                    "id": 10833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10827,
                      "name": "balanceA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10781,
                      "src": "11608:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10830,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10818,
                          "src": "11658:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10831,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10823,
                          "src": "11670:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10828,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "11619:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromSharedToBalanceA",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9374,
                        "src": "11619:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11619:65:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11608:76:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10834,
                  "nodeType": "ExpressionStatement",
                  "src": "11608:76:35"
                },
                {
                  "expression": {
                    "id": 10841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10835,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "11694:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10838,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10818,
                          "src": "11744:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10839,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10823,
                          "src": "11756:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10836,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "11705:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromSharedToBalanceB",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9397,
                        "src": "11705:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11705:65:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11694:76:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10842,
                  "nodeType": "ExpressionStatement",
                  "src": "11694:76:35"
                }
              ]
            },
            "documentation": {
              "id": 10772,
              "nodeType": "StructuredDocumentation",
              "src": "10618:311:35",
              "text": " @dev Same as `_getTwoTokenPoolTokens`, except it returns the two tokens and balances directly instead of using\n an array, as well as a storage pointer to the `TwoTokenPoolBalances` struct, which can be used to update it\n without having to recompute the pair hash and storage slot."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolBalances",
            "parameters": {
              "id": 10775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10774,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10844,
                  "src": "10968:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10968:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10967:16:35"
            },
            "returnParameters": {
              "id": 10786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10777,
                  "mutability": "mutable",
                  "name": "poolBalances",
                  "nodeType": "VariableDeclaration",
                  "scope": 10844,
                  "src": "11043:41:35",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                    "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                  },
                  "typeName": {
                    "id": 10776,
                    "name": "TwoTokenPoolBalances",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10360,
                    "src": "11043:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10779,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "scope": 10844,
                  "src": "11098:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10778,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "11098:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10781,
                  "mutability": "mutable",
                  "name": "balanceA",
                  "nodeType": "VariableDeclaration",
                  "scope": 10844,
                  "src": "11125:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10780,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11125:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10783,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "scope": 10844,
                  "src": "11155:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10782,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "11155:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10785,
                  "mutability": "mutable",
                  "name": "balanceB",
                  "nodeType": "VariableDeclaration",
                  "scope": 10844,
                  "src": "11182:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10784,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11182:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11029:179:35"
            },
            "scope": 11067,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 10887,
            "nodeType": "FunctionDefinition",
            "src": "12286:636:35",
            "nodes": [],
            "body": {
              "id": 10886,
              "nodeType": "Block",
              "src": "12381:541:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    10855,
                    10857,
                    10859,
                    10861
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 10855,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10886,
                      "src": "12610:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10854,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "12610:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10857,
                      "mutability": "mutable",
                      "name": "balanceA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10886,
                      "src": "12625:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10856,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12625:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10859,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10886,
                      "src": "12643:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10858,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "12643:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10861,
                      "mutability": "mutable",
                      "name": "balanceB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10886,
                      "src": "12658:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10860,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12658:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10865,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10863,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10847,
                        "src": "12703:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 10862,
                      "name": "_getTwoTokenPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10844,
                      "src": "12678:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$_t_contract$_IERC20_$3793_$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                      }
                    },
                    "id": 10864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12678:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_TwoTokenPoolBalances_$10360_storage_ptr_$_t_contract$_IERC20_$3793_$_t_bytes32_$_t_contract$_IERC20_$3793_$_t_bytes32_$",
                      "typeString": "tuple(struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer,contract IERC20,bytes32,contract IERC20,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12607:103:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    },
                    "id": 10868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10866,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10849,
                      "src": "12725:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 10867,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10855,
                      "src": "12734:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "12725:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "id": 10874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10872,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10849,
                        "src": "12792:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 10873,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10859,
                        "src": "12801:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "12792:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 10883,
                      "nodeType": "Block",
                      "src": "12855:61:35",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 10879,
                                  "name": "Errors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 518,
                                  "src": "12877:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Errors_$518_$",
                                    "typeString": "type(library Errors)"
                                  }
                                },
                                "id": 10880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "TOKEN_NOT_REGISTERED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 487,
                                "src": "12877:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10878,
                              "name": "_revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "12869:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 10881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12869:36:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10882,
                          "nodeType": "ExpressionStatement",
                          "src": "12869:36:35"
                        }
                      ]
                    },
                    "id": 10884,
                    "nodeType": "IfStatement",
                    "src": "12788:128:35",
                    "trueBody": {
                      "id": 10877,
                      "nodeType": "Block",
                      "src": "12809:40:35",
                      "statements": [
                        {
                          "expression": {
                            "id": 10875,
                            "name": "balanceB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10861,
                            "src": "12830:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "functionReturnParameters": 10853,
                          "id": 10876,
                          "nodeType": "Return",
                          "src": "12823:15:35"
                        }
                      ]
                    }
                  },
                  "id": 10885,
                  "nodeType": "IfStatement",
                  "src": "12721:195:35",
                  "trueBody": {
                    "id": 10871,
                    "nodeType": "Block",
                    "src": "12742:40:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 10869,
                          "name": "balanceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10857,
                          "src": "12763:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 10853,
                        "id": 10870,
                        "nodeType": "Return",
                        "src": "12756:15:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10845,
              "nodeType": "StructuredDocumentation",
              "src": "11783:498:35",
              "text": " @dev Returns the balance of a token in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the General specialization setting.\n This function is convenient but not particularly gas efficient, and should be avoided during gas-sensitive\n operations, such as swaps. For those, _getTwoTokenPoolSharedBalances provides a more flexible interface.\n Requirements:\n - `token` must be registered in the Pool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolBalance",
            "parameters": {
              "id": 10850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10847,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10887,
                  "src": "12319:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10846,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12319:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10849,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10887,
                  "src": "12335:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10848,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "12335:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12318:30:35"
            },
            "returnParameters": {
              "id": 10853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10852,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10887,
                  "src": "12372:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10851,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12372:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12371:9:35"
            },
            "scope": 11067,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 10989,
            "nodeType": "FunctionDefinition",
            "src": "13539:1758:35",
            "nodes": [],
            "body": {
              "id": 10988,
              "nodeType": "Block",
              "src": "13831:1466:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10904,
                    10906
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10904,
                      "mutability": "mutable",
                      "name": "tokenA",
                      "nodeType": "VariableDeclaration",
                      "scope": 10988,
                      "src": "13842:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10903,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "13842:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10906,
                      "mutability": "mutable",
                      "name": "tokenB",
                      "nodeType": "VariableDeclaration",
                      "scope": 10988,
                      "src": "13857:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10905,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3793,
                        "src": "13857:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10911,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10908,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10892,
                        "src": "13889:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10909,
                        "name": "tokenY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10894,
                        "src": "13897:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 10907,
                      "name": "_sortTwoTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11066,
                      "src": "13874:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$returns$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (contract IERC20,contract IERC20)"
                      }
                    },
                    "id": 10910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13874:30:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$",
                      "typeString": "tuple(contract IERC20,contract IERC20)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13841:63:35"
                },
                {
                  "assignments": [
                    10913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10913,
                      "mutability": "mutable",
                      "name": "pairHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 10988,
                      "src": "13914:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10912,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13914:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10918,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10915,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10904,
                        "src": "13954:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10916,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10906,
                        "src": "13962:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 10914,
                      "name": "_getTwoTokenPairHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11042,
                      "src": "13933:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (bytes32)"
                      }
                    },
                    "id": 10917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13933:36:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13914:55:35"
                },
                {
                  "expression": {
                    "id": 10926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10919,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10901,
                      "src": "13980:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 10920,
                            "name": "_twoTokenPoolTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10373,
                            "src": "13995:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                            }
                          },
                          "id": 10922,
                          "indexExpression": {
                            "id": 10921,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10890,
                            "src": "14015:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13995:27:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage",
                            "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                          }
                        },
                        "id": 10923,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10368,
                        "src": "13995:36:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolBalances_$10360_storage_$",
                          "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref)"
                        }
                      },
                      "id": 10925,
                      "indexExpression": {
                        "id": 10924,
                        "name": "pairHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10913,
                        "src": "14032:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13995:46:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage ref"
                      }
                    },
                    "src": "13980:61:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                    }
                  },
                  "id": 10927,
                  "nodeType": "ExpressionStatement",
                  "src": "13980:61:35"
                },
                {
                  "assignments": [
                    10929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10929,
                      "mutability": "mutable",
                      "name": "sharedCash",
                      "nodeType": "VariableDeclaration",
                      "scope": 10988,
                      "src": "14215:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10928,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14215:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10932,
                  "initialValue": {
                    "expression": {
                      "id": 10930,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10901,
                      "src": "14236:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 10931,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sharedCash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10357,
                    "src": "14236:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14215:44:35"
                },
                {
                  "assignments": [
                    10934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10934,
                      "mutability": "mutable",
                      "name": "sharedManaged",
                      "nodeType": "VariableDeclaration",
                      "scope": 10988,
                      "src": "14269:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10933,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14269:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10937,
                  "initialValue": {
                    "expression": {
                      "id": 10935,
                      "name": "poolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10901,
                      "src": "14293:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances storage pointer"
                      }
                    },
                    "id": 10936,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sharedManaged",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10359,
                    "src": "14293:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14269:50:35"
                },
                {
                  "assignments": [
                    10939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10939,
                      "mutability": "mutable",
                      "name": "tokensRegistered",
                      "nodeType": "VariableDeclaration",
                      "scope": 10988,
                      "src": "14615:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10938,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14615:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10958,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 10946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10940,
                            "name": "sharedCash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10929,
                            "src": "14639:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 10941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotZero",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9076,
                          "src": "14639:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (bool)"
                          }
                        },
                        "id": 10942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14639:22:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10943,
                            "name": "sharedManaged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10934,
                            "src": "14677:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 10944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotZero",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9076,
                          "src": "14677:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bool_$bound_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (bool)"
                          }
                        },
                        "id": 10945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14677:25:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14639:63:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 10948,
                                "name": "poolId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10890,
                                "src": "14750:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 10949,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10904,
                                "src": "14758:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$3793",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$3793",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10947,
                              "name": "_isTwoTokenPoolTokenRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11023,
                              "src": "14719:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_contract$_IERC20_$3793_$returns$_t_bool_$",
                                "typeString": "function (bytes32,contract IERC20) view returns (bool)"
                              }
                            },
                            "id": 10950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14719:46:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 10952,
                                "name": "poolId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10890,
                                "src": "14800:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 10953,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10906,
                                "src": "14808:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$3793",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$3793",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 10951,
                              "name": "_isTwoTokenPoolTokenRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11023,
                              "src": "14769:30:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_contract$_IERC20_$3793_$returns$_t_bool_$",
                                "typeString": "function (bytes32,contract IERC20) view returns (bool)"
                              }
                            },
                            "id": 10954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14769:46:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14719:96:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 10956,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14718:98:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14639:177:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14615:201:35"
                },
                {
                  "condition": {
                    "id": 10960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14831:17:35",
                    "subExpression": {
                      "id": 10959,
                      "name": "tokensRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10939,
                      "src": "14832:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10971,
                  "nodeType": "IfStatement",
                  "src": "14827:291:35",
                  "trueBody": {
                    "id": 10970,
                    "nodeType": "Block",
                    "src": "14850:268:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10962,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10890,
                              "src": "15050:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10961,
                            "name": "_ensureRegisteredPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5808,
                            "src": "15028:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 10963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15028:29:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10964,
                        "nodeType": "ExpressionStatement",
                        "src": "15028:29:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10966,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "15079:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$518_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 10967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TOKEN_NOT_REGISTERED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 487,
                              "src": "15079:27:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10965,
                            "name": "_revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "15071:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 10968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15071:36:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10969,
                        "nodeType": "ExpressionStatement",
                        "src": "15071:36:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10972,
                      "name": "balanceA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10897,
                      "src": "15128:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10975,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10929,
                          "src": "15178:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10976,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10934,
                          "src": "15190:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10973,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "15139:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromSharedToBalanceA",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9374,
                        "src": "15139:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15139:65:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15128:76:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10979,
                  "nodeType": "ExpressionStatement",
                  "src": "15128:76:35"
                },
                {
                  "expression": {
                    "id": 10986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10980,
                      "name": "balanceB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10899,
                      "src": "15214:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10983,
                          "name": "sharedCash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10929,
                          "src": "15264:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 10984,
                          "name": "sharedManaged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10934,
                          "src": "15276:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 10981,
                          "name": "BalanceAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9483,
                          "src": "15225:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BalanceAllocation_$9483_$",
                            "typeString": "type(library BalanceAllocation)"
                          }
                        },
                        "id": 10982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromSharedToBalanceB",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9397,
                        "src": "15225:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                        }
                      },
                      "id": 10985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15225:65:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15214:76:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10987,
                  "nodeType": "ExpressionStatement",
                  "src": "15214:76:35"
                }
              ]
            },
            "documentation": {
              "id": 10888,
              "nodeType": "StructuredDocumentation",
              "src": "12928:606:35",
              "text": " @dev Returns the balance of the two tokens in a Two Token Pool.\n The returned balances are those of token A and token B, where token A is the lowest of token X and token Y, and\n token B the other.\n This function also returns a storage pointer to the TwoTokenPoolBalances struct associated with the token pair,\n which can be used to update it without having to recompute the pair hash and storage slot.\n Requirements:\n - `poolId` must be a Minimal Swap Info Pool\n - `tokenX` and `tokenY` must be registered in the Pool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPoolSharedBalances",
            "parameters": {
              "id": 10895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10890,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10989,
                  "src": "13588:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10889,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13588:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10892,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nodeType": "VariableDeclaration",
                  "scope": 10989,
                  "src": "13612:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10891,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "13612:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10894,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nodeType": "VariableDeclaration",
                  "scope": 10989,
                  "src": "13635:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10893,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "13635:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13578:76:35"
            },
            "returnParameters": {
              "id": 10902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10897,
                  "mutability": "mutable",
                  "name": "balanceA",
                  "nodeType": "VariableDeclaration",
                  "scope": 10989,
                  "src": "13715:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10896,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13715:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10899,
                  "mutability": "mutable",
                  "name": "balanceB",
                  "nodeType": "VariableDeclaration",
                  "scope": 10989,
                  "src": "13745:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10898,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13745:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10901,
                  "mutability": "mutable",
                  "name": "poolBalances",
                  "nodeType": "VariableDeclaration",
                  "scope": 10989,
                  "src": "13775:41:35",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                    "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                  },
                  "typeName": {
                    "id": 10900,
                    "name": "TwoTokenPoolBalances",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10360,
                    "src": "13775:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolBalances_$10360_storage_ptr",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolBalances"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13701:125:35"
            },
            "scope": 11067,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11023,
            "nodeType": "FunctionDefinition",
            "src": "15499:342:35",
            "nodes": [],
            "body": {
              "id": 11022,
              "nodeType": "Block",
              "src": "15598:243:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11000,
                      "mutability": "mutable",
                      "name": "poolTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 11022,
                      "src": "15608:37:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                        "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                      },
                      "typeName": {
                        "id": 10999,
                        "name": "TwoTokenPoolTokens",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10369,
                        "src": "15608:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                          "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11004,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11001,
                      "name": "_twoTokenPoolTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10373,
                      "src": "15648:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TwoTokenPoolTokens_$10369_storage_$",
                        "typeString": "mapping(bytes32 => struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref)"
                      }
                    },
                    "id": 11003,
                    "indexExpression": {
                      "id": 11002,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10992,
                      "src": "15668:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15648:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage",
                      "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15608:67:35"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 11020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 11013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            },
                            "id": 11008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11005,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10994,
                              "src": "15755:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3793",
                                "typeString": "contract IERC20"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 11006,
                                "name": "poolTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11000,
                                "src": "15764:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                                  "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                                }
                              },
                              "id": 11007,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenA",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10362,
                              "src": "15764:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3793",
                                "typeString": "contract IERC20"
                              }
                            },
                            "src": "15755:26:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            },
                            "id": 11012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11009,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10994,
                              "src": "15785:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3793",
                                "typeString": "contract IERC20"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 11010,
                                "name": "poolTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11000,
                                "src": "15794:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TwoTokenPoolTokens_$10369_storage_ptr",
                                  "typeString": "struct TwoTokenPoolsBalance.TwoTokenPoolTokens storage pointer"
                                }
                              },
                              "id": 11011,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenB",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10364,
                              "src": "15794:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3793",
                                "typeString": "contract IERC20"
                              }
                            },
                            "src": "15785:26:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15755:56:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 11014,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15754:58:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "id": 11019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11015,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10994,
                        "src": "15816:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15832:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11016,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3793,
                          "src": "15825:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3793_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 11018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15825:9:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "15816:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15754:80:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10998,
                  "id": 11021,
                  "nodeType": "Return",
                  "src": "15747:87:35"
                }
              ]
            },
            "documentation": {
              "id": 10990,
              "nodeType": "StructuredDocumentation",
              "src": "15303:191:35",
              "text": " @dev Returns true if `token` is registered in a Two Token Pool.\n This function assumes `poolId` exists and corresponds to the Two Token specialization setting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isTwoTokenPoolTokenRegistered",
            "parameters": {
              "id": 10995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10992,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 11023,
                  "src": "15539:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10991,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15539:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10994,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11023,
                  "src": "15555:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10993,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "15555:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15538:30:35"
            },
            "returnParameters": {
              "id": 10998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10997,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11023,
                  "src": "15592:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15592:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15591:6:35"
            },
            "scope": 11067,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11042,
            "nodeType": "FunctionDefinition",
            "src": "15928:158:35",
            "nodes": [],
            "body": {
              "id": 11041,
              "nodeType": "Block",
              "src": "16019:67:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11036,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11026,
                            "src": "16063:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 11037,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11028,
                            "src": "16071:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3793",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "expression": {
                            "id": 11034,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16046:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16046:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16046:32:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11033,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "16036:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 11039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16036:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 11032,
                  "id": 11040,
                  "nodeType": "Return",
                  "src": "16029:50:35"
                }
              ]
            },
            "documentation": {
              "id": 11024,
              "nodeType": "StructuredDocumentation",
              "src": "15847:76:35",
              "text": " @dev Returns the hash associated with a given token pair."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTwoTokenPairHash",
            "parameters": {
              "id": 11029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11026,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nodeType": "VariableDeclaration",
                  "scope": 11042,
                  "src": "15958:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11025,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "15958:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11028,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nodeType": "VariableDeclaration",
                  "scope": 11042,
                  "src": "15973:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11027,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "15973:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15957:30:35"
            },
            "returnParameters": {
              "id": 11032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11031,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11042,
                  "src": "16010:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11030,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16010:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16009:9:35"
            },
            "scope": 11067,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11066,
            "nodeType": "FunctionDefinition",
            "src": "16201:169:35",
            "nodes": [],
            "body": {
              "id": 11065,
              "nodeType": "Block",
              "src": "16293:77:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$3793",
                        "typeString": "contract IERC20"
                      },
                      "id": 11056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11054,
                        "name": "tokenX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11045,
                        "src": "16310:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 11055,
                        "name": "tokenY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11047,
                        "src": "16319:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3793",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "16310:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 11060,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11047,
                          "src": "16348:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 11061,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11045,
                          "src": "16356:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "id": 11062,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16347:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$",
                        "typeString": "tuple(contract IERC20,contract IERC20)"
                      }
                    },
                    "id": 11063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16310:53:35",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 11057,
                          "name": "tokenX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11045,
                          "src": "16329:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 11058,
                          "name": "tokenY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11047,
                          "src": "16337:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3793",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "id": 11059,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16328:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$",
                        "typeString": "tuple(contract IERC20,contract IERC20)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$3793_$_t_contract$_IERC20_$3793_$",
                      "typeString": "tuple(contract IERC20,contract IERC20)"
                    }
                  },
                  "functionReturnParameters": 11053,
                  "id": 11064,
                  "nodeType": "Return",
                  "src": "16303:60:35"
                }
              ]
            },
            "documentation": {
              "id": 11043,
              "nodeType": "StructuredDocumentation",
              "src": "16092:104:35",
              "text": " @dev Sorts two tokens in ascending order, returning them as a (tokenA, tokenB) tuple."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sortTwoTokens",
            "parameters": {
              "id": 11048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11045,
                  "mutability": "mutable",
                  "name": "tokenX",
                  "nodeType": "VariableDeclaration",
                  "scope": 11066,
                  "src": "16225:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11044,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "16225:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11047,
                  "mutability": "mutable",
                  "name": "tokenY",
                  "nodeType": "VariableDeclaration",
                  "scope": 11066,
                  "src": "16240:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11046,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "16240:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16224:30:35"
            },
            "returnParameters": {
              "id": 11053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11050,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11066,
                  "src": "16277:6:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11049,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "16277:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11052,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11066,
                  "src": "16285:6:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3793",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11051,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3793,
                    "src": "16285:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3793",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16276:16:35"
            },
            "scope": 11067,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 10351,
              "name": "PoolRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6026,
              "src": "946:12:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolRegistry_$6026",
                "typeString": "contract PoolRegistry"
              }
            },
            "id": 10352,
            "nodeType": "InheritanceSpecifier",
            "src": "946:12:35"
          }
        ],
        "contractDependencies": [
          206,
          529,
          547,
          566,
          948,
          1128,
          3156,
          3849,
          6026,
          8844,
          11692
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          11067,
          6026,
          8844,
          1128,
          948,
          3156,
          206,
          529,
          3849,
          11692,
          566,
          547
        ],
        "name": "TwoTokenPoolsBalance",
        "scope": 11068
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 35
}