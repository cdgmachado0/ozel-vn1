{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_chargeOZLfee_distributeFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_chargeOZLfee_noFeesToDistribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_claim_OZL",
      "outputs": [
        {
          "internalType": "contract ozIToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_exchangeRate_with_circulatingSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_exchange_rate_equilibrium",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_new_recicling_campaing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_overflow_rewardPerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_recicled_supply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_redeem_in_WETH_ETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_redeem_in_WETH_paused_pool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_redeem_in_rETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_redeem_in_stable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_redeem_permit_in_stable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff199182168117909255600480549091169091179055607b601b556101c8601c55610315601d5562018af8601e55604e8054600160a01b600160e01b0319166602ee0000fa001960a11b17905563078422206054556a18d0bf423c03d8de0000006055556a52b7d2dcc80cd2e40000006056553480156200008b57600080fd5b506201e5e0806200009d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001755760003560e01c8063847f671511620000d3578063ba414fa61162000086578063ba414fa6146200027a578063d7a834361462000295578063e20c9f71146200029f578063e5bb498e14620002a9578063e71fdf6d14620002b3578063fa7626d414620002bd57600080fd5b8063847f6715146200022f57806385226c811462000239578063916a17c61462000252578063b244bf46146200025c578063b5508aa91462000266578063b56231cb146200027057600080fd5b806339349400116200012c5780633934940014620001e45780633e5e3c2314620001ee5780633f7286f414620001f857806349bbcc4b146200020257806351fd9af9146200020c57806366d9a9a0146200021657600080fd5b80630a1ce092146200017a5780630a9254e414620001865780630e4ae323146200019057806313220c2e146200019a57806319fa614114620001c15780631ed7831c14620001cb575b600080fd5b62000184620002cb565b005b6200018462000826565b6200018462000a2c565b620001a462000e75565b6040516001600160a01b0390911681526020015b60405180910390f35b62000184620012f0565b620001d562001c43565b604051620001b891906200c158565b6200018462001ca7565b620001d562001f33565b620001d562001f95565b6200018462001ff7565b62000184620025ca565b6200022062002654565b604051620001b891906200c1ee565b6200018462002747565b6200024362002e0c565b604051620001b891906200c2c3565b6200022062002ee6565b6200018462002fd0565b62000243620035cf565b62000184620036a9565b6200028462003b68565b6040519015158152602001620001b8565b6200018462003c99565b620001d562003e57565b6200018462003eb9565b6200018462004379565b600054620002849060ff1681565b620002d562000e75565b50604d54603a546020546040516370a0823160e01b81526001600160a01b0391821660048201529281169260009291909116906370a0823190602401602060405180830381865afa1580156200032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035591906200c329565b905062000363811562004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918416906370a0823190602401602060405180830381865afa158015620003b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003d691906200c329565b90506000670de0b6b3a7640000846001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044891906200c329565b6200045490846200c359565b6200046091906200c373565b90506200046f6101f462004678565b6000670de0b6b3a7640000856001600160a01b0316634d02a3f760016040518263ffffffff1660e01b8152600401620004a991906200c3cb565b602060405180830381865afa158015620004c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ed91906200c329565b620004f990856200c359565b6200050591906200c373565b90506000620005bb6040518060400160405280848152602001858152506040518060400160405280604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000581573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a791906200c3e0565b61ffff1681526032602090910152620047d7565b6020546040516303223eab60e11b81526001600160a01b0390911660048201529091506000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200061357600080fd5b505af115801562000628573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b393506200066092169088906004016200c406565b6020604051808303816000875af115801562000680573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a691906200c430565b50602054602854604051636afa028760e01b81526000926001600160a01b03808b1693636afa028793620006e893831692839216908b9089906004016200c480565b6020604051808303816000875af115801562000708573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200072e91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200077e57600080fd5b505af115801562000793573d6000803e3d6000fd5b5050603a546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa158015620007e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080d91906200c329565b90506200081c82821462004600565b5050505050505050565b600062000834600162004883565b60405163975a6ce960e01b81529091506000805160206201e56b833981519152906371ee464d90829063975a6ce990620008739086906004016200c4bd565b600060405180830381865afa15801562000891573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008bb91908101906200c59f565b6051546040518363ffffffff1660e01b8152600401620008dd9291906200c5ed565b6020604051808303816000875af1158015620008fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092391906200c329565b6053556200093062004da9565b60405163975a6ce960e01b81526000805160206201e56b833981519152906371ee464d90829063975a6ce9906200096c9086906004016200c4bd565b600060405180830381865afa1580156200098a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620009b491908101906200c59f565b604f546040518363ffffffff1660e01b8152600401620009d69291906200c5ed565b6020604051808303816000875af1158015620009f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a1c91906200c329565b60525562000a2962004da9565b50565b62000a3662000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562000a89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aaf91906200c329565b905062000abf6000821162004600565b600062000acb62005a3b565b905062000ad9811562004600565b6026546020546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562000b2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b5191906200c329565b905062000b5f811562004600565b6020546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b15801562000bb457600080fd5b505af115801562000bc9573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808916945063095ea7b3935062000c0192169087906004016200c406565b6020604051808303816000875af115801562000c21573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4791906200c430565b506020546026546001600160a01b0380871692636afa028792908216918291168762000c768a82600262005ac2565b6040518663ffffffff1660e01b815260040162000c989594939291906200c480565b6020604051808303816000875af115801562000cb8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cde91906200c329565b506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000d2d57600080fd5b505af115801562000d42573d6000803e3d6000fd5b50506026546020546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562000d93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000db991906200c329565b905062000dc96000821162004600565b62000dd362005a3b565b915062000de36000831162004600565b62000df083831462004600565b6020546040516370a0823160e01b81526001600160a01b039182166004820152908516906370a0823190602401602060405180830381865afa15801562000e3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e6191906200c329565b925062000e6f831562004600565b50505050565b604b54603a54604051631e38fde960e21b815260009283926001600160a01b03918216926378e3f7a49262000eaf9216906004016200c611565b6020604051808303816000875af115801562000ecf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef591906200c666565b9050600062000f076001600062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f8791906200c6a3565b62000f9490600a6200c7be565b62000fa090836200c359565b905062000faf6126ac62004678565b62000fb96200602a565b602054603a5462000fda9185916001600160a01b03918216911684620061cf565b62000fe6600f62006402565b604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562001038573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200105e91906200c329565b90506200106c811562004600565b60006200107862006480565b905062001089816055541462004600565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af1158015620010d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010fb91906200c430565b9050620011088162004600565b60006200111462006508565b905062001122811562004600565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b1580156200117757600080fd5b505af11580156200118c573d6000803e3d6000fd5b505050506000604b60009054906101000a90046001600160a01b03166001600160a01b031663b88a802f6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620011e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200120e91906200c329565b90506200121a62006508565b91506200122a6000831162004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918816906370a0823190602401602060405180830381865afa15801562001277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200129d91906200c329565b9050620012ad6000821162004600565b620012ba81841462004600565b6000620012c662006480565b9050620012e0620012d882886200c7cf565b841462004600565b50989a9950505050505050505050565b603954602554603a54604e54604051630b4c774160e11b81526000946000805160206201e56b8339815191529463667f9d70946001600160a01b0392831694631698ee829462001359949384169390921691600160b01b90910462ffffff16906004016200c7e5565b602060405180830381865afa15801562001377573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200139d91906200c666565b6040516001600160e01b031960e084901b168152620013c391906000906004016200c406565b602060405180830381865afa158015620013e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200140791906200c329565b90506000806200141662006590565b604b54603a54604051631e38fde960e21b81529395509193506000926001600160a01b03918216926378e3f7a49262001455929116906004016200c611565b6020604051808303816000875af115801562001475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200149b91906200c666565b90506000620014ac60008062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001506573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200152c91906200c6a3565b6200153990600a6200c7be565b620015466002846200c373565b6200155291906200c359565b9050620015616126ac62004678565b6200156b6200602a565b602054603a546200158c9185916001600160a01b03918216911684620061cf565b620015998686866200671a565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918516906370a0823190602401602060405180830381865afa158015620015e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200160c91906200c329565b90506200161c6000821162004600565b6000605454600a6200162f91906200c80d565b90506000805160206201e56b83398151915263e5d6bf026200165283426200c80d565b6040518263ffffffff1660e01b81526004016200167191815260200190565b600060405180830381600087803b1580156200168c57600080fd5b505af1158015620016a1573d6000803e3d6000fd5b505050506000620016b1620067a1565b9050620016c16000821262004600565b620016cb62006828565b604d546001600160a01b0316600080620016e58362006a19565b915091506000620016f562006480565b90506200170964e8d4a51000821062004600565b6020546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200175e57600080fd5b505af115801562001773573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808916945063095ea7b39350620017ab92169087906004016200c406565b6020604051808303816000875af1158015620017cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017f191906200c430565b506020546025546001600160a01b0380871692636afa0287929082169182911687620018208a82600162005ac2565b6040518663ffffffff1660e01b8152600401620018429594939291906200c480565b6020604051808303816000875af115801562001862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200188891906200c329565b506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018d757600080fd5b505af1158015620018ec573d6000803e3d6000fd5b505050506000806200190083878762006d28565b601f5460405163ca669fa760e01b81526001600160a01b03909116600482015291935091506301e19140906000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b1580156200196057600080fd5b505af115801562001975573d6000803e3d6000fd5b5050604b5460405163c28cd66d60e01b8152600481018590526001600160a01b03909116925063c28cd66d9150602401600060405180830381600087803b158015620019c057600080fd5b505af1158015620019d5573d6000803e3d6000fd5b5050505062001a118d602060009054906101000a90046001600160a01b0316603a60009054906101000a90046001600160a01b03168e620061cf565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918f16906370a0823190602401602060405180830381865afa15801562001a5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8491906200c329565b9050600062001a958c60026200c359565b62001aa28d60026200c359565b62001aae90846200c7cf565b62001abc906127106200c359565b62001ac891906200c373565b905062001ad6811562004600565b6000805160206201e56b83398151915263e5d6bf0262001af78d426200c80d565b6040518263ffffffff1660e01b815260040162001b1691815260200190565b600060405180830381600087803b15801562001b3157600080fd5b505af115801562001b46573d6000803e3d6000fd5b5050604b546020546040516246613160e11b81526001600160a01b0391821660048201526000945091169150628cc26290602401602060405180830381865afa15801562001b98573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bbe91906200c329565b905062001beb62001bd4633b9aca00836200c373565b62001be4633b9aca008b6200c373565b1462004600565b600062001bf762006e01565b905062001c078187141562004600565b62001c188162001be4878a6200c373565b62001c2d62001c2662005a3b565b1562004600565b5050505050505050505050505050505050505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801562001c9d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001c7e575b5050505050905090565b62001cb162000e75565b50604d54604051634d02a3f760e01b81526001600160a01b03909116906000908290634d02a3f79062001ce99084906004016200c3cb565b602060405180830381865afa15801562001d07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d2d91906200c329565b90506000826001600160a01b0316634d02a3f760016040518263ffffffff1660e01b815260040162001d6091906200c3cb565b602060405180830381865afa15801562001d7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da491906200c329565b90506000836001600160a01b0316634d02a3f760026040518263ffffffff1660e01b815260040162001dd791906200c3cb565b602060405180830381865afa15801562001df5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e1b91906200c329565b9050600062001ea58484604b60009054906101000a90046001600160a01b03166001600160a01b0316636260f55b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001e79573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e9f91906200c329565b62006e89565b9050600062001f058484604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562001e79573d6000803e3d6000fd5b905062001f1f82158062001f195750826001145b62004600565b62001f2b811562004600565b505050505050565b6060600f80548060200260200160405190810160405280929190818152602001828054801562001c9d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001c7e575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562001c9d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001c7e575050505050905090565b6200200162000e75565b50604d54603a546020546040516370a0823160e01b81526001600160a01b0391821660048201529281169260009291909116906370a0823190602401602060405180830381865afa1580156200205b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200208191906200c329565b90506200208f811562004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918416906370a0823190602401602060405180830381865afa158015620020dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200210291906200c329565b90506000670de0b6b3a7640000846001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200214e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200217491906200c329565b6200218090846200c359565b6200218c91906200c373565b90506200219b6101f462004678565b6000670de0b6b3a7640000856001600160a01b0316634d02a3f760016040518263ffffffff1660e01b8152600401620021d591906200c3cb565b602060405180830381865afa158015620021f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200221991906200c329565b6200222590856200c359565b6200223191906200c373565b90506000620022ad6040518060400160405280848152602001858152506040518060400160405280604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000581573d6000803e3d6000fd5b601c54602054604b54929350600092839283926000805160206201e56b8339815191529263e341eaa49291620022f1916001600160a01b0391821691168c62006edd565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401606060405180830381865afa15801562002333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200235991906200c823565b6020546040516303223eab60e11b81526001600160a01b03909116600482015292955090935091506000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b158015620023b657600080fd5b505af1158015620023cb573d6000803e3d6000fd5b5050602054604b5460405163d505accf60e01b81526001600160a01b03808f16955063d505accf9450620024119381169216908c9042908a908a908a906004016200c85b565b600060405180830381600087803b1580156200242c57600080fd5b505af115801562002441573d6000803e3d6000fd5b5050602054602854604051636afa028760e01b8152600094506001600160a01b038e81169450636afa0287936200248993908216928392909116908e908c906004016200c480565b6020604051808303816000875af1158015620024a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024cf91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200251f57600080fd5b505af115801562002534573d6000803e3d6000fd5b5050603a546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562002588573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025ae91906200c329565b9050620025bd82821462004600565b5050505050505050505050565b620025d462006f64565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af115801562002620573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200264691906200c430565b905062000a29811562004600565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156200273e5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200272557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620026e65790505b5050505050815250508152602001906001019062002678565b50505050905090565b603954602554603a54604e54604051630b4c774160e11b81526000946000805160206201e56b8339815191529463667f9d70946001600160a01b0392831694631698ee8294620027b0949384169390921691600160b01b90910462ffffff16906004016200c7e5565b602060405180830381865afa158015620027ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027f491906200c666565b6040516001600160e01b031960e084901b1681526200281a91906000906004016200c406565b602060405180830381865afa15801562002838573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200285e91906200c329565b90506000806200286d62006590565b9150915060006200288060008062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620028da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200290091906200c6a3565b6200290d90600a6200c7be565b6200291990836200c359565b603a54602054601c5492935060009262002948926001600160a01b03908116928692911690600180876200711f565b509050620029588686866200671a565b603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620029ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029d291906200c6a3565b620029df90600a6200c7be565b620029ec6002856200c373565b620029f891906200c359565b602154603a5491935062002a1c9183916001600160a01b03908116911685620061cf565b62002a2662006828565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af115801562002a72573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a9891906200c430565b905062002aa58162004600565b602654604d546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562002af7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b1d91906200c329565b90506000604b60009054906101000a90046001600160a01b03166001600160a01b0316632cc3eb0a6040518163ffffffff1660e01b81526004016040805180830381865afa15801562002b74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b9a91906200c89c565b602001519050600062002c2c82612710604b60009054906101000a90046001600160a01b03166001600160a01b031663a5a410316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002bfe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c2491906200c329565b919062007426565b9050600062002c4060328361271062007426565b62002c4c90836200c7cf565b9050600062002ce2670de0b6b3a7640000604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562002cb3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002cd991906200c329565b84919062007426565b9050600062002cf282876200c7cf565b905062002d0d6001821115801562001f195750600162004600565b602654601f546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562002d5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d8591906200c329565b905062002d956000821162004600565b6000805160206201e58b83398151915260001c6001600160a01b0316633fdf4e156040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002de357600080fd5b505af115801562002df8573d6000803e3d6000fd5b505050505050505050505050505050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200273e57838290600052602060002001805462002e52906200c8d1565b80601f016020809104026020016040519081016040528092919081815260200182805462002e80906200c8d1565b801562002ed15780601f1062002ea55761010080835404028352916020019162002ed1565b820191906000526020600020905b81548152906001019060200180831162002eb357829003601f168201915b50505050508152602001906001019062002e30565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156200273e5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562002fb757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162002f785790505b5050505050815250508152602001906001019062002f0a565b62002fda62000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009060029083906370a0823190602401602060405180830381865afa15801562003030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200305691906200c329565b6200306291906200c373565b6026546020546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620030b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030db91906200c329565b9050620030e9811562004600565b6000670de0b6b3a7640000846001600160a01b0316634d02a3f760026040518263ffffffff1660e01b81526004016200312391906200c3cb565b602060405180830381865afa15801562003141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200316791906200c329565b6200317390856200c359565b6200317f91906200c373565b90506200318d600562004678565b60006200321482604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200320e91906200c3e0565b62007445565b604080516001808252818301909252919250600091906020808301908036833701905050905081816000815181106200325157620032516200c90d565b602090810291909101810191909152546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b158015620032b357600080fd5b505af1158015620032c8573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b393506200330092169089906004016200c406565b6020604051808303816000875af115801562003320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200334691906200c430565b506000866001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003388573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033ae91906200c329565b602054602654604051636afa028760e01b81529293506000926001600160a01b03808c1693636afa028793620033f4939183169283929116908d908a906004016200c480565b6020604051808303816000875af115801562003414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200343a91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200348a57600080fd5b505af11580156200349f573d6000803e3d6000fd5b505050506000886001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620034e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200350a91906200c329565b90506200352e6200351f620186a0836200c373565b62001be4620186a0866200c373565b6026546020546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562003580573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035a691906200c329565b9050620035b66000821162004600565b620035c381841462004600565b50505050505050505050565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200273e57838290600052602060002001805462003615906200c8d1565b80601f016020809104026020016040519081016040528092919081815260200182805462003643906200c8d1565b8015620036945780601f10620036685761010080835404028352916020019162003694565b820191906000526020600020905b8154815290600101906020018083116200367657829003601f168201915b505050505081526020019060010190620035f3565b620036b362000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562003706573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200372c91906200c329565b6026546020546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa1580156200377f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037a591906200c329565b9050620037b3811562004600565b6000670de0b6b3a7640000846001600160a01b0316634d02a3f760026040518263ffffffff1660e01b8152600401620037ed91906200c3cb565b602060405180830381865afa1580156200380b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200383191906200c329565b6200383d90856200c359565b6200384991906200c373565b905062003857600562004678565b6000620038b282604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b60408051600180825281830190925291925060009190602080830190803683370190505090508181600081518110620038ef57620038ef6200c90d565b602090810291909101810191909152546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200395157600080fd5b505af115801562003966573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b393506200399e92169089906004016200c406565b6020604051808303816000875af1158015620039be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039e491906200c430565b50602054602654604051636afa028760e01b81526000926001600160a01b03808b1693636afa02879362003a2693831692839216908c9089906004016200c480565b6020604051808303816000875af115801562003a46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a6c91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003abc57600080fd5b505af115801562003ad1573d6000803e3d6000fd5b50506026546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562003b25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b4b91906200c329565b905062003b5b6000821162004600565b6200081c81831462004600565b60008054610100900460ff161562003b895750600054610100900460ff1690565b60006000805160206201e56b8339815191523b1562003c94576040516000906000805160206201e56b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062003bf69083906519985a5b195960d21b906020016200c406565b60408051601f198184030181529082905262003c1692916020016200c923565b60408051601f198184030181529082905262003c32916200c956565b6000604051808303816000865af19150503d806000811462003c71576040519150601f19603f3d011682016040523d82523d6000602084013e62003c76565b606091505b509150508080602001905181019062003c9091906200c430565b9150505b919050565b6032546040805160048152602481018252602080820180516001600160e01b0316631c0de05160e01b17905282516001918101919091526000818401819052606080830191909152835180830390910181526080820193849052632e5884f960e21b9093526000805160206201e56b8339815191529363b96213e49362003d2f936001600160a01b03909216926084016200c974565b600060405180830381600087803b15801562003d4a57600080fd5b505af115801562003d5f573d6000803e3d6000fd5b5050505062003d6d62003eb9565b60325460408051631c0de05160e01b815290516000926001600160a01b031691631c0de0519160048083019260609291908290030181865afa15801562003db8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dde91906200c9ae565b5050905062003ded8162004600565b6000805160206201e58b83398151915260001c6001600160a01b0316633fdf4e156040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003e3b57600080fd5b505af115801562003e50573d6000803e3d6000fd5b5050505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562001c9d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001c7e575050505050905090565b62003ec362000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562003f16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f3c91906200c329565b6025546020546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562003f8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003fb591906200c329565b905062003fc3811562004600565b6000670de0b6b3a7640000846001600160a01b0316634d02a3f760016040518263ffffffff1660e01b815260040162003ffd91906200c3cb565b602060405180830381865afa1580156200401b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200404191906200c329565b6200404d90856200c359565b6200405991906200c373565b9050620040686101f462004678565b6000620040c382604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b604080516001808252818301909252919250600091906020808301908036833701905050905081816000815181106200410057620041006200c90d565b602090810291909101810191909152546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200416257600080fd5b505af115801562004177573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b39350620041af92169089906004016200c406565b6020604051808303816000875af1158015620041cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041f591906200c430565b50602054602554604051636afa028760e01b81526000926001600160a01b03808b1693636afa0287936200423793831692839216908c9089906004016200c480565b6020604051808303816000875af115801562004257573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200427d91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620042cd57600080fd5b505af1158015620042e2573d6000803e3d6000fd5b50506025546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562004336573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200435c91906200c329565b90506200436c6000821162004600565b6200081c82821462004600565b604b54603a54604051631e38fde960e21b81526000926001600160a01b03908116926378e3f7a492620043b392909116906004016200c611565b6020604051808303816000875af1158015620043d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620043f991906200c666565b905060006200440a60008062005c04565b505090506000600a603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562004466573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200448c91906200c6a3565b6200449990600a6200c7be565b620044a590846200c359565b620044b191906200c373565b9050620044bd6200602a565b620044c762006828565b6000805b600a81101562003e5057602054603a54620044f69187916001600160a01b03918216911686620061cf565b62004503600a836200c80d565b91506000805160206201e56b83398151915263e5d6bf026200452684426200c80d565b6040518263ffffffff1660e01b81526004016200454591815260200190565b600060405180830381600087803b1580156200456057600080fd5b505af115801562004575573d6000803e3d6000fd5b5050604b546020546040516246613160e11b81526001600160a01b03918216600482015291169250628cc2629150602401602060405180830381865afa158015620045c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045ea91906200c329565b5080620045f7816200c9cf565b915050620044cb565b8062000a29577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620046669060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000a296200746f565b601f5460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b158015620046cd57600080fd5b505af1158015620046e2573d6000803e3d6000fd5b5050604b54604051632bc8a42d60e01b815261ffff851660048201526001600160a01b039091169250632bc8a42d9150602401600060405180830381600087803b1580156200473057600080fd5b505af115801562004745573d6000803e3d6000fd5b5050505062000a298161ffff16604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620047a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047cc91906200c3e0565b61ffff161462004600565b6040805160028082526060828101909352908181602001602082028036833701905050915060005b818110156200487b57620048468582600281106200482157620048216200c90d565b60200201518583600281106200483b576200483b6200c90d565b602002015162007445565b8382815181106200485b576200485b6200c90d565b60209081029190910101528062004872816200c9cf565b915050620047ff565b505092915050565b606060008260018111156200489c576200489c6200c396565b0362004ae95750602380546001600160a01b031990811673fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb91790915560248054821673af88d065e77c8cc2239327c5edb3a432268e58311790556025805482167382af49447d8a07e3bd95bd0d56f35241523fbab1179055602980548216730f4fb9474303d10905ab86aa8d5a65fe44b6e04a179055602a8054821673c6962004f452be9203591991d15f6b388e09e8d0179055602f8054821673e592427a0aece92de3edee1f18e0157c0586156417905560308054821673639fe6ab55c921f74e7fac1ee960c0b6293ba61217905560318054821673ba12222222228d8ba445958a75a0704d566bf2c817905560268054821673ec70dcb4a1efa46b8f2d97c310c9c4790ba5ffa817905560328054821673ade4a71bb62bec25154cfc7e6ff49a513b491e81179055602b80548216733607e46698d218b3a5cae44bf381475c0a5e2ca7179055602c80548216738b194beae1d3e0788a1a35173978001acdfba66817905560338054821673d6ab2298946840262fcc278ff31516d39ff611ef179055602d80548216733f770ac673856f105b586bb393d122721265ad46179055602e8054821673ce88686553686da562ce7cea497ce749da109f9f1790556027805482167317fc002b466eec40dae837fc4be5c67993ddbd6f17905560288054821673da10009cbd5d07dd0cecc66161fc93d7c9000da11790556037805482169055603980549091169055604080518082019091526008815267617262697472756d60c01b602082015263081de827604f55919050565b600182600181111562004b005762004b006200c396565b0362003c945750602380546001600160a01b031990811673dac17f958d2ee523a2206206994597c13d831ec71790915560248054821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4817905560258054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905560298054821673a2327a938febf5fec13bacfb16ae10ecbc4cbdcf179055602a805482167388e6a0c2ddd26feeb64f039a2c41296fcb3f5640179055602f8054821673e592427a0aece92de3edee1f18e0157c05861564179055603080548216735f4ec3df9cbd43714fe2740f5e3616155c5b841917905560318054821673ba12222222228d8ba445958a75a0704d566bf2c817905560268054821673ae78736cd615f374d3085123a210448e74fc6393179055603280548216731e19cf2d73a72ef1332c882f20534b6519be0276179055602b805482169055602c80548216905560338054821673536218f9e9eb48863970252233c8f271f554c2d0179055602d805482169055602e80548216905560278054821673853d955acef822db058eb8505911ed77f175b99e179055602880548216736b175474e89094c44da98b954eedeac495271d0f179055603780548216731d8f8f00cfa6758d7be78336684788fb0ee0fa4617905560388054821673ac2245be4c2c1e9752499bcd34861b761d62fc27179055603980548216731f98431c8ad98523631ae4a59f267346ea31f984179055603480548216738cfc184c877154a8f9ffe0fe75649dbe5e2dbebf179055603580548216738751f736e94f6cd167e8c5b97e245680fbd9cc361790556036805490911673ddb6f90ffb4d3257dd666b69178e5b3c5bf41136179055604080518082019091526008815267657468657265756d60c01b6020820152630118f82e604f5563011ea3c56050556301244737605155919050565b602854603a80546001600160a01b039283166001600160a01b03199182161790915560248054603b80548416918516919091179055602354603c80549093169316929092179055601b546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529163ffa186499101602060405180830381865afa15801562004e41573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e6791906200c666565b601f80546001600160a01b0319166001600160a01b0392909216919091179055601c546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529063ffa1864990602401602060405180830381865afa15801562004eda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f0091906200c666565b602080546001600160a01b0319166001600160a01b0392909216919091179055601d546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529063ffa1864990602401602060405180830381865afa15801562004f73573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f9991906200c666565b602180546001600160a01b0319166001600160a01b0392909216919091179055601e546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529063ffa1864990602401602060405180830381865afa1580156200500c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200503291906200c666565b602280546001600160a01b0319166001600160a01b039290921691909117905560405162005060906200c037565b604051809103906000f0801580156200507d573d6000803e3d6000fd5b50603e80546001600160a01b0319166001600160a01b03928316908117909155601f54604051921691620050b1906200c045565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620050e5573d6000803e3d6000fd5b50604080546001600160a01b0319166001600160a01b03929092169190911781555162005112906200c053565b604051809103906000f0801580156200512f573d6000803e3d6000fd5b50603d80546001600160a01b0319166001600160a01b03929092169190911790556040516200515e906200c061565b604051809103906000f0801580156200517b573d6000803e3d6000fd5b50604280546001600160a01b0319166001600160a01b0392909216919091179055604051620051aa906200c06f565b604051809103906000f080158015620051c7573d6000803e3d6000fd5b50604980546001600160a01b0319166001600160a01b0392909216919091179055604051620051f6906200c07d565b604051809103906000f08015801562005213573d6000803e3d6000fd5b50603f80546001600160a01b0319166001600160a01b039290921691909117905560405162005242906200c08b565b604051809103906000f0801580156200525f573d6000803e3d6000fd5b50604580546001600160a01b0319166001600160a01b03929092169190911790556040516200528e906200c098565b604051809103906000f080158015620052ab573d6000803e3d6000fd5b50604480546001600160a01b0319166001600160a01b0392909216919091179055604051620052da906200c0a6565b604051809103906000f080158015620052f7573d6000803e3d6000fd5b50604680546001600160a01b0319166001600160a01b039290921691909117905560405162005326906200c0b3565b604051809103906000f08015801562005343573d6000803e3d6000fd5b50604780546001600160a01b0319166001600160a01b039290921691909117905560405162005372906200c0c1565b604051809103906000f0801580156200538f573d6000803e3d6000fd5b50604880546001600160a01b0319166001600160a01b03928316179055604254604051911690620053c0906200c0cf565b6001600160a01b039091168152602001604051809103906000f080158015620053ed573d6000803e3d6000fd5b50604180546001600160a01b0319166001600160a01b03929092169190911790556040516200541c906200c0dd565b604051809103906000f08015801562005439573d6000803e3d6000fd5b50604a80546001600160a01b0319166001600160a01b039290921691909117905560405162005468906200c0eb565b604051809103906000f08015801562005485573d6000803e3d6000fd5b50604380546001600160a01b0319166001600160a01b0392909216919091179055620054b062007573565b60408051600b8082526101808201909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620054c957505060495490915062005514906001600160a01b031660006200766e565b816000815181106200552a576200552a6200c90d565b6020908102919091010152603f546200554e906001600160a01b031660016200766e565b816001815181106200556457620055646200c90d565b602090810291909101015260455462005588906001600160a01b031660026200766e565b816002815181106200559e576200559e6200c90d565b6020908102919091010152604454620055c2906001600160a01b031660036200766e565b81600381518110620055d857620055d86200c90d565b6020908102919091010152604654620055fc906001600160a01b031660046200766e565b816004815181106200561257620056126200c90d565b602090810291909101015260475462005636906001600160a01b031660056200766e565b816005815181106200564c576200564c6200c90d565b602090810291909101015260485462005670906001600160a01b031660066200766e565b816006815181106200568657620056866200c90d565b6020908102919091010152604154620056aa906001600160a01b031660076200766e565b81600781518110620056c057620056c06200c90d565b6020908102919091010152604a54620056e4906001600160a01b031660086200766e565b81600881518110620056fa57620056fa6200c90d565b6020908102919091010152604e546200571e906001600160a01b031660096200766e565b816009815181106200573457620057346200c90d565b602090810291909101015260435462005758906001600160a01b0316600a6200766e565b81600a815181106200576e576200576e6200c90d565b60209081029190910181019190915260408051608080820183526025546001600160a01b03908116835260265481168386015260248054821684860152602354821660608086019190915285518082018752602f5484168152603154841681890152603254841681880152865160a08082018952603054861682526033548616828b01526034548616828a0152603554861682850152603654861682880152885160e081018a5289548716815260415487169a81019a909a5260375486168a8a0152604e5461ffff600160a01b820416948b019490945262ffffff600160b01b85048116978b0197909752600160c81b9093049095169188019190915260395490921660c087015293519294909391929091600091634173436560e11b91620058a0918891889188918891016200c9eb565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031994909416939093179092528154604b80546001600160a01b0319166001600160a01b03928316179055601f5492516303223eab60e11b81529216600483015291506000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200593e57600080fd5b505af115801562005953573d6000803e3d6000fd5b5050604b54603d546040516307e4c70760e21b81526001600160a01b039283169450631f931c1c935062005990928b92169086906004016200caec565b600060405180830381600087803b158015620059ab57600080fd5b505af1158015620059c0573d6000803e3d6000fd5b50505050620059ce62008411565b620059d862008554565b6000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562005a2657600080fd5b505af1158015620035c3573d6000803e3d6000fd5b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa15801562005a92573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ab891906200cb9d565b5095945050505050565b60606000670de0b6b3a7640000856001600160a01b0316634d02a3f7856040518263ffffffff1660e01b815260040162005afd91906200c3cb565b602060405180830381865afa15801562005b1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b4191906200c329565b62005b4d90866200c359565b62005b5991906200c373565b604080516001808252818301909252919250600091906020808301908036833701905050905062005bd882604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b8160008151811062005bee5762005bee6200c90d565b60209081029190910101529150505b9392505050565b60008080808086600181111562005c1f5762005c1f6200c396565b1462005c2f57620f424062005c32565b60645b62ffffff169050600062005c488260026200c359565b9050600062005c598360036200c359565b905060008762005c6b57600162005c6e565b60035b60ff1667ffffffffffffffff81111562005c8c5762005c8c6200c4d2565b60405190808252806020026020018201604052801562005cb6578160200160208202803683370190505b50603a5481519192506001600160a01b031690829060009062005cdd5762005cdd6200c90d565b60200260200101906001600160a01b031690816001600160a01b031681525050871562005d8057603b5481516001600160a01b03909116908290600190811062005d2b5762005d2b6200c90d565b6001600160a01b039283166020918202929092010152603c5482519116908290600290811062005d5f5762005d5f6200c90d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60005b81518110156200601b5762005e6482828151811062005da65762005da66200c90d565b6020026020010151602060009054906101000a90046001600160a01b031684848151811062005dd95762005dd96200c90d565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005e1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e4591906200c6a3565b62005e5290600a6200c7be565b62005e5e90896200c359565b62009d2d565b62005f3582828151811062005e7d5762005e7d6200c90d565b6020026020010151602160009054906101000a90046001600160a01b031684848151811062005eb05762005eb06200c90d565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005ef6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f1c91906200c6a3565b62005f2990600a6200c7be565b62005e5e90886200c359565b6200600682828151811062005f4e5762005f4e6200c90d565b6020026020010151602260009054906101000a90046001600160a01b031684848151811062005f815762005f816200c90d565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005fc7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005fed91906200c6a3565b62005ffa90600a6200c7be565b62005e5e90876200c359565b8062006012816200c9cf565b91505062005d83565b50929891975095509350505050565b601f546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200607f57600080fd5b505af115801562006094573d6000803e3d6000fd5b5050604b5460545460405163cc1a378f60e01b81526001600160a01b03909216935063cc1a378f9250620060ce9160040190815260200190565b600060405180830381600087803b158015620060e957600080fd5b505af1158015620060fe573d6000803e3d6000fd5b5050604b54605554604051633c6b16ab60e01b81526001600160a01b039092169350633c6b16ab9250620061389160040190815260200190565b600060405180830381600087803b1580156200615357600080fd5b505af115801562006168573d6000803e3d6000fd5b505050506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620061ba57600080fd5b505af115801562000e6f573d6000803e3d6000fd5b6020546000906001600160a01b0390811690851603620061f35750601c5462006230565b6021546001600160a01b0390811690851603620062145750601d5462006230565b6022546001600160a01b0390811690851603620062305750601e545b6000620062438684848888600062009d3c565b9050600062006252826200a0a4565b50506040516303223eab60e11b81526001600160a01b03891660048201529192506000805160206201e56b833981519152916306447d569150602401600060405180830381600087803b158015620062a957600080fd5b505af1158015620062be573d6000803e3d6000fd5b5050604b54620062de92506001600160a01b03888116925016866200a0d0565b60006040518060400160405280868152602001838152509050876001600160a01b0316630cae37f182896040516020016200631b9291906200cbde565b604051602081830303815290604052896040518363ffffffff1660e01b81526004016200634a9291906200cc1e565b6020604051808303816000875af11580156200636a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200639091906200c329565b506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620063df57600080fd5b505af1158015620063f4573d6000803e3d6000fd5b505050505050505050505050565b6000805160206201e56b83398151915263e5d6bf026200642383426200c80d565b6040518263ffffffff1660e01b81526004016200644291815260200190565b600060405180830381600087803b1580156200645d57600080fd5b505af115801562006472573d6000803e3d6000fd5b5050505062000a2962006828565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015620064d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620064fd91906200cb9d565b509095945050505050565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa1580156200655f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200658591906200cb9d565b509195945050505050565b6000806000603260009054906101000a90046001600160a01b03166001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620065e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200660f91906200c329565b90506009600062006623838360026200a219565b6026546025546040516bffffffffffffffffffffffff19606093841b811660208301529190921b166034820152909150600090604801604051602081830303815290604052805190602001209050600062006681828460006200a219565b603154604051630667f9d760e41b81529192506000916000805160206201e56b8339815191529163667f9d7091620066c8916001600160a01b03169086906004016200c406565b602060405180830381865afa158015620066e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200670c91906200c329565b989197509095505050505050565b6031546040516370ca10bb60e01b81526000805160206201e56b833981519152916370ca10bb916200675d916001600160a01b031690859087906004016200cc4a565b600060405180830381600087803b1580156200677857600080fd5b505af11580156200678d573d6000803e3d6000fd5b505050506200679c836200a25e565b505050565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015620067f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200681e91906200cb9d565b9695505050505050565b600061019090506000620068bc604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200688b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620068b191906200c329565b839061271062007426565b604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562006912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200693891906200c329565b6200694491906200c80d565b6033546040805160048152602481018252602080820180516001600160e01b0316633fabe5a360e21b17905282516000918101829052928301859052606083018190526080830181905260a08301529293506000805160206201e56b8339815191529263b96213e4926001600160a01b03169160c0016040516020818303038152906040526040518463ffffffff1660e01b8152600401620069e9939291906200c974565b600060405180830381600087803b15801562006a0457600080fd5b505af115801562001f2b573d6000803e3d6000fd5b6020546040516370a0823160e01b81526001600160a01b039182166004820152600091829182918516906370a0823190602401602060405180830381865afa15801562006a6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006a9091906200c329565b905062006a9e811562004600565b600062006aaa62006480565b905062006abb816055541462004600565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af115801562006b07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006b2d91906200c430565b905062006b3a8162004600565b600062006b4662006508565b905062006b54811562004600565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b15801562006ba957600080fd5b505af115801562006bbe573d6000803e3d6000fd5b505050506000604b60009054906101000a90046001600160a01b03166001600160a01b031663b88a802f6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562006c1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c4091906200c329565b905062006c4c62006508565b915062006c5c6000831162004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918a16906370a0823190602401602060405180830381865afa15801562006ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ccf91906200c329565b905062006cdf6000821162004600565b600062006ceb62006480565b905062006cfd620012d882886200c7cf565b600062006d0962005a3b565b905062006d17811562004600565b509099919850909650505050505050565b600080600062006d3762006480565b905062006d4681871462004600565b604b546040516370a0823160e01b81526001600160a01b0391821660048201526000918716906370a0823190602401602060405180830381865afa15801562006d93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006db991906200c329565b905062006dca605554821462004600565b600062006dd662005a3b565b905062006de586821462004600565b600062006df162006e01565b9199919850909650505050505050565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa15801562006e58573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006e7e91906200cb9d565b509295945050505050565b60006103e8670de0b6b3a764000062006ea384866200c359565b62006eaf91906200c373565b62006ebb91906200c373565b62006ec96103e8866200c373565b62006ed591906200c7cf565b949350505050565b604d54604051623f675f60e91b81526001600160a01b03858116600483015260009262006ed5929116908690869086908490637ecebe00906024015b602060405180830381865afa15801562006f37573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006f5d91906200c329565b426200a3b1565b600062006f7360008062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562006fcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ff391906200c6a3565b6200700090600a6200c7be565b6200700c90836200c359565b603a54602054601c5492935060009283926200703e926001600160a01b0391821692879290911690600186806200711f565b6020546040516370a0823160e01b81526001600160a01b039182166004820152929450909250600091908416906370a0823190602401602060405180830381865afa15801562007092573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620070b891906200c329565b9050620070d06001600160a01b038416151562004600565b620070eb620070e3620f4240876200c359565b831462004600565b62003e5068055de6a779bbac00008211801562001f1957506200711786670de0b6b3a76400006200c359565b821062004600565b6000808415620071a957604b54604051631e38fde960e21b81526001600160a01b03909116906378e3f7a4906200715b908c906004016200c611565b6020604051808303816000875af11580156200717b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620071a191906200c666565b9150620071ad565b8891505b603a54600090620071d09084908b908a908c906001600160a01b03168962009d3c565b90506000620071df826200a0a4565b50506040516303223eab60e11b81526001600160a01b038c1660048201529192506000805160206201e56b833981519152916306447d569150602401600060405180830381600087803b1580156200723657600080fd5b505af11580156200724b573d6000803e3d6000fd5b505050508515620072775760405462007271908a906001600160a01b03168c856200a4d5565b620072f7565b603a5460408054905163095ea7b360e01b81526001600160a01b039283169263095ea7b392620072af929116908e906004016200c406565b6020604051808303816000875af1158015620072cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620072f591906200c430565b505b600060405180604001604052808c81526020018381525090506000818b604051602001620073279291906200cbde565b60408051601f1981840301815290829052630cae37f160e01b825291506001600160a01b03871690630cae37f190620073679084908f906004016200cc1e565b6020604051808303816000875af115801562007387573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620073ad91906200c329565b94506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620073fd57600080fd5b505af115801562007412573d6000803e3d6000fd5b505050505050505097509795505050505050565b60008260001904841183021582026200743e57600080fd5b5091020490565b60006200745a8361ffff841661271062007426565b6200746690846200c7cf565b90505b92915050565b6000805160206201e56b8339815191523b1562007562576040516000906000805160206201e56b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620074dd9083906519985a5b195960d21b906001906020016200cc4a565b60408051601f1981840301815290829052620074fd92916020016200c923565b60408051601f198184030181529082905262007519916200c956565b6000604051808303816000865af19150503d806000811462007558576040519150601f19603f3d011682016040523d82523d6000602084013e6200755d565b606091505b505050505b6000805461ff001916610100179055565b60405162007581906200c0f9565b604051809103906000f0801580156200759e573d6000803e3d6000fd5b50604c80546001600160a01b0319166001600160a01b03928316179055601f5460405163ca669fa760e01b8152911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b1580156200760757600080fd5b505af11580156200761c573d6000803e3d6000fd5b505050506040516200762e906200c107565b604051809103906000f0801580156200764b573d6000803e3d6000fd5b50604e80546001600160a01b0319166001600160a01b0392909216919091179055565b604080516060808201835260008083526020830152918101919091526000826001036200769e5750600262007743565b8260021480620076ae5750826004145b15620076bd5750600162007743565b82600303620076cf5750600362007743565b82600703620076e15750600562007743565b82600903620076f35750600662007743565b8260081480620077035750826005145b15620077125750600462007743565b82600a03620077245750600a62007743565b82600603620077365750600762007743565b82600003620077435750600e5b60008167ffffffffffffffff8111156200776157620077616200c4d2565b6040519080825280602002602001820160405280156200778b578160200160208202803683370190505b5090508360000362007ac7578051637a0ed62760e01b908290600090620077b657620077b66200c90d565b6001600160e01b03199092166020928302919091019091015280516356fe50af60e11b9082906001908110620077f057620077f06200c90d565b6001600160e01b03199092166020928302919091019091015280516314bbdacb60e21b90829060029081106200782a576200782a6200c90d565b6001600160e01b03199092166020928302919091019091015280516366ffd66360e11b90829060039081106200786457620078646200c90d565b6001600160e01b03199092166020928302919091019091015280516301ffc9a760e01b90829060049081106200789e576200789e6200c90d565b6001600160e01b0319909216602092830291909101909101528051630d411b1f60e11b9082906005908110620078d857620078d86200c90d565b6001600160e01b031990921660209283029190910190910152805163a4fc284b60e01b90829060069081106200791257620079126200c90d565b6001600160e01b031990921660209283029190910190910152805163a5a4103160e01b90829060079081106200794c576200794c6200c90d565b6001600160e01b031990921660209283029190910190910152805163423f0b9160e01b90829060089081106200798657620079866200c90d565b6001600160e01b0319909216602092830291909101909101528051630e2acd7560e21b9082906009908110620079c057620079c06200c90d565b6001600160e01b031990921660209283029190910190910152805163524b84db60e11b908290600a908110620079fa57620079fa6200c90d565b6001600160e01b03199092166020928302919091019091015280516318d744b360e21b908290600b90811062007a345762007a346200c90d565b6001600160e01b0319909216602092830291909101909101528051634d2c148760e01b908290600c90811062007a6e5762007a6e6200c90d565b6001600160e01b0319909216602092830291909101909101528051630b86641760e21b908290600d90811062007aa85762007aa86200c90d565b6001600160e01b031990921660209283029190910190910152620083e7565b8360010362007b29578051634980cd9560e11b90829060009062007aef5762007aef6200c90d565b6001600160e01b031990921660209283029190910190910152805163d349975760e01b908290600190811062007aa85762007aa86200c90d565b8360020362007b505763e9e05c4260e01b8160008151811062007aa85762007aa86200c90d565b8360030362007bec578051631e38fde960e21b90829060009062007b785762007b786200c90d565b6001600160e01b031990921660209283029190910190910152805163406d7f2d60e11b908290600190811062007bb25762007bb26200c90d565b6001600160e01b031990921660209283029190910190910152805163725d937960e11b908290600290811062007aa85762007aa86200c90d565b8360040362007c135763e9e05c4360e01b8160008151811062007aa85762007aa86200c90d565b8360050362007ce95780516327a813f960e21b90829060009062007c3b5762007c3b6200c90d565b6001600160e01b03199092166020928302919091019091015280516314370d6760e31b908290600190811062007c755762007c756200c90d565b6001600160e01b031990921660209283029190910190910152805163094463e760e01b908290600290811062007caf5762007caf6200c90d565b6001600160e01b0319909216602092830291909101909101528051631567339f60e31b908290600390811062007aa85762007aa86200c90d565b8360060362007e6d578051636a57db9d60e11b90829060009062007d115762007d116200c90d565b6001600160e01b0319909216602092830291909101909101528051634be9756960e11b908290600190811062007d4b5762007d4b6200c90d565b6001600160e01b0319909216602092830291909101909101528051636260f55b60e01b908290600290811062007d855762007d856200c90d565b6001600160e01b0319909216602092830291909101909101528051637a12625d60e11b908290600390811062007dbf5762007dbf6200c90d565b6001600160e01b03199092166020928302919091019091015280516323a7344360e21b908290600490811062007df95762007df96200c90d565b6001600160e01b0319909216602092830291909101909101528051631661f58560e11b908290600590811062007e335762007e336200c90d565b6001600160e01b031990921660209283029190910190910152805163b0ff97b560e01b908290600690811062007aa85762007aa86200c90d565b8360070362007f7d578051635c60da1b60e01b90829060009062007e955762007e956200c90d565b6001600160e01b0319909216602092830291909101909101528051631b2ce7f360e11b908290600190811062007ecf5762007ecf6200c90d565b6001600160e01b0319909216602092830291909101909101528051638da5cb5b60e01b908290600290811062007f095762007f096200c90d565b6001600160e01b03199092166020928302919091019091015280516338a80c5360e11b908290600390811062007f435762007f436200c90d565b6001600160e01b031990921660209283029190910190910152805163f2fde38b60e01b908290600490811062007aa85762007aa86200c90d565b8360080362008053578051632bc8a42d60e01b90829060009062007fa55762007fa56200c90d565b6001600160e01b0319909216602092830291909101909101528051635acb2ecb60e01b908290600190811062007fdf5762007fdf6200c90d565b6001600160e01b0319909216602092830291909101909101528051633bba4b3560e01b90829060029081106200801957620080196200c90d565b6001600160e01b031990921660209283029190910190910152805163cffd849360e01b908290600390811062007aa85762007aa86200c90d565b836009036200819d5780516369ad444760e11b9082906000906200807b576200807b6200c90d565b6001600160e01b03199092166020928302919091019091015280516371edfb9f60e01b9082906001908110620080b557620080b56200c90d565b6001600160e01b0319909216602092830291909101909101528051636dbb22d760e11b9082906002908110620080ef57620080ef6200c90d565b6001600160e01b031990921660209283029190910190910152805163d36de10b60e01b90829060039081106200812957620081296200c90d565b6001600160e01b031990921660209283029190910190910152805163335c7bbd60e01b90829060049081106200816357620081636200c90d565b6001600160e01b031990921660209283029190910190910152805163f1b5084b60e01b908290600590811062007aa85762007aa86200c90d565b83600a03620083e757805163cc1a378f60e01b908290600090620081c557620081c56200c90d565b6001600160e01b0319909216602092830291909101909101528051633c6b16ab60e01b9082906001908110620081ff57620081ff6200c90d565b6001600160e01b03199092166020928302919091019091015280516380faa57d60e01b90829060029081106200823957620082396200c90d565b6001600160e01b031990921660209283029190910190910152805163cd3daf9d60e01b90829060039081106200827357620082736200c90d565b6001600160e01b03199092166020928302919091019091015280516246613160e11b9082906004908110620082ac57620082ac6200c90d565b6001600160e01b031990921660209283029190910190910152805163b88a802f60e01b9082906005908110620082e657620082e66200c90d565b6001600160e01b031990921660209283029190910190910152805163c3ae3a0960e01b90829060069081106200832057620083206200c90d565b6001600160e01b031990921660209283029190910190910152805163c28cd66d60e01b90829060079081106200835a576200835a6200c90d565b6001600160e01b03199092166020928302919091019091015280516241fec360e31b90829060089081106200839357620083936200c90d565b6001600160e01b0319909216602092830291909101909101528051631f42639960e21b9082906009908110620083cd57620083cd6200c90d565b6001600160e01b0319909216602092830291909101909101525b604080516060810182526001600160a01b0396909616865260006020870152850152509192915050565b604b5460565460555460405160a06024820152600460c48201526313de995b60e21b60e482015260e0604482015260036101048201526213d69360ea1b6101248201526001600160a01b039093166064840152608483019190915260a48201526000906101440160408051601f198184030181529181526020820180516001600160e01b0316633a41189960e11b179052604c54604e5491519293506001600160a01b03908116929116908390620084c9906200c115565b620084d7939291906200cc6b565b604051809103906000f080158015620084f4573d6000803e3d6000fd5b50604d80546001600160a01b0319166001600160a01b03928316908117909155604b54604051633bba4b3560e01b8152600481019290925290911690633bba4b3590602401600060405180830381600087803b15801562003e3b57600080fd5b60448054604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e918101919091526d6f7a546f6b656e466163746f727960901b60648201526000805160206201e56b8339815191529063c657c71890608401600060405180830381600087803b158015620085d057600080fd5b505af1158015620085e5573d6000803e3d6000fd5b5050603d546040516318caf8e360e31b81526000805160206201e56b833981519152935063c657c718925062008628916001600160a01b0316906004016200cc99565b600060405180830381600087803b1580156200864357600080fd5b505af115801562008658573d6000803e3d6000fd5b5050604754604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152676f7a456e67696e6560c01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620086cf57600080fd5b505af1158015620086e4573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600560448201526437bbb732b960d91b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200875857600080fd5b505af11580156200876d573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526005604482015264416c69636560d81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620087e157600080fd5b505af1158015620087f6573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260036044820152622137b160e91b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200886857600080fd5b505af11580156200887d573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b0390921660048301529181019190915260096044820152685553444370726f787960b81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620088f857600080fd5b505af11580156200890d573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631554d11560e21b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200898557600080fd5b505af11580156200899a573d6000803e3d6000fd5b50506040805481516318caf8e360e31b81526001600160a01b039091166004820152602481019190915260096044820152681bde911a585b5bdb9960ba1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008a1457600080fd5b505af115801562008a29573d6000803e3d6000fd5b5050603d546040516318caf8e360e31b81526000805160206201e56b833981519152935063c657c718925062008a6c916001600160a01b0316906004016200cc99565b600060405180830381600087803b15801562008a8757600080fd5b505af115801562008a9c573d6000803e3d6000fd5b5050603e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600f60448201526e111a585b5bdb9910dd5d119858d95d608a1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008b1a57600080fd5b505af115801562008b2f573d6000803e3d6000fd5b5050604954604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260076044820152666f7a4c6f75706560c81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008ba557600080fd5b505af115801562008bba573d6000803e3d6000fd5b5050603f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d13dddb995c9cda1a5c119858d95d60921b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008c3757600080fd5b505af115801562008c4c573d6000803e3d6000fd5b5050604554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d4d6972726f7245786368616e676560901b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008cc957600080fd5b505af115801562008cde573d6000803e3d6000fd5b5050604654604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526005604482015264506f6f6c7360d81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008d5257600080fd5b505af115801562008d67573d6000803e3d6000fd5b5050602f54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526011604482015270053776170526f75746572556e697377617607c1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008de757600080fd5b505af115801562008dfc573d6000803e3d6000fd5b5050603054604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601360448201527245544855534466656564436861696e6c696e6b60681b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008e7e57600080fd5b505af115801562008e93573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630ae8aa8960e31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008f0b57600080fd5b505af115801562008f20573d6000803e3d6000fd5b5050602954604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152671554d110da5b5c1b60c21b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008f9757600080fd5b505af115801562008fac573d6000803e3d6000fd5b5050602a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d77657468557364506f6f6c556e6960901b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200902957600080fd5b505af11580156200903e573d6000803e3d6000fd5b5050603254604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260146044820152733922aa242ba2aa243837b7b62130b630b731b2b960611b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620090c157600080fd5b505af1158015620090d6573d6000803e3d6000fd5b5050603154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600d60448201526c2b30bab63a2130b630b731b2b960991b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200915257600080fd5b505af115801562009167573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152602260448201527f416363657373436f6e74726f6c6c65644f6666636861696e416767726567617460648201526137b960f11b60848201526000805160206201e56b833981519152925063c657c718915060a401600060405180830381600087803b158015620091fe57600080fd5b505af115801562009213573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260066044820152650c2caae8aa8960d31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200928857600080fd5b505af11580156200929d573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630e48aa8960e31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200931557600080fd5b505af11580156200932a573d6000803e3d6000fd5b5050602d54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152671c9155121a5b5c1b60c21b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620093a157600080fd5b505af1158015620093b6573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260156044820152742332b2b9a1b7b63632b1ba37b92130b630b731b2b960591b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200943a57600080fd5b505af11580156200944f573d6000803e3d6000fd5b5050604854604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152676f7a4f7261636c6560c01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620094c657600080fd5b505af1158015620094db573d6000803e3d6000fd5b5050604154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201526737bd2132b0b1b7b760c11b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200955257600080fd5b505af115801562009567573d6000803e3d6000fd5b5050604254604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601560448201527437bd2a37b5b2b724b6b83632b6b2b73a30ba34b7b760591b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620095eb57600080fd5b505af115801562009600573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b03909216600480840191909152602483019190915260448201526308ca482b60e31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200967857600080fd5b505af11580156200968d573d6000803e3d6000fd5b5050604a54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260056044820152641bde90dd5d60da1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200970157600080fd5b505af115801562009716573d6000803e3d6000fd5b5050603754604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526011604482015270726f636b6574506f6f6c53746f7261676560781b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200979657600080fd5b505af1158015620097ab573d6000803e3d6000fd5b5050603354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201526f72457468457468436861696e6c696e6b60801b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200982a57600080fd5b505af11580156200983f573d6000803e3d6000fd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526244414960e81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620098b157600080fd5b505af1158015620098c6573d6000803e3d6000fd5b5050603954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a604482015269756e69466163746f727960b01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200993f57600080fd5b505af115801562009954573d6000803e3d6000fd5b5050604c54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260096044820152684f5a4c5f4c6f67696360b81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620099cc57600080fd5b505af1158015620099e1573d6000803e3d6000fd5b5050604d54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260096044820152684f5a4c5f50726f787960b81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009a5957600080fd5b505af115801562009a6e573d6000803e3d6000fd5b5050604e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201526827ad262fa7bbb732b960b91b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009ae657600080fd5b505af115801562009afb573d6000803e3d6000fd5b5050604354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600b60448201526a4f5a4c5f5265776172647360a81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009b7557600080fd5b505af115801562009b8a573d6000803e3d6000fd5b5050603454604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201526b74656c6c6f724f7261636c6560a01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009c0557600080fd5b505af115801562009c1a573d6000803e3d6000fd5b5050603554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201526f776545544845544872656453746f6e6560801b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009c9957600080fd5b505af115801562009cae573d6000803e3d6000fd5b5050603654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201526f776545544855534472656453746f6e6560801b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620061ba57600080fd5b6200679c83838360006200a68f565b6060600182600181111562009d555762009d556200c396565b0362009e6757604b5460408051630d411b1f60e11b815290516001600160a01b0390921691632e19905c9189918b918591631a82363e916004808201926020929091908290030181865afa15801562009db2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009dd891906200c3e0565b6040516001600160e01b031960e086901b16815260048101939093526001600160a01b03918216602484015261ffff16604483015287166064820152608401600060405180830381865afa15801562009e35573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262009e5f91908101906200c59f565b90506200681e565b600082600181111562009e7e5762009e7e6200c396565b036200681e57604b54603a5460408051630d411b1f60e11b815290516000936001600160a01b039081169363a49709b6938c9392909116918591631a82363e9160048083019260209291908290030181865afa15801562009ee3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009f0991906200c3e0565b6040516001600160e01b031960e086901b16815260048101939093526001600160a01b03909116602483015261ffff166044820152606401600060405180830381865afa15801562009f5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262009f8991908101906200cd4e565b602001516028549091506000906001600160a01b0386811691161462009fc95760405462009fc39087906001600160a01b03168a6200a88e565b62009fe2565b60405462009fe29087906001600160a01b03166200a8cf565b6040516338d07aa960e21b81526004810189905260248101829052909150600090819081906000805160206201e56b8339815191529063e341eaa490604401606060405180830381865afa1580156200a03f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a06591906200c823565b925092509250848383836040516020016200a08494939291906200cdcd565b604051602081830303815290604052955050505050509695505050505050565b60606000806000848060200190518101906200a0c191906200ce01565b92989197509550909350915050565b8015806200a14e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200a126573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a14c91906200c329565b155b6200a1bf5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6200679c8363095ea7b360e01b84846040516024016200a1e19291906200c406565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526200a955565b60008184846040516020016200a239929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c62006ed591906200c80d565b604080516bffffffffffffffffffffffff198316602082015260a083901b6001600160a01b031981166034830152918391600091016040516020818303038152906040526200a2ad906200ce65565b603954602554603a54604e54604051630b4c774160e11b81529495506000805160206201e56b833981519152946370ca10bb946001600160a01b0390811694631698ee82946200a3159491831693921691600160b01b90910462ffffff16906004016200c7e5565b602060405180830381865afa1580156200a333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a35991906200c666565b6040516001600160e01b031960e084901b1681526200a381919060009086906004016200cc4a565b600060405180830381600087803b1580156200a39c57600080fd5b505af11580156200081c573d6000803e3d6000fd5b6000866001600160a01b0316633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200a3f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a41891906200c329565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808a169282019290925290871660608201526080810186905260a0810185905260c0810184905260e0015b604051602081830303815290604052805190602001206040516020016200a4b392919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090509695505050505050565b60008060006200a4e5846200a0a4565b602854603a5493975091955093506001600160a01b0390811691160390506200a61857603a54604051623f675f60e91b81526001600160a01b03898116600483015290911690638fcbaf0c90899089908490637ecebe0090602401602060405180830381865afa1580156200a55e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a58491906200c329565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201524260648201526001608482015260ff861660a482015260c4810185905260e4810184905261010401600060405180830381600087803b1580156200a5f957600080fd5b505af11580156200a60e573d6000803e3d6000fd5b505050506200a686565b603a5460405163d505accf60e01b81526001600160a01b039091169063d505accf906200a656908a908a908a9042908a908a908a906004016200c85b565b600060405180830381600087803b1580156200a67157600080fd5b505af1158015620025bd573d6000803e3d6000fd5b50505050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200a6e5916200c956565b6000604051808303816000865af19150503d80600081146200a724576040519150601f19603f3d011682016040523d82523d6000602084013e6200a729565b606091505b509150506000818060200190518101906200a74591906200c329565b90506200a77f846200a778876200a7716370a0823160e01b6200a76a60058d6200aa31565b906200aa57565b906200aa75565b906200aa9e565b821562001f2b5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200a7ca91906200c956565b6000604051808303816000865af19150503d80600081146200a809576040519150601f19603f3d011682016040523d82523d6000602084013e6200a80e565b606091505b509150506000818060200190518101906200a82a91906200c329565b9050828610156200a855576200a84186846200c7cf565b6200a84d90826200c7cf565b90506200a870565b6200a86183876200c7cf565b6200a86d90826200c80d565b90505b6200081c816200a7786318160ddd60e01b6200a76a60058d6200aa31565b603a54604051623f675f60e91b81526001600160a01b03858116600483015260009262006ed5929116908690869086908490637ecebe009060240162006f19565b603a54604051623f675f60e91b81526001600160a01b0384811660048301526000926200746692911690859085908390637ecebe0090602401602060405180830381865afa1580156200a926573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a94c91906200c329565b4260016200aaae565b60006200a9ac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200abbe9092919063ffffffff16565b90508051600014806200a9d05750808060200190518101906200a9d091906200c430565b6200679c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200a1b6565b6005820180546001600160a01b0319166001600160a01b03831617905560008262007466565b60038201805463ffffffff191660e083901c17905560008262007466565b6002820180546001810182556000918252602082206001600160a01b0384169101558262007466565b6200aaaa82826200abcf565b5050565b6000866001600160a01b0316633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200aaef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ab1591906200c329565b876001600160a01b03166330adf81f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200ab54573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ab7a91906200c329565b6040805160208101929092526001600160a01b03808a1691830191909152871660608201526080810186905260a0810185905283151560c082015260e0016200a475565b606062006ed584846000856200af36565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200ac4257602002820191906000526020600020905b8154815260200190600101908083116200ac2d575b505050505090506000836200ac57836200b019565b6040516020016200ac6a9291906200c923565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200acbe9186918891016200ce8a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200acf9576200acf7876200b0cd565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200ad3a9187918991016200ce8a565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516200ad8191906200c956565b600060405180830381855afa9150503d80600081146200adbe576040519150601f19603f3d011682016040523d82523d6000602084013e6200adc3565b606091505b5091506200ade09050816200adda8860206200c359565b6200b0da565b604051630667f9d760e41b8152909250600091506000805160206201e56b8339815191529063667f9d70906200ae1d908b9087906004016200c406565b602060405180830381865afa1580156200ae3b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ae6191906200c329565b90508082146200ae855760405162461bcd60e51b81526004016200a1b6906200cec6565b6040516370ca10bb60e01b81526000805160206201e56b833981519152906370ca10bb906200aebd908b9087908e906004016200cc4a565b600060405180830381600087803b1580156200aed857600080fd5b505af11580156200aeed573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200af2260028b0160006200c123565b896004016000905550505050505050505050565b6060824710156200af995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200a1b6565b600080866001600160a01b031685876040516200afb791906200c956565b60006040518083038185875af1925050503d80600081146200aff6576040519150601f19603f3d011682016040523d82523d6000602084013e6200affb565b606091505b50915091506200b00e878383876200b164565b979650505050505050565b60606000825160206200b02d91906200c359565b67ffffffffffffffff8111156200b048576200b0486200c4d2565b6040519080825280601f01601f1916602001820160405280156200b073576020820181803683370190505b50905060005b83518110156200b0c65760008482815181106200b09a576200b09a6200c90d565b6020026020010151905080826020026020018401525080806200b0bd906200c9cf565b9150506200b079565b5092915050565b600062007469826200b1e4565b600080600060208551116200b0f15784516200b0f4565b60205b905060005b818110156200b15a576200b10f8160086200c359565b866200b11c83886200c80d565b815181106200b12f576200b12f6200c90d565b01602001516001600160f81b031916901c9290921791806200b151816200c9cf565b9150506200b0f9565b5090949350505050565b606083156200b1d85782516000036200b1d0576001600160a01b0385163b6200b1d05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200a1b6565b508162006ed5565b62006ed583836200bedd565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200b25657602002820191906000526020600020905b8154815260200190600101908083116200b241575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200b2a2925085918791016200ce8a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200b341576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200b3119185918791016200ce8a565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836200b34f836200bf0a565b6040516020016200b3629291906200c923565b60405160208183030381529060405290506000805160206201e58b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200b3c157600080fd5b505af11580156200b3d6573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200b3f791906200c956565b600060405180830381855afa9150503d80600081146200b434576040519150601f19603f3d011682016040523d82523d6000602084013e6200b439565b606091505b5091506200b4569050816200b4508760206200c359565b6200bfb7565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206201e56b833981519152906365bc9481906024016000604051808303816000875af11580156200b4b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200b4dd91908101906200cf61565b50905080516001036200b7a45760006000805160206201e58b83398151915260001c6001600160a01b031663667f9d7089846000815181106200b524576200b5246200c90d565b60200260200101516040518363ffffffff1660e01b81526004016200b54b9291906200c406565b602060405180830381865afa1580156200b569573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b58f91906200c329565b9050806200b5f3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200b5cf576200b5cf6200c90d565b602002602001015160001c6040516200b5ea9291906200c406565b60405180910390a15b8083146200b6155760405162461bcd60e51b81526004016200a1b6906200cec6565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200b64d9291906200ce8a565b60405160208183030381529060405280519060200120856000815181106200b679576200b6796200c90d565b602002602001015160001c6040516200b69694939291906200cfcc565b60405180910390a1816000815181106200b6b4576200b6b46200c90d565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c16835284528082209051929390926200b6ff918a918c91016200ce8a565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200b769918a918c91016200ce8a565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506200bd60565b6001815111156200bcef5760005b81518110156200bce85760006000805160206201e58b83398151915260001c6001600160a01b031663667f9d708a8585815181106200b7f5576200b7f56200c90d565b60200260200101516040518363ffffffff1660e01b81526004016200b81c9291906200c406565b602060405180830381865afa1580156200b83a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b86091906200c329565b9050806200b8c3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200b89f576200b89f6200c90d565b602002602001015160001c6040516200b8ba9291906200c406565b60405180910390a15b6000805160206201e58b83398151915260001c6001600160a01b03166370ca10bb8a8585815181106200b8fa576200b8fa6200c90d565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016200b928939291906200cc4a565b600060405180830381600087803b1580156200b94357600080fd5b505af11580156200b958573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200b97a91906200c956565b600060405180830381855afa9150503d80600081146200b9b7576040519150601f19603f3d011682016040523d82523d6000602084013e6200b9bc565b606091505b5090925090506200b9d4816200b4508b60206200c359565b95508180156200b9e8575061133760f01b86145b156200bc3b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200ba269291906200ce8a565b604051602081830303815290604052805190602001208888815181106200ba51576200ba516200c90d565b602002602001015160001c6040516200ba6e94939291906200cfcc565b60405180910390a18484815181106200ba8b576200ba8b6200c90d565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200bad6918d918f91016200ce8a565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200bb639291906200ce8a565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206201e58b83398151915260001c6001600160a01b03166370ca10bb8c8787815181106200bbd5576200bbd56200c90d565b6020026020010151866040518463ffffffff1660e01b81526004016200bbfe939291906200cc4a565b600060405180830381600087803b1580156200bc1957600080fd5b505af11580156200bc2e573d6000803e3d6000fd5b505050505050506200bce8565b6000805160206201e58b83398151915260001c6001600160a01b03166370ca10bb8c8787815181106200bc72576200bc726200c90d565b6020026020010151866040518463ffffffff1660e01b81526004016200bc9b939291906200cc4a565b600060405180830381600087803b1580156200bcb657600080fd5b505af11580156200bccb573d6000803e3d6000fd5b5050505050505080806200bcdf906200c9cf565b9150506200b7b2565b506200bd60565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016200a1b6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916200bda49188918a91016200ce8a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200be335760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016200a1b6565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200be6460028a0160006200c123565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200beaa9188918a91016200ce8a565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b8151156200beee5781518083602001fd5b8060405162461bcd60e51b81526004016200a1b691906200c4bd565b60606000825160206200bf1e91906200c359565b67ffffffffffffffff8111156200bf39576200bf396200c4d2565b6040519080825280601f01601f1916602001820160405280156200bf64576020820181803683370190505b50905060005b83518110156200b0c65760008482815181106200bf8b576200bf8b6200c90d565b6020026020010151905080826020026020018401525080806200bfae906200c9cf565b9150506200bf6a565b600080600060208551116200bfce5784516200bfd1565b60205b905060005b818110156200b15a576200bfec8160086200c359565b866200bff983886200c80d565b815181106200c00c576200c00c6200c90d565b01602001516001600160f81b031916901c9290921791806200c02e816200c9cf565b9150506200bfd6565b6113af806200cffd83390190565b6113b2806200e3ac83390190565b61087f806200f75e83390190565b612220806200ffdd83390190565b61130d80620121fd83390190565b610268806201350a83390190565b6094806201377283390190565b61144a806201380683390190565b60948062014c5083390190565b611caf8062014ce483390190565b611ec8806201699383390190565b6104c0806201885b83390190565b61163b8062018d1b83390190565b610a68806201a35683390190565b612382806201adbe83390190565b6105f1806201d14083390190565b610e3a806201d73183390190565b508054600082559060005260206000209081019062000a2991905b808211156200c15457600081556001016200c13e565b5090565b6020808252825182820181905260009190848201906040850190845b818110156200c19b5783516001600160a01b0316835292840192918401916001016200c174565b50909695505050505050565b600081518084526020808501945080840160005b838110156200c1e35781516001600160e01b031916875295820195908201906001016200c1bb565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200c26157888303603f19018552815180516001600160a01b031684528701518784018790526200c24d878501826200c1a7565b95880195935050908601906001016200c215565b509098975050505050505050565b60005b838110156200c28c5781810151838201526020016200c272565b50506000910152565b600081518084526200c2af8160208601602086016200c26f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200c31c57603f198886030184526200c3098583516200c295565b945092850192908501906001016200c2ea565b5092979650505050505050565b6000602082840312156200c33c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200746957620074696200c343565b6000826200c39157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6003811062000a2957634e487b7160e01b600052602160045260246000fd5b602081016200c3da836200c3ac565b91905290565b6000602082840312156200c3f357600080fd5b815161ffff8116811462005bfd57600080fd5b6001600160a01b03929092168252602082015260400190565b8051801515811462003c9457600080fd5b6000602082840312156200c44357600080fd5b62007466826200c41f565b600081518084526020808501945080840160005b838110156200c1e3578151875295820195908201906001016200c462565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906200b00e908301846200c44e565b6020815260006200746660208301846200c295565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156200c50e576200c50e6200c4d2565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156200c540576200c5406200c4d2565b604052919050565b600067ffffffffffffffff8311156200c565576200c5656200c4d2565b6200c57a601f8401601f19166020016200c514565b90508281528383830111156200c58f57600080fd5b62005bfd8360208301846200c26f565b6000602082840312156200c5b257600080fd5b815167ffffffffffffffff8111156200c5ca57600080fd5b8201601f810184136200c5dc57600080fd5b62006ed5848251602084016200c548565b6040815260006200c60260408301856200c295565b90508260208301529392505050565b6001600160a01b03919091168152606060208201819052600a908201526904f7a656c2d45524332360b41b608082015260a0604082018190526007908201526606f7a45524332360cc1b60c082015260e00190565b6000602082840312156200c67957600080fd5b81516001600160a01b038116811462005bfd57600080fd5b805160ff8116811462003c9457600080fd5b6000602082840312156200c6b657600080fd5b62007466826200c691565b600181815b808511156200c7025781600019048211156200c6e6576200c6e66200c343565b808516156200c6f457918102915b93841c93908002906200c6c6565b509250929050565b6000826200c71b5750600162007469565b816200c72a5750600062007469565b81600181146200c74357600281146200c74e576200c76e565b600191505062007469565b60ff8411156200c762576200c7626200c343565b50506001821b62007469565b5060208310610133831016604e8410600b84101617156200c793575081810a62007469565b6200c79f83836200c6c1565b80600019048211156200c7b6576200c7b66200c343565b029392505050565b60006200746660ff8416836200c70a565b818103818111156200746957620074696200c343565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b808201808211156200746957620074696200c343565b6000806000606084860312156200c83957600080fd5b6200c844846200c691565b925060208401519150604084015190509250925092565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6000604082840312156200c8af57600080fd5b6200c8b96200c4e8565b82518152602083015160208201528091505092915050565b600181811c908216806200c8e657607f821691505b6020821081036200c90757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6001600160e01b03198316815281516000906200c9488160048501602087016200c26f565b919091016004019392505050565b600082516200c96a8184602087016200c26f565b9190910192915050565b6001600160a01b03841681526060602082018190526000906200c99a908301856200c295565b82810360408401526200681e81856200c295565b6000806000606084860312156200c9c457600080fd5b6200c844846200c41f565b6000600182016200c9e4576200c9e46200c343565b5060010190565b84516001600160a01b0390811682526020808701518216818401526040808801518316818501526060808901518416818601528751841660808087019190915288840151851660a087015288830151851660c08701528751851660e0870152928701518416610100860152908601518316610120850152850151821661014084015284015116610160820152610260810182516001600160a01b03908116610180840152602084015181166101a0840152604084015181166101c0840152606084015161ffff166101e0840152608084015162ffffff90811661020085015260a08501511661022084015260c0840151166102408301525b95945050505050565b6000606080830181845280875180835260808601915060808160051b87010192506020808a0160005b838110156200cb7757888603607f19018552815180516001600160a01b03168752838101516200cb45816200c3ac565b878501526040908101519087018890526200cb63888801826200c1a7565b96505093820193908201906001016200cb15565b50506001600160a01b03891690870152505083810360408501526200b00e81866200c295565b600080600080600060a086880312156200cbb657600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b604081528251604082015260006020840151604060608401526200cc0660808401826200c44e565b91505060018060a01b03831660208301529392505050565b6040815260006200cc3360408301856200c295565b905060018060a01b03831660208301529392505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b038481168252831660208201526060604082018190526000906200cae3908301846200c295565b6001600160a01b03919091168152604060208201819052600b908201526a111a585b5bdb99125b9a5d60aa1b606082015260800190565b600082601f8301126200cce257600080fd5b8151602067ffffffffffffffff8211156200cd01576200cd016200c4d2565b8160051b6200cd128282016200c514565b92835284810182019282810190878511156200cd2d57600080fd5b83870192505b848310156200b00e578251825291830191908301906200cd33565b6000602082840312156200cd6157600080fd5b815167ffffffffffffffff808211156200cd7a57600080fd5b90830190604082860312156200cd8f57600080fd5b6200cd996200c4e8565b825181526020830151828111156200cdb057600080fd5b6200cdbe878286016200ccd0565b60208301525095945050505050565b6080815260006200cde260808301876200c44e565b60ff959095166020830152506040810192909252606090910152919050565b600080600080608085870312156200ce1857600080fd5b845167ffffffffffffffff8111156200ce3057600080fd5b6200ce3e878288016200ccd0565b9450506200ce4f602086016200c691565b6040860151606090960151949790965092505050565b805160208083015191908110156200c9075760001960209190910360031b1b16919050565b825160009082906020808701845b838110156200ceb6578151855293820193908201906001016200ce98565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600080604083850312156200cf7557600080fd5b825167ffffffffffffffff808211156200cf8e57600080fd5b6200cf9c868387016200ccd0565b935060208501519150808211156200cfb357600080fd5b506200cfc2858286016200ccd0565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b5061138f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610d6a565b610045565b005b61004d61009e565b61009761005a8587610eb0565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011a92505050565b5050505050565b6000805160206112ee833981519152600401546001600160a01b031633146101185760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084015b60405180910390fd5b565b60005b83518110156102e057600084828151811061013a5761013a610ff4565b60200260200101516020015190506000600281111561015b5761015b61100a565b81600281111561016d5761016d61100a565b036101bb576101b685838151811061018757610187610ff4565b6020026020010151600001518684815181106101a5576101a5610ff4565b60200260200101516040015161032b565b6102cd565b60018160028111156101cf576101cf61100a565b03610218576101b68583815181106101e9576101e9610ff4565b60200260200101516000015186848151811061020757610207610ff4565b6020026020010151604001516104a3565b600281600281111561022c5761022c61100a565b03610275576101b685838151811061024657610246610ff4565b60200260200101516000015186848151811061026457610264610ff4565b602002602001015160400151610633565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b606482015260840161010f565b50806102d881611036565b91505061011d565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103149392919061109f565b60405180910390a16103268282610751565b505050565b600081511161034c5760405162461bcd60e51b815260040161010f9061119f565b6000805160206112ee8339815191526001600160a01b0383166103815760405162461bcd60e51b815260040161010f906111ea565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036103b7576103b78285610817565b60005b83518110156100975760008482815181106103d7576103d7610ff4565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104755760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b606482015260840161010f565b6104818583868a610881565b8361048b81611236565b9450505050808061049b90611036565b9150506103ba565b60008151116104c45760405162461bcd60e51b815260040161010f9061119f565b6000805160206112ee8339815191526001600160a01b0383166104f95760405162461bcd60e51b815260040161010f906111ea565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361052f5761052f8285610817565b60005b835181101561009757600084828151811061054f5761054f610ff4565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036105fa5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606482015260840161010f565b610605858284610921565b6106118583868a610881565b8361061b81611236565b9450505050808061062b90611036565b915050610532565b60008151116106545760405162461bcd60e51b815260040161010f9061119f565b6000805160206112ee8339815191526001600160a01b038316156106d95760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b606482015260840161010f565b60005b825181101561074b5760008382815181106106f9576106f9610ff4565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610736848284610921565b5050808061074390611036565b9150506106dc565b50505050565b6001600160a01b038216610763575050565b6107858260405180606001604052806028815260200161130e60289139610ce4565b600080836001600160a01b0316836040516107a0919061125c565b600060405180830381855af49150503d80600081146107db576040519150601f19603f3d011682016040523d82523d6000602084013e6107e0565b606091505b50915091508161074b578051156107fa5780518082602001fd5b838360405163192105d760e01b815260040161010f929190611278565b6108398160405180606001604052806024815260200161133660249139610ce4565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661099d5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606482015260840161010f565b306001600160a01b03831603610a0c5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b606482015260840161010f565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610a5b916112a4565b9050808214610b4d576001600160a01b03841660009081526001860160205260408120805483908110610a9057610a90610ff4565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610ae157610ae1610ff4565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610b7657610b766112bd565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610097576002850154600090610bd9906001906112a4565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610c88576000876002018381548110610c1857610c18610ff4565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c4957610c49610ff4565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610c9b57610c9b6112bd565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b818161074b5760405162461bcd60e51b815260040161010f91906112d3565b80356001600160a01b0381168114610d1c57600080fd5b919050565b60008083601f840112610d3357600080fd5b50813567ffffffffffffffff811115610d4b57600080fd5b602083019150836020828501011115610d6357600080fd5b9250929050565b600080600080600060608688031215610d8257600080fd5b853567ffffffffffffffff80821115610d9a57600080fd5b818801915088601f830112610dae57600080fd5b813581811115610dbd57600080fd5b8960208260051b8501011115610dd257600080fd5b60208301975080965050610de860208901610d05565b94506040880135915080821115610dfe57600080fd5b50610e0b88828901610d21565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610e5557610e55610e1c565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e8457610e84610e1c565b604052919050565b600067ffffffffffffffff821115610ea657610ea6610e1c565b5060051b60200190565b6000610ec3610ebe84610e8c565b610e5b565b83815260208082019190600586811b860136811115610ee157600080fd5b865b81811015610fe757803567ffffffffffffffff80821115610f045760008081fd5b818a01915060608236031215610f1a5760008081fd5b610f22610e32565b610f2b83610d05565b81528683013560038110610f3f5760008081fd5b8188015260408381013583811115610f575760008081fd5b939093019236601f850112610f6e57600092508283fd5b83359250610f7e610ebe84610e8c565b83815292871b84018801928881019036851115610f9b5760008081fd5b948901945b84861015610fd05785356001600160e01b031981168114610fc15760008081fd5b82529489019490890190610fa0565b918301919091525088525050948301948301610ee3565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161104857611048611020565b5060010190565b60005b8381101561106a578181015183820152602001611052565b50506000910152565b6000815180845261108b81602086016020860161104f565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561116f57898403607f19018652815180516001600160a01b0316855283810151898601906003811061110e57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b8083101561115a5783516001600160e01b0319168252928601926001929092019190860190611130565b509785019795505050908201906001016110c8565b50506001600160a01b038a169088015286810360408801526111918189611073565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b0380831681810361125257611252611020565b6001019392505050565b6000825161126e81846020870161104f565b9190910192915050565b6001600160a01b038316815260406020820181905260009061129c90830184611073565b949350505050565b818103818111156112b7576112b7611020565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006112e66020830184611073565b939250505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220ff5de9f8ff6008281bf41d87dfa9a592f59ddb064e7758e025d96d9c4d0fc82064736f6c6343000815003360806040526040516113b23803806113b283398101604081905261002291610f61565b61002b82610136565b604080516001808252818301909252600091816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100425750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b816000815181106100b1576100b1610f94565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b038516815290810160008152602001828152508260008151811061010157610101610f94565b602002602001018190525061012d826000604051806020016040528060008152506101b960201b60201c565b505050506111fe565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020611306833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156103965760008482815181106101d9576101d9610f94565b6020026020010151602001519050600060028111156101fa576101fa610faa565b81600281111561020c5761020c610faa565b036102605761025b85838151811061022657610226610f94565b60200260200101516000015186848151811061024457610244610f94565b6020026020010151604001516103e160201b60201c565b610383565b600181600281111561027457610274610faa565b036102c35761025b85838151811061028e5761028e610f94565b6020026020010151600001518684815181106102ac576102ac610f94565b60200260200101516040015161065960201b60201c565b60028160028111156102d7576102d7610faa565b036103265761025b8583815181106102f1576102f1610f94565b60200260200101516000015186848151811061030f5761030f610f94565b6020026020010151604001516108da60201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b508061038e81610fd6565b9150506101bc565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103ca9392919061103f565b60405180910390a16103dc8282610a31565b505050565b60008151116104345760405162461bcd60e51b815260206004820152602b602482015260008051602061139283398151915260448201526a1858d95d081d1bc818dd5d60aa1b606482015260840161037a565b6000805160206113068339815191526001600160a01b03831661049c5760405162461bcd60e51b815260206004820152602c602482015260008051602061134e83398151915260448201526b65206164647265737328302960a01b606482015260840161037a565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036104d2576104d28285610af7565b60005b83518110156106525760008482815181106104f2576104f2610f94565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156105985760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c7265616479206578697374730000000000000000000000606482015260840161037a565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558361063a8161113f565b9450505050808061064a90610fd6565b9150506104d5565b5050505050565b60008151116106ac5760405162461bcd60e51b815260206004820152602b602482015260008051602061139283398151915260448201526a1858d95d081d1bc818dd5d60aa1b606482015260840161037a565b6000805160206113068339815191526001600160a01b0383166107145760405162461bcd60e51b815260206004820152602c602482015260008051602061134e83398151915260448201526b65206164647265737328302960a01b606482015260840161037a565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361074a5761074a8285610af7565b60005b835181101561065257600084828151811061076a5761076a610f94565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036108155760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606482015260840161037a565b610820858284610b61565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836108c28161113f565b945050505080806108d290610fd6565b91505061074d565b600081511161092d5760405162461bcd60e51b815260206004820152602b602482015260008051602061139283398151915260448201526a1858d95d081d1bc818dd5d60aa1b606482015260840161037a565b6000805160206113068339815191526001600160a01b038316156109b95760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d757374206265206164647265737328302900000000000000000000606482015260840161037a565b60005b8251811015610a2b5760008382815181106109d9576109d9610f94565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610a16848284610b61565b50508080610a2390610fd6565b9150506109bc565b50505050565b6001600160a01b038216610a43575050565b610a658260405180606001604052806028815260200161132660289139610f24565b600080836001600160a01b031683604051610a80919061116d565b600060405180830381855af49150503d8060008114610abb576040519150601f19603f3d011682016040523d82523d6000602084013e610ac0565b606091505b509150915081610a2b57805115610ada5780518082602001fd5b838360405163192105d760e01b815260040161037a929190611189565b610b198160405180606001604052806024815260200161136e60249139610f24565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606482015260840161037a565b306001600160a01b03831603610c4c5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b606482015260840161037a565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610c9b916111b5565b9050808214610d8d576001600160a01b03841660009081526001860160205260408120805483908110610cd057610cd0610f94565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610d2157610d21610f94565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610db657610db66111ce565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610652576002850154600090610e19906001906111b5565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ec8576000876002018381548110610e5857610e58610f94565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e8957610e89610f94565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610edb57610edb6111ce565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b8181610a2b5760405162461bcd60e51b815260040161037a91906111e4565b80516001600160a01b0381168114610f5c57600080fd5b919050565b60008060408385031215610f7457600080fd5b610f7d83610f45565b9150610f8b60208401610f45565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fe857610fe8610fc0565b5060010190565b60005b8381101561100a578181015183820152602001610ff2565b50506000910152565b6000815180845261102b816020860160208601610fef565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561110f57898403607f19018652815180516001600160a01b031685528381015189860190600381106110ae57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156110fa5783516001600160e01b03191682529286019260019290920191908601906110d0565b50978501979550505090820190600101611068565b50506001600160a01b038a169088015286810360408801526111318189611013565b9a9950505050505050505050565b60006001600160601b038281166002600160601b0319810161116357611163610fc0565b6001019392505050565b6000825161117f818460208701610fef565b9190910192915050565b6001600160a01b03831681526040602082018190526000906111ad90830184611013565b949350505050565b818103818111156111c8576111c8610fc0565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006111f76020830184611013565b9392505050565b60fa8061120c6000396000f3fe608060405236600a57005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b03168060a15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604482015260640160405180910390fd5b3660008037600080366000845af43d6000803e80801560bf573d6000f35b3d6000fdfea2646970667358221220d11035aea877594f82738570ccad6dd4e93c363fd9b3e930c98994f0be977d6664736f6c63430008150033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204164642066616365742063616e277420624c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f64654c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066608060405234801561001057600080fd5b5061085f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806382e686ca14610030575b600080fd5b61004361003e366004610711565b610045565b005b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f60209081527f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f8054600160ff1991821681179092557ff97e938d8af42f52387bb74b8b526fda8f184cc2aa534340a8d75a88fbecc77580548216831790557f65d510a5d8f7ef134ec444f7f34ee808c8eeb5177cdfd16be0c40fe1ab43369580548216831790556307f5828d60e41b60009081527f5622121b47b8cd0120c4efe45dd5483242f54a3d49bd7679be565d47694918c3805490921683179091558551600680546001600160a01b03199081166001600160a01b039384161790915587850151600880548316918416919091179055604080890151845483169084161784558751600780548a890151600a805487169188169190911790558a8401516025805487169188169190911790556060808c01516026805488169189169190911790556080808d0151602780548916918a169190911790558b51600280548916918a169190911790558b8b0151600e80548916918a169190911790558b8201519488166001600160b01b031990931692909217600160a01b61ffff90951694909402939093179091558801516013805462ffffff1990811662ffffff9384161790915560a08a015160158054909216921691909117905560c08801516024805485169186169190911790557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132054602180549186169185169190911790558a516003805485169186169190911781558b830151600480548616918716919091179055908b01516005805485169186169190911790558a8701516009805485169186169182179055602280548089018255968190527f61035b26e3e9eee00e0d72fd1ee8ddca6894550dca6916ea2ac6baa90d11e51096870180548616909217909155905481549687019091559490930180549483169482169490941790935584820151600f8054909416911617909155516f636f6e74726163742e6164647265737360801b91810191909152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b60308201527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9060410160408051601f19818403018152908290528051602091820120601055600f546001600160a01b0316916321f8a721916103f591016f636f6e74726163742e6164647265737360801b81526a1c9bd8dad95d15985d5b1d60aa1b6010820152601b0190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161042991815260200190565b602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190610805565b601180546001600160a01b0319166001600160a01b03929092169190911790556040516f636f6e74726163742e6164647265737360801b60208201527f726f636b657444414f50726f746f636f6c53657474696e67734465706f736974603082015260500160408051601f1981840301815291905280516020909101206012555050505050565b60405160e0810167ffffffffffffffff8111828210171561052257634e487b7160e01b600052604160045260246000fd5b60405290565b6040516080810167ffffffffffffffff8111828210171561052257634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561052257634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461059f57600080fd5b50565b80356105ad8161058a565b919050565b600060a082840312156105c457600080fd5b60405160a0810181811067ffffffffffffffff821117156105f557634e487b7160e01b600052604160045260246000fd5b60405290508082356106068161058a565b815260208301356106168161058a565b602082015260408301356106298161058a565b6040820152606083013561063c8161058a565b6060820152608083013561064f8161058a565b6080919091015292915050565b803562ffffff811681146105ad57600080fd5b600060e0828403121561068157600080fd5b6106896104f1565b905081356106968161058a565b815260208201356106a68161058a565b602082015260408201356106b98161058a565b6040820152606082013561ffff811681146106d357600080fd5b60608201526106e46080830161065c565b60808201526106f560a0830161065c565b60a082015261070660c083016105a2565b60c082015292915050565b60008060008084860361026081121561072957600080fd5b608081121561073757600080fd5b61073f610528565b863561074a8161058a565b8152602087013561075a8161058a565b6020820152604087013561076d8161058a565b604082015260608701356107808161058a565b606082810191909152909550607f198201121561079c57600080fd5b506107a5610559565b60808601356107b38161058a565b815260a08601356107c38161058a565b602082015260c08601356107d68161058a565b604082015292506107ea8660e087016105b2565b91506107fa86610180870161066f565b905092959194509250565b60006020828403121561081757600080fd5b81516108228161058a565b939250505056fea2646970667358221220ea054c5a932fae192e575208c64037d0cf0e7896425d2572f5a6d25fa860b1b664736f6c63430008150033608060405234801561001057600080fd5b5061001961001e565b6100de565b602854610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60285460ff90811610156100dc576028805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61213280620000ee6000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80633c6b16ab11610125578063a9059cbb116100ad578063cc1a378f1161007c578063cc1a378f14610358578063cd3daf9d146103cf578063d505accf14610420578063dd62ed3e14610433578063f5eb42dc1461044657600080fd5b8063a9059cbb146103fa578063b3d7f6b91461040d578063b88a802f146103cf578063c6e6f5921461028f57600080fd5b80637ecebe00116100f45780637ecebe00146103bc57806380faa57d146103cf57806395d89b41146103d6578063a01c8774146103de578063a457c2d7146103e757600080fd5b80633c6b16ab146103585780634cdad5061461036957806370a082311461037c5780637d098e641461038f57600080fd5b806318160ddd116101a8578063313ce56711610177578063313ce5671461030b5780633644e5151461031a57806338d52e0f14610322578063395093511461033d5780633a98ef391461035057600080fd5b806318160ddd146102c85780631dc7f521146102d05780632016a0d2146102e357806323b872dd146102f857600080fd5b8063095ea7b3116101e4578063095ea7b31461026c5780630a28a4771461028f5780630ba097d6146102a25780630cae37f1146102b557600080fd5b80628cc2621461021557806301e1d1141461023c57806306fdde031461024457806307a2d13a14610259575b600080fd5b61022961022336600461181c565b50600090565b6040519081526020015b60405180910390f35b61022961046f565b61024c610484565b604051610233919061187f565b610229610267366004611892565b610516565b61027f61027a3660046118ab565b610527565b6040519015158152602001610233565b61022961029d366004611892565b61053d565b6102296102b0366004611978565b610548565b6102296102c3366004611978565b6107ba565b610229610990565b6102296102de366004611892565b6109af565b6102f66102f13660046119fe565b610a3f565b005b61027f610306366004611a87565b610c3d565b60405160128152602001610233565b610229610c5f565b605e546040516001600160a01b039091168152602001610233565b61027f61034b3660046118ab565b610c69565b610229610c8a565b6102f6610366366004611892565b50565b610229610377366004611892565b610c9b565b61022961038a36600461181c565b610ca6565b6040805160008082526020820181905291810182905260608101829052608081019190915260a001610233565b6102296103ca36600461181c565b610cc8565b6000610229565b61024c610ce6565b61022960655481565b61027f6103f53660046118ab565b610cf5565b61027f6104083660046118ab565b610d32565b61022961041b366004611892565b610d3f565b6102f661042e366004611ad7565b610d4a565b610229610441366004611b48565b610e6c565b61022961045436600461181c565b6001600160a01b031660009081526060602052604090205490565b605f5460009061047f9082610e97565b905090565b60606063805461049390611b76565b80601f01602080910402602001604051908101604052809291908181526020018280546104bf90611b76565b801561050c5780601f106104e15761010080835404028352916020019161050c565b820191906000526020600020905b8154815290600101906020018083116104ef57829003601f168201915b5050505050905090565b600061052182610eda565b92915050565b6000610534338484610f7b565b50600192915050565b60006105218261102a565b605d5460009082906001600160a01b031680156105be576040516241fec360e31b81526001600160a01b03838116600483015282169063020ff61890602401600060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b50505050610600565b6000601c556000601a556001600160a01b03821615610600576001600160a01b038216600090815260208080526040808320839055601c54601f909252909120555b6000858060200190518101906106169190611c2b565b509050600061063a866001600160a01b031660009081526060602052604090205490565b9050600061064b836000015161053d565b90508082101561068c57604051637ac073bf60e01b81526001600160a01b038816600482015260248101839052604481018290526064015b60405180910390fd5b600061069782610c9b565b605d546040516314370d6760e31b81529192506001600160a01b03169063a1b86b38906106ca908b908d90600401611cd0565b60408051808303816000875af1925050508015610704575060408051601f3d908101601f1916820190925261070191810190611cf4565b60015b61075657610710611d18565b806308c379a00361074a5750610724611d34565b8061072f575061074c565b80604051631bc63b8160e01b8152600401610683919061187f565b505b3d6000803e3d6000fd5b6107618260006110ac565b605d546001600160a01b0316600090815260606020526040902054945061078a8386600061111c565b605d546001600160a01b031660009081526060602052604081205597506107b2945050505050565b505092915050565b605d5460009082906001600160a01b03168015610830576040516241fec360e31b81526001600160a01b03838116600483015282169063020ff61890602401600060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b50505050610872565b6000601c556000601a556001600160a01b03821615610872576001600160a01b038216600090815260208080526040808320839055601c54601f909252909120555b600080868060200190518101906108899190611dbe565b60655482519294509092506000916108a09161117a565b605d549091506001600160a01b0316639ea04fe46108c6605e546001600160a01b031690565b89866040518463ffffffff1660e01b81526004016108e693929190611e57565b6020604051808303816000875af1925050508015610921575060408051601f3d908101601f1916820190925261091e91810190611ed0565b60015b61092d57610710611d18565b6109388160016110ac565b6000610942610c8a565b156109555761095083610d3f565b610957565b825b90506109658382600161111c565b6001600160a01b039093166000908152606060205260409020805484019055509094506107b2915050565b600061099a610c8a565b156102235761047f6109aa610c8a565b610eda565b60006109b9610c8a565b605d5460405163a4fc284b60e01b81526001600160a01b039091169063a4fc284b906109ea90600190600401611eff565b602060405180830381865afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611ed0565b610a359084611f3d565b6105219190611f54565b602854610100900460ff1615808015610a5f5750602854600160ff909116105b80610a795750303b158015610a79575060285460ff166001145b610adc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610683565b6028805460ff191660011790558015610aff576028805461ff0019166101001790555b6063610b0b8482611fc1565b506064610b188382611fc1565b50605d80546001600160a01b038087166001600160a01b031992831617909255605e8054928816929091169190911790556040805180820190915260018152603160f81b6020820152610b6c90849061118d565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190612081565b60ff16601214610bdf576001610be6565b64e8d4a510005b64ffffffffff166065558015610c36576028805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000610c4a8433846111c2565b610c55848484611210565b5060019392505050565b600061047f61132e565b6000610534338484610c7b3388610e6c565b610c85919061209e565b610f7b565b605f5460009061047f906001610e97565b6000610521826113a9565b6001600160a01b03811660009081526060602052604081205461052190610516565b6001600160a01b038116600090815260616020526040812054610521565b60606064805461049390611b76565b600080610d023385610e6c565b905082811015610d25576040516361ceb1d360e01b815260040160405180910390fd5b610c553385858403610f7b565b6000610534338484611210565b60006105218261142c565b83421115610d745760405163184f1e0160e11b815260048101859052426024820152604401610683565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610da38c611441565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610dfe82611469565b90506000610e0e828787876114b7565b9050896001600160a01b0316816001600160a01b031614610e5557604051635091bef560e01b81526001600160a01b0380831660048301528b166024820152604401610683565b610e608a8a8a610f7b565b50505050505050505050565b6001600160a01b03918216600090815260626020908152604080832093909416825291909152205490565b60006fffffffffffffffffffffffffffffffff81836001811115610ebd57610ebd611ee9565b14610eca57838116610ed2565b608084901c81165b949350505050565b6000610521610ee7610c8a565b15610ef957610ef4610c8a565b610efc565b60015b605d54604051634be9756960e11b81523060048201526001600160a01b03909116906397d2ead290602401602060405180830381865afa158015610f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f689190611ed0565b610f729190611f54565b839060016114df565b6001600160a01b0383161580610f9857506001600160a01b038216155b15610fc957604051637db368a160e01b81526001600160a01b03808516600483015283166024820152604401610683565b6001600160a01b0383811660008181526062602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610521611037610c8a565b605d54604051634be9756960e11b81526001600160a01b0390911660048201819052906397d2ead290602401602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190611ed0565b8491906114fd565b605d5460405163b0ff97b560e01b81523060048201526024810184905282151560448201526001600160a01b039091169063b0ff97b590606401600060405180830381600087803b15801561110057600080fd5b505af1158015611114573d6000803e3d6000fd5b505050505050565b605f5460009061112c9082610e97565b905060006111466001605f54610e9790919063ffffffff16565b9050821561115957908401908301611162565b90849003908390035b61117082608083901b61209e565b605f555050505050565b60006111868284611f54565b9392505050565b602854610100900460ff166111b45760405162461bcd60e51b8152600401610683906120b1565b6111be8282611523565b5050565b60006111ce8484610e6c565b9050600019811461120a57818110156111fd576040516306052b7f60e01b815260048101839052602401610683565b61120a8484848403610f7b565b50505050565b6001600160a01b038316158061122d57506001600160a01b038216155b1561125e57604051637db368a160e01b81526001600160a01b03808516600483015283166024820152604401610683565b60006112698261053d565b6001600160a01b038516600090815260606020526040902054909150818110156112bf576040516315c29bad60e31b81526001600160a01b03861660048201526024810182905260448101839052606401610683565b6001600160a01b0380861660008181526060602052604080822086860390559287168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061131f9087815260200190565b60405180910390a35050505050565b600061047f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61135d60295490565b602a546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b605d54604051634be9756960e11b8152306004820152600091610521916001600160a01b03909116906397d2ead290602401602060405180830381865afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c9190611ed0565b611424610990565b8491906114df565b6000610521611439610c8a565b61142461046f565b6001600160a01b03811660009081526061602052604090208054600181018255905b50919050565b600061052161147661132e565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114c887878787611564565b915091506114d581611651565b5095945050505050565b60008260001904841183021582026114f657600080fd5b5091020490565b600082600019048411830215820261151457600080fd5b50910281810615159190040190565b602854610100900460ff1661154a5760405162461bcd60e51b8152600401610683906120b1565b815160209283012081519190920120602991909155602a55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561159b5750600090506003611648565b8460ff16601b141580156115b357508460ff16601c14155b156115c45750600090506004611648565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611618573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661164157600060019250925050611648565b9150600090505b94509492505050565b600081600481111561166557611665611ee9565b0361166d5750565b600181600481111561168157611681611ee9565b036116ce5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610683565b60028160048111156116e2576116e2611ee9565b0361172f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610683565b600381600481111561174357611743611ee9565b0361179b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610683565b60048160048111156117af576117af611ee9565b036103665760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610683565b6001600160a01b038116811461036657600080fd5b60006020828403121561182e57600080fd5b813561118681611807565b6000815180845260005b8181101561185f57602081850181015186830182015201611843565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111866020830184611839565b6000602082840312156118a457600080fd5b5035919050565b600080604083850312156118be57600080fd5b82356118c981611807565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611913576119136118d7565b6040525050565b600067ffffffffffffffff831115611934576119346118d7565b60405161194b601f8501601f1916602001826118ed565b80915083815284848401111561196057600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561198b57600080fd5b823567ffffffffffffffff8111156119a257600080fd5b8301601f810185136119b357600080fd5b6119c28582356020840161191a565b92505060208301356119d381611807565b809150509250929050565b600082601f8301126119ef57600080fd5b6111868383356020850161191a565b60008060008060808587031215611a1457600080fd5b8435611a1f81611807565b93506020850135611a2f81611807565b9250604085013567ffffffffffffffff80821115611a4c57600080fd5b611a58888389016119de565b93506060870135915080821115611a6e57600080fd5b50611a7b878288016119de565b91505092959194509250565b600080600060608486031215611a9c57600080fd5b8335611aa781611807565b92506020840135611ab781611807565b929592945050506040919091013590565b60ff8116811461036657600080fd5b600080600080600080600060e0888a031215611af257600080fd5b8735611afd81611807565b96506020880135611b0d81611807565b955060408801359450606088013593506080880135611b2b81611ac8565b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611b5b57600080fd5b8235611b6681611807565b915060208301356119d381611807565b600181811c90821680611b8a57607f821691505b60208210810361146357634e487b7160e01b600052602260045260246000fd5b600082601f830112611bbb57600080fd5b8151602067ffffffffffffffff821115611bd757611bd76118d7565b8160051b604051611bea838301826118ed565b92835284810182019282810187851115611c0357600080fd5b83870192505b84831015611c205782518152918301918301611c09565b509695505050505050565b60008060408385031215611c3e57600080fd5b825167ffffffffffffffff80821115611c5657600080fd5b9084019060608287031215611c6a57600080fd5b604051606081018181108382111715611c8557611c856118d7565b80604052508251815260208301516020820152604083015182811115611caa57600080fd5b611cb688828601611baa565b60408301525080945050505060208301516119d381611807565b6001600160a01b0383168152604060208201819052600090610ed290830184611839565b60008060408385031215611d0757600080fd5b505080516020909101519092909150565b600060033d1115611d315760046000803e5060005160e01c5b90565b600060443d1015611d425790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611d7257505050505090565b8285019150815181811115611d8a5750505050505090565b843d8701016020828501011115611da45750505050505090565b611db3602082860101876118ed565b509095945050505050565b60008060408385031215611dd157600080fd5b825167ffffffffffffffff80821115611de957600080fd5b9084019060408287031215611dfd57600080fd5b604051604081018181108382111715611e1857611e186118d7565b60405282518152602083015182811115611e3157600080fd5b611e3d88828601611baa565b60208301525080945050505060208301516119d381611807565b600060018060a01b0380861683526020818616818501526060604085015260a08401915084516060850152808501516040608086015282815180855260c0870191508383019450600092505b80831015611ec35784518252938301936001929092019190830190611ea3565b5098975050505050505050565b600060208284031215611ee257600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b6020810160028310611f2157634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761052157610521611f27565b600082611f7157634e487b7160e01b600052601260045260246000fd5b500490565b601f821115611fbc57600081815260208120601f850160051c81016020861015611f9d5750805b601f850160051c820191505b8181101561111457828155600101611fa9565b505050565b815167ffffffffffffffff811115611fdb57611fdb6118d7565b611fef81611fe98454611b76565b84611f76565b602080601f831160018114612024576000841561200c5750858301515b600019600386901b1c1916600185901b178555611114565b600085815260208120601f198616915b8281101561205357888601518255948401946001909101908401612034565b50858210156120715787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561209357600080fd5b815161118681611ac8565b8082018082111561052157610521611f27565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212209f99171a2ec45ca52f5db5f22967d648a91150e6b0407919cf29bd032b8158c164736f6c63430008150033608060405234801561001057600080fd5b506112ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063635d12cc1161008c578063a4fc284b11610066578063a4fc284b1461025a578063a5a410311461027b578063adfca15e14610288578063cdffacc6146102a857600080fd5b8063635d12cc146102125780637a0ed62714610225578063a49709b61461023a57600080fd5b806338ab35d4116100c857806338ab35d414610191578063423f0b91146101a65780634d2c1487146101ea57806352ef6b2c1461020a57600080fd5b806301ffc9a7146100ef5780631a82363e146101505780632e19905c14610171575b600080fd5b61013b6100fd366004610de5565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b600754600160a01b900461ffff1660405161ffff9091168152602001610147565b61018461017f366004610e38565b6102e8565b6040516101479190610ed5565b610199610321565b6040516101479190610ee8565b6101d26101b4366004610f35565b6001600160a01b039081166000908152600b60205260409020541690565b6040516001600160a01b039091168152602001610147565b6101fd6101f8366004610f50565b610386565b6040516101479190610ff0565b610199610599565b610184610220366004610e38565b61060c565b61022d61062b565b604051610147919061103d565b61024d610248366004610f50565b6107f6565b60405161014791906110d9565b61026d6102683660046110ec565b610a0a565b604051908152602001610147565b60155462ffffff1661026d565b61029b610296366004610f35565b610b23565b604051610147919061110d565b6101d26102b6366004610de5565b6001600160e01b031916600090815260008051602061127383398151915260205260409020546001600160a01b031690565b60606102f5858585610386565b82604051602001610307929190611120565b60405160208183030381529060405290505b949350505050565b6060600060220180548060200260200160405190810160405280929190818152602001828054801561037c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161035e575b5050505050905090565b6103aa60405180606001604052806000815260200160008152602001606081525090565b604051630a28a47760e01b81526004810185905283906000906001600160a01b03831690631dc7f521908290630a28a47790602401602060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610420919061114a565b6040518263ffffffff1660e01b815260040161043e91815260200190565b602060405180830381865afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f919061114a565b905030600061049861049083610bef565b849088610c42565b90506000610509836001600160a01b0316636260f55b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610501919061114a565b839089610c42565b6040805160028082526060820183529293506000929091602083019080368337019050509050828160008151811061054357610543611179565b602002602001018181525050818160018151811061056357610563611179565b60200260200101818152505060405180606001604052808b81526020018681526020018281525096505050505050509392505050565b606060006000805160206112738339815191526002810180546040805160208084028201810190925282815293945083018282801561060157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e3575b505050505091505090565b60606106198585856107f6565b8260405160200161030792919061118f565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020611273833981519152908067ffffffffffffffff81111561067957610679611163565b6040519080825280602002602001820160405280156106bf57816020015b6040805180820190915260008152606060208201528152602001906001900390816106975790505b50925060005b818110156107f05760008360020182815481106106e4576106e4611179565b9060005260206000200160009054906101000a90046001600160a01b031690508085838151811061071757610717611179565b6020908102919091018101516001600160a01b0392831690529082166000908152600186018252604090819020805482518185028101850190935280835291929091908301828280156107b657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107785790505b50505050508583815181106107cd576107cd611179565b6020026020010151602001819052505080806107e8906111b8565b9150506106c5565b50505090565b604080518082018252600080825260606020808401829052845160028082529281018652939430949291830190803683370190505090506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561086d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089191906111d1565b60ff166012146108af576108aa8764e8d4a510006111f4565b6108b1565b865b905060006040518060400160405280856001600160a01b0316636260f55b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610922919061114a565b815260200161093086610bef565b90529050600260005b818110156109eb57600061099e670de0b6b3a764000085846002811061096157610961611179565b60200201518415610995578861097860018761120b565b8151811061098857610988611179565b6020026020010151610997565b875b9190610c7e565b90506109b18161ffff8b16612710610c7e565b6109bb908261120b565b8683815181106109cd576109cd611179565b602090810291909101015250806109e3816111b8565b915050610939565b5050604080518082019091529788525050602086015250929392505050565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a77919061114a565b90506000826001811115610a8d57610a8d61121e565b03610b1e5760025460408051637a12625d60e11b81529051670de0b6b3a7640000926001600160a01b03169163f424c4ba9160048083019260209291908290030181865afa158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b07919061114a565b610b1190836111f4565b610b1b9190611234565b90505b919050565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060936000805160206112738339815191529390929190830182828015610be257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610ba45790505b5050505050915050919050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b179052600090610c258382610c9c565b905080806020019051810190610c3b919061114a565b9392505050565b600080610c588585670de0b6b3a7640000610c7e565b9050610c6b8161ffff8516612710610c7e565b610c75908261120b565b95945050505050565b6000826000190484118302158202610c9557600080fd5b5091020490565b6060610cc1838360405180606001604052806025815260200161129360259139610cca565b90505b92915050565b6060600080856001600160a01b031685604051610ce79190611256565b600060405180830381855afa9150503d8060008114610d22576040519150601f19603f3d011682016040523d82523d6000602084013e610d27565b606091505b5091509150610d3886838387610d42565b9695505050505050565b60608315610db6578251600003610daf576001600160a01b0385163b610daf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610319565b6103198383815115610dcb5781518083602001fd5b8060405162461bcd60e51b8152600401610da69190610ed5565b600060208284031215610df757600080fd5b81356001600160e01b031981168114610c3b57600080fd5b80356001600160a01b0381168114610b1e57600080fd5b803561ffff81168114610b1e57600080fd5b60008060008060808587031215610e4e57600080fd5b84359350610e5e60208601610e0f565b9250610e6c60408601610e26565b9150610e7a60608601610e0f565b905092959194509250565b60005b83811015610ea0578181015183820152602001610e88565b50506000910152565b60008151808452610ec1816020860160208601610e85565b601f01601f19169290920160200192915050565b602081526000610cc16020830184610ea9565b6020808252825182820181905260009190848201906040850190845b81811015610f295783516001600160a01b031683529284019291840191600101610f04565b50909695505050505050565b600060208284031215610f4757600080fd5b610cc182610e0f565b600080600060608486031215610f6557600080fd5b83359250610f7560208501610e0f565b9150610f8360408501610e26565b90509250925092565b600081518084526020808501945080840160005b83811015610fbc57815187529582019590820190600101610fa0565b509495945050505050565b805182526020810151602083015260006040820151606060408501526103196060850182610f8c565b602081526000610cc16020830184610fc7565b600081518084526020808501945080840160005b83811015610fbc5781516001600160e01b03191687529582019590820190600101611017565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156110ac57888303603f19018552815180516001600160a01b0316845287015187840187905261109987850182611003565b9588019593505090860190600101611064565b509098975050505050505050565b8051825260006020820151604060208501526103196040850182610f8c565b602081526000610cc160208301846110ba565b6000602082840312156110fe57600080fd5b813560028110610c3b57600080fd5b602081526000610cc16020830184611003565b6040815260006111336040830185610fc7565b905060018060a01b03831660208301529392505050565b60006020828403121561115c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60408152600061113360408301856110ba565b634e487b7160e01b600052601160045260246000fd5b6000600182016111ca576111ca6111a2565b5060010190565b6000602082840312156111e357600080fd5b815160ff81168114610c3b57600080fd5b8082028115828204841417610cc457610cc46111a2565b81810381811115610cc457610cc46111a2565b634e487b7160e01b600052602160045260246000fd5b60008261125157634e487b7160e01b600052601260045260246000fd5b500490565b60008251611268818460208701610e85565b919091019291505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220953888d637c77a7fbce68e166c3034e14391e7992314a775e82dec1f9f42b35d64736f6c63430008150033608060405234801561001057600080fd5b50610248806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806393019b2a1461003b578063d349975714610050575b600080fd5b61004e6100493660046101e2565b610074565b005b610058610088565b6040516001600160a01b03909116815260200160405180910390f35b61007c6100c0565b6100858161014d565b50565b60006100bb7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461014b5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000602082840312156101f457600080fd5b81356001600160a01b038116811461020b57600080fd5b939250505056fea2646970667358221220c5dc02278a6ab862391c15f11499d81bd1a88c32987779a081858c15ef80b1d164736f6c634300081500336080604052348015600f57600080fd5b50607780601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806381fd5e2814602d575b600080fd5b600160405190815260200160405180910390f3fea264697066735822122090e97dd086ce870147b018c56cc464092032f96967e286a3dedc2939f348914a64736f6c63430008150033608060405234801561001057600080fd5b5061142a806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806378e3f7a4146200004b57806380dafe5a146200007f578063e4bb26f21462000098575b600080fd5b620000626200005c366004620004bb565b620000c0565b6040516001600160a01b0390911681526020015b60405180910390f35b62000089620001e7565b6040516200007691906200053a565b620000af620000a936600462000589565b6200024e565b604051901515815260200162000076565b6000620000cd846200024e565b15620000fc5760405163a5f9500960e01b81526001600160a01b03851660048201526024015b60405180910390fd5b6001600160a01b0384166200013057604051631448bf2160e01b81526001600160a01b0385166004820152602401620000f3565b600254604051600091620001579187916001600160a01b03169087908790602401620005f8565b60408051601f198184030181529181526020820180516001600160e01b031663100b506960e11b179052600e5490519192506000916001600160a01b03909116908390620001a590620003e9565b620001b292919062000645565b604051809103906000f080158015620001cf573d6000803e3d6000fd5b509050620001de818762000341565b95945050505050565b606060006001018054806020026020016040519081016040528092919081815260200182805480156200024457602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000225575b5050505050905090565b600154600090808203620002655750600092915050565b60005b818110156200033757836001600160a01b03166000600101828154811062000294576200029462000673565b60009182526020918290200154604080516338d52e0f60e01b815290516001600160a01b03909216926338d52e0f926004808401938290030181865afa158015620002e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000309919062000689565b6001600160a01b03160362000322575060019392505050565b806200032e81620006a9565b91505062000268565b5060009392505050565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038086166001600160a01b031992831681179093556000838152601460209081526040808320805460ff19169097179096559186168152600b90915283812080549092168317909155915190917f2e2b3f61b70d2d131b2a807371103cc98d51adcaa5e9a8f9c32658ad8426e74e91a25050565b610d2380620006d283390190565b6001600160a01b03811681146200040d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200043857600080fd5b813567ffffffffffffffff8082111562000456576200045662000410565b604051601f8301601f19908116603f0116810190828211818310171562000481576200048162000410565b816040528381528660208588010111156200049b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215620004d157600080fd5b8335620004de81620003f7565b9250602084013567ffffffffffffffff80821115620004fc57600080fd5b6200050a8783880162000426565b935060408601359150808211156200052157600080fd5b50620005308682870162000426565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156200057d5783516001600160a01b03168352928401929184019160010162000556565b50909695505050505050565b6000602082840312156200059c57600080fd5b8135620005a981620003f7565b9392505050565b6000815180845260005b81811015620005d857602081850181015186830182015201620005ba565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038581168252841660208201526080604082018190526000906200062690830185620005b0565b82810360608401526200063a8185620005b0565b979650505050505050565b6001600160a01b03831681526040602082018190526000906200066b90830184620005b0565b949350505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200069c57600080fd5b8151620005a981620003f7565b600060018201620006ca57634e487b7160e01b600052601160045260246000fd5b506001019056fe60806040523480156200001157600080fd5b5060405162000d2338038062000d2383398101604081905262000034916200045f565b818162000044828260006200004e565b505050506200059e565b620000598362000118565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806200009b5750805b15620001135762000111836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010a91906200052d565b83620002a3565b505b505050565b6001600160a01b0381163b620001835760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b620001fb816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ec91906200052d565b6001600160a01b03163b151590565b620002625760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016200017a565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b6060620002cb838360405180606001604052806027815260200162000cfc60279139620002d2565b9392505050565b6060600080856001600160a01b031685604051620002f191906200054b565b600060405180830381855af49150503d80600081146200032e576040519150601f19603f3d011682016040523d82523d6000602084013e62000333565b606091505b509092509050620003478683838762000351565b9695505050505050565b60608315620003c5578251600003620003bd576001600160a01b0385163b620003bd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200017a565b5081620003d1565b620003d18383620003d9565b949350505050565b815115620003ea5781518083602001fd5b8060405162461bcd60e51b81526004016200017a919062000569565b80516001600160a01b03811681146200041e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004565781810151838201526020016200043c565b50506000910152565b600080604083850312156200047357600080fd5b6200047e8362000406565b60208401519092506001600160401b03808211156200049c57600080fd5b818501915085601f830112620004b157600080fd5b815181811115620004c657620004c662000423565b604051601f8201601f19908116603f01168101908382118183101715620004f157620004f162000423565b816040528281528860208487010111156200050b57600080fd5b6200051e83602083016020880162000439565b80955050505050509250929050565b6000602082840312156200054057600080fd5b620002cb8262000406565b600082516200055f81846020870162000439565b9190910192915050565b60208152600082518060208401526200058a81604085016020870162000439565b601f01601f19169190910160400192915050565b61074e80620005ae6000396000f3fe6080604052600436106100385760003560e01c8063099af0e91461004f57806359659e901461006f5780635c60da1b146100a057610047565b36610047576100456100b5565b005b6100456100b5565b34801561005b57600080fd5b5061004561006a36600461059d565b6100c7565b34801561007b57600080fd5b506100846100d5565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ac57600080fd5b50610084610112565b6100c56100c0610118565b6101ac565b565b6100d182826101d5565b5050565b600061010d600061010d7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b905090565b600061010d5b600061014b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010d9190610661565b3660008037600080366000845af43d6000803e8080156101cb573d6000f35b3d6000fd5b505050565b6100d1828260006101e58361029c565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806102265750805b156101d057610296836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610661565b83610420565b50505050565b6001600160a01b0381163b6103065760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61037a816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b9190610661565b6001600160a01b03163b151590565b6103df5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016102fd565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b606061044583836040518060600160405280602781526020016106f26027913961044c565b9392505050565b6060600080856001600160a01b03168560405161046991906106a2565b600060405180830381855af49150503d80600081146104a4576040519150601f19603f3d011682016040523d82523d6000602084013e6104a9565b606091505b50915091506104ba868383876104c4565b9695505050505050565b6060831561053357825160000361052c576001600160a01b0385163b61052c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102fd565b508161053d565b61053d8383610545565b949350505050565b8151156105555781518083602001fd5b8060405162461bcd60e51b81526004016102fd91906106be565b6001600160a01b038116811461058457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105b057600080fd5b82356105bb8161056f565b9150602083013567ffffffffffffffff808211156105d857600080fd5b818501915085601f8301126105ec57600080fd5b8135818111156105fe576105fe610587565b604051601f8201601f19908116603f0116810190838211818310171561062657610626610587565b8160405282815288602084870101111561063f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561067357600080fd5b81516104458161056f565b60005b83811015610699578181015183820152602001610681565b50506000910152565b600082516106b481846020870161067e565b9190910192915050565b60208152600082518060208401526106dd81604085016020870161067e565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220412439bf34bc0f18d93424e22ec04d67a86387b81d5092236e9a971b307c720164736f6c63430008150033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a7dd7ba8f99d48c8acf3a6b3b6cfb0828af2f44870a3b86442e0d25efa78aabf64736f6c634300081500336080604052348015600f57600080fd5b50607780601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da9b77214602d575b600080fd5b600260405190815260200160405180910390f3fea2646970667358221220bf44866b60b68df48a5b03e5107b444d83ca15a632b5d6def7316ccb4f2b41f564736f6c63430008150033608060405234801561001057600080fd5b50611c8f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80639ea04fe4116100715780639ea04fe41461012e578063a1b86b3814610141578063ab399cf814610169578063b88a802f14610127578063cc1a378f146100e7578063cd3daf9d1461012757600080fd5b80628cc262146100ad578063094463e7146100d45780633c6b16ab146100e75780637d098e64146100fa57806380faa57d14610127575b600080fd5b6100c16100bb3660046113d7565b50600090565b6040519081526020015b60405180910390f35b6100c16100e23660046114f2565b61017c565b6100f86100f536600461155e565b50565b005b6040805160008082526020820181905291810182905260608101829052608081019190915260a0016100cb565b60006100c1565b6100c161013c366004611577565b6101a4565b61015461014f36600461162b565b610490565b604080519283526020830191909152016100cb565b6100f86101773660046116d7565b6105c6565b600954600090610199906001600160a01b03168686868686610631565b90505b949350505050565b3360009081526014602052604081205460ff166101db5760405163a43f931360e01b81523360048201526024015b60405180910390fd5b815160208301516101f76001600160a01b038716863085610774565b60035481516000916102309189916001600160a01b031690309087908790879061022357610223611718565b60200260200101516107e5565b905061023b81610981565b1561046257600354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561028657600080fd5b505af115801561029a573d6000803e3d6000fd5b5050600f546010546040516321f8a72160e01b81526004810191909152600093506001600160a01b0390911691506321f8a72190602401602060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610312919061172e565b6009546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610384919061174b565b9050816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103c157600080fd5b505af11580156103d5573d6000803e3d6000fd5b50506009546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610449919061174b565b9050610455828261177a565b9650505050505050610489565b600354600954610483916001600160a01b0390811691163084866001610631565b93505050505b9392505050565b33600090815260146020526040812054819060ff166104c45760405163a43f931360e01b81523360048201526024016101d2565b600080848060200190518101906104db919061179d565b604082015160208301518351939550919350916104fd9033908a903090610b10565b600954600354600091610521916001600160a01b0391821691163085876002610631565b90506105b6600060030160009054906101000a90046001600160a01b0316336001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a1919061172e565b86848760018151811061022357610223611718565b9199919850909650505050505050565b6105db6001600160a01b038316843084610774565b60405163c3ae3a0960e01b815260048101829052309063c3ae3a0990602401600060405180830381600087803b15801561061457600080fd5b505af1158015610628573d6000803e3d6000fd5b50505050505050565b600080600061064184868a610c1a565b9150915060008060000160009054906101000a90046001600160a01b03166001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c091906118a8565b5050905080156106de576106d78a84308a866107e5565b93506106ed565b6106ea8a848985610cd8565b93505b6000856002811115610701576107016118dd565b03610767576003546001600160a01b03908116908a160361073857600354610733906001600160a01b03168986610e08565b610767565b6003548651610764916001600160a01b0316908b908b9088908b90600190811061022357610223611718565b93505b5050509695505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107df9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e3d565b50505050565b600654600090610802906001600160a01b03888116911685610f12565b60408051610100810182526001600160a01b038089168252878116602083015260135462ffffff1692820192909252908516606082015242608082015260a0810184905260009060c081016108578589611027565b815260006020918201526006546040805163414bf38960e01b815284516001600160a01b03908116600483015293850151841660248201529084015162ffffff1660448201526060840151831660648201526080840151608482015260a084015160a482015260c084015160c482015260e0840151831660e4820152929350169063414bf38990610104016020604051808303816000875af192505050801561091d575060408051601f3d908101601f1916820190925261091a9181019061174b565b60015b61096f576109296118f3565b806308c379a003610963575061093d61190f565b806109485750610965565b8060405163633abab960e01b81526004016101d291906119e9565b505b3d6000803e3d6000fd5b91506109789050565b95945050505050565b601180546040516335ee5f8760e01b8152602060048201526024810192909252701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b604483015260009182916001600160a01b0316906335ee5f8790606401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a14919061174b565b90506000610a2284836119fc565b600f546012546040516321f8a72160e01b81529293506000926001600160a01b03909216916321f8a72191610a5d9160040190815260200190565b602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e919061172e565b90506000816001600160a01b031663fd6ce89e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b04919061174b565b90921095945050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610b749190611a0f565b6000604051808303816000865af19150503d8060008114610bb1576040519150601f19603f3d011682016040523d82523d6000602084013e610bb6565b606091505b5091509150818015610be0575080511580610be0575080806020019051810190610be09190611a2b565b610c125760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064016101d2565b505050505050565b60008080856002811115610c3057610c306118dd565b03610c675760035484516001600160a01b0390911692508490600090610c5857610c58611718565b60200260200101519050610cd0565b6001856002811115610c7b57610c7b6118dd565b03610c965782915083600181518110610c5857610c58611718565b6002856002811115610caa57610caa6118dd565b03610cd05782915083600081518110610cc557610cc5611718565b602002602001015190505b935093915050565b6040805160c081018083526000805463038fff2d60e41b909252925183929182916001600160a01b03909116906338fff2d09060c4808501916020918187030181865afa158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d51919061174b565b8152602001600081526001600160a01b038089166020830152871660408201526060810186905260800160006040519080825280601f01601f191660200182016040528015610da7576020820181803683370190505b5090526040805160808082018352308083526000602084018190529383015260608201929092526008549183015192935091610df1916001600160a01b038a811692911690610f12565b610dfd828286426110ca565b979650505050505050565b6040516001600160a01b038316602482015260448101829052610e3890849063a9059cbb60e01b906064016107a8565b505050565b6000610e92826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111f19092919063ffffffff16565b9050805160001480610eb3575080806020019051810190610eb39190611a2b565b610e385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d2565b801580610f8c5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a919061174b565b155b610ff75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101d2565b6040516001600160a01b038316602482015260448101829052610e3890849063095ea7b360e01b906064016107a8565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108c9190611a46565b60ff169050806012146110be576110a481601261177a565b6110af90600a611b4d565b6110b99085611b59565b6110c0565b835b9150505b92915050565b6008546040516352bbbe2960e01b81526000916001600160a01b0316906352bbbe2990611101908890889088908890600401611b7b565b6020604051808303816000875af192505050801561113c575060408051601f3d908101601f191682019092526111399181019061174b565b60015b6111c9576111486118f3565b806308c379a003610963575061115c61190f565b806111675750610965565b611190816040518060400160405280600781526020016642414c2335303760c81b815250611200565b156111ae57604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016101d291906119e9565b806000036111ea57604051635eeb40ff60e11b815260040160405180910390fd5b905061019c565b606061019c8484600085611259565b6000816040516020016112139190611a0f565b604051602081830303815290604052805190602001208360405160200161123a9190611a0f565b6040516020818303038152906040528051906020012014905092915050565b6060824710156112ba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d2565b600080866001600160a01b031685876040516112d69190611a0f565b60006040518083038185875af1925050503d8060008114611313576040519150601f19603f3d011682016040523d82523d6000602084013e611318565b606091505b5091509150610dfd878383876060831561139357825160000361138c576001600160a01b0385163b61138c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d2565b508161019c565b61019c83838151156113a85781518083602001fd5b8060405162461bcd60e51b81526004016101d291906119e9565b6001600160a01b03811681146100f557600080fd5b6000602082840312156113e957600080fd5b8135610489816113c2565b634e487b7160e01b600052604160045260246000fd5b6060810181811067ffffffffffffffff8211171561142a5761142a6113f4565b60405250565b601f8201601f1916810167ffffffffffffffff81118282101715611456576114566113f4565b6040525050565b600067ffffffffffffffff821115611477576114776113f4565b5060051b60200190565b600082601f83011261149257600080fd5b8135602061149f8261145d565b6040516114ac8282611430565b83815260059390931b85018201928281019150868411156114cc57600080fd5b8286015b848110156114e757803583529183019183016114d0565b509695505050505050565b6000806000806080858703121561150857600080fd5b8435611513816113c2565b93506020850135611523816113c2565b925060408501359150606085013567ffffffffffffffff81111561154657600080fd5b61155287828801611481565b91505092959194509250565b60006020828403121561157057600080fd5b5035919050565b60008060006060848603121561158c57600080fd5b8335611597816113c2565b925060208401356115a7816113c2565b9150604084013567ffffffffffffffff808211156115c457600080fd5b90850190604082880312156115d857600080fd5b6040516040810181811083821117156115f3576115f36113f4565b6040528235815260208301358281111561160c57600080fd5b61161889828601611481565b6020830152508093505050509250925092565b6000806040838503121561163e57600080fd5b8235611649816113c2565b915060208381013567ffffffffffffffff8082111561166757600080fd5b818601915086601f83011261167b57600080fd5b81358181111561168d5761168d6113f4565b60405191506116a5601f8201601f1916850183611430565b80825287848285010111156116b957600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806000606084860312156116ec57600080fd5b83356116f7816113c2565b92506020840135611707816113c2565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561174057600080fd5b8151610489816113c2565b60006020828403121561175d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156110c4576110c4611764565b8051611798816113c2565b919050565b600080604083850312156117b057600080fd5b825167ffffffffffffffff808211156117c857600080fd5b90840190606082870312156117dc57600080fd5b6040516117e88161140a565b825181526020808401518183015260408401518381111561180857600080fd5b80850194505087601f85011261181d57600080fd5b8351925061182a8361145d565b6040516118378282611430565b84815260059490941b850182019382810191508985111561185757600080fd5b948201945b848610156118755785518252948201949082019061185c565b806040850152505081955061188b81880161178d565b9450505050509250929050565b8051801515811461179857600080fd5b6000806000606084860312156118bd57600080fd5b6118c684611898565b925060208401519150604084015190509250925092565b634e487b7160e01b600052602160045260246000fd5b600060033d111561190c5760046000803e5060005160e01c5b90565b600060443d101561191d5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561194d57505050505090565b82850191508151818111156119655750505050505090565b843d870101602082850101111561197f5750505050505090565b61198e60208286010187611430565b509095945050505050565b60005b838110156119b457818101518382015260200161199c565b50506000910152565b600081518084526119d5816020860160208601611999565b601f01601f19169290920160200192915050565b60208152600061048960208301846119bd565b808201808211156110c4576110c4611764565b60008251611a21818460208701611999565b9190910192915050565b600060208284031215611a3d57600080fd5b61048982611898565b600060208284031215611a5857600080fd5b815160ff8116811461048957600080fd5b600181815b80851115611aa4578160001904821115611a8a57611a8a611764565b80851615611a9757918102915b93841c9390800290611a6e565b509250929050565b600082611abb575060016110c4565b81611ac8575060006110c4565b8160018114611ade5760028114611ae857611b04565b60019150506110c4565b60ff841115611af957611af9611764565b50506001821b6110c4565b5060208310610133831016604e8410600b8410161715611b27575081810a6110c4565b611b318383611a69565b8060001904821115611b4557611b45611764565b029392505050565b60006104898383611aac565b600082611b7657634e487b7160e01b600052601260045260246000fd5b500490565b60e08152845160e08201526000602086015160028110611bab57634e487b7160e01b600052602160045260246000fd5b61010083015260408601516001600160a01b03166101208301526060860151611be06101408401826001600160a01b03169052565b50608086015161016083015260a086015160c0610180840152611c076101a08401826119bd565b915050611c47602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fea2646970667358221220bff1f3b35e05dae014970ae6f4198babbf6ef83564c483305ec0fcc537fa55b964736f6c63430008150033608060405234801561001057600080fd5b50611ea8806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806397d2ead21161006657806397d2ead214610127578063b0ff97b51461013a578063c18748671461014f578063d4afb73a14610158578063f424c4ba1461016057600080fd5b80632cc3eb0a146100a357806340f1a34b146100e65780636260f55b146100fd5780638c4c501d146101055780638e9cd10c1461010f575b600080fd5b6040805180820182526000808252602091820152815180830183526016548082526017549183019182528351908152905191810191909152015b60405180910390f35b6100ef61384081565b6040519081526020016100dd565b6100ef610168565b6100ef62015f9081565b6101176101a5565b60405190151581526020016100dd565b6100ef61013536600461176c565b6103b3565b61014d610148366004611797565b610519565b005b6100ef61038481565b6100ef610585565b6100ef61060d565b60075460009081908190610186906001600160a01b03166001610644565b915091508161019c57610197610873565b61019e565b805b9250505090565b6009546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906117d9565b90506000805b6001548110156102c957600180548290811061023a5761023a6117f2565b60009182526020918290200154604080516278744560e21b815290516001600160a01b03909216926301e1d114926004808401938290030181865afa158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab91906117d9565b6102b5908361181e565b9150806102c181611831565b91505061021c565b5060165443116102f35760405163dcfa2bfd60e01b81524360048201526024015b60405180910390fd5b6000806103008385610896565b90925090506000610311838361184a565b9050600081136103275760009550505050505090565b601754600090610337908361184a565b90506000811361034e576000965050505050505090565b600061035a8383610904565b6040805143815260208101839052908101859052606081018490529091507fd47935b2f6fd998224fcce47e28065f692a3452b54180fd1e43ba90daf9eb1949060800160405180910390a1600197505050505050505090565b6000806001600160a01b03831630146103e4576001600160a01b038316600090815260236020526040902054610450565b6009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045091906117d9565b905060008060090160009054906101000a90046001600160a01b03166001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd91906117d9565b9050670de0b6b3a76400006104e0610168565b670de0b6b3a76400006104f38585611871565b6104fd919061189e565b6105079190611871565b610511919061189e565b949350505050565b8015610552576001600160a01b0383166000908152602360205260408120805484929061054790849061181e565b909155506105809050565b6001600160a01b0383166000908152602360205260408120805484929061057a9084906118b2565b90915550505b505050565b6000806000600a0160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060291906118e4565b509195945050505050565b6000670de0b6b3a7640000610620610168565b610628610585565b6106329190611871565b61063c919061189e565b600218905090565b60008061066d604051806040016040528060058152602001642d2d2d2d2d60d81b8152506109e6565b61069b6040518060400160405280600c81526020016b0383934b1b2a332b2b22f9d160a51b81525085610a2c565b6138406402540be400846106b05762015f9091505b6000806000886001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906118e4565b50935050925092506107566040518060400160405280600981526020016803937bab73224b21d160bd1b8152508469ffffffffffffffffffff16610a75565b61078060405180604001604052806008815260200167030b739bbb2b91d160c51b81525083610a75565b6107ad6040518060400160405280600b81526020016a03ab83230ba32b220ba1d160ad1b81525082610a75565b69ffffffffffffffffffff8316158015906107c85750600082135b80156107d357508015155b80156107df5750428111155b80156107f45750846107f182426118b2565b11155b1561083b57610821604051806040016040528060078152602001666e6f74206c6f6760c81b8152506109e6565b600161082d8584611871565b96509650505050505061086c565b61085f604051806040016040528060038152602001626c6f6760e81b8152506109e6565b6000809650965050505050505b9250929050565b60008061087e610aba565b9050600061088a610bab565b90506000610511610d0d565b60008060006108a3610168565b6108b28664e8d4a51000611871565b6108c490670de0b6b3a7640000611871565b6108ce919061189e565b90506000670de0b6b3a76400006108e3610585565b6108ed9087611871565b6108f7919061189e565b9196919550909350505050565b601554600090819061091e9062ffffff1684612710610d9f565b60178590559050600061092f610585565b61094183670de0b6b3a7640000611871565b61094b919061189e565b9050600061095882610dbd565b60095460155460405163a9059cbb60e01b81526001600160a01b0363010000009092048216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af11580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190611934565b50925050505b92915050565b610a29816040516024016109fa91906119a1565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610e54565b50565b610a718282604051602401610a429291906119b4565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610e54565b5050565b610a718282604051602401610a8b9291906119de565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610e54565b6024805460035460048054601354604051630b4c774160e11b81526001600160a01b03948516938101939093529083169482019490945262ffffff909316604484015260009283929190911690631698ee8290606401602060405180830381865afa158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b519190611a00565b90506000610b6082600a610e75565b50600354600454919250600091610b8f918491670de0b6b3a7640000916001600160a01b0390811691166110bb565b90506000610ba28264e8d4a51000611871565b95945050505050565b600080604051602001610bef9060408082526003908201819052620cae8d60eb1b6060830152608060208301819052820152621d5cd960ea1b60a082015260c00190565b60408051601f1981840301815290829052610c0c91602001611a1d565b60408051601f198184030181529190528051602090910120602554909150600090819081906001600160a01b031663a792765f85610c4c610384426118b2565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381865afa158015610c8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb59190810190611a97565b925092509250821580610cd25750613840610cd082426118b2565b115b15610cf057604051637614abcd60e11b815260040160405180910390fd5b81806020019051810190610d0491906117d9565b94505050505090565b6026546000908190610d28906001600160a01b031682610644565b60275490925060009150610d45906001600160a01b031682610644565b915060009050610d6982670de0b6b3a7640000610d62868261189e565b9190610d9f565b9050610d986040518060400160405280600b81526020016a03932b210383934b1b29d160ad1b81525082610a75565b9392505050565b6000826000190484118302158202610db657600080fd5b5091020490565b600080610dce603284612710610d9f565b60095460215460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015610e25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e499190611934565b50610d9881846118b2565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000808263ffffffff16600003610eb35760405162461bcd60e51b8152602060048201526002602482015261042560f41b60448201526064016102ea565b6040805160028082526060820183526000926020830190803683370190505090508381600081518110610ee857610ee86117f2565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610f1757610f176117f2565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b8152600401610f609190611b4a565b600060405180830381865afa158015610f7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fa59190810190611c2c565b91509150600082600081518110610fbe57610fbe6117f2565b602002602001015183600181518110610fd957610fd96117f2565b6020026020010151610feb9190611cf8565b9050600082600081518110611002576110026117f2565b60200260200101518360018151811061101d5761101d6117f2565b602002602001015161102f9190611d25565b905061103f600389900b83611d45565b965060008260060b128015611063575061105d600389900b83611d83565b60060b15155b15611076578661107281611da5565b9750505b600061108f6001600160a01b0363ffffffff8b16611dc8565b90506110ac640100000000600160c01b03602084901b1682611dfa565b96505050505050509250929050565b6000806110c7866111c9565b90506001600160801b036001600160a01b0382161161114d5760006110f56001600160a01b03831680611871565b9050836001600160a01b0316856001600160a01b03161061112d57611128600160c01b876001600160801b0316836115e1565b611145565b61114581876001600160801b0316600160c01b6115e1565b9250506111c0565b600061116c6001600160a01b03831680680100000000000000006115e1565b9050836001600160a01b0316856001600160a01b0316106111a45761119f600160801b876001600160801b0316836115e1565b6111bc565b6111bc81876001600160801b0316600160801b6115e1565b9250505b50949350505050565b60008060008360020b126111e0578260020b6111ed565b8260020b6111ed90611e20565b90506111fc620d89e719611e3c565b60020b8111156112325760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016102ea565b60008160011660000361124957600160801b61125b565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561129a576080611295826ffff97272373d413259a46990580e213a611871565b901c90505b60048216156112c45760806112bf826ffff2e50f5f656932ef12357cf3c7fdcc611871565b901c90505b60088216156112ee5760806112e9826fffe5caca7e10e4e61c3624eaa0941cd0611871565b901c90505b6010821615611318576080611313826fffcb9843d60f6159c9db58835c926644611871565b901c90505b602082161561134257608061133d826fff973b41fa98c081472e6896dfb254c0611871565b901c90505b604082161561136c576080611367826fff2ea16466c96a3843ec78b326b52861611871565b901c90505b6080821615611396576080611391826ffe5dee046a99a2a811c461f1969c3053611871565b901c90505b6101008216156113c15760806113bc826ffcbe86c7900a88aedcffc83b479aa3a4611871565b901c90505b6102008216156113ec5760806113e7826ff987a7253ac413176f2b074cf7815e54611871565b901c90505b610400821615611417576080611412826ff3392b0822b70005940c7a398e4b70f3611871565b901c90505b61080082161561144257608061143d826fe7159475a2c29b7443b29c7fa6e889d9611871565b901c90505b61100082161561146d576080611468826fd097f3bdfd2022b8845ad8f792aa5825611871565b901c90505b612000821615611498576080611493826fa9f746462d870fdf8a65dc1f90e061e5611871565b901c90505b6140008216156114c35760806114be826f70d869a156d2a1b890bb3df62baf32f7611871565b901c90505b6180008216156114ee5760806114e9826f31be135f97d08fd981231505542fcfa6611871565b901c90505b6201000082161561151a576080611515826f09aa508b5b7a84e1c677de54f3e99bc9611871565b901c90505b62020000821615611545576080611540826e5d6af8dedb81196699c329225ee604611871565b901c90505b6204000082161561156f57608061156a826d2216e584f5fa1ea926041bedfe98611871565b901c90505b62080000821615611597576080611592826b048a170391f7dc42444e8fa2611871565b901c90505b60008460020b13156115b2576115af8160001961189e565b90505b6115c164010000000082611e5e565b156115cd5760016115d0565b60005b6105119060ff16602083901c61181e565b600080806000198587098587029250828110838203039150508060000361161a576000841161160f57600080fd5b508290049050610d98565b80841161162657600080fd5b60008486880980840393811190920391905060008561164481611e20565b169586900495938490049360008190030460010190506116648184611871565b909317926000611675876003611871565b60021890506116848188611871565b61168f9060026118b2565b6116999082611871565b90506116a58188611871565b6116b09060026118b2565b6116ba9082611871565b90506116c68188611871565b6116d19060026118b2565b6116db9082611871565b90506116e78188611871565b6116f29060026118b2565b6116fc9082611871565b90506117088188611871565b6117139060026118b2565b61171d9082611871565b90506117298188611871565b6117349060026118b2565b61173e9082611871565b905061174a8186611871565b9998505050505050505050565b6001600160a01b0381168114610a2957600080fd5b60006020828403121561177e57600080fd5b8135610d9881611757565b8015158114610a2957600080fd5b6000806000606084860312156117ac57600080fd5b83356117b781611757565b92506020840135915060408401356117ce81611789565b809150509250925092565b6000602082840312156117eb57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109e0576109e0611808565b60006001820161184357611843611808565b5060010190565b818103600083128015838313168383128216171561186a5761186a611808565b5092915050565b80820281158282048414176109e0576109e0611808565b634e487b7160e01b600052601260045260246000fd5b6000826118ad576118ad611888565b500490565b818103818111156109e0576109e0611808565b805169ffffffffffffffffffff811681146118df57600080fd5b919050565b600080600080600060a086880312156118fc57600080fd5b611905866118c5565b9450602086015193506040860151925060608601519150611928608087016118c5565b90509295509295909350565b60006020828403121561194657600080fd5b8151610d9881611789565b60005b8381101561196c578181015183820152602001611954565b50506000910152565b6000815180845261198d816020860160208601611951565b601f01601f19169290920160200192915050565b602081526000610d986020830184611975565b6040815260006119c76040830185611975565b905060018060a01b03831660208301529392505050565b6040815260006119f16040830185611975565b90508260208301529392505050565b600060208284031215611a1257600080fd5b8151610d9881611757565b60408152600960408201526853706f74507269636560b81b6060820152608060208201526000610d986080830184611975565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a8f57611a8f611a50565b604052919050565b600080600060608486031215611aac57600080fd5b8351611ab781611789565b602085015190935067ffffffffffffffff80821115611ad557600080fd5b818601915086601f830112611ae957600080fd5b815181811115611afb57611afb611a50565b611b0e601f8201601f1916602001611a66565b9150808252876020828501011115611b2557600080fd5b611b36816020840160208601611951565b508093505050604084015190509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611b8857835163ffffffff1683529284019291840191600101611b66565b50909695505050505050565b600067ffffffffffffffff821115611bae57611bae611a50565b5060051b60200190565b600082601f830112611bc957600080fd5b81516020611bde611bd983611b94565b611a66565b82815260059290921b84018101918181019086841115611bfd57600080fd5b8286015b84811015611c21578051611c1481611757565b8352918301918301611c01565b509695505050505050565b60008060408385031215611c3f57600080fd5b825167ffffffffffffffff80821115611c5757600080fd5b818501915085601f830112611c6b57600080fd5b81516020611c7b611bd983611b94565b82815260059290921b84018101918181019089841115611c9a57600080fd5b948201945b83861015611cc85785518060060b8114611cb95760008081fd5b82529482019490820190611c9f565b91880151919650909350505080821115611ce157600080fd5b50611cee85828601611bb8565b9150509250929050565b600682810b9082900b03667fffffffffffff198112667fffffffffffff821317156109e0576109e0611808565b6001600160a01b0382811682821603908082111561186a5761186a611808565b60008160060b8360060b80611d5c57611d5c611888565b667fffffffffffff19821460001982141615611d7a57611d7a611808565b90059392505050565b60008260060b80611d9657611d96611888565b808360060b0791505092915050565b60008160020b627fffff198103611dbe57611dbe611808565b6000190192915050565b6001600160c01b03828116828216818102831692918115828504821417611df157611df1611808565b50505092915050565b60006001600160c01b0383811680611e1457611e14611888565b92169190910492915050565b6000600160ff1b8201611e3557611e35611808565b5060000390565b60008160020b627fffff198103611e5557611e55611808565b60000392915050565b600082611e6d57611e6d611888565b50069056fea2646970667358221220fa6912c40fcdc2f9a3b5f4efcd0cb2e5990fba7e606cd7be86fe769566d89b9a64736f6c63430008150033608060405234801561001057600080fd5b506040516104c03803806104c083398101604081905261002f9161013c565b8061003933610049565b61004281610099565b505061016c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381163b61011a5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561014e57600080fd5b81516001600160a01b038116811461016557600080fd5b9392505050565b6103458061017b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102df565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f61010e565b6000546001600160a01b031661007e565b61006f6100c13660046102df565b610122565b6100ce6101a0565b6100d7816101fa565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6101166101a0565b610120600061028f565b565b61012a6101a0565b6001600160a01b0381166101945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61019d8161028f565b50565b6000546001600160a01b031633146101205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018b565b6001600160a01b0381163b61026d5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b606482015260840161018b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102f157600080fd5b81356001600160a01b038116811461030857600080fd5b939250505056fea264697066735822122026e6adc95d4a1bca998169e502c20c8567eb83ec96e7387f56c14e8dda39207264736f6c63430008150033608060405234801561001057600080fd5b5061161b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80637d098e64116100715780637d098e641461013e57806380faa57d1461016b578063b88a802f1461016b578063cc1a378f1461011a578063cd3daf9d1461016b578063cffd84931461017257600080fd5b80628cc262146100b85780631f931c1c146100df5780632bc8a42d146100f45780633bba4b35146101075780633c6b16ab1461011a5780635acb2ecb1461012b575b600080fd5b6100cc6100c6366004610f30565b50600090565b6040519081526020015b60405180910390f35b6100f26100ed366004610f9b565b610185565b005b6100f261010236600461104d565b6101de565b6100f2610115366004610f30565b610208565b6100f2610128366004611071565b50565b6100f261013936600461108a565b61023c565b6040805160008082526020820181905291810182905260608101829052608081019190915260a0016100d6565b60006100cc565b6100f2610180366004610f30565b61025e565b61018d6102b2565b6101d761019a8587611143565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061032992505050565b5050505050565b6101e66102b2565b6007805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6102106102b2565b601580546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b6102446102b2565b6013805462ffffff191662ffffff92909216919091179055565b6021546001600160a01b031633146102905760405163a43f931360e01b81523360048201526024015b60405180910390fd5b602180546001600160a01b0319166001600160a01b0392909216919091179055565b60008051602061157a833981519152600401546001600160a01b031633146103275760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401610287565b565b60005b83518110156104ef57600084828151811061034957610349611287565b60200260200101516020015190506000600281111561036a5761036a61129d565b81600281111561037c5761037c61129d565b036103ca576103c585838151811061039657610396611287565b6020026020010151600001518684815181106103b4576103b4611287565b60200260200101516040015161053a565b6104dc565b60018160028111156103de576103de61129d565b03610427576103c58583815181106103f8576103f8611287565b60200260200101516000015186848151811061041657610416611287565b6020026020010151604001516106b2565b600281600281111561043b5761043b61129d565b03610484576103c585838151811061045557610455611287565b60200260200101516000015186848151811061047357610473611287565b602002602001015160400151610842565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608401610287565b50806104e7816112c9565b91505061032c565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161052393929190611332565b60405180910390a16105358282610960565b505050565b600081511161055b5760405162461bcd60e51b815260040161028790611432565b60008051602061157a8339815191526001600160a01b0383166105905760405162461bcd60e51b81526004016102879061147d565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105c6576105c68285610a26565b60005b83518110156101d75760008482815181106105e6576105e6611287565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156106845760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608401610287565b6106908583868a610a90565b8361069a816114c9565b945050505080806106aa906112c9565b9150506105c9565b60008151116106d35760405162461bcd60e51b815260040161028790611432565b60008051602061157a8339815191526001600160a01b0383166107085760405162461bcd60e51b81526004016102879061147d565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361073e5761073e8285610a26565b60005b83518110156101d757600084828151811061075e5761075e611287565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036108095760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401610287565b610814858284610b30565b6108208583868a610a90565b8361082a816114c9565b9450505050808061083a906112c9565b915050610741565b60008151116108635760405162461bcd60e51b815260040161028790611432565b60008051602061157a8339815191526001600160a01b038316156108e85760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608401610287565b60005b825181101561095a57600083828151811061090857610908611287565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610945848284610b30565b50508080610952906112c9565b9150506108eb565b50505050565b6001600160a01b038216610972575050565b6109948260405180606001604052806028815260200161159a60289139610ef3565b600080836001600160a01b0316836040516109af91906114ef565b600060405180830381855af49150503d80600081146109ea576040519150601f19603f3d011682016040523d82523d6000602084013e6109ef565b606091505b50915091508161095a57805115610a095780518082602001fd5b838360405163192105d760e01b815260040161028792919061150b565b610a48816040518060600160405280602481526020016115c260249139610ef3565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401610287565b306001600160a01b03831603610c1b5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608401610287565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610c6a91611537565b9050808214610d5c576001600160a01b03841660009081526001860160205260408120805483908110610c9f57610c9f611287565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610cf057610cf0611287565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610d8557610d85611550565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036101d7576002850154600090610de890600190611537565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610e97576000876002018381548110610e2757610e27611287565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e5857610e58611287565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610eaa57610eaa611550565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b818161095a5760405162461bcd60e51b81526004016102879190611566565b80356001600160a01b0381168114610f2b57600080fd5b919050565b600060208284031215610f4257600080fd5b610f4b82610f14565b9392505050565b60008083601f840112610f6457600080fd5b50813567ffffffffffffffff811115610f7c57600080fd5b602083019150836020828501011115610f9457600080fd5b9250929050565b600080600080600060608688031215610fb357600080fd5b853567ffffffffffffffff80821115610fcb57600080fd5b818801915088601f830112610fdf57600080fd5b813581811115610fee57600080fd5b8960208260051b850101111561100357600080fd5b6020830197508096505061101960208901610f14565b9450604088013591508082111561102f57600080fd5b5061103c88828901610f52565b969995985093965092949392505050565b60006020828403121561105f57600080fd5b813561ffff81168114610f4b57600080fd5b60006020828403121561108357600080fd5b5035919050565b60006020828403121561109c57600080fd5b813562ffffff81168114610f4b57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156110e8576110e86110af565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611117576111176110af565b604052919050565b600067ffffffffffffffff821115611139576111396110af565b5060051b60200190565b60006111566111518461111f565b6110ee565b83815260208082019190600586811b86013681111561117457600080fd5b865b8181101561127a57803567ffffffffffffffff808211156111975760008081fd5b818a019150606082360312156111ad5760008081fd5b6111b56110c5565b6111be83610f14565b815286830135600381106111d25760008081fd5b81880152604083810135838111156111ea5760008081fd5b939093019236601f85011261120157600092508283fd5b833592506112116111518461111f565b83815292871b8401880192888101903685111561122e5760008081fd5b948901945b848610156112635785356001600160e01b0319811681146112545760008081fd5b82529489019490890190611233565b918301919091525088525050948301948301611176565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112db576112db6112b3565b5060010190565b60005b838110156112fd5781810151838201526020016112e5565b50506000910152565b6000815180845261131e8160208601602086016112e2565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561140257898403607f19018652815180516001600160a01b031685528381015189860190600381106113a157634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156113ed5783516001600160e01b03191682529286019260019290920191908601906113c3565b5097850197955050509082019060010161135b565b50506001600160a01b038a169088015286810360408801526114248189611306565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b038083168181036114e5576114e56112b3565b6001019392505050565b600082516115018184602087016112e2565b9190910192915050565b6001600160a01b038316815260406020820181905260009061152f90830184611306565b949350505050565b8181038181111561154a5761154a6112b3565b92915050565b634e487b7160e01b600052603160045260246000fd5b602081526000610f4b602083018461130656fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212200d487c04a93edbc10922ed5ccb19fa9a77ccf7704f90ed86ceda38483d6f105364736f6c63430008150033608060405234801561001057600080fd5b50610a48806100206000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c8063b88a802f11610066578063b88a802f14610128578063c28cd66d14610130578063c3ae3a0914610143578063cc1a378f14610156578063cd3daf9d1461016957600080fd5b80628cc262146100a2578063020ff618146100c85780633c6b16ab146100dd5780637d098e64146100f057806380faa57d14610120575b600080fd5b6100b56100b03660046108c4565b610171565b6040519081526020015b60405180910390f35b6100db6100d63660046108c4565b6101dc565b005b6100db6100eb3660046108ed565b610227565b6100f86103c0565b604080519586526020860194909452928401919091526060830152608082015260a0016100bf565b6100b5610472565b6100b5610488565b6100db61013e3660046108ed565b6105ab565b6100db6101513660046108ed565b6105c8565b6100db6101643660046108ed565b6105ff565b6100b561062e565b6001600160a01b03811660009081526020808052604080832054601f909252822054670de0b6b3a7640000906101a561062e565b6101af919061091c565b6101b88561069e565b6101c2919061092f565b6101cc9190610946565b6101d69190610968565b92915050565b6101e461062e565b601c556101ef610472565b601a556101fb81610171565b6001600160a01b0390911660009081526020808052604080832093909355601c54601f90915291902055565b60008061023261062e565b601c5561023d610472565b601a556001600160a01b038216156102825761025882610171565b6001600160a01b03831660009081526020808052604080832093909355601c54601f909152919020555b61028a610764565b6019544211156102a9576018546102a19084610946565b601b556102e6565b6019546000906102ba90429061091c565b601b546102c7919061092f565b6018549091506102d78583610968565b6102e19190610946565b601b55505b601b546103065760405163e92aa8bd60e01b815260040160405180910390fd5b6015546040516370a0823160e01b815230600482015263010000009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015610354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610378919061097b565b601854601b54610388919061092f565b11156103a7576040516311172c5560e11b815260040160405180910390fd5b6018546103b49042610968565b601955505042601a5550565b601b54601d54601e546015546040516370a0823160e01b8152306004820152600094859485948594859463010000009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610446919061097b565b610450919061091c565b601e54601954610461904290610994565b945094509450945094509091929394565b6019546000906104839042906107f1565b905090565b6000338161049461062e565b601c5561049f610472565b601a556001600160a01b038216156104e4576104ba82610171565b6001600160a01b03831660009081526020808052604080832093909355601c54601f909152919020555b33600090815260208052604090205480156105a35733600081815260208052604080822091909155601554905163a9059cbb60e01b8152600481019290925260248201839052630100000090046001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610563573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058791906109bb565b50601d805482919060009061059d908490610968565b90915550505b92505b505090565b6105b4816105ff565b601e546105c090610227565b506000601e55565b601d80548291906000906105dd90849061091c565b9091555050601e80548291906000906105f7908490610968565b909155505050565b610607610764565b6019544211610629576040516314e75c8960e11b815260040160405180910390fd5b601855565b60008061063961080a565b90508060000361064b575050601c5490565b601a548190610658610472565b610662919061091c565b601b5461066f919061092f565b61068190670de0b6b3a764000061092f565b61068b9190610946565b601c546106989190610968565b91505090565b600154600090815b818160ff16101561075d576001805460ff83169081106106c8576106c86109dd565b6000918252602090912001546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f919061097b565b6107499084610968565b925080610755816109f3565b9150506106a6565b5050919050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146107ef5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b6000818311156108015781610803565b825b9392505050565b600154600090815b818160ff1610156105a6576001805460ff8316908110610834576108346109dd565b60009182526020918290200154604080516318160ddd60e01b815290516001600160a01b03909216926318160ddd926004808401938290030181865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a6919061097b565b6108b09084610968565b9250806108bc816109f3565b915050610812565b6000602082840312156108d657600080fd5b81356001600160a01b038116811461080357600080fd5b6000602082840312156108ff57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101d6576101d6610906565b80820281158282048414176101d6576101d6610906565b60008261096357634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156101d6576101d6610906565b60006020828403121561098d57600080fd5b5051919050565b81810360008312801583831316838312821617156109b4576109b4610906565b5092915050565b6000602082840312156109cd57600080fd5b8151801515811461080357600080fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103610a0957610a09610906565b6001019291505056fea2646970667358221220efbfde448e133b4271ec741945b729eabe5680b2de5100a5690a7b752e6341a764736f6c63430008150033608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61229480620000ee6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b6040516101519190611aa6565b60405180910390f35b61016d610168366004611aee565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d366004611b1a565b61037b565b60405160128152602001610151565b61018161039f565b61016d6101c7366004611aee565b6103ae565b6101816101da366004611b5b565b6103d0565b6101e76104b5565b6040516001600160a01b039091168152602001610151565b61018161020d366004611be7565b6104f7565b610181610220366004611cc1565b6001600160a01b031660009081526033602052604090205490565b61024e610249366004611d4e565b610795565b005b61018161025e366004611cc1565b610932565b610181610950565b6101816109c6565b610144610a3d565b61016d610289366004611aee565b610a4c565b61016d61029c366004611aee565b610ac7565b61024e6102af366004611dd6565b610ad5565b6101816102c2366004611e4d565b610bf7565b610181610c22565b6060603680546102de90611e86565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611e86565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610c2e565b60019150505b92915050565b600033610389858285610d52565b610394858585610dcc565b506001949350505050565b60006103a9610f9a565b905090565b60003361036f8185856103c18383610bf7565b6103cb9190611ed0565b610c2e565b6040516370a0823160e01b8152306004820152600090670de0b6b3a764000090829073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190611ee3565b90506000600285600281111561046a5761046a611efc565b1461047e576104798583611015565b610480565b815b9050600061048c6109c6565b9050806000036104a0575091949350505050565b6104ab84838361112e565b9695505050505050565b60006104e86104e560017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611f12565b90565b546001600160a01b0316919050565b6000806105026104b5565b9050600061050e61114c565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e9190611f25565b6001600160a01b031614801561059d5750600061059b82886111bb565b125b156105cb5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146105e6576105e6883387610d52565b60006106056105f560026103d0565b8790670de0b6b3a764000061112e565b604051631567339f60e31b81526001600160a01b038b81166004830152306024830152604482018990529192509084169063ab399cf890606401600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b505050508160008151811061068457610684611f42565b60200260200101516001600160a01b0316876001600160a01b03160361071157846000815181106106b7576106b7611f42565b60200260200101518110156106e257604051631aa1e78f60e31b8152600481018290526024016105c2565b610707826000815181106106f8576106f8611f42565b60200260200101518983611223565b925061078c915050565b60405163094463e760e01b81526001600160a01b0384169063094463e790610743908a908c9086908b90600401611f58565b6020604051808303816000875af1158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190611ee3565b93505050505b95945050505050565b600054610100900460ff16158080156107b55750600054600160ff909116105b806107cf5750303b1580156107cf575060005460ff166001145b6108325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105c2565b6000805460ff191660011790558015610855576000805461ff0019166101001790555b61085f868661127a565b61088286604051806040016040528060018152602001603160f81b8152506112af565b836108b16104e560017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611f12565b80546001600160a01b0319166001600160a01b03929092169190911790556108d930846112e0565b6108e4308584610dcc565b801561092a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b60008061095b6104b5565b6001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190611fc2565b5095945050505050565b6000806109d16104b5565b6001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190611fc2565b509195945050505050565b6060603780546102de90611e86565b60003381610a5a8286610bf7565b905083811015610aba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105c2565b6103948286868403610c2e565b60003361036f818585610dcc565b83421115610aff5760405163184f1e0160e11b8152600481018590524260248201526044016105c2565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b2e8c6113bf565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b89826113e7565b90506000610b9982878787611435565b9050896001600160a01b0316816001600160a01b031614610be057604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016105c2565b610beb8a8a8a610c2e565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006103a960006103d0565b6001600160a01b038316610c905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105c2565b6001600160a01b038216610cf15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105c2565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d5e8484610bf7565b90506000198114610dc65781811015610db95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105c2565b610dc68484848403610c2e565b50505050565b6001600160a01b038316610e305760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105c2565b6001600160a01b038216610e925760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105c2565b6001600160a01b03831660009081526033602052604090205481811015610f0a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105c2565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610f41908490611ed0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f8d91815260200190565b60405180910390a3610dc6565b60006103a97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610fc960655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008083600281111561102a5761102a611efc565b036110b2576110ab61103a6104b5565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b9190611ee3565b8390670de0b6b3a764000061112e565b9050610375565b60018360028111156110c6576110c6611efc565b03610375576040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b1790526111056110ff6104b5565b8261145f565b905060008180602001905181019061111d9190611ee3565b905061078c8482670de0b6b3a76400005b600082600019048411830215820261114557600080fd5b5091020490565b60606111566104b5565b6001600160a01b03166338ab35d46040518163ffffffff1660e01b8152600401600060405180830381865afa158015611193573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a99190810190612002565b8151600090815b8181101561121757836001600160a01b03168582815181106111e6576111e6611f42565b60200260200101516001600160a01b0316036112055791506103759050565b8061120f81612091565b9150506111c2565b50600019949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261127590849061148b565b505050565b600054610100900460ff166112a15760405162461bcd60e51b81526004016105c2906120aa565b6112ab8282611560565b5050565b600054610100900460ff166112d65760405162461bcd60e51b81526004016105c2906120aa565b6112ab82826115a0565b6001600160a01b0382166113365760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105c2565b80603560008282546113489190611ed0565b90915550506001600160a01b03821660009081526033602052604081208054839290611375908490611ed0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006103756113f4610f9a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611446878787876115e1565b91509150611453816116ce565b5090505b949350505050565b6060611484838360405180606001604052806025815260200161223a60259139611887565b9392505050565b60006114e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118f59092919063ffffffff16565b905080516000148061150157508080602001905181019061150191906120f5565b6112755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105c2565b600054610100900460ff166115875760405162461bcd60e51b81526004016105c2906120aa565b6036611593838261215d565b506037611275828261215d565b600054610100900460ff166115c75760405162461bcd60e51b81526004016105c2906120aa565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561161857506000905060036116c5565b8460ff16601b1415801561163057508460ff16601c14155b1561164157506000905060046116c5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611695573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116be576000600192509250506116c5565b9150600090505b94509492505050565b60008160048111156116e2576116e2611efc565b036116ea5750565b60018160048111156116fe576116fe611efc565b0361174b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105c2565b600281600481111561175f5761175f611efc565b036117ac5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105c2565b60038160048111156117c0576117c0611efc565b036118185760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105c2565b600481600481111561182c5761182c611efc565b036118845760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105c2565b50565b6060600080856001600160a01b0316856040516118a4919061221d565b600060405180830381855afa9150503d80600081146118df576040519150601f19603f3d011682016040523d82523d6000602084013e6118e4565b606091505b50915091506104ab86838387611904565b6060611457848460008561197d565b6060831561197357825160000361196c576001600160a01b0385163b61196c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105c2565b5081611457565b6114578383611a58565b6060824710156119de5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105c2565b600080866001600160a01b031685876040516119fa919061221d565b60006040518083038185875af1925050503d8060008114611a37576040519150601f19603f3d011682016040523d82523d6000602084013e611a3c565b606091505b5091509150611a4d87838387611904565b979650505050505050565b815115611a685781518083602001fd5b8060405162461bcd60e51b81526004016105c29190611aa6565b60005b83811015611a9d578181015183820152602001611a85565b50506000910152565b6020815260008251806020840152611ac5816040850160208701611a82565b601f01601f19169190910160400192915050565b6001600160a01b038116811461188457600080fd5b60008060408385031215611b0157600080fd5b8235611b0c81611ad9565b946020939093013593505050565b600080600060608486031215611b2f57600080fd5b8335611b3a81611ad9565b92506020840135611b4a81611ad9565b929592945050506040919091013590565b600060208284031215611b6d57600080fd5b81356003811061148457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611bbb57611bbb611b7c565b604052919050565b600067ffffffffffffffff821115611bdd57611bdd611b7c565b5060051b60200190565b600080600080600060a08688031215611bff57600080fd5b8535611c0a81611ad9565b9450602086810135611c1b81611ad9565b94506040870135611c2b81611ad9565b935060608701359250608087013567ffffffffffffffff811115611c4e57600080fd5b8701601f81018913611c5f57600080fd5b8035611c72611c6d82611bc3565b611b92565b81815260059190911b8201830190838101908b831115611c9157600080fd5b928401925b82841015611caf57833582529284019290840190611c96565b80955050505050509295509295909350565b600060208284031215611cd357600080fd5b813561148481611ad9565b600082601f830112611cef57600080fd5b813567ffffffffffffffff811115611d0957611d09611b7c565b611d1c601f8201601f1916602001611b92565b818152846020838601011115611d3157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d6657600080fd5b853567ffffffffffffffff80821115611d7e57600080fd5b611d8a89838a01611cde565b96506020880135915080821115611da057600080fd5b50611dad88828901611cde565b9450506040860135611dbe81611ad9565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a031215611df157600080fd5b8735611dfc81611ad9565b96506020880135611e0c81611ad9565b95506040880135945060608801359350608088013560ff81168114611e3057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e6057600080fd5b8235611e6b81611ad9565b91506020830135611e7b81611ad9565b809150509250929050565b600181811c90821680611e9a57607f821691505b6020821081036113e157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037557610375611eba565b600060208284031215611ef557600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561037557610375611eba565b600060208284031215611f3757600080fd5b815161148481611ad9565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020808301919091526040820184905260806060830181905283519083018190526000918481019160a085019190845b81811015611fb357845184529382019392820192600101611f97565b50919998505050505050505050565b600080600080600060a08688031215611fda57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6000602080838503121561201557600080fd5b825167ffffffffffffffff81111561202c57600080fd5b8301601f8101851361203d57600080fd5b805161204b611c6d82611bc3565b81815260059190911b8201830190838101908783111561206a57600080fd5b928401925b82841015611a4d57835161208281611ad9565b8252928401929084019061206f565b6000600182016120a3576120a3611eba565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561210757600080fd5b8151801515811461148457600080fd5b601f82111561127557600081815260208120601f850160051c8101602086101561213e5750805b601f850160051c820191505b8181101561092a5782815560010161214a565b815167ffffffffffffffff81111561217757612177611b7c565b61218b816121858454611e86565b84612117565b602080601f8311600181146121c057600084156121a85750858301515b600019600386901b1c1916600185901b17855561092a565b600085815260208120601f198616915b828110156121ef578886015182559484019460019091019084016121d0565b508582101561220d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161222f818460208701611a82565b919091019291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220a6cbbfb5bfbcc7aad5e05a8464f9adb8012d57dbb553343d2c70cd353dc6ad8064736f6c63430008150033608060405234801561001057600080fd5b506105d1806100206000396000f3fe6080604052600436106100555760003560e01c8063335c7bbd1461005a57806371edfb9f1461006f578063d35a888e146100a0578063d36de10b146100b5578063db7645ae146100d5578063f1b5084b146100f5575b600080fd5b61006d610068366004610438565b61011a565b005b34801561007b57600080fd5b50610084610144565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ac57600080fd5b50610084610168565b3480156100c157600080fd5b5061006d6100d03660046104fc565b610187565b3480156100e157600080fd5b5061006d6100f03660046104fc565b6101af565b34801561010157600080fd5b50601554630100000090046001600160a01b0316610084565b6101226101d4565b60155461014090630100000090046001600160a01b03168383610261565b5050565b60155460009061016390630100000090046001600160a01b03166102c8565b905090565b60155460009061016390630100000090046001600160a01b0316610359565b61018f6101d4565b6015546101ac90630100000090046001600160a01b03168261037f565b50565b6101b76101d4565b6015546101ac90630100000090046001600160a01b0316826103df565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461025f5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102919086908690600401610520565b6000604051808303818588803b1580156102aa57600080fd5b505af11580156102be573d6000803e3d6000fd5b5050505050505050565b6000806000836001600160a01b03166040516102ee906303e1469160e61b815260040190565b600060405180830381855afa9150503d8060008114610329576040519150601f19603f3d011682016040523d82523d6000602084013e61032e565b606091505b50915091508161033d57600080fd5b80806020019051810190610351919061057e565b949350505050565b6000806000836001600160a01b03166040516102ee90635c60da1b60e01b815260040190565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024015b600060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050505050565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024016103a9565b6001600160a01b03811681146101ac57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561044b57600080fd5b82356104568161040d565b9150602083013567ffffffffffffffff8082111561047357600080fd5b818501915085601f83011261048757600080fd5b81358181111561049957610499610422565b604051601f8201601f19908116603f011681019083821181831017156104c1576104c1610422565b816040528281528860208487010111156104da57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561050e57600080fd5b81356105198161040d565b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101561055c57858101830151858201606001528201610540565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121561059057600080fd5b81516105198161040d56fea264697066735822122011a2bb015a032e2319379532a76eb189fe8d0aa6b65f6668b82dd78237fe972e64736f6c63430008150033608060405260405162000e3a38038062000e3a833981016040819052620000269162000424565b828162000036828260006200004d565b50620000449050826200007f565b50505062000557565b6200005883620000f1565b600082511180620000665750805b156200007a5762000078838362000133565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000c160008051602062000df3833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000ee8162000162565b50565b620000fc8162000200565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200015b838360405180606001604052806027815260200162000e136027913962000297565b9392505050565b6001600160a01b038116620001cd5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b8060008051602062000df38339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6200026f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001c4565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc620001df565b6060600080856001600160a01b031685604051620002b6919062000504565b600060405180830381855af49150503d8060008114620002f3576040519150601f19603f3d011682016040523d82523d6000602084013e620002f8565b606091505b5090925090506200030c8683838762000316565b9695505050505050565b606083156200038a57825160000362000382576001600160a01b0385163b620003825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001c4565b508162000396565b6200039683836200039e565b949350505050565b815115620003af5781518083602001fd5b8060405162461bcd60e51b8152600401620001c4919062000522565b80516001600160a01b0381168114620003e357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200041b57818101518382015260200162000401565b50506000910152565b6000806000606084860312156200043a57600080fd5b6200044584620003cb565b92506200045560208501620003cb565b60408501519092506001600160401b03808211156200047357600080fd5b818601915086601f8301126200048857600080fd5b8151818111156200049d576200049d620003e8565b604051601f8201601f19908116603f01168101908382118183101715620004c857620004c8620003e8565b81604052828152896020848701011115620004e257600080fd5b620004f5836020830160208801620003fe565b80955050505050509250925092565b6000825162000518818460208701620003fe565b9190910192915050565b602081526000825180602084015262000543816040850160208701620003fe565b601f01601f19169190910160400192915050565b61088c80620005676000396000f3fe60806040523661001357610011610017565b005b6100115b61001f610169565b6001600160a01b0316330361015f5760606001600160e01b0319600035166364d3180d60e11b810161005a5761005361019c565b9150610157565b63587086bd60e11b6001600160e01b031982160161007a576100536101f3565b63070d7c6960e41b6001600160e01b031982160161009a57610053610239565b621eb96f60e61b6001600160e01b03198216016100b95761005361026a565b63a39f25e560e01b6001600160e01b03198216016100d9576100536102aa565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101676102be565b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60606101a66102ce565b60006101b53660048184610683565b8101906101c291906106c9565b90506101df816040518060200160405280600081525060006102d9565b505060408051602081019091526000815290565b60606000806102053660048184610683565b81019061021291906106fa565b91509150610222828260016102d9565b604051806020016040528060008152509250505090565b60606102436102ce565b60006102523660048184610683565b81019061025f91906106c9565b90506101df81610305565b60606102746102ce565b600061027e610169565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102b46102ce565b600061027e61035c565b6101676102c961035c565b61036b565b341561016757600080fd5b6102e28361038f565b6000825111806102ef5750805b15610300576102fe83836103cf565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61032e610169565b604080516001600160a01b03928316815291841660208301520160405180910390a1610359816103fb565b50565b60006103666104a4565b905090565b3660008037600080366000845af43d6000803e80801561038a573d6000f35b3d6000fd5b610398816104cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f4838360405180606001604052806027815260200161083060279139610560565b9392505050565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61018d565b6001600160a01b0381163b6105395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161014e565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610483565b6060600080856001600160a01b03168560405161057d91906107e0565b600060405180830381855af49150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105bd565b606091505b50915091506105ce868383876105d8565b9695505050505050565b60608315610647578251600003610640576001600160a01b0385163b6106405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b5081610651565b6106518383610659565b949350505050565b8151156106695781518083602001fd5b8060405162461bcd60e51b815260040161014e91906107fc565b6000808585111561069357600080fd5b838611156106a057600080fd5b5050820193919092039150565b80356001600160a01b03811681146106c457600080fd5b919050565b6000602082840312156106db57600080fd5b6103f4826106ad565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561070d57600080fd5b610716836106ad565b9150602083013567ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b813581811115610759576107596106e4565b604051601f8201601f19908116603f01168101908382118183101715610781576107816106e4565b8160405282815288602084870101111561079a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600082516107f28184602087016107bc565b9190910192915050565b602081526000825180602084015261081b8160408501602087016107bc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202e988d1a153a333c9610e275b0e243a7562e1d5aea774b92b4f3d5f451e3cdfe64736f6c63430008150033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65640000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122011bd9e3de9d948113a90b5bb0b8d24bd06c6e68b3c20a1d10709b83a44e047c264736f6c63430008150033",
    "sourceMap": "1205:18927:111:-:0;;;1572:26:41;;;1594:4;-1:-1:-1;;1572:26:41;;;;;;;;3288:44:44;;;;;;;;;;;1917:3:113;1901:19;;1942:3;1926:19;;1965:3;1951:17;;1992:6;1974:24;;3969:27;;;-1:-1:-1;;;;;;;;4083:26:113;-1:-1:-1;;;4083:26:113;;;4413:9;4389:33;;4461:17;4438:40;;4506:18;4484:40;;1205:18927:111;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001755760003560e01c8063847f671511620000d3578063ba414fa61162000086578063ba414fa6146200027a578063d7a834361462000295578063e20c9f71146200029f578063e5bb498e14620002a9578063e71fdf6d14620002b3578063fa7626d414620002bd57600080fd5b8063847f6715146200022f57806385226c811462000239578063916a17c61462000252578063b244bf46146200025c578063b5508aa91462000266578063b56231cb146200027057600080fd5b806339349400116200012c5780633934940014620001e45780633e5e3c2314620001ee5780633f7286f414620001f857806349bbcc4b146200020257806351fd9af9146200020c57806366d9a9a0146200021657600080fd5b80630a1ce092146200017a5780630a9254e414620001865780630e4ae323146200019057806313220c2e146200019a57806319fa614114620001c15780631ed7831c14620001cb575b600080fd5b62000184620002cb565b005b6200018462000826565b6200018462000a2c565b620001a462000e75565b6040516001600160a01b0390911681526020015b60405180910390f35b62000184620012f0565b620001d562001c43565b604051620001b891906200c158565b6200018462001ca7565b620001d562001f33565b620001d562001f95565b6200018462001ff7565b62000184620025ca565b6200022062002654565b604051620001b891906200c1ee565b6200018462002747565b6200024362002e0c565b604051620001b891906200c2c3565b6200022062002ee6565b6200018462002fd0565b62000243620035cf565b62000184620036a9565b6200028462003b68565b6040519015158152602001620001b8565b6200018462003c99565b620001d562003e57565b6200018462003eb9565b6200018462004379565b600054620002849060ff1681565b620002d562000e75565b50604d54603a546020546040516370a0823160e01b81526001600160a01b0391821660048201529281169260009291909116906370a0823190602401602060405180830381865afa1580156200032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035591906200c329565b905062000363811562004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918416906370a0823190602401602060405180830381865afa158015620003b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003d691906200c329565b90506000670de0b6b3a7640000846001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044891906200c329565b6200045490846200c359565b6200046091906200c373565b90506200046f6101f462004678565b6000670de0b6b3a7640000856001600160a01b0316634d02a3f760016040518263ffffffff1660e01b8152600401620004a991906200c3cb565b602060405180830381865afa158015620004c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ed91906200c329565b620004f990856200c359565b6200050591906200c373565b90506000620005bb6040518060400160405280848152602001858152506040518060400160405280604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000581573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a791906200c3e0565b61ffff1681526032602090910152620047d7565b6020546040516303223eab60e11b81526001600160a01b0390911660048201529091506000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200061357600080fd5b505af115801562000628573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b393506200066092169088906004016200c406565b6020604051808303816000875af115801562000680573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a691906200c430565b50602054602854604051636afa028760e01b81526000926001600160a01b03808b1693636afa028793620006e893831692839216908b9089906004016200c480565b6020604051808303816000875af115801562000708573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200072e91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200077e57600080fd5b505af115801562000793573d6000803e3d6000fd5b5050603a546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa158015620007e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080d91906200c329565b90506200081c82821462004600565b5050505050505050565b600062000834600162004883565b60405163975a6ce960e01b81529091506000805160206201e56b833981519152906371ee464d90829063975a6ce990620008739086906004016200c4bd565b600060405180830381865afa15801562000891573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008bb91908101906200c59f565b6051546040518363ffffffff1660e01b8152600401620008dd9291906200c5ed565b6020604051808303816000875af1158015620008fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092391906200c329565b6053556200093062004da9565b60405163975a6ce960e01b81526000805160206201e56b833981519152906371ee464d90829063975a6ce9906200096c9086906004016200c4bd565b600060405180830381865afa1580156200098a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620009b491908101906200c59f565b604f546040518363ffffffff1660e01b8152600401620009d69291906200c5ed565b6020604051808303816000875af1158015620009f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a1c91906200c329565b60525562000a2962004da9565b50565b62000a3662000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562000a89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aaf91906200c329565b905062000abf6000821162004600565b600062000acb62005a3b565b905062000ad9811562004600565b6026546020546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562000b2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b5191906200c329565b905062000b5f811562004600565b6020546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b15801562000bb457600080fd5b505af115801562000bc9573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808916945063095ea7b3935062000c0192169087906004016200c406565b6020604051808303816000875af115801562000c21573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4791906200c430565b506020546026546001600160a01b0380871692636afa028792908216918291168762000c768a82600262005ac2565b6040518663ffffffff1660e01b815260040162000c989594939291906200c480565b6020604051808303816000875af115801562000cb8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cde91906200c329565b506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000d2d57600080fd5b505af115801562000d42573d6000803e3d6000fd5b50506026546020546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562000d93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000db991906200c329565b905062000dc96000821162004600565b62000dd362005a3b565b915062000de36000831162004600565b62000df083831462004600565b6020546040516370a0823160e01b81526001600160a01b039182166004820152908516906370a0823190602401602060405180830381865afa15801562000e3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e6191906200c329565b925062000e6f831562004600565b50505050565b604b54603a54604051631e38fde960e21b815260009283926001600160a01b03918216926378e3f7a49262000eaf9216906004016200c611565b6020604051808303816000875af115801562000ecf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef591906200c666565b9050600062000f076001600062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f61573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f8791906200c6a3565b62000f9490600a6200c7be565b62000fa090836200c359565b905062000faf6126ac62004678565b62000fb96200602a565b602054603a5462000fda9185916001600160a01b03918216911684620061cf565b62000fe6600f62006402565b604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562001038573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200105e91906200c329565b90506200106c811562004600565b60006200107862006480565b905062001089816055541462004600565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af1158015620010d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010fb91906200c430565b9050620011088162004600565b60006200111462006508565b905062001122811562004600565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b1580156200117757600080fd5b505af11580156200118c573d6000803e3d6000fd5b505050506000604b60009054906101000a90046001600160a01b03166001600160a01b031663b88a802f6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620011e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200120e91906200c329565b90506200121a62006508565b91506200122a6000831162004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918816906370a0823190602401602060405180830381865afa15801562001277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200129d91906200c329565b9050620012ad6000821162004600565b620012ba81841462004600565b6000620012c662006480565b9050620012e0620012d882886200c7cf565b841462004600565b50989a9950505050505050505050565b603954602554603a54604e54604051630b4c774160e11b81526000946000805160206201e56b8339815191529463667f9d70946001600160a01b0392831694631698ee829462001359949384169390921691600160b01b90910462ffffff16906004016200c7e5565b602060405180830381865afa15801562001377573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200139d91906200c666565b6040516001600160e01b031960e084901b168152620013c391906000906004016200c406565b602060405180830381865afa158015620013e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200140791906200c329565b90506000806200141662006590565b604b54603a54604051631e38fde960e21b81529395509193506000926001600160a01b03918216926378e3f7a49262001455929116906004016200c611565b6020604051808303816000875af115801562001475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200149b91906200c666565b90506000620014ac60008062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001506573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200152c91906200c6a3565b6200153990600a6200c7be565b620015466002846200c373565b6200155291906200c359565b9050620015616126ac62004678565b6200156b6200602a565b602054603a546200158c9185916001600160a01b03918216911684620061cf565b620015998686866200671a565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918516906370a0823190602401602060405180830381865afa158015620015e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200160c91906200c329565b90506200161c6000821162004600565b6000605454600a6200162f91906200c80d565b90506000805160206201e56b83398151915263e5d6bf026200165283426200c80d565b6040518263ffffffff1660e01b81526004016200167191815260200190565b600060405180830381600087803b1580156200168c57600080fd5b505af1158015620016a1573d6000803e3d6000fd5b505050506000620016b1620067a1565b9050620016c16000821262004600565b620016cb62006828565b604d546001600160a01b0316600080620016e58362006a19565b915091506000620016f562006480565b90506200170964e8d4a51000821062004600565b6020546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200175e57600080fd5b505af115801562001773573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808916945063095ea7b39350620017ab92169087906004016200c406565b6020604051808303816000875af1158015620017cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017f191906200c430565b506020546025546001600160a01b0380871692636afa0287929082169182911687620018208a82600162005ac2565b6040518663ffffffff1660e01b8152600401620018429594939291906200c480565b6020604051808303816000875af115801562001862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200188891906200c329565b506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018d757600080fd5b505af1158015620018ec573d6000803e3d6000fd5b505050506000806200190083878762006d28565b601f5460405163ca669fa760e01b81526001600160a01b03909116600482015291935091506301e19140906000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b1580156200196057600080fd5b505af115801562001975573d6000803e3d6000fd5b5050604b5460405163c28cd66d60e01b8152600481018590526001600160a01b03909116925063c28cd66d9150602401600060405180830381600087803b158015620019c057600080fd5b505af1158015620019d5573d6000803e3d6000fd5b5050505062001a118d602060009054906101000a90046001600160a01b0316603a60009054906101000a90046001600160a01b03168e620061cf565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918f16906370a0823190602401602060405180830381865afa15801562001a5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8491906200c329565b9050600062001a958c60026200c359565b62001aa28d60026200c359565b62001aae90846200c7cf565b62001abc906127106200c359565b62001ac891906200c373565b905062001ad6811562004600565b6000805160206201e56b83398151915263e5d6bf0262001af78d426200c80d565b6040518263ffffffff1660e01b815260040162001b1691815260200190565b600060405180830381600087803b15801562001b3157600080fd5b505af115801562001b46573d6000803e3d6000fd5b5050604b546020546040516246613160e11b81526001600160a01b0391821660048201526000945091169150628cc26290602401602060405180830381865afa15801562001b98573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bbe91906200c329565b905062001beb62001bd4633b9aca00836200c373565b62001be4633b9aca008b6200c373565b1462004600565b600062001bf762006e01565b905062001c078187141562004600565b62001c188162001be4878a6200c373565b62001c2d62001c2662005a3b565b1562004600565b5050505050505050505050505050505050505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801562001c9d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001c7e575b5050505050905090565b62001cb162000e75565b50604d54604051634d02a3f760e01b81526001600160a01b03909116906000908290634d02a3f79062001ce99084906004016200c3cb565b602060405180830381865afa15801562001d07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d2d91906200c329565b90506000826001600160a01b0316634d02a3f760016040518263ffffffff1660e01b815260040162001d6091906200c3cb565b602060405180830381865afa15801562001d7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001da491906200c329565b90506000836001600160a01b0316634d02a3f760026040518263ffffffff1660e01b815260040162001dd791906200c3cb565b602060405180830381865afa15801562001df5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e1b91906200c329565b9050600062001ea58484604b60009054906101000a90046001600160a01b03166001600160a01b0316636260f55b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001e79573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e9f91906200c329565b62006e89565b9050600062001f058484604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562001e79573d6000803e3d6000fd5b905062001f1f82158062001f195750826001145b62004600565b62001f2b811562004600565b505050505050565b6060600f80548060200260200160405190810160405280929190818152602001828054801562001c9d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001c7e575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562001c9d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001c7e575050505050905090565b6200200162000e75565b50604d54603a546020546040516370a0823160e01b81526001600160a01b0391821660048201529281169260009291909116906370a0823190602401602060405180830381865afa1580156200205b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200208191906200c329565b90506200208f811562004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918416906370a0823190602401602060405180830381865afa158015620020dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200210291906200c329565b90506000670de0b6b3a7640000846001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200214e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200217491906200c329565b6200218090846200c359565b6200218c91906200c373565b90506200219b6101f462004678565b6000670de0b6b3a7640000856001600160a01b0316634d02a3f760016040518263ffffffff1660e01b8152600401620021d591906200c3cb565b602060405180830381865afa158015620021f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200221991906200c329565b6200222590856200c359565b6200223191906200c373565b90506000620022ad6040518060400160405280848152602001858152506040518060400160405280604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000581573d6000803e3d6000fd5b601c54602054604b54929350600092839283926000805160206201e56b8339815191529263e341eaa49291620022f1916001600160a01b0391821691168c62006edd565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401606060405180830381865afa15801562002333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200235991906200c823565b6020546040516303223eab60e11b81526001600160a01b03909116600482015292955090935091506000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b158015620023b657600080fd5b505af1158015620023cb573d6000803e3d6000fd5b5050602054604b5460405163d505accf60e01b81526001600160a01b03808f16955063d505accf9450620024119381169216908c9042908a908a908a906004016200c85b565b600060405180830381600087803b1580156200242c57600080fd5b505af115801562002441573d6000803e3d6000fd5b5050602054602854604051636afa028760e01b8152600094506001600160a01b038e81169450636afa0287936200248993908216928392909116908e908c906004016200c480565b6020604051808303816000875af1158015620024a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024cf91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200251f57600080fd5b505af115801562002534573d6000803e3d6000fd5b5050603a546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562002588573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025ae91906200c329565b9050620025bd82821462004600565b5050505050505050505050565b620025d462006f64565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af115801562002620573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200264691906200c430565b905062000a29811562004600565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156200273e5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200272557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620026e65790505b5050505050815250508152602001906001019062002678565b50505050905090565b603954602554603a54604e54604051630b4c774160e11b81526000946000805160206201e56b8339815191529463667f9d70946001600160a01b0392831694631698ee8294620027b0949384169390921691600160b01b90910462ffffff16906004016200c7e5565b602060405180830381865afa158015620027ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027f491906200c666565b6040516001600160e01b031960e084901b1681526200281a91906000906004016200c406565b602060405180830381865afa15801562002838573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200285e91906200c329565b90506000806200286d62006590565b9150915060006200288060008062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620028da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200290091906200c6a3565b6200290d90600a6200c7be565b6200291990836200c359565b603a54602054601c5492935060009262002948926001600160a01b03908116928692911690600180876200711f565b509050620029588686866200671a565b603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620029ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029d291906200c6a3565b620029df90600a6200c7be565b620029ec6002856200c373565b620029f891906200c359565b602154603a5491935062002a1c9183916001600160a01b03908116911685620061cf565b62002a2662006828565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af115801562002a72573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a9891906200c430565b905062002aa58162004600565b602654604d546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562002af7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b1d91906200c329565b90506000604b60009054906101000a90046001600160a01b03166001600160a01b0316632cc3eb0a6040518163ffffffff1660e01b81526004016040805180830381865afa15801562002b74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b9a91906200c89c565b602001519050600062002c2c82612710604b60009054906101000a90046001600160a01b03166001600160a01b031663a5a410316040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002bfe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c2491906200c329565b919062007426565b9050600062002c4060328361271062007426565b62002c4c90836200c7cf565b9050600062002ce2670de0b6b3a7640000604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562002cb3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002cd991906200c329565b84919062007426565b9050600062002cf282876200c7cf565b905062002d0d6001821115801562001f195750600162004600565b602654601f546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562002d5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d8591906200c329565b905062002d956000821162004600565b6000805160206201e58b83398151915260001c6001600160a01b0316633fdf4e156040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002de357600080fd5b505af115801562002df8573d6000803e3d6000fd5b505050505050505050505050505050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200273e57838290600052602060002001805462002e52906200c8d1565b80601f016020809104026020016040519081016040528092919081815260200182805462002e80906200c8d1565b801562002ed15780601f1062002ea55761010080835404028352916020019162002ed1565b820191906000526020600020905b81548152906001019060200180831162002eb357829003601f168201915b50505050508152602001906001019062002e30565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156200273e5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562002fb757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162002f785790505b5050505050815250508152602001906001019062002f0a565b62002fda62000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009060029083906370a0823190602401602060405180830381865afa15801562003030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200305691906200c329565b6200306291906200c373565b6026546020546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620030b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030db91906200c329565b9050620030e9811562004600565b6000670de0b6b3a7640000846001600160a01b0316634d02a3f760026040518263ffffffff1660e01b81526004016200312391906200c3cb565b602060405180830381865afa15801562003141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200316791906200c329565b6200317390856200c359565b6200317f91906200c373565b90506200318d600562004678565b60006200321482604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200320e91906200c3e0565b62007445565b604080516001808252818301909252919250600091906020808301908036833701905050905081816000815181106200325157620032516200c90d565b602090810291909101810191909152546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b158015620032b357600080fd5b505af1158015620032c8573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b393506200330092169089906004016200c406565b6020604051808303816000875af115801562003320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200334691906200c430565b506000866001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003388573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033ae91906200c329565b602054602654604051636afa028760e01b81529293506000926001600160a01b03808c1693636afa028793620033f4939183169283929116908d908a906004016200c480565b6020604051808303816000875af115801562003414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200343a91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200348a57600080fd5b505af11580156200349f573d6000803e3d6000fd5b505050506000886001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620034e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200350a91906200c329565b90506200352e6200351f620186a0836200c373565b62001be4620186a0866200c373565b6026546020546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562003580573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035a691906200c329565b9050620035b66000821162004600565b620035c381841462004600565b50505050505050505050565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200273e57838290600052602060002001805462003615906200c8d1565b80601f016020809104026020016040519081016040528092919081815260200182805462003643906200c8d1565b8015620036945780601f10620036685761010080835404028352916020019162003694565b820191906000526020600020905b8154815290600101906020018083116200367657829003601f168201915b505050505081526020019060010190620035f3565b620036b362000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562003706573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200372c91906200c329565b6026546020546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa1580156200377f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037a591906200c329565b9050620037b3811562004600565b6000670de0b6b3a7640000846001600160a01b0316634d02a3f760026040518263ffffffff1660e01b8152600401620037ed91906200c3cb565b602060405180830381865afa1580156200380b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200383191906200c329565b6200383d90856200c359565b6200384991906200c373565b905062003857600562004678565b6000620038b282604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b60408051600180825281830190925291925060009190602080830190803683370190505090508181600081518110620038ef57620038ef6200c90d565b602090810291909101810191909152546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200395157600080fd5b505af115801562003966573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b393506200399e92169089906004016200c406565b6020604051808303816000875af1158015620039be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039e491906200c430565b50602054602654604051636afa028760e01b81526000926001600160a01b03808b1693636afa02879362003a2693831692839216908c9089906004016200c480565b6020604051808303816000875af115801562003a46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a6c91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003abc57600080fd5b505af115801562003ad1573d6000803e3d6000fd5b50506026546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562003b25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b4b91906200c329565b905062003b5b6000821162004600565b6200081c81831462004600565b60008054610100900460ff161562003b895750600054610100900460ff1690565b60006000805160206201e56b8339815191523b1562003c94576040516000906000805160206201e56b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062003bf69083906519985a5b195960d21b906020016200c406565b60408051601f198184030181529082905262003c1692916020016200c923565b60408051601f198184030181529082905262003c32916200c956565b6000604051808303816000865af19150503d806000811462003c71576040519150601f19603f3d011682016040523d82523d6000602084013e62003c76565b606091505b509150508080602001905181019062003c9091906200c430565b9150505b919050565b6032546040805160048152602481018252602080820180516001600160e01b0316631c0de05160e01b17905282516001918101919091526000818401819052606080830191909152835180830390910181526080820193849052632e5884f960e21b9093526000805160206201e56b8339815191529363b96213e49362003d2f936001600160a01b03909216926084016200c974565b600060405180830381600087803b15801562003d4a57600080fd5b505af115801562003d5f573d6000803e3d6000fd5b5050505062003d6d62003eb9565b60325460408051631c0de05160e01b815290516000926001600160a01b031691631c0de0519160048083019260609291908290030181865afa15801562003db8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dde91906200c9ae565b5050905062003ded8162004600565b6000805160206201e58b83398151915260001c6001600160a01b0316633fdf4e156040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003e3b57600080fd5b505af115801562003e50573d6000803e3d6000fd5b5050505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562001c9d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001c7e575050505050905090565b62003ec362000e75565b50604d546020546040516370a0823160e01b81526001600160a01b03918216600482015291169060009082906370a0823190602401602060405180830381865afa15801562003f16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f3c91906200c329565b6025546020546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562003f8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003fb591906200c329565b905062003fc3811562004600565b6000670de0b6b3a7640000846001600160a01b0316634d02a3f760016040518263ffffffff1660e01b815260040162003ffd91906200c3cb565b602060405180830381865afa1580156200401b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200404191906200c329565b6200404d90856200c359565b6200405991906200c373565b9050620040686101f462004678565b6000620040c382604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b604080516001808252818301909252919250600091906020808301908036833701905050905081816000815181106200410057620041006200c90d565b602090810291909101810191909152546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200416257600080fd5b505af115801562004177573d6000803e3d6000fd5b5050604b5460405163095ea7b360e01b81526001600160a01b03808b16945063095ea7b39350620041af92169089906004016200c406565b6020604051808303816000875af1158015620041cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041f591906200c430565b50602054602554604051636afa028760e01b81526000926001600160a01b03808b1693636afa0287936200423793831692839216908c9089906004016200c480565b6020604051808303816000875af115801562004257573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200427d91906200c329565b90506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620042cd57600080fd5b505af1158015620042e2573d6000803e3d6000fd5b50506025546020546040516370a0823160e01b81526001600160a01b03918216600482015260009450911691506370a0823190602401602060405180830381865afa15801562004336573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200435c91906200c329565b90506200436c6000821162004600565b6200081c82821462004600565b604b54603a54604051631e38fde960e21b81526000926001600160a01b03908116926378e3f7a492620043b392909116906004016200c611565b6020604051808303816000875af1158015620043d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620043f991906200c666565b905060006200440a60008062005c04565b505090506000600a603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562004466573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200448c91906200c6a3565b6200449990600a6200c7be565b620044a590846200c359565b620044b191906200c373565b9050620044bd6200602a565b620044c762006828565b6000805b600a81101562003e5057602054603a54620044f69187916001600160a01b03918216911686620061cf565b62004503600a836200c80d565b91506000805160206201e56b83398151915263e5d6bf026200452684426200c80d565b6040518263ffffffff1660e01b81526004016200454591815260200190565b600060405180830381600087803b1580156200456057600080fd5b505af115801562004575573d6000803e3d6000fd5b5050604b546020546040516246613160e11b81526001600160a01b03918216600482015291169250628cc2629150602401602060405180830381865afa158015620045c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045ea91906200c329565b5080620045f7816200c9cf565b915050620044cb565b8062000a29577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620046669060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000a296200746f565b601f5460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b158015620046cd57600080fd5b505af1158015620046e2573d6000803e3d6000fd5b5050604b54604051632bc8a42d60e01b815261ffff851660048201526001600160a01b039091169250632bc8a42d9150602401600060405180830381600087803b1580156200473057600080fd5b505af115801562004745573d6000803e3d6000fd5b5050505062000a298161ffff16604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620047a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047cc91906200c3e0565b61ffff161462004600565b6040805160028082526060828101909352908181602001602082028036833701905050915060005b818110156200487b57620048468582600281106200482157620048216200c90d565b60200201518583600281106200483b576200483b6200c90d565b602002015162007445565b8382815181106200485b576200485b6200c90d565b60209081029190910101528062004872816200c9cf565b915050620047ff565b505092915050565b606060008260018111156200489c576200489c6200c396565b0362004ae95750602380546001600160a01b031990811673fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb91790915560248054821673af88d065e77c8cc2239327c5edb3a432268e58311790556025805482167382af49447d8a07e3bd95bd0d56f35241523fbab1179055602980548216730f4fb9474303d10905ab86aa8d5a65fe44b6e04a179055602a8054821673c6962004f452be9203591991d15f6b388e09e8d0179055602f8054821673e592427a0aece92de3edee1f18e0157c0586156417905560308054821673639fe6ab55c921f74e7fac1ee960c0b6293ba61217905560318054821673ba12222222228d8ba445958a75a0704d566bf2c817905560268054821673ec70dcb4a1efa46b8f2d97c310c9c4790ba5ffa817905560328054821673ade4a71bb62bec25154cfc7e6ff49a513b491e81179055602b80548216733607e46698d218b3a5cae44bf381475c0a5e2ca7179055602c80548216738b194beae1d3e0788a1a35173978001acdfba66817905560338054821673d6ab2298946840262fcc278ff31516d39ff611ef179055602d80548216733f770ac673856f105b586bb393d122721265ad46179055602e8054821673ce88686553686da562ce7cea497ce749da109f9f1790556027805482167317fc002b466eec40dae837fc4be5c67993ddbd6f17905560288054821673da10009cbd5d07dd0cecc66161fc93d7c9000da11790556037805482169055603980549091169055604080518082019091526008815267617262697472756d60c01b602082015263081de827604f55919050565b600182600181111562004b005762004b006200c396565b0362003c945750602380546001600160a01b031990811673dac17f958d2ee523a2206206994597c13d831ec71790915560248054821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4817905560258054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905560298054821673a2327a938febf5fec13bacfb16ae10ecbc4cbdcf179055602a805482167388e6a0c2ddd26feeb64f039a2c41296fcb3f5640179055602f8054821673e592427a0aece92de3edee1f18e0157c05861564179055603080548216735f4ec3df9cbd43714fe2740f5e3616155c5b841917905560318054821673ba12222222228d8ba445958a75a0704d566bf2c817905560268054821673ae78736cd615f374d3085123a210448e74fc6393179055603280548216731e19cf2d73a72ef1332c882f20534b6519be0276179055602b805482169055602c80548216905560338054821673536218f9e9eb48863970252233c8f271f554c2d0179055602d805482169055602e80548216905560278054821673853d955acef822db058eb8505911ed77f175b99e179055602880548216736b175474e89094c44da98b954eedeac495271d0f179055603780548216731d8f8f00cfa6758d7be78336684788fb0ee0fa4617905560388054821673ac2245be4c2c1e9752499bcd34861b761d62fc27179055603980548216731f98431c8ad98523631ae4a59f267346ea31f984179055603480548216738cfc184c877154a8f9ffe0fe75649dbe5e2dbebf179055603580548216738751f736e94f6cd167e8c5b97e245680fbd9cc361790556036805490911673ddb6f90ffb4d3257dd666b69178e5b3c5bf41136179055604080518082019091526008815267657468657265756d60c01b6020820152630118f82e604f5563011ea3c56050556301244737605155919050565b602854603a80546001600160a01b039283166001600160a01b03199182161790915560248054603b80548416918516919091179055602354603c80549093169316929092179055601b546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529163ffa186499101602060405180830381865afa15801562004e41573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e6791906200c666565b601f80546001600160a01b0319166001600160a01b0392909216919091179055601c546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529063ffa1864990602401602060405180830381865afa15801562004eda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f0091906200c666565b602080546001600160a01b0319166001600160a01b0392909216919091179055601d546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529063ffa1864990602401602060405180830381865afa15801562004f73573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f9991906200c666565b602180546001600160a01b0319166001600160a01b0392909216919091179055601e546040516001625e79b760e01b0319815260048101919091526000805160206201e56b8339815191529063ffa1864990602401602060405180830381865afa1580156200500c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200503291906200c666565b602280546001600160a01b0319166001600160a01b039290921691909117905560405162005060906200c037565b604051809103906000f0801580156200507d573d6000803e3d6000fd5b50603e80546001600160a01b0319166001600160a01b03928316908117909155601f54604051921691620050b1906200c045565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620050e5573d6000803e3d6000fd5b50604080546001600160a01b0319166001600160a01b03929092169190911781555162005112906200c053565b604051809103906000f0801580156200512f573d6000803e3d6000fd5b50603d80546001600160a01b0319166001600160a01b03929092169190911790556040516200515e906200c061565b604051809103906000f0801580156200517b573d6000803e3d6000fd5b50604280546001600160a01b0319166001600160a01b0392909216919091179055604051620051aa906200c06f565b604051809103906000f080158015620051c7573d6000803e3d6000fd5b50604980546001600160a01b0319166001600160a01b0392909216919091179055604051620051f6906200c07d565b604051809103906000f08015801562005213573d6000803e3d6000fd5b50603f80546001600160a01b0319166001600160a01b039290921691909117905560405162005242906200c08b565b604051809103906000f0801580156200525f573d6000803e3d6000fd5b50604580546001600160a01b0319166001600160a01b03929092169190911790556040516200528e906200c098565b604051809103906000f080158015620052ab573d6000803e3d6000fd5b50604480546001600160a01b0319166001600160a01b0392909216919091179055604051620052da906200c0a6565b604051809103906000f080158015620052f7573d6000803e3d6000fd5b50604680546001600160a01b0319166001600160a01b039290921691909117905560405162005326906200c0b3565b604051809103906000f08015801562005343573d6000803e3d6000fd5b50604780546001600160a01b0319166001600160a01b039290921691909117905560405162005372906200c0c1565b604051809103906000f0801580156200538f573d6000803e3d6000fd5b50604880546001600160a01b0319166001600160a01b03928316179055604254604051911690620053c0906200c0cf565b6001600160a01b039091168152602001604051809103906000f080158015620053ed573d6000803e3d6000fd5b50604180546001600160a01b0319166001600160a01b03929092169190911790556040516200541c906200c0dd565b604051809103906000f08015801562005439573d6000803e3d6000fd5b50604a80546001600160a01b0319166001600160a01b039290921691909117905560405162005468906200c0eb565b604051809103906000f08015801562005485573d6000803e3d6000fd5b50604380546001600160a01b0319166001600160a01b0392909216919091179055620054b062007573565b60408051600b8082526101808201909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620054c957505060495490915062005514906001600160a01b031660006200766e565b816000815181106200552a576200552a6200c90d565b6020908102919091010152603f546200554e906001600160a01b031660016200766e565b816001815181106200556457620055646200c90d565b602090810291909101015260455462005588906001600160a01b031660026200766e565b816002815181106200559e576200559e6200c90d565b6020908102919091010152604454620055c2906001600160a01b031660036200766e565b81600381518110620055d857620055d86200c90d565b6020908102919091010152604654620055fc906001600160a01b031660046200766e565b816004815181106200561257620056126200c90d565b602090810291909101015260475462005636906001600160a01b031660056200766e565b816005815181106200564c576200564c6200c90d565b602090810291909101015260485462005670906001600160a01b031660066200766e565b816006815181106200568657620056866200c90d565b6020908102919091010152604154620056aa906001600160a01b031660076200766e565b81600781518110620056c057620056c06200c90d565b6020908102919091010152604a54620056e4906001600160a01b031660086200766e565b81600881518110620056fa57620056fa6200c90d565b6020908102919091010152604e546200571e906001600160a01b031660096200766e565b816009815181106200573457620057346200c90d565b602090810291909101015260435462005758906001600160a01b0316600a6200766e565b81600a815181106200576e576200576e6200c90d565b60209081029190910181019190915260408051608080820183526025546001600160a01b03908116835260265481168386015260248054821684860152602354821660608086019190915285518082018752602f5484168152603154841681890152603254841681880152865160a08082018952603054861682526033548616828b01526034548616828a0152603554861682850152603654861682880152885160e081018a5289548716815260415487169a81019a909a5260375486168a8a0152604e5461ffff600160a01b820416948b019490945262ffffff600160b01b85048116978b0197909752600160c81b9093049095169188019190915260395490921660c087015293519294909391929091600091634173436560e11b91620058a0918891889188918891016200c9eb565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031994909416939093179092528154604b80546001600160a01b0319166001600160a01b03928316179055601f5492516303223eab60e11b81529216600483015291506000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200593e57600080fd5b505af115801562005953573d6000803e3d6000fd5b5050604b54603d546040516307e4c70760e21b81526001600160a01b039283169450631f931c1c935062005990928b92169086906004016200caec565b600060405180830381600087803b158015620059ab57600080fd5b505af1158015620059c0573d6000803e3d6000fd5b50505050620059ce62008411565b620059d862008554565b6000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562005a2657600080fd5b505af1158015620035c3573d6000803e3d6000fd5b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa15801562005a92573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ab891906200cb9d565b5095945050505050565b60606000670de0b6b3a7640000856001600160a01b0316634d02a3f7856040518263ffffffff1660e01b815260040162005afd91906200c3cb565b602060405180830381865afa15801562005b1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b4191906200c329565b62005b4d90866200c359565b62005b5991906200c373565b604080516001808252818301909252919250600091906020808301908036833701905050905062005bd882604b60009054906101000a90046001600160a01b03166001600160a01b0316631a82363e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620031e8573d6000803e3d6000fd5b8160008151811062005bee5762005bee6200c90d565b60209081029190910101529150505b9392505050565b60008080808086600181111562005c1f5762005c1f6200c396565b1462005c2f57620f424062005c32565b60645b62ffffff169050600062005c488260026200c359565b9050600062005c598360036200c359565b905060008762005c6b57600162005c6e565b60035b60ff1667ffffffffffffffff81111562005c8c5762005c8c6200c4d2565b60405190808252806020026020018201604052801562005cb6578160200160208202803683370190505b50603a5481519192506001600160a01b031690829060009062005cdd5762005cdd6200c90d565b60200260200101906001600160a01b031690816001600160a01b031681525050871562005d8057603b5481516001600160a01b03909116908290600190811062005d2b5762005d2b6200c90d565b6001600160a01b039283166020918202929092010152603c5482519116908290600290811062005d5f5762005d5f6200c90d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60005b81518110156200601b5762005e6482828151811062005da65762005da66200c90d565b6020026020010151602060009054906101000a90046001600160a01b031684848151811062005dd95762005dd96200c90d565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005e1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e4591906200c6a3565b62005e5290600a6200c7be565b62005e5e90896200c359565b62009d2d565b62005f3582828151811062005e7d5762005e7d6200c90d565b6020026020010151602160009054906101000a90046001600160a01b031684848151811062005eb05762005eb06200c90d565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005ef6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f1c91906200c6a3565b62005f2990600a6200c7be565b62005e5e90886200c359565b6200600682828151811062005f4e5762005f4e6200c90d565b6020026020010151602260009054906101000a90046001600160a01b031684848151811062005f815762005f816200c90d565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005fc7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005fed91906200c6a3565b62005ffa90600a6200c7be565b62005e5e90876200c359565b8062006012816200c9cf565b91505062005d83565b50929891975095509350505050565b601f546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201e56b833981519152906306447d5690602401600060405180830381600087803b1580156200607f57600080fd5b505af115801562006094573d6000803e3d6000fd5b5050604b5460545460405163cc1a378f60e01b81526001600160a01b03909216935063cc1a378f9250620060ce9160040190815260200190565b600060405180830381600087803b158015620060e957600080fd5b505af1158015620060fe573d6000803e3d6000fd5b5050604b54605554604051633c6b16ab60e01b81526001600160a01b039092169350633c6b16ab9250620061389160040190815260200190565b600060405180830381600087803b1580156200615357600080fd5b505af115801562006168573d6000803e3d6000fd5b505050506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620061ba57600080fd5b505af115801562000e6f573d6000803e3d6000fd5b6020546000906001600160a01b0390811690851603620061f35750601c5462006230565b6021546001600160a01b0390811690851603620062145750601d5462006230565b6022546001600160a01b0390811690851603620062305750601e545b6000620062438684848888600062009d3c565b9050600062006252826200a0a4565b50506040516303223eab60e11b81526001600160a01b03891660048201529192506000805160206201e56b833981519152916306447d569150602401600060405180830381600087803b158015620062a957600080fd5b505af1158015620062be573d6000803e3d6000fd5b5050604b54620062de92506001600160a01b03888116925016866200a0d0565b60006040518060400160405280868152602001838152509050876001600160a01b0316630cae37f182896040516020016200631b9291906200cbde565b604051602081830303815290604052896040518363ffffffff1660e01b81526004016200634a9291906200cc1e565b6020604051808303816000875af11580156200636a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200639091906200c329565b506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620063df57600080fd5b505af1158015620063f4573d6000803e3d6000fd5b505050505050505050505050565b6000805160206201e56b83398151915263e5d6bf026200642383426200c80d565b6040518263ffffffff1660e01b81526004016200644291815260200190565b600060405180830381600087803b1580156200645d57600080fd5b505af115801562006472573d6000803e3d6000fd5b5050505062000a2962006828565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015620064d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620064fd91906200cb9d565b509095945050505050565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa1580156200655f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200658591906200cb9d565b509195945050505050565b6000806000603260009054906101000a90046001600160a01b03166001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620065e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200660f91906200c329565b90506009600062006623838360026200a219565b6026546025546040516bffffffffffffffffffffffff19606093841b811660208301529190921b166034820152909150600090604801604051602081830303815290604052805190602001209050600062006681828460006200a219565b603154604051630667f9d760e41b81529192506000916000805160206201e56b8339815191529163667f9d7091620066c8916001600160a01b03169086906004016200c406565b602060405180830381865afa158015620066e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200670c91906200c329565b989197509095505050505050565b6031546040516370ca10bb60e01b81526000805160206201e56b833981519152916370ca10bb916200675d916001600160a01b031690859087906004016200cc4a565b600060405180830381600087803b1580156200677857600080fd5b505af11580156200678d573d6000803e3d6000fd5b505050506200679c836200a25e565b505050565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015620067f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200681e91906200cb9d565b9695505050505050565b600061019090506000620068bc604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200688b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620068b191906200c329565b839061271062007426565b604b60009054906101000a90046001600160a01b03166001600160a01b031663d4afb73a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562006912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200693891906200c329565b6200694491906200c80d565b6033546040805160048152602481018252602080820180516001600160e01b0316633fabe5a360e21b17905282516000918101829052928301859052606083018190526080830181905260a08301529293506000805160206201e56b8339815191529263b96213e4926001600160a01b03169160c0016040516020818303038152906040526040518463ffffffff1660e01b8152600401620069e9939291906200c974565b600060405180830381600087803b15801562006a0457600080fd5b505af115801562001f2b573d6000803e3d6000fd5b6020546040516370a0823160e01b81526001600160a01b039182166004820152600091829182918516906370a0823190602401602060405180830381865afa15801562006a6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006a9091906200c329565b905062006a9e811562004600565b600062006aaa62006480565b905062006abb816055541462004600565b604b54604080516323a7344360e21b815290516000926001600160a01b031691638e9cd10c916004808301926020929190829003018187875af115801562006b07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006b2d91906200c430565b905062006b3a8162004600565b600062006b4662006508565b905062006b54811562004600565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b15801562006ba957600080fd5b505af115801562006bbe573d6000803e3d6000fd5b505050506000604b60009054906101000a90046001600160a01b03166001600160a01b031663b88a802f6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562006c1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c4091906200c329565b905062006c4c62006508565b915062006c5c6000831162004600565b6020546040516370a0823160e01b81526001600160a01b0391821660048201526000918a16906370a0823190602401602060405180830381865afa15801562006ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ccf91906200c329565b905062006cdf6000821162004600565b600062006ceb62006480565b905062006cfd620012d882886200c7cf565b600062006d0962005a3b565b905062006d17811562004600565b509099919850909650505050505050565b600080600062006d3762006480565b905062006d4681871462004600565b604b546040516370a0823160e01b81526001600160a01b0391821660048201526000918716906370a0823190602401602060405180830381865afa15801562006d93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006db991906200c329565b905062006dca605554821462004600565b600062006dd662005a3b565b905062006de586821462004600565b600062006df162006e01565b9199919850909650505050505050565b600080604b60009054906101000a90046001600160a01b03166001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa15801562006e58573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006e7e91906200cb9d565b509295945050505050565b60006103e8670de0b6b3a764000062006ea384866200c359565b62006eaf91906200c373565b62006ebb91906200c373565b62006ec96103e8866200c373565b62006ed591906200c7cf565b949350505050565b604d54604051623f675f60e91b81526001600160a01b03858116600483015260009262006ed5929116908690869086908490637ecebe00906024015b602060405180830381865afa15801562006f37573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006f5d91906200c329565b426200a3b1565b600062006f7360008062005c04565b505090506000603a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562006fcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ff391906200c6a3565b6200700090600a6200c7be565b6200700c90836200c359565b603a54602054601c5492935060009283926200703e926001600160a01b0391821692879290911690600186806200711f565b6020546040516370a0823160e01b81526001600160a01b039182166004820152929450909250600091908416906370a0823190602401602060405180830381865afa15801562007092573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620070b891906200c329565b9050620070d06001600160a01b038416151562004600565b620070eb620070e3620f4240876200c359565b831462004600565b62003e5068055de6a779bbac00008211801562001f1957506200711786670de0b6b3a76400006200c359565b821062004600565b6000808415620071a957604b54604051631e38fde960e21b81526001600160a01b03909116906378e3f7a4906200715b908c906004016200c611565b6020604051808303816000875af11580156200717b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620071a191906200c666565b9150620071ad565b8891505b603a54600090620071d09084908b908a908c906001600160a01b03168962009d3c565b90506000620071df826200a0a4565b50506040516303223eab60e11b81526001600160a01b038c1660048201529192506000805160206201e56b833981519152916306447d569150602401600060405180830381600087803b1580156200723657600080fd5b505af11580156200724b573d6000803e3d6000fd5b505050508515620072775760405462007271908a906001600160a01b03168c856200a4d5565b620072f7565b603a5460408054905163095ea7b360e01b81526001600160a01b039283169263095ea7b392620072af929116908e906004016200c406565b6020604051808303816000875af1158015620072cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620072f591906200c430565b505b600060405180604001604052808c81526020018381525090506000818b604051602001620073279291906200cbde565b60408051601f1981840301815290829052630cae37f160e01b825291506001600160a01b03871690630cae37f190620073679084908f906004016200cc1e565b6020604051808303816000875af115801562007387573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620073ad91906200c329565b94506000805160206201e58b83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620073fd57600080fd5b505af115801562007412573d6000803e3d6000fd5b505050505050505097509795505050505050565b60008260001904841183021582026200743e57600080fd5b5091020490565b60006200745a8361ffff841661271062007426565b6200746690846200c7cf565b90505b92915050565b6000805160206201e56b8339815191523b1562007562576040516000906000805160206201e56b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620074dd9083906519985a5b195960d21b906001906020016200cc4a565b60408051601f1981840301815290829052620074fd92916020016200c923565b60408051601f198184030181529082905262007519916200c956565b6000604051808303816000865af19150503d806000811462007558576040519150601f19603f3d011682016040523d82523d6000602084013e6200755d565b606091505b505050505b6000805461ff001916610100179055565b60405162007581906200c0f9565b604051809103906000f0801580156200759e573d6000803e3d6000fd5b50604c80546001600160a01b0319166001600160a01b03928316179055601f5460405163ca669fa760e01b8152911660048201526000805160206201e56b8339815191529063ca669fa790602401600060405180830381600087803b1580156200760757600080fd5b505af11580156200761c573d6000803e3d6000fd5b505050506040516200762e906200c107565b604051809103906000f0801580156200764b573d6000803e3d6000fd5b50604e80546001600160a01b0319166001600160a01b0392909216919091179055565b604080516060808201835260008083526020830152918101919091526000826001036200769e5750600262007743565b8260021480620076ae5750826004145b15620076bd5750600162007743565b82600303620076cf5750600362007743565b82600703620076e15750600562007743565b82600903620076f35750600662007743565b8260081480620077035750826005145b15620077125750600462007743565b82600a03620077245750600a62007743565b82600603620077365750600762007743565b82600003620077435750600e5b60008167ffffffffffffffff8111156200776157620077616200c4d2565b6040519080825280602002602001820160405280156200778b578160200160208202803683370190505b5090508360000362007ac7578051637a0ed62760e01b908290600090620077b657620077b66200c90d565b6001600160e01b03199092166020928302919091019091015280516356fe50af60e11b9082906001908110620077f057620077f06200c90d565b6001600160e01b03199092166020928302919091019091015280516314bbdacb60e21b90829060029081106200782a576200782a6200c90d565b6001600160e01b03199092166020928302919091019091015280516366ffd66360e11b90829060039081106200786457620078646200c90d565b6001600160e01b03199092166020928302919091019091015280516301ffc9a760e01b90829060049081106200789e576200789e6200c90d565b6001600160e01b0319909216602092830291909101909101528051630d411b1f60e11b9082906005908110620078d857620078d86200c90d565b6001600160e01b031990921660209283029190910190910152805163a4fc284b60e01b90829060069081106200791257620079126200c90d565b6001600160e01b031990921660209283029190910190910152805163a5a4103160e01b90829060079081106200794c576200794c6200c90d565b6001600160e01b031990921660209283029190910190910152805163423f0b9160e01b90829060089081106200798657620079866200c90d565b6001600160e01b0319909216602092830291909101909101528051630e2acd7560e21b9082906009908110620079c057620079c06200c90d565b6001600160e01b031990921660209283029190910190910152805163524b84db60e11b908290600a908110620079fa57620079fa6200c90d565b6001600160e01b03199092166020928302919091019091015280516318d744b360e21b908290600b90811062007a345762007a346200c90d565b6001600160e01b0319909216602092830291909101909101528051634d2c148760e01b908290600c90811062007a6e5762007a6e6200c90d565b6001600160e01b0319909216602092830291909101909101528051630b86641760e21b908290600d90811062007aa85762007aa86200c90d565b6001600160e01b031990921660209283029190910190910152620083e7565b8360010362007b29578051634980cd9560e11b90829060009062007aef5762007aef6200c90d565b6001600160e01b031990921660209283029190910190910152805163d349975760e01b908290600190811062007aa85762007aa86200c90d565b8360020362007b505763e9e05c4260e01b8160008151811062007aa85762007aa86200c90d565b8360030362007bec578051631e38fde960e21b90829060009062007b785762007b786200c90d565b6001600160e01b031990921660209283029190910190910152805163406d7f2d60e11b908290600190811062007bb25762007bb26200c90d565b6001600160e01b031990921660209283029190910190910152805163725d937960e11b908290600290811062007aa85762007aa86200c90d565b8360040362007c135763e9e05c4360e01b8160008151811062007aa85762007aa86200c90d565b8360050362007ce95780516327a813f960e21b90829060009062007c3b5762007c3b6200c90d565b6001600160e01b03199092166020928302919091019091015280516314370d6760e31b908290600190811062007c755762007c756200c90d565b6001600160e01b031990921660209283029190910190910152805163094463e760e01b908290600290811062007caf5762007caf6200c90d565b6001600160e01b0319909216602092830291909101909101528051631567339f60e31b908290600390811062007aa85762007aa86200c90d565b8360060362007e6d578051636a57db9d60e11b90829060009062007d115762007d116200c90d565b6001600160e01b0319909216602092830291909101909101528051634be9756960e11b908290600190811062007d4b5762007d4b6200c90d565b6001600160e01b0319909216602092830291909101909101528051636260f55b60e01b908290600290811062007d855762007d856200c90d565b6001600160e01b0319909216602092830291909101909101528051637a12625d60e11b908290600390811062007dbf5762007dbf6200c90d565b6001600160e01b03199092166020928302919091019091015280516323a7344360e21b908290600490811062007df95762007df96200c90d565b6001600160e01b0319909216602092830291909101909101528051631661f58560e11b908290600590811062007e335762007e336200c90d565b6001600160e01b031990921660209283029190910190910152805163b0ff97b560e01b908290600690811062007aa85762007aa86200c90d565b8360070362007f7d578051635c60da1b60e01b90829060009062007e955762007e956200c90d565b6001600160e01b0319909216602092830291909101909101528051631b2ce7f360e11b908290600190811062007ecf5762007ecf6200c90d565b6001600160e01b0319909216602092830291909101909101528051638da5cb5b60e01b908290600290811062007f095762007f096200c90d565b6001600160e01b03199092166020928302919091019091015280516338a80c5360e11b908290600390811062007f435762007f436200c90d565b6001600160e01b031990921660209283029190910190910152805163f2fde38b60e01b908290600490811062007aa85762007aa86200c90d565b8360080362008053578051632bc8a42d60e01b90829060009062007fa55762007fa56200c90d565b6001600160e01b0319909216602092830291909101909101528051635acb2ecb60e01b908290600190811062007fdf5762007fdf6200c90d565b6001600160e01b0319909216602092830291909101909101528051633bba4b3560e01b90829060029081106200801957620080196200c90d565b6001600160e01b031990921660209283029190910190910152805163cffd849360e01b908290600390811062007aa85762007aa86200c90d565b836009036200819d5780516369ad444760e11b9082906000906200807b576200807b6200c90d565b6001600160e01b03199092166020928302919091019091015280516371edfb9f60e01b9082906001908110620080b557620080b56200c90d565b6001600160e01b0319909216602092830291909101909101528051636dbb22d760e11b9082906002908110620080ef57620080ef6200c90d565b6001600160e01b031990921660209283029190910190910152805163d36de10b60e01b90829060039081106200812957620081296200c90d565b6001600160e01b031990921660209283029190910190910152805163335c7bbd60e01b90829060049081106200816357620081636200c90d565b6001600160e01b031990921660209283029190910190910152805163f1b5084b60e01b908290600590811062007aa85762007aa86200c90d565b83600a03620083e757805163cc1a378f60e01b908290600090620081c557620081c56200c90d565b6001600160e01b0319909216602092830291909101909101528051633c6b16ab60e01b9082906001908110620081ff57620081ff6200c90d565b6001600160e01b03199092166020928302919091019091015280516380faa57d60e01b90829060029081106200823957620082396200c90d565b6001600160e01b031990921660209283029190910190910152805163cd3daf9d60e01b90829060039081106200827357620082736200c90d565b6001600160e01b03199092166020928302919091019091015280516246613160e11b9082906004908110620082ac57620082ac6200c90d565b6001600160e01b031990921660209283029190910190910152805163b88a802f60e01b9082906005908110620082e657620082e66200c90d565b6001600160e01b031990921660209283029190910190910152805163c3ae3a0960e01b90829060069081106200832057620083206200c90d565b6001600160e01b031990921660209283029190910190910152805163c28cd66d60e01b90829060079081106200835a576200835a6200c90d565b6001600160e01b03199092166020928302919091019091015280516241fec360e31b90829060089081106200839357620083936200c90d565b6001600160e01b0319909216602092830291909101909101528051631f42639960e21b9082906009908110620083cd57620083cd6200c90d565b6001600160e01b0319909216602092830291909101909101525b604080516060810182526001600160a01b0396909616865260006020870152850152509192915050565b604b5460565460555460405160a06024820152600460c48201526313de995b60e21b60e482015260e0604482015260036101048201526213d69360ea1b6101248201526001600160a01b039093166064840152608483019190915260a48201526000906101440160408051601f198184030181529181526020820180516001600160e01b0316633a41189960e11b179052604c54604e5491519293506001600160a01b03908116929116908390620084c9906200c115565b620084d7939291906200cc6b565b604051809103906000f080158015620084f4573d6000803e3d6000fd5b50604d80546001600160a01b0319166001600160a01b03928316908117909155604b54604051633bba4b3560e01b8152600481019290925290911690633bba4b3590602401600060405180830381600087803b15801562003e3b57600080fd5b60448054604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e918101919091526d6f7a546f6b656e466163746f727960901b60648201526000805160206201e56b8339815191529063c657c71890608401600060405180830381600087803b158015620085d057600080fd5b505af1158015620085e5573d6000803e3d6000fd5b5050603d546040516318caf8e360e31b81526000805160206201e56b833981519152935063c657c718925062008628916001600160a01b0316906004016200cc99565b600060405180830381600087803b1580156200864357600080fd5b505af115801562008658573d6000803e3d6000fd5b5050604754604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152676f7a456e67696e6560c01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620086cf57600080fd5b505af1158015620086e4573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600560448201526437bbb732b960d91b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200875857600080fd5b505af11580156200876d573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526005604482015264416c69636560d81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620087e157600080fd5b505af1158015620087f6573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260036044820152622137b160e91b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200886857600080fd5b505af11580156200887d573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b0390921660048301529181019190915260096044820152685553444370726f787960b81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620088f857600080fd5b505af11580156200890d573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631554d11560e21b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200898557600080fd5b505af11580156200899a573d6000803e3d6000fd5b50506040805481516318caf8e360e31b81526001600160a01b039091166004820152602481019190915260096044820152681bde911a585b5bdb9960ba1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008a1457600080fd5b505af115801562008a29573d6000803e3d6000fd5b5050603d546040516318caf8e360e31b81526000805160206201e56b833981519152935063c657c718925062008a6c916001600160a01b0316906004016200cc99565b600060405180830381600087803b15801562008a8757600080fd5b505af115801562008a9c573d6000803e3d6000fd5b5050603e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600f60448201526e111a585b5bdb9910dd5d119858d95d608a1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008b1a57600080fd5b505af115801562008b2f573d6000803e3d6000fd5b5050604954604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260076044820152666f7a4c6f75706560c81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008ba557600080fd5b505af115801562008bba573d6000803e3d6000fd5b5050603f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d13dddb995c9cda1a5c119858d95d60921b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008c3757600080fd5b505af115801562008c4c573d6000803e3d6000fd5b5050604554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d4d6972726f7245786368616e676560901b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008cc957600080fd5b505af115801562008cde573d6000803e3d6000fd5b5050604654604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526005604482015264506f6f6c7360d81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008d5257600080fd5b505af115801562008d67573d6000803e3d6000fd5b5050602f54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526011604482015270053776170526f75746572556e697377617607c1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008de757600080fd5b505af115801562008dfc573d6000803e3d6000fd5b5050603054604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601360448201527245544855534466656564436861696e6c696e6b60681b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008e7e57600080fd5b505af115801562008e93573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630ae8aa8960e31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008f0b57600080fd5b505af115801562008f20573d6000803e3d6000fd5b5050602954604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152671554d110da5b5c1b60c21b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562008f9757600080fd5b505af115801562008fac573d6000803e3d6000fd5b5050602a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600e60448201526d77657468557364506f6f6c556e6960901b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200902957600080fd5b505af11580156200903e573d6000803e3d6000fd5b5050603254604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260146044820152733922aa242ba2aa243837b7b62130b630b731b2b960611b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620090c157600080fd5b505af1158015620090d6573d6000803e3d6000fd5b5050603154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600d60448201526c2b30bab63a2130b630b731b2b960991b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200915257600080fd5b505af115801562009167573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152602260448201527f416363657373436f6e74726f6c6c65644f6666636861696e416767726567617460648201526137b960f11b60848201526000805160206201e56b833981519152925063c657c718915060a401600060405180830381600087803b158015620091fe57600080fd5b505af115801562009213573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260066044820152650c2caae8aa8960d31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200928857600080fd5b505af11580156200929d573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630e48aa8960e31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200931557600080fd5b505af11580156200932a573d6000803e3d6000fd5b5050602d54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152671c9155121a5b5c1b60c21b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620093a157600080fd5b505af1158015620093b6573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260156044820152742332b2b9a1b7b63632b1ba37b92130b630b731b2b960591b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200943a57600080fd5b505af11580156200944f573d6000803e3d6000fd5b5050604854604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152676f7a4f7261636c6560c01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620094c657600080fd5b505af1158015620094db573d6000803e3d6000fd5b5050604154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201526737bd2132b0b1b7b760c11b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200955257600080fd5b505af115801562009567573d6000803e3d6000fd5b5050604254604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601560448201527437bd2a37b5b2b724b6b83632b6b2b73a30ba34b7b760591b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620095eb57600080fd5b505af115801562009600573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b03909216600480840191909152602483019190915260448201526308ca482b60e31b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200967857600080fd5b505af11580156200968d573d6000803e3d6000fd5b5050604a54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260056044820152641bde90dd5d60da1b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200970157600080fd5b505af115801562009716573d6000803e3d6000fd5b5050603754604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526011604482015270726f636b6574506f6f6c53746f7261676560781b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200979657600080fd5b505af1158015620097ab573d6000803e3d6000fd5b5050603354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201526f72457468457468436861696e6c696e6b60801b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200982a57600080fd5b505af11580156200983f573d6000803e3d6000fd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526244414960e81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620098b157600080fd5b505af1158015620098c6573d6000803e3d6000fd5b5050603954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a604482015269756e69466163746f727960b01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b1580156200993f57600080fd5b505af115801562009954573d6000803e3d6000fd5b5050604c54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260096044820152684f5a4c5f4c6f67696360b81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620099cc57600080fd5b505af1158015620099e1573d6000803e3d6000fd5b5050604d54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260096044820152684f5a4c5f50726f787960b81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009a5957600080fd5b505af115801562009a6e573d6000803e3d6000fd5b5050604e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201526827ad262fa7bbb732b960b91b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009ae657600080fd5b505af115801562009afb573d6000803e3d6000fd5b5050604354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600b60448201526a4f5a4c5f5265776172647360a81b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009b7557600080fd5b505af115801562009b8a573d6000803e3d6000fd5b5050603454604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201526b74656c6c6f724f7261636c6560a01b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009c0557600080fd5b505af115801562009c1a573d6000803e3d6000fd5b5050603554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201526f776545544845544872656453746f6e6560801b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b15801562009c9957600080fd5b505af115801562009cae573d6000803e3d6000fd5b5050603654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201526f776545544855534472656453746f6e6560801b60648201526000805160206201e56b833981519152925063c657c7189150608401600060405180830381600087803b158015620061ba57600080fd5b6200679c83838360006200a68f565b6060600182600181111562009d555762009d556200c396565b0362009e6757604b5460408051630d411b1f60e11b815290516001600160a01b0390921691632e19905c9189918b918591631a82363e916004808201926020929091908290030181865afa15801562009db2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009dd891906200c3e0565b6040516001600160e01b031960e086901b16815260048101939093526001600160a01b03918216602484015261ffff16604483015287166064820152608401600060405180830381865afa15801562009e35573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262009e5f91908101906200c59f565b90506200681e565b600082600181111562009e7e5762009e7e6200c396565b036200681e57604b54603a5460408051630d411b1f60e11b815290516000936001600160a01b039081169363a49709b6938c9392909116918591631a82363e9160048083019260209291908290030181865afa15801562009ee3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009f0991906200c3e0565b6040516001600160e01b031960e086901b16815260048101939093526001600160a01b03909116602483015261ffff166044820152606401600060405180830381865afa15801562009f5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262009f8991908101906200cd4e565b602001516028549091506000906001600160a01b0386811691161462009fc95760405462009fc39087906001600160a01b03168a6200a88e565b62009fe2565b60405462009fe29087906001600160a01b03166200a8cf565b6040516338d07aa960e21b81526004810189905260248101829052909150600090819081906000805160206201e56b8339815191529063e341eaa490604401606060405180830381865afa1580156200a03f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a06591906200c823565b925092509250848383836040516020016200a08494939291906200cdcd565b604051602081830303815290604052955050505050509695505050505050565b60606000806000848060200190518101906200a0c191906200ce01565b92989197509550909350915050565b8015806200a14e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200a126573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a14c91906200c329565b155b6200a1bf5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6200679c8363095ea7b360e01b84846040516024016200a1e19291906200c406565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526200a955565b60008184846040516020016200a239929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c62006ed591906200c80d565b604080516bffffffffffffffffffffffff198316602082015260a083901b6001600160a01b031981166034830152918391600091016040516020818303038152906040526200a2ad906200ce65565b603954602554603a54604e54604051630b4c774160e11b81529495506000805160206201e56b833981519152946370ca10bb946001600160a01b0390811694631698ee82946200a3159491831693921691600160b01b90910462ffffff16906004016200c7e5565b602060405180830381865afa1580156200a333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a35991906200c666565b6040516001600160e01b031960e084901b1681526200a381919060009086906004016200cc4a565b600060405180830381600087803b1580156200a39c57600080fd5b505af11580156200081c573d6000803e3d6000fd5b6000866001600160a01b0316633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200a3f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a41891906200c329565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808a169282019290925290871660608201526080810186905260a0810185905260c0810184905260e0015b604051602081830303815290604052805190602001206040516020016200a4b392919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090509695505050505050565b60008060006200a4e5846200a0a4565b602854603a5493975091955093506001600160a01b0390811691160390506200a61857603a54604051623f675f60e91b81526001600160a01b03898116600483015290911690638fcbaf0c90899089908490637ecebe0090602401602060405180830381865afa1580156200a55e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a58491906200c329565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201524260648201526001608482015260ff861660a482015260c4810185905260e4810184905261010401600060405180830381600087803b1580156200a5f957600080fd5b505af11580156200a60e573d6000803e3d6000fd5b505050506200a686565b603a5460405163d505accf60e01b81526001600160a01b039091169063d505accf906200a656908a908a908a9042908a908a908a906004016200c85b565b600060405180830381600087803b1580156200a67157600080fd5b505af1158015620025bd573d6000803e3d6000fd5b50505050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200a6e5916200c956565b6000604051808303816000865af19150503d80600081146200a724576040519150601f19603f3d011682016040523d82523d6000602084013e6200a729565b606091505b509150506000818060200190518101906200a74591906200c329565b90506200a77f846200a778876200a7716370a0823160e01b6200a76a60058d6200aa31565b906200aa57565b906200aa75565b906200aa9e565b821562001f2b5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200a7ca91906200c956565b6000604051808303816000865af19150503d80600081146200a809576040519150601f19603f3d011682016040523d82523d6000602084013e6200a80e565b606091505b509150506000818060200190518101906200a82a91906200c329565b9050828610156200a855576200a84186846200c7cf565b6200a84d90826200c7cf565b90506200a870565b6200a86183876200c7cf565b6200a86d90826200c80d565b90505b6200081c816200a7786318160ddd60e01b6200a76a60058d6200aa31565b603a54604051623f675f60e91b81526001600160a01b03858116600483015260009262006ed5929116908690869086908490637ecebe009060240162006f19565b603a54604051623f675f60e91b81526001600160a01b0384811660048301526000926200746692911690859085908390637ecebe0090602401602060405180830381865afa1580156200a926573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a94c91906200c329565b4260016200aaae565b60006200a9ac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200abbe9092919063ffffffff16565b90508051600014806200a9d05750808060200190518101906200a9d091906200c430565b6200679c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200a1b6565b6005820180546001600160a01b0319166001600160a01b03831617905560008262007466565b60038201805463ffffffff191660e083901c17905560008262007466565b6002820180546001810182556000918252602082206001600160a01b0384169101558262007466565b6200aaaa82826200abcf565b5050565b6000866001600160a01b0316633644e5156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200aaef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ab1591906200c329565b876001600160a01b03166330adf81f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200ab54573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ab7a91906200c329565b6040805160208101929092526001600160a01b03808a1691830191909152871660608201526080810186905260a0810185905283151560c082015260e0016200a475565b606062006ed584846000856200af36565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200ac4257602002820191906000526020600020905b8154815260200190600101908083116200ac2d575b505050505090506000836200ac57836200b019565b6040516020016200ac6a9291906200c923565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200acbe9186918891016200ce8a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200acf9576200acf7876200b0cd565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200ad3a9187918991016200ce8a565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516200ad8191906200c956565b600060405180830381855afa9150503d80600081146200adbe576040519150601f19603f3d011682016040523d82523d6000602084013e6200adc3565b606091505b5091506200ade09050816200adda8860206200c359565b6200b0da565b604051630667f9d760e41b8152909250600091506000805160206201e56b8339815191529063667f9d70906200ae1d908b9087906004016200c406565b602060405180830381865afa1580156200ae3b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ae6191906200c329565b90508082146200ae855760405162461bcd60e51b81526004016200a1b6906200cec6565b6040516370ca10bb60e01b81526000805160206201e56b833981519152906370ca10bb906200aebd908b9087908e906004016200cc4a565b600060405180830381600087803b1580156200aed857600080fd5b505af11580156200aeed573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200af2260028b0160006200c123565b896004016000905550505050505050505050565b6060824710156200af995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200a1b6565b600080866001600160a01b031685876040516200afb791906200c956565b60006040518083038185875af1925050503d80600081146200aff6576040519150601f19603f3d011682016040523d82523d6000602084013e6200affb565b606091505b50915091506200b00e878383876200b164565b979650505050505050565b60606000825160206200b02d91906200c359565b67ffffffffffffffff8111156200b048576200b0486200c4d2565b6040519080825280601f01601f1916602001820160405280156200b073576020820181803683370190505b50905060005b83518110156200b0c65760008482815181106200b09a576200b09a6200c90d565b6020026020010151905080826020026020018401525080806200b0bd906200c9cf565b9150506200b079565b5092915050565b600062007469826200b1e4565b600080600060208551116200b0f15784516200b0f4565b60205b905060005b818110156200b15a576200b10f8160086200c359565b866200b11c83886200c80d565b815181106200b12f576200b12f6200c90d565b01602001516001600160f81b031916901c9290921791806200b151816200c9cf565b9150506200b0f9565b5090949350505050565b606083156200b1d85782516000036200b1d0576001600160a01b0385163b6200b1d05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200a1b6565b508162006ed5565b62006ed583836200bedd565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200b25657602002820191906000526020600020905b8154815260200190600101908083116200b241575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200b2a2925085918791016200ce8a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200b341576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200b3119185918791016200ce8a565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836200b34f836200bf0a565b6040516020016200b3629291906200c923565b60405160208183030381529060405290506000805160206201e58b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200b3c157600080fd5b505af11580156200b3d6573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516200b3f791906200c956565b600060405180830381855afa9150503d80600081146200b434576040519150601f19603f3d011682016040523d82523d6000602084013e6200b439565b606091505b5091506200b4569050816200b4508760206200c359565b6200bfb7565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206201e56b833981519152906365bc9481906024016000604051808303816000875af11580156200b4b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200b4dd91908101906200cf61565b50905080516001036200b7a45760006000805160206201e58b83398151915260001c6001600160a01b031663667f9d7089846000815181106200b524576200b5246200c90d565b60200260200101516040518363ffffffff1660e01b81526004016200b54b9291906200c406565b602060405180830381865afa1580156200b569573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b58f91906200c329565b9050806200b5f3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200b5cf576200b5cf6200c90d565b602002602001015160001c6040516200b5ea9291906200c406565b60405180910390a15b8083146200b6155760405162461bcd60e51b81526004016200a1b6906200cec6565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200b64d9291906200ce8a565b60405160208183030381529060405280519060200120856000815181106200b679576200b6796200c90d565b602002602001015160001c6040516200b69694939291906200cfcc565b60405180910390a1816000815181106200b6b4576200b6b46200c90d565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c16835284528082209051929390926200b6ff918a918c91016200ce8a565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200b769918a918c91016200ce8a565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506200bd60565b6001815111156200bcef5760005b81518110156200bce85760006000805160206201e58b83398151915260001c6001600160a01b031663667f9d708a8585815181106200b7f5576200b7f56200c90d565b60200260200101516040518363ffffffff1660e01b81526004016200b81c9291906200c406565b602060405180830381865afa1580156200b83a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b86091906200c329565b9050806200b8c3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200b89f576200b89f6200c90d565b602002602001015160001c6040516200b8ba9291906200c406565b60405180910390a15b6000805160206201e58b83398151915260001c6001600160a01b03166370ca10bb8a8585815181106200b8fa576200b8fa6200c90d565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016200b928939291906200cc4a565b600060405180830381600087803b1580156200b94357600080fd5b505af11580156200b958573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200b97a91906200c956565b600060405180830381855afa9150503d80600081146200b9b7576040519150601f19603f3d011682016040523d82523d6000602084013e6200b9bc565b606091505b5090925090506200b9d4816200b4508b60206200c359565b95508180156200b9e8575061133760f01b86145b156200bc3b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200ba269291906200ce8a565b604051602081830303815290604052805190602001208888815181106200ba51576200ba516200c90d565b602002602001015160001c6040516200ba6e94939291906200cfcc565b60405180910390a18484815181106200ba8b576200ba8b6200c90d565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200bad6918d918f91016200ce8a565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200bb639291906200ce8a565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206201e58b83398151915260001c6001600160a01b03166370ca10bb8c8787815181106200bbd5576200bbd56200c90d565b6020026020010151866040518463ffffffff1660e01b81526004016200bbfe939291906200cc4a565b600060405180830381600087803b1580156200bc1957600080fd5b505af11580156200bc2e573d6000803e3d6000fd5b505050505050506200bce8565b6000805160206201e58b83398151915260001c6001600160a01b03166370ca10bb8c8787815181106200bc72576200bc726200c90d565b6020026020010151866040518463ffffffff1660e01b81526004016200bc9b939291906200cc4a565b600060405180830381600087803b1580156200bcb657600080fd5b505af11580156200bccb573d6000803e3d6000fd5b5050505050505080806200bcdf906200c9cf565b9150506200b7b2565b506200bd60565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016200a1b6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916200bda49188918a91016200ce8a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200be335760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016200a1b6565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200be6460028a0160006200c123565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200beaa9188918a91016200ce8a565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b8151156200beee5781518083602001fd5b8060405162461bcd60e51b81526004016200a1b691906200c4bd565b60606000825160206200bf1e91906200c359565b67ffffffffffffffff8111156200bf39576200bf396200c4d2565b6040519080825280601f01601f1916602001820160405280156200bf64576020820181803683370190505b50905060005b83518110156200b0c65760008482815181106200bf8b576200bf8b6200c90d565b6020026020010151905080826020026020018401525080806200bfae906200c9cf565b9150506200bf6a565b600080600060208551116200bfce5784516200bfd1565b60205b905060005b818110156200b15a576200bfec8160086200c359565b866200bff983886200c80d565b815181106200c00c576200c00c6200c90d565b01602001516001600160f81b031916901c9290921791806200c02e816200c9cf565b9150506200bfd6565b6113af806200cffd83390190565b6113b2806200e3ac83390190565b61087f806200f75e83390190565b612220806200ffdd83390190565b61130d80620121fd83390190565b610268806201350a83390190565b6094806201377283390190565b61144a806201380683390190565b60948062014c5083390190565b611caf8062014ce483390190565b611ec8806201699383390190565b6104c0806201885b83390190565b61163b8062018d1b83390190565b610a68806201a35683390190565b612382806201adbe83390190565b6105f1806201d14083390190565b610e3a806201d73183390190565b508054600082559060005260206000209081019062000a2991905b808211156200c15457600081556001016200c13e565b5090565b6020808252825182820181905260009190848201906040850190845b818110156200c19b5783516001600160a01b0316835292840192918401916001016200c174565b50909695505050505050565b600081518084526020808501945080840160005b838110156200c1e35781516001600160e01b031916875295820195908201906001016200c1bb565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200c26157888303603f19018552815180516001600160a01b031684528701518784018790526200c24d878501826200c1a7565b95880195935050908601906001016200c215565b509098975050505050505050565b60005b838110156200c28c5781810151838201526020016200c272565b50506000910152565b600081518084526200c2af8160208601602086016200c26f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200c31c57603f198886030184526200c3098583516200c295565b945092850192908501906001016200c2ea565b5092979650505050505050565b6000602082840312156200c33c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200746957620074696200c343565b6000826200c39157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6003811062000a2957634e487b7160e01b600052602160045260246000fd5b602081016200c3da836200c3ac565b91905290565b6000602082840312156200c3f357600080fd5b815161ffff8116811462005bfd57600080fd5b6001600160a01b03929092168252602082015260400190565b8051801515811462003c9457600080fd5b6000602082840312156200c44357600080fd5b62007466826200c41f565b600081518084526020808501945080840160005b838110156200c1e3578151875295820195908201906001016200c462565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0608082018190526000906200b00e908301846200c44e565b6020815260006200746660208301846200c295565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156200c50e576200c50e6200c4d2565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156200c540576200c5406200c4d2565b604052919050565b600067ffffffffffffffff8311156200c565576200c5656200c4d2565b6200c57a601f8401601f19166020016200c514565b90508281528383830111156200c58f57600080fd5b62005bfd8360208301846200c26f565b6000602082840312156200c5b257600080fd5b815167ffffffffffffffff8111156200c5ca57600080fd5b8201601f810184136200c5dc57600080fd5b62006ed5848251602084016200c548565b6040815260006200c60260408301856200c295565b90508260208301529392505050565b6001600160a01b03919091168152606060208201819052600a908201526904f7a656c2d45524332360b41b608082015260a0604082018190526007908201526606f7a45524332360cc1b60c082015260e00190565b6000602082840312156200c67957600080fd5b81516001600160a01b038116811462005bfd57600080fd5b805160ff8116811462003c9457600080fd5b6000602082840312156200c6b657600080fd5b62007466826200c691565b600181815b808511156200c7025781600019048211156200c6e6576200c6e66200c343565b808516156200c6f457918102915b93841c93908002906200c6c6565b509250929050565b6000826200c71b5750600162007469565b816200c72a5750600062007469565b81600181146200c74357600281146200c74e576200c76e565b600191505062007469565b60ff8411156200c762576200c7626200c343565b50506001821b62007469565b5060208310610133831016604e8410600b84101617156200c793575081810a62007469565b6200c79f83836200c6c1565b80600019048211156200c7b6576200c7b66200c343565b029392505050565b60006200746660ff8416836200c70a565b818103818111156200746957620074696200c343565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b808201808211156200746957620074696200c343565b6000806000606084860312156200c83957600080fd5b6200c844846200c691565b925060208401519150604084015190509250925092565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6000604082840312156200c8af57600080fd5b6200c8b96200c4e8565b82518152602083015160208201528091505092915050565b600181811c908216806200c8e657607f821691505b6020821081036200c90757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6001600160e01b03198316815281516000906200c9488160048501602087016200c26f565b919091016004019392505050565b600082516200c96a8184602087016200c26f565b9190910192915050565b6001600160a01b03841681526060602082018190526000906200c99a908301856200c295565b82810360408401526200681e81856200c295565b6000806000606084860312156200c9c457600080fd5b6200c844846200c41f565b6000600182016200c9e4576200c9e46200c343565b5060010190565b84516001600160a01b0390811682526020808701518216818401526040808801518316818501526060808901518416818601528751841660808087019190915288840151851660a087015288830151851660c08701528751851660e0870152928701518416610100860152908601518316610120850152850151821661014084015284015116610160820152610260810182516001600160a01b03908116610180840152602084015181166101a0840152604084015181166101c0840152606084015161ffff166101e0840152608084015162ffffff90811661020085015260a08501511661022084015260c0840151166102408301525b95945050505050565b6000606080830181845280875180835260808601915060808160051b87010192506020808a0160005b838110156200cb7757888603607f19018552815180516001600160a01b03168752838101516200cb45816200c3ac565b878501526040908101519087018890526200cb63888801826200c1a7565b96505093820193908201906001016200cb15565b50506001600160a01b03891690870152505083810360408501526200b00e81866200c295565b600080600080600060a086880312156200cbb657600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b604081528251604082015260006020840151604060608401526200cc0660808401826200c44e565b91505060018060a01b03831660208301529392505050565b6040815260006200cc3360408301856200c295565b905060018060a01b03831660208301529392505050565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b038481168252831660208201526060604082018190526000906200cae3908301846200c295565b6001600160a01b03919091168152604060208201819052600b908201526a111a585b5bdb99125b9a5d60aa1b606082015260800190565b600082601f8301126200cce257600080fd5b8151602067ffffffffffffffff8211156200cd01576200cd016200c4d2565b8160051b6200cd128282016200c514565b92835284810182019282810190878511156200cd2d57600080fd5b83870192505b848310156200b00e578251825291830191908301906200cd33565b6000602082840312156200cd6157600080fd5b815167ffffffffffffffff808211156200cd7a57600080fd5b90830190604082860312156200cd8f57600080fd5b6200cd996200c4e8565b825181526020830151828111156200cdb057600080fd5b6200cdbe878286016200ccd0565b60208301525095945050505050565b6080815260006200cde260808301876200c44e565b60ff959095166020830152506040810192909252606090910152919050565b600080600080608085870312156200ce1857600080fd5b845167ffffffffffffffff8111156200ce3057600080fd5b6200ce3e878288016200ccd0565b9450506200ce4f602086016200c691565b6040860151606090960151949790965092505050565b805160208083015191908110156200c9075760001960209190910360031b1b16919050565b825160009082906020808701845b838110156200ceb6578151855293820193908201906001016200ce98565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b600080604083850312156200cf7557600080fd5b825167ffffffffffffffff808211156200cf8e57600080fd5b6200cf9c868387016200ccd0565b935060208501519150808211156200cfb357600080fd5b506200cfc2858286016200ccd0565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b5061138f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610d6a565b610045565b005b61004d61009e565b61009761005a8587610eb0565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011a92505050565b5050505050565b6000805160206112ee833981519152600401546001600160a01b031633146101185760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084015b60405180910390fd5b565b60005b83518110156102e057600084828151811061013a5761013a610ff4565b60200260200101516020015190506000600281111561015b5761015b61100a565b81600281111561016d5761016d61100a565b036101bb576101b685838151811061018757610187610ff4565b6020026020010151600001518684815181106101a5576101a5610ff4565b60200260200101516040015161032b565b6102cd565b60018160028111156101cf576101cf61100a565b03610218576101b68583815181106101e9576101e9610ff4565b60200260200101516000015186848151811061020757610207610ff4565b6020026020010151604001516104a3565b600281600281111561022c5761022c61100a565b03610275576101b685838151811061024657610246610ff4565b60200260200101516000015186848151811061026457610264610ff4565b602002602001015160400151610633565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b606482015260840161010f565b50806102d881611036565b91505061011d565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103149392919061109f565b60405180910390a16103268282610751565b505050565b600081511161034c5760405162461bcd60e51b815260040161010f9061119f565b6000805160206112ee8339815191526001600160a01b0383166103815760405162461bcd60e51b815260040161010f906111ea565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036103b7576103b78285610817565b60005b83518110156100975760008482815181106103d7576103d7610ff4565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104755760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b606482015260840161010f565b6104818583868a610881565b8361048b81611236565b9450505050808061049b90611036565b9150506103ba565b60008151116104c45760405162461bcd60e51b815260040161010f9061119f565b6000805160206112ee8339815191526001600160a01b0383166104f95760405162461bcd60e51b815260040161010f906111ea565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361052f5761052f8285610817565b60005b835181101561009757600084828151811061054f5761054f610ff4565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036105fa5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606482015260840161010f565b610605858284610921565b6106118583868a610881565b8361061b81611236565b9450505050808061062b90611036565b915050610532565b60008151116106545760405162461bcd60e51b815260040161010f9061119f565b6000805160206112ee8339815191526001600160a01b038316156106d95760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b606482015260840161010f565b60005b825181101561074b5760008382815181106106f9576106f9610ff4565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610736848284610921565b5050808061074390611036565b9150506106dc565b50505050565b6001600160a01b038216610763575050565b6107858260405180606001604052806028815260200161130e60289139610ce4565b600080836001600160a01b0316836040516107a0919061125c565b600060405180830381855af49150503d80600081146107db576040519150601f19603f3d011682016040523d82523d6000602084013e6107e0565b606091505b50915091508161074b578051156107fa5780518082602001fd5b838360405163192105d760e01b815260040161010f929190611278565b6108398160405180606001604052806024815260200161133660249139610ce4565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661099d5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606482015260840161010f565b306001600160a01b03831603610a0c5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b606482015260840161010f565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610a5b916112a4565b9050808214610b4d576001600160a01b03841660009081526001860160205260408120805483908110610a9057610a90610ff4565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610ae157610ae1610ff4565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610b7657610b766112bd565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610097576002850154600090610bd9906001906112a4565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610c88576000876002018381548110610c1857610c18610ff4565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c4957610c49610ff4565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610c9b57610c9b6112bd565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b818161074b5760405162461bcd60e51b815260040161010f91906112d3565b80356001600160a01b0381168114610d1c57600080fd5b919050565b60008083601f840112610d3357600080fd5b50813567ffffffffffffffff811115610d4b57600080fd5b602083019150836020828501011115610d6357600080fd5b9250929050565b600080600080600060608688031215610d8257600080fd5b853567ffffffffffffffff80821115610d9a57600080fd5b818801915088601f830112610dae57600080fd5b813581811115610dbd57600080fd5b8960208260051b8501011115610dd257600080fd5b60208301975080965050610de860208901610d05565b94506040880135915080821115610dfe57600080fd5b50610e0b88828901610d21565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610e5557610e55610e1c565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e8457610e84610e1c565b604052919050565b600067ffffffffffffffff821115610ea657610ea6610e1c565b5060051b60200190565b6000610ec3610ebe84610e8c565b610e5b565b83815260208082019190600586811b860136811115610ee157600080fd5b865b81811015610fe757803567ffffffffffffffff80821115610f045760008081fd5b818a01915060608236031215610f1a5760008081fd5b610f22610e32565b610f2b83610d05565b81528683013560038110610f3f5760008081fd5b8188015260408381013583811115610f575760008081fd5b939093019236601f850112610f6e57600092508283fd5b83359250610f7e610ebe84610e8c565b83815292871b84018801928881019036851115610f9b5760008081fd5b948901945b84861015610fd05785356001600160e01b031981168114610fc15760008081fd5b82529489019490890190610fa0565b918301919091525088525050948301948301610ee3565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161104857611048611020565b5060010190565b60005b8381101561106a578181015183820152602001611052565b50506000910152565b6000815180845261108b81602086016020860161104f565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561116f57898403607f19018652815180516001600160a01b0316855283810151898601906003811061110e57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b8083101561115a5783516001600160e01b0319168252928601926001929092019190860190611130565b509785019795505050908201906001016110c8565b50506001600160a01b038a169088015286810360408801526111918189611073565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b0380831681810361125257611252611020565b6001019392505050565b6000825161126e81846020870161104f565b9190910192915050565b6001600160a01b038316815260406020820181905260009061129c90830184611073565b949350505050565b818103818111156112b7576112b7611020565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006112e66020830184611073565b939250505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220ff5de9f8ff6008281bf41d87dfa9a592f59ddb064e7758e025d96d9c4d0fc82064736f6c6343000815003360806040526040516113b23803806113b283398101604081905261002291610f61565b61002b82610136565b604080516001808252818301909252600091816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816100425750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b816000815181106100b1576100b1610f94565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b038516815290810160008152602001828152508260008151811061010157610101610f94565b602002602001018190525061012d826000604051806020016040528060008152506101b960201b60201c565b505050506111fe565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020611306833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156103965760008482815181106101d9576101d9610f94565b6020026020010151602001519050600060028111156101fa576101fa610faa565b81600281111561020c5761020c610faa565b036102605761025b85838151811061022657610226610f94565b60200260200101516000015186848151811061024457610244610f94565b6020026020010151604001516103e160201b60201c565b610383565b600181600281111561027457610274610faa565b036102c35761025b85838151811061028e5761028e610f94565b6020026020010151600001518684815181106102ac576102ac610f94565b60200260200101516040015161065960201b60201c565b60028160028111156102d7576102d7610faa565b036103265761025b8583815181106102f1576102f1610f94565b60200260200101516000015186848151811061030f5761030f610f94565b6020026020010151604001516108da60201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b508061038e81610fd6565b9150506101bc565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103ca9392919061103f565b60405180910390a16103dc8282610a31565b505050565b60008151116104345760405162461bcd60e51b815260206004820152602b602482015260008051602061139283398151915260448201526a1858d95d081d1bc818dd5d60aa1b606482015260840161037a565b6000805160206113068339815191526001600160a01b03831661049c5760405162461bcd60e51b815260206004820152602c602482015260008051602061134e83398151915260448201526b65206164647265737328302960a01b606482015260840161037a565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036104d2576104d28285610af7565b60005b83518110156106525760008482815181106104f2576104f2610f94565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156105985760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c7265616479206578697374730000000000000000000000606482015260840161037a565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558361063a8161113f565b9450505050808061064a90610fd6565b9150506104d5565b5050505050565b60008151116106ac5760405162461bcd60e51b815260206004820152602b602482015260008051602061139283398151915260448201526a1858d95d081d1bc818dd5d60aa1b606482015260840161037a565b6000805160206113068339815191526001600160a01b0383166107145760405162461bcd60e51b815260206004820152602c602482015260008051602061134e83398151915260448201526b65206164647265737328302960a01b606482015260840161037a565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361074a5761074a8285610af7565b60005b835181101561065257600084828151811061076a5761076a610f94565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036108155760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000606482015260840161037a565b610820858284610b61565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836108c28161113f565b945050505080806108d290610fd6565b91505061074d565b600081511161092d5760405162461bcd60e51b815260206004820152602b602482015260008051602061139283398151915260448201526a1858d95d081d1bc818dd5d60aa1b606482015260840161037a565b6000805160206113068339815191526001600160a01b038316156109b95760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d757374206265206164647265737328302900000000000000000000606482015260840161037a565b60005b8251811015610a2b5760008382815181106109d9576109d9610f94565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610a16848284610b61565b50508080610a2390610fd6565b9150506109bc565b50505050565b6001600160a01b038216610a43575050565b610a658260405180606001604052806028815260200161132660289139610f24565b600080836001600160a01b031683604051610a80919061116d565b600060405180830381855af49150503d8060008114610abb576040519150601f19603f3d011682016040523d82523d6000602084013e610ac0565b606091505b509150915081610a2b57805115610ada5780518082602001fd5b838360405163192105d760e01b815260040161037a929190611189565b610b198160405180606001604052806024815260200161136e60249139610f24565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e2774206578697374000000000000000000606482015260840161037a565b306001600160a01b03831603610c4c5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b606482015260840161037a565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610c9b916111b5565b9050808214610d8d576001600160a01b03841660009081526001860160205260408120805483908110610cd057610cd0610f94565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610d2157610d21610f94565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610db657610db66111ce565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610652576002850154600090610e19906001906111b5565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ec8576000876002018381548110610e5857610e58610f94565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e8957610e89610f94565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610edb57610edb6111ce565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b8181610a2b5760405162461bcd60e51b815260040161037a91906111e4565b80516001600160a01b0381168114610f5c57600080fd5b919050565b60008060408385031215610f7457600080fd5b610f7d83610f45565b9150610f8b60208401610f45565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fe857610fe8610fc0565b5060010190565b60005b8381101561100a578181015183820152602001610ff2565b50506000910152565b6000815180845261102b816020860160208601610fef565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561110f57898403607f19018652815180516001600160a01b031685528381015189860190600381106110ae57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156110fa5783516001600160e01b03191682529286019260019290920191908601906110d0565b50978501979550505090820190600101611068565b50506001600160a01b038a169088015286810360408801526111318189611013565b9a9950505050505050505050565b60006001600160601b038281166002600160601b0319810161116357611163610fc0565b6001019392505050565b6000825161117f818460208701610fef565b9190910192915050565b6001600160a01b03831681526040602082018190526000906111ad90830184611013565b949350505050565b818103818111156111c8576111c8610fc0565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006111f76020830184611013565b9392505050565b60fa8061120c6000396000f3fe608060405236600a57005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b03168060a15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604482015260640160405180910390fd5b3660008037600080366000845af43d6000803e80801560bf573d6000f35b3d6000fdfea2646970667358221220d11035aea877594f82738570ccad6dd4e93c363fd9b3e930c98994f0be977d6664736f6c63430008150033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204164642066616365742063616e277420624c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f64654c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066608060405234801561001057600080fd5b5061085f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806382e686ca14610030575b600080fd5b61004361003e366004610711565b610045565b005b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f60209081527f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f8054600160ff1991821681179092557ff97e938d8af42f52387bb74b8b526fda8f184cc2aa534340a8d75a88fbecc77580548216831790557f65d510a5d8f7ef134ec444f7f34ee808c8eeb5177cdfd16be0c40fe1ab43369580548216831790556307f5828d60e41b60009081527f5622121b47b8cd0120c4efe45dd5483242f54a3d49bd7679be565d47694918c3805490921683179091558551600680546001600160a01b03199081166001600160a01b039384161790915587850151600880548316918416919091179055604080890151845483169084161784558751600780548a890151600a805487169188169190911790558a8401516025805487169188169190911790556060808c01516026805488169189169190911790556080808d0151602780548916918a169190911790558b51600280548916918a169190911790558b8b0151600e80548916918a169190911790558b8201519488166001600160b01b031990931692909217600160a01b61ffff90951694909402939093179091558801516013805462ffffff1990811662ffffff9384161790915560a08a015160158054909216921691909117905560c08801516024805485169186169190911790557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132054602180549186169185169190911790558a516003805485169186169190911781558b830151600480548616918716919091179055908b01516005805485169186169190911790558a8701516009805485169186169182179055602280548089018255968190527f61035b26e3e9eee00e0d72fd1ee8ddca6894550dca6916ea2ac6baa90d11e51096870180548616909217909155905481549687019091559490930180549483169482169490941790935584820151600f8054909416911617909155516f636f6e74726163742e6164647265737360801b91810191909152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b60308201527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9060410160408051601f19818403018152908290528051602091820120601055600f546001600160a01b0316916321f8a721916103f591016f636f6e74726163742e6164647265737360801b81526a1c9bd8dad95d15985d5b1d60aa1b6010820152601b0190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161042991815260200190565b602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190610805565b601180546001600160a01b0319166001600160a01b03929092169190911790556040516f636f6e74726163742e6164647265737360801b60208201527f726f636b657444414f50726f746f636f6c53657474696e67734465706f736974603082015260500160408051601f1981840301815291905280516020909101206012555050505050565b60405160e0810167ffffffffffffffff8111828210171561052257634e487b7160e01b600052604160045260246000fd5b60405290565b6040516080810167ffffffffffffffff8111828210171561052257634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561052257634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461059f57600080fd5b50565b80356105ad8161058a565b919050565b600060a082840312156105c457600080fd5b60405160a0810181811067ffffffffffffffff821117156105f557634e487b7160e01b600052604160045260246000fd5b60405290508082356106068161058a565b815260208301356106168161058a565b602082015260408301356106298161058a565b6040820152606083013561063c8161058a565b6060820152608083013561064f8161058a565b6080919091015292915050565b803562ffffff811681146105ad57600080fd5b600060e0828403121561068157600080fd5b6106896104f1565b905081356106968161058a565b815260208201356106a68161058a565b602082015260408201356106b98161058a565b6040820152606082013561ffff811681146106d357600080fd5b60608201526106e46080830161065c565b60808201526106f560a0830161065c565b60a082015261070660c083016105a2565b60c082015292915050565b60008060008084860361026081121561072957600080fd5b608081121561073757600080fd5b61073f610528565b863561074a8161058a565b8152602087013561075a8161058a565b6020820152604087013561076d8161058a565b604082015260608701356107808161058a565b606082810191909152909550607f198201121561079c57600080fd5b506107a5610559565b60808601356107b38161058a565b815260a08601356107c38161058a565b602082015260c08601356107d68161058a565b604082015292506107ea8660e087016105b2565b91506107fa86610180870161066f565b905092959194509250565b60006020828403121561081757600080fd5b81516108228161058a565b939250505056fea2646970667358221220ea054c5a932fae192e575208c64037d0cf0e7896425d2572f5a6d25fa860b1b664736f6c63430008150033608060405234801561001057600080fd5b5061001961001e565b6100de565b602854610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60285460ff90811610156100dc576028805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61213280620000ee6000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80633c6b16ab11610125578063a9059cbb116100ad578063cc1a378f1161007c578063cc1a378f14610358578063cd3daf9d146103cf578063d505accf14610420578063dd62ed3e14610433578063f5eb42dc1461044657600080fd5b8063a9059cbb146103fa578063b3d7f6b91461040d578063b88a802f146103cf578063c6e6f5921461028f57600080fd5b80637ecebe00116100f45780637ecebe00146103bc57806380faa57d146103cf57806395d89b41146103d6578063a01c8774146103de578063a457c2d7146103e757600080fd5b80633c6b16ab146103585780634cdad5061461036957806370a082311461037c5780637d098e641461038f57600080fd5b806318160ddd116101a8578063313ce56711610177578063313ce5671461030b5780633644e5151461031a57806338d52e0f14610322578063395093511461033d5780633a98ef391461035057600080fd5b806318160ddd146102c85780631dc7f521146102d05780632016a0d2146102e357806323b872dd146102f857600080fd5b8063095ea7b3116101e4578063095ea7b31461026c5780630a28a4771461028f5780630ba097d6146102a25780630cae37f1146102b557600080fd5b80628cc2621461021557806301e1d1141461023c57806306fdde031461024457806307a2d13a14610259575b600080fd5b61022961022336600461181c565b50600090565b6040519081526020015b60405180910390f35b61022961046f565b61024c610484565b604051610233919061187f565b610229610267366004611892565b610516565b61027f61027a3660046118ab565b610527565b6040519015158152602001610233565b61022961029d366004611892565b61053d565b6102296102b0366004611978565b610548565b6102296102c3366004611978565b6107ba565b610229610990565b6102296102de366004611892565b6109af565b6102f66102f13660046119fe565b610a3f565b005b61027f610306366004611a87565b610c3d565b60405160128152602001610233565b610229610c5f565b605e546040516001600160a01b039091168152602001610233565b61027f61034b3660046118ab565b610c69565b610229610c8a565b6102f6610366366004611892565b50565b610229610377366004611892565b610c9b565b61022961038a36600461181c565b610ca6565b6040805160008082526020820181905291810182905260608101829052608081019190915260a001610233565b6102296103ca36600461181c565b610cc8565b6000610229565b61024c610ce6565b61022960655481565b61027f6103f53660046118ab565b610cf5565b61027f6104083660046118ab565b610d32565b61022961041b366004611892565b610d3f565b6102f661042e366004611ad7565b610d4a565b610229610441366004611b48565b610e6c565b61022961045436600461181c565b6001600160a01b031660009081526060602052604090205490565b605f5460009061047f9082610e97565b905090565b60606063805461049390611b76565b80601f01602080910402602001604051908101604052809291908181526020018280546104bf90611b76565b801561050c5780601f106104e15761010080835404028352916020019161050c565b820191906000526020600020905b8154815290600101906020018083116104ef57829003601f168201915b5050505050905090565b600061052182610eda565b92915050565b6000610534338484610f7b565b50600192915050565b60006105218261102a565b605d5460009082906001600160a01b031680156105be576040516241fec360e31b81526001600160a01b03838116600483015282169063020ff61890602401600060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b50505050610600565b6000601c556000601a556001600160a01b03821615610600576001600160a01b038216600090815260208080526040808320839055601c54601f909252909120555b6000858060200190518101906106169190611c2b565b509050600061063a866001600160a01b031660009081526060602052604090205490565b9050600061064b836000015161053d565b90508082101561068c57604051637ac073bf60e01b81526001600160a01b038816600482015260248101839052604481018290526064015b60405180910390fd5b600061069782610c9b565b605d546040516314370d6760e31b81529192506001600160a01b03169063a1b86b38906106ca908b908d90600401611cd0565b60408051808303816000875af1925050508015610704575060408051601f3d908101601f1916820190925261070191810190611cf4565b60015b61075657610710611d18565b806308c379a00361074a5750610724611d34565b8061072f575061074c565b80604051631bc63b8160e01b8152600401610683919061187f565b505b3d6000803e3d6000fd5b6107618260006110ac565b605d546001600160a01b0316600090815260606020526040902054945061078a8386600061111c565b605d546001600160a01b031660009081526060602052604081205597506107b2945050505050565b505092915050565b605d5460009082906001600160a01b03168015610830576040516241fec360e31b81526001600160a01b03838116600483015282169063020ff61890602401600060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b50505050610872565b6000601c556000601a556001600160a01b03821615610872576001600160a01b038216600090815260208080526040808320839055601c54601f909252909120555b600080868060200190518101906108899190611dbe565b60655482519294509092506000916108a09161117a565b605d549091506001600160a01b0316639ea04fe46108c6605e546001600160a01b031690565b89866040518463ffffffff1660e01b81526004016108e693929190611e57565b6020604051808303816000875af1925050508015610921575060408051601f3d908101601f1916820190925261091e91810190611ed0565b60015b61092d57610710611d18565b6109388160016110ac565b6000610942610c8a565b156109555761095083610d3f565b610957565b825b90506109658382600161111c565b6001600160a01b039093166000908152606060205260409020805484019055509094506107b2915050565b600061099a610c8a565b156102235761047f6109aa610c8a565b610eda565b60006109b9610c8a565b605d5460405163a4fc284b60e01b81526001600160a01b039091169063a4fc284b906109ea90600190600401611eff565b602060405180830381865afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611ed0565b610a359084611f3d565b6105219190611f54565b602854610100900460ff1615808015610a5f5750602854600160ff909116105b80610a795750303b158015610a79575060285460ff166001145b610adc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610683565b6028805460ff191660011790558015610aff576028805461ff0019166101001790555b6063610b0b8482611fc1565b506064610b188382611fc1565b50605d80546001600160a01b038087166001600160a01b031992831617909255605e8054928816929091169190911790556040805180820190915260018152603160f81b6020820152610b6c90849061118d565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190612081565b60ff16601214610bdf576001610be6565b64e8d4a510005b64ffffffffff166065558015610c36576028805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6000610c4a8433846111c2565b610c55848484611210565b5060019392505050565b600061047f61132e565b6000610534338484610c7b3388610e6c565b610c85919061209e565b610f7b565b605f5460009061047f906001610e97565b6000610521826113a9565b6001600160a01b03811660009081526060602052604081205461052190610516565b6001600160a01b038116600090815260616020526040812054610521565b60606064805461049390611b76565b600080610d023385610e6c565b905082811015610d25576040516361ceb1d360e01b815260040160405180910390fd5b610c553385858403610f7b565b6000610534338484611210565b60006105218261142c565b83421115610d745760405163184f1e0160e11b815260048101859052426024820152604401610683565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610da38c611441565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610dfe82611469565b90506000610e0e828787876114b7565b9050896001600160a01b0316816001600160a01b031614610e5557604051635091bef560e01b81526001600160a01b0380831660048301528b166024820152604401610683565b610e608a8a8a610f7b565b50505050505050505050565b6001600160a01b03918216600090815260626020908152604080832093909416825291909152205490565b60006fffffffffffffffffffffffffffffffff81836001811115610ebd57610ebd611ee9565b14610eca57838116610ed2565b608084901c81165b949350505050565b6000610521610ee7610c8a565b15610ef957610ef4610c8a565b610efc565b60015b605d54604051634be9756960e11b81523060048201526001600160a01b03909116906397d2ead290602401602060405180830381865afa158015610f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f689190611ed0565b610f729190611f54565b839060016114df565b6001600160a01b0383161580610f9857506001600160a01b038216155b15610fc957604051637db368a160e01b81526001600160a01b03808516600483015283166024820152604401610683565b6001600160a01b0383811660008181526062602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610521611037610c8a565b605d54604051634be9756960e11b81526001600160a01b0390911660048201819052906397d2ead290602401602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190611ed0565b8491906114fd565b605d5460405163b0ff97b560e01b81523060048201526024810184905282151560448201526001600160a01b039091169063b0ff97b590606401600060405180830381600087803b15801561110057600080fd5b505af1158015611114573d6000803e3d6000fd5b505050505050565b605f5460009061112c9082610e97565b905060006111466001605f54610e9790919063ffffffff16565b9050821561115957908401908301611162565b90849003908390035b61117082608083901b61209e565b605f555050505050565b60006111868284611f54565b9392505050565b602854610100900460ff166111b45760405162461bcd60e51b8152600401610683906120b1565b6111be8282611523565b5050565b60006111ce8484610e6c565b9050600019811461120a57818110156111fd576040516306052b7f60e01b815260048101839052602401610683565b61120a8484848403610f7b565b50505050565b6001600160a01b038316158061122d57506001600160a01b038216155b1561125e57604051637db368a160e01b81526001600160a01b03808516600483015283166024820152604401610683565b60006112698261053d565b6001600160a01b038516600090815260606020526040902054909150818110156112bf576040516315c29bad60e31b81526001600160a01b03861660048201526024810182905260448101839052606401610683565b6001600160a01b0380861660008181526060602052604080822086860390559287168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061131f9087815260200190565b60405180910390a35050505050565b600061047f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61135d60295490565b602a546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b605d54604051634be9756960e11b8152306004820152600091610521916001600160a01b03909116906397d2ead290602401602060405180830381865afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c9190611ed0565b611424610990565b8491906114df565b6000610521611439610c8a565b61142461046f565b6001600160a01b03811660009081526061602052604090208054600181018255905b50919050565b600061052161147661132e565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006114c887878787611564565b915091506114d581611651565b5095945050505050565b60008260001904841183021582026114f657600080fd5b5091020490565b600082600019048411830215820261151457600080fd5b50910281810615159190040190565b602854610100900460ff1661154a5760405162461bcd60e51b8152600401610683906120b1565b815160209283012081519190920120602991909155602a55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561159b5750600090506003611648565b8460ff16601b141580156115b357508460ff16601c14155b156115c45750600090506004611648565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611618573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661164157600060019250925050611648565b9150600090505b94509492505050565b600081600481111561166557611665611ee9565b0361166d5750565b600181600481111561168157611681611ee9565b036116ce5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610683565b60028160048111156116e2576116e2611ee9565b0361172f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610683565b600381600481111561174357611743611ee9565b0361179b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610683565b60048160048111156117af576117af611ee9565b036103665760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610683565b6001600160a01b038116811461036657600080fd5b60006020828403121561182e57600080fd5b813561118681611807565b6000815180845260005b8181101561185f57602081850181015186830182015201611843565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111866020830184611839565b6000602082840312156118a457600080fd5b5035919050565b600080604083850312156118be57600080fd5b82356118c981611807565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611913576119136118d7565b6040525050565b600067ffffffffffffffff831115611934576119346118d7565b60405161194b601f8501601f1916602001826118ed565b80915083815284848401111561196057600080fd5b83836020830137600060208583010152509392505050565b6000806040838503121561198b57600080fd5b823567ffffffffffffffff8111156119a257600080fd5b8301601f810185136119b357600080fd5b6119c28582356020840161191a565b92505060208301356119d381611807565b809150509250929050565b600082601f8301126119ef57600080fd5b6111868383356020850161191a565b60008060008060808587031215611a1457600080fd5b8435611a1f81611807565b93506020850135611a2f81611807565b9250604085013567ffffffffffffffff80821115611a4c57600080fd5b611a58888389016119de565b93506060870135915080821115611a6e57600080fd5b50611a7b878288016119de565b91505092959194509250565b600080600060608486031215611a9c57600080fd5b8335611aa781611807565b92506020840135611ab781611807565b929592945050506040919091013590565b60ff8116811461036657600080fd5b600080600080600080600060e0888a031215611af257600080fd5b8735611afd81611807565b96506020880135611b0d81611807565b955060408801359450606088013593506080880135611b2b81611ac8565b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611b5b57600080fd5b8235611b6681611807565b915060208301356119d381611807565b600181811c90821680611b8a57607f821691505b60208210810361146357634e487b7160e01b600052602260045260246000fd5b600082601f830112611bbb57600080fd5b8151602067ffffffffffffffff821115611bd757611bd76118d7565b8160051b604051611bea838301826118ed565b92835284810182019282810187851115611c0357600080fd5b83870192505b84831015611c205782518152918301918301611c09565b509695505050505050565b60008060408385031215611c3e57600080fd5b825167ffffffffffffffff80821115611c5657600080fd5b9084019060608287031215611c6a57600080fd5b604051606081018181108382111715611c8557611c856118d7565b80604052508251815260208301516020820152604083015182811115611caa57600080fd5b611cb688828601611baa565b60408301525080945050505060208301516119d381611807565b6001600160a01b0383168152604060208201819052600090610ed290830184611839565b60008060408385031215611d0757600080fd5b505080516020909101519092909150565b600060033d1115611d315760046000803e5060005160e01c5b90565b600060443d1015611d425790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611d7257505050505090565b8285019150815181811115611d8a5750505050505090565b843d8701016020828501011115611da45750505050505090565b611db3602082860101876118ed565b509095945050505050565b60008060408385031215611dd157600080fd5b825167ffffffffffffffff80821115611de957600080fd5b9084019060408287031215611dfd57600080fd5b604051604081018181108382111715611e1857611e186118d7565b60405282518152602083015182811115611e3157600080fd5b611e3d88828601611baa565b60208301525080945050505060208301516119d381611807565b600060018060a01b0380861683526020818616818501526060604085015260a08401915084516060850152808501516040608086015282815180855260c0870191508383019450600092505b80831015611ec35784518252938301936001929092019190830190611ea3565b5098975050505050505050565b600060208284031215611ee257600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b6020810160028310611f2157634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761052157610521611f27565b600082611f7157634e487b7160e01b600052601260045260246000fd5b500490565b601f821115611fbc57600081815260208120601f850160051c81016020861015611f9d5750805b601f850160051c820191505b8181101561111457828155600101611fa9565b505050565b815167ffffffffffffffff811115611fdb57611fdb6118d7565b611fef81611fe98454611b76565b84611f76565b602080601f831160018114612024576000841561200c5750858301515b600019600386901b1c1916600185901b178555611114565b600085815260208120601f198616915b8281101561205357888601518255948401946001909101908401612034565b50858210156120715787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561209357600080fd5b815161118681611ac8565b8082018082111561052157610521611f27565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212209f99171a2ec45ca52f5db5f22967d648a91150e6b0407919cf29bd032b8158c164736f6c63430008150033608060405234801561001057600080fd5b506112ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063635d12cc1161008c578063a4fc284b11610066578063a4fc284b1461025a578063a5a410311461027b578063adfca15e14610288578063cdffacc6146102a857600080fd5b8063635d12cc146102125780637a0ed62714610225578063a49709b61461023a57600080fd5b806338ab35d4116100c857806338ab35d414610191578063423f0b91146101a65780634d2c1487146101ea57806352ef6b2c1461020a57600080fd5b806301ffc9a7146100ef5780631a82363e146101505780632e19905c14610171575b600080fd5b61013b6100fd366004610de5565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b600754600160a01b900461ffff1660405161ffff9091168152602001610147565b61018461017f366004610e38565b6102e8565b6040516101479190610ed5565b610199610321565b6040516101479190610ee8565b6101d26101b4366004610f35565b6001600160a01b039081166000908152600b60205260409020541690565b6040516001600160a01b039091168152602001610147565b6101fd6101f8366004610f50565b610386565b6040516101479190610ff0565b610199610599565b610184610220366004610e38565b61060c565b61022d61062b565b604051610147919061103d565b61024d610248366004610f50565b6107f6565b60405161014791906110d9565b61026d6102683660046110ec565b610a0a565b604051908152602001610147565b60155462ffffff1661026d565b61029b610296366004610f35565b610b23565b604051610147919061110d565b6101d26102b6366004610de5565b6001600160e01b031916600090815260008051602061127383398151915260205260409020546001600160a01b031690565b60606102f5858585610386565b82604051602001610307929190611120565b60405160208183030381529060405290505b949350505050565b6060600060220180548060200260200160405190810160405280929190818152602001828054801561037c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161035e575b5050505050905090565b6103aa60405180606001604052806000815260200160008152602001606081525090565b604051630a28a47760e01b81526004810185905283906000906001600160a01b03831690631dc7f521908290630a28a47790602401602060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610420919061114a565b6040518263ffffffff1660e01b815260040161043e91815260200190565b602060405180830381865afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f919061114a565b905030600061049861049083610bef565b849088610c42565b90506000610509836001600160a01b0316636260f55b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610501919061114a565b839089610c42565b6040805160028082526060820183529293506000929091602083019080368337019050509050828160008151811061054357610543611179565b602002602001018181525050818160018151811061056357610563611179565b60200260200101818152505060405180606001604052808b81526020018681526020018281525096505050505050509392505050565b606060006000805160206112738339815191526002810180546040805160208084028201810190925282815293945083018282801561060157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e3575b505050505091505090565b60606106198585856107f6565b8260405160200161030792919061118f565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020611273833981519152908067ffffffffffffffff81111561067957610679611163565b6040519080825280602002602001820160405280156106bf57816020015b6040805180820190915260008152606060208201528152602001906001900390816106975790505b50925060005b818110156107f05760008360020182815481106106e4576106e4611179565b9060005260206000200160009054906101000a90046001600160a01b031690508085838151811061071757610717611179565b6020908102919091018101516001600160a01b0392831690529082166000908152600186018252604090819020805482518185028101850190935280835291929091908301828280156107b657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107785790505b50505050508583815181106107cd576107cd611179565b6020026020010151602001819052505080806107e8906111b8565b9150506106c5565b50505090565b604080518082018252600080825260606020808401829052845160028082529281018652939430949291830190803683370190505090506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561086d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089191906111d1565b60ff166012146108af576108aa8764e8d4a510006111f4565b6108b1565b865b905060006040518060400160405280856001600160a01b0316636260f55b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610922919061114a565b815260200161093086610bef565b90529050600260005b818110156109eb57600061099e670de0b6b3a764000085846002811061096157610961611179565b60200201518415610995578861097860018761120b565b8151811061098857610988611179565b6020026020010151610997565b875b9190610c7e565b90506109b18161ffff8b16612710610c7e565b6109bb908261120b565b8683815181106109cd576109cd611179565b602090810291909101015250806109e3816111b8565b915050610939565b5050604080518082019091529788525050602086015250929392505050565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a77919061114a565b90506000826001811115610a8d57610a8d61121e565b03610b1e5760025460408051637a12625d60e11b81529051670de0b6b3a7640000926001600160a01b03169163f424c4ba9160048083019260209291908290030181865afa158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b07919061114a565b610b1190836111f4565b610b1b9190611234565b90505b919050565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060936000805160206112738339815191529390929190830182828015610be257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610ba45790505b5050505050915050919050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b179052600090610c258382610c9c565b905080806020019051810190610c3b919061114a565b9392505050565b600080610c588585670de0b6b3a7640000610c7e565b9050610c6b8161ffff8516612710610c7e565b610c75908261120b565b95945050505050565b6000826000190484118302158202610c9557600080fd5b5091020490565b6060610cc1838360405180606001604052806025815260200161129360259139610cca565b90505b92915050565b6060600080856001600160a01b031685604051610ce79190611256565b600060405180830381855afa9150503d8060008114610d22576040519150601f19603f3d011682016040523d82523d6000602084013e610d27565b606091505b5091509150610d3886838387610d42565b9695505050505050565b60608315610db6578251600003610daf576001600160a01b0385163b610daf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b5081610319565b6103198383815115610dcb5781518083602001fd5b8060405162461bcd60e51b8152600401610da69190610ed5565b600060208284031215610df757600080fd5b81356001600160e01b031981168114610c3b57600080fd5b80356001600160a01b0381168114610b1e57600080fd5b803561ffff81168114610b1e57600080fd5b60008060008060808587031215610e4e57600080fd5b84359350610e5e60208601610e0f565b9250610e6c60408601610e26565b9150610e7a60608601610e0f565b905092959194509250565b60005b83811015610ea0578181015183820152602001610e88565b50506000910152565b60008151808452610ec1816020860160208601610e85565b601f01601f19169290920160200192915050565b602081526000610cc16020830184610ea9565b6020808252825182820181905260009190848201906040850190845b81811015610f295783516001600160a01b031683529284019291840191600101610f04565b50909695505050505050565b600060208284031215610f4757600080fd5b610cc182610e0f565b600080600060608486031215610f6557600080fd5b83359250610f7560208501610e0f565b9150610f8360408501610e26565b90509250925092565b600081518084526020808501945080840160005b83811015610fbc57815187529582019590820190600101610fa0565b509495945050505050565b805182526020810151602083015260006040820151606060408501526103196060850182610f8c565b602081526000610cc16020830184610fc7565b600081518084526020808501945080840160005b83811015610fbc5781516001600160e01b03191687529582019590820190600101611017565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156110ac57888303603f19018552815180516001600160a01b0316845287015187840187905261109987850182611003565b9588019593505090860190600101611064565b509098975050505050505050565b8051825260006020820151604060208501526103196040850182610f8c565b602081526000610cc160208301846110ba565b6000602082840312156110fe57600080fd5b813560028110610c3b57600080fd5b602081526000610cc16020830184611003565b6040815260006111336040830185610fc7565b905060018060a01b03831660208301529392505050565b60006020828403121561115c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60408152600061113360408301856110ba565b634e487b7160e01b600052601160045260246000fd5b6000600182016111ca576111ca6111a2565b5060010190565b6000602082840312156111e357600080fd5b815160ff81168114610c3b57600080fd5b8082028115828204841417610cc457610cc46111a2565b81810381811115610cc457610cc46111a2565b634e487b7160e01b600052602160045260246000fd5b60008261125157634e487b7160e01b600052601260045260246000fd5b500490565b60008251611268818460208701610e85565b919091019291505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220953888d637c77a7fbce68e166c3034e14391e7992314a775e82dec1f9f42b35d64736f6c63430008150033608060405234801561001057600080fd5b50610248806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806393019b2a1461003b578063d349975714610050575b600080fd5b61004e6100493660046101e2565b610074565b005b610058610088565b6040516001600160a01b03909116815260200160405180910390f35b61007c6100c0565b6100858161014d565b50565b60006100bb7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461014b5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000602082840312156101f457600080fd5b81356001600160a01b038116811461020b57600080fd5b939250505056fea2646970667358221220c5dc02278a6ab862391c15f11499d81bd1a88c32987779a081858c15ef80b1d164736f6c634300081500336080604052348015600f57600080fd5b50607780601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806381fd5e2814602d575b600080fd5b600160405190815260200160405180910390f3fea264697066735822122090e97dd086ce870147b018c56cc464092032f96967e286a3dedc2939f348914a64736f6c63430008150033608060405234801561001057600080fd5b5061142a806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806378e3f7a4146200004b57806380dafe5a146200007f578063e4bb26f21462000098575b600080fd5b620000626200005c366004620004bb565b620000c0565b6040516001600160a01b0390911681526020015b60405180910390f35b62000089620001e7565b6040516200007691906200053a565b620000af620000a936600462000589565b6200024e565b604051901515815260200162000076565b6000620000cd846200024e565b15620000fc5760405163a5f9500960e01b81526001600160a01b03851660048201526024015b60405180910390fd5b6001600160a01b0384166200013057604051631448bf2160e01b81526001600160a01b0385166004820152602401620000f3565b600254604051600091620001579187916001600160a01b03169087908790602401620005f8565b60408051601f198184030181529181526020820180516001600160e01b031663100b506960e11b179052600e5490519192506000916001600160a01b03909116908390620001a590620003e9565b620001b292919062000645565b604051809103906000f080158015620001cf573d6000803e3d6000fd5b509050620001de818762000341565b95945050505050565b606060006001018054806020026020016040519081016040528092919081815260200182805480156200024457602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000225575b5050505050905090565b600154600090808203620002655750600092915050565b60005b818110156200033757836001600160a01b03166000600101828154811062000294576200029462000673565b60009182526020918290200154604080516338d52e0f60e01b815290516001600160a01b03909216926338d52e0f926004808401938290030181865afa158015620002e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000309919062000689565b6001600160a01b03160362000322575060019392505050565b806200032e81620006a9565b91505062000268565b5060009392505050565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038086166001600160a01b031992831681179093556000838152601460209081526040808320805460ff19169097179096559186168152600b90915283812080549092168317909155915190917f2e2b3f61b70d2d131b2a807371103cc98d51adcaa5e9a8f9c32658ad8426e74e91a25050565b610d2380620006d283390190565b6001600160a01b03811681146200040d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200043857600080fd5b813567ffffffffffffffff8082111562000456576200045662000410565b604051601f8301601f19908116603f0116810190828211818310171562000481576200048162000410565b816040528381528660208588010111156200049b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215620004d157600080fd5b8335620004de81620003f7565b9250602084013567ffffffffffffffff80821115620004fc57600080fd5b6200050a8783880162000426565b935060408601359150808211156200052157600080fd5b50620005308682870162000426565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156200057d5783516001600160a01b03168352928401929184019160010162000556565b50909695505050505050565b6000602082840312156200059c57600080fd5b8135620005a981620003f7565b9392505050565b6000815180845260005b81811015620005d857602081850181015186830182015201620005ba565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038581168252841660208201526080604082018190526000906200062690830185620005b0565b82810360608401526200063a8185620005b0565b979650505050505050565b6001600160a01b03831681526040602082018190526000906200066b90830184620005b0565b949350505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200069c57600080fd5b8151620005a981620003f7565b600060018201620006ca57634e487b7160e01b600052601160045260246000fd5b506001019056fe60806040523480156200001157600080fd5b5060405162000d2338038062000d2383398101604081905262000034916200045f565b818162000044828260006200004e565b505050506200059e565b620000598362000118565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806200009b5750805b15620001135762000111836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010a91906200052d565b83620002a3565b505b505050565b6001600160a01b0381163b620001835760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b620001fb816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ec91906200052d565b6001600160a01b03163b151590565b620002625760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016200017a565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b6060620002cb838360405180606001604052806027815260200162000cfc60279139620002d2565b9392505050565b6060600080856001600160a01b031685604051620002f191906200054b565b600060405180830381855af49150503d80600081146200032e576040519150601f19603f3d011682016040523d82523d6000602084013e62000333565b606091505b509092509050620003478683838762000351565b9695505050505050565b60608315620003c5578251600003620003bd576001600160a01b0385163b620003bd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200017a565b5081620003d1565b620003d18383620003d9565b949350505050565b815115620003ea5781518083602001fd5b8060405162461bcd60e51b81526004016200017a919062000569565b80516001600160a01b03811681146200041e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004565781810151838201526020016200043c565b50506000910152565b600080604083850312156200047357600080fd5b6200047e8362000406565b60208401519092506001600160401b03808211156200049c57600080fd5b818501915085601f830112620004b157600080fd5b815181811115620004c657620004c662000423565b604051601f8201601f19908116603f01168101908382118183101715620004f157620004f162000423565b816040528281528860208487010111156200050b57600080fd5b6200051e83602083016020880162000439565b80955050505050509250929050565b6000602082840312156200054057600080fd5b620002cb8262000406565b600082516200055f81846020870162000439565b9190910192915050565b60208152600082518060208401526200058a81604085016020870162000439565b601f01601f19169190910160400192915050565b61074e80620005ae6000396000f3fe6080604052600436106100385760003560e01c8063099af0e91461004f57806359659e901461006f5780635c60da1b146100a057610047565b36610047576100456100b5565b005b6100456100b5565b34801561005b57600080fd5b5061004561006a36600461059d565b6100c7565b34801561007b57600080fd5b506100846100d5565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ac57600080fd5b50610084610112565b6100c56100c0610118565b6101ac565b565b6100d182826101d5565b5050565b600061010d600061010d7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b905090565b600061010d5b600061014b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010d9190610661565b3660008037600080366000845af43d6000803e8080156101cb573d6000f35b3d6000fd5b505050565b6100d1828260006101e58361029c565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806102265750805b156101d057610296836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610661565b83610420565b50505050565b6001600160a01b0381163b6103065760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61037a816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b9190610661565b6001600160a01b03163b151590565b6103df5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016102fd565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b606061044583836040518060600160405280602781526020016106f26027913961044c565b9392505050565b6060600080856001600160a01b03168560405161046991906106a2565b600060405180830381855af49150503d80600081146104a4576040519150601f19603f3d011682016040523d82523d6000602084013e6104a9565b606091505b50915091506104ba868383876104c4565b9695505050505050565b6060831561053357825160000361052c576001600160a01b0385163b61052c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102fd565b508161053d565b61053d8383610545565b949350505050565b8151156105555781518083602001fd5b8060405162461bcd60e51b81526004016102fd91906106be565b6001600160a01b038116811461058457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156105b057600080fd5b82356105bb8161056f565b9150602083013567ffffffffffffffff808211156105d857600080fd5b818501915085601f8301126105ec57600080fd5b8135818111156105fe576105fe610587565b604051601f8201601f19908116603f0116810190838211818310171561062657610626610587565b8160405282815288602084870101111561063f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561067357600080fd5b81516104458161056f565b60005b83811015610699578181015183820152602001610681565b50506000910152565b600082516106b481846020870161067e565b9190910192915050565b60208152600082518060208401526106dd81604085016020870161067e565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220412439bf34bc0f18d93424e22ec04d67a86387b81d5092236e9a971b307c720164736f6c63430008150033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a7dd7ba8f99d48c8acf3a6b3b6cfb0828af2f44870a3b86442e0d25efa78aabf64736f6c634300081500336080604052348015600f57600080fd5b50607780601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da9b77214602d575b600080fd5b600260405190815260200160405180910390f3fea2646970667358221220bf44866b60b68df48a5b03e5107b444d83ca15a632b5d6def7316ccb4f2b41f564736f6c63430008150033608060405234801561001057600080fd5b50611c8f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80639ea04fe4116100715780639ea04fe41461012e578063a1b86b3814610141578063ab399cf814610169578063b88a802f14610127578063cc1a378f146100e7578063cd3daf9d1461012757600080fd5b80628cc262146100ad578063094463e7146100d45780633c6b16ab146100e75780637d098e64146100fa57806380faa57d14610127575b600080fd5b6100c16100bb3660046113d7565b50600090565b6040519081526020015b60405180910390f35b6100c16100e23660046114f2565b61017c565b6100f86100f536600461155e565b50565b005b6040805160008082526020820181905291810182905260608101829052608081019190915260a0016100cb565b60006100c1565b6100c161013c366004611577565b6101a4565b61015461014f36600461162b565b610490565b604080519283526020830191909152016100cb565b6100f86101773660046116d7565b6105c6565b600954600090610199906001600160a01b03168686868686610631565b90505b949350505050565b3360009081526014602052604081205460ff166101db5760405163a43f931360e01b81523360048201526024015b60405180910390fd5b815160208301516101f76001600160a01b038716863085610774565b60035481516000916102309189916001600160a01b031690309087908790879061022357610223611718565b60200260200101516107e5565b905061023b81610981565b1561046257600354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561028657600080fd5b505af115801561029a573d6000803e3d6000fd5b5050600f546010546040516321f8a72160e01b81526004810191909152600093506001600160a01b0390911691506321f8a72190602401602060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610312919061172e565b6009546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610384919061174b565b9050816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103c157600080fd5b505af11580156103d5573d6000803e3d6000fd5b50506009546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610449919061174b565b9050610455828261177a565b9650505050505050610489565b600354600954610483916001600160a01b0390811691163084866001610631565b93505050505b9392505050565b33600090815260146020526040812054819060ff166104c45760405163a43f931360e01b81523360048201526024016101d2565b600080848060200190518101906104db919061179d565b604082015160208301518351939550919350916104fd9033908a903090610b10565b600954600354600091610521916001600160a01b0391821691163085876002610631565b90506105b6600060030160009054906101000a90046001600160a01b0316336001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a1919061172e565b86848760018151811061022357610223611718565b9199919850909650505050505050565b6105db6001600160a01b038316843084610774565b60405163c3ae3a0960e01b815260048101829052309063c3ae3a0990602401600060405180830381600087803b15801561061457600080fd5b505af1158015610628573d6000803e3d6000fd5b50505050505050565b600080600061064184868a610c1a565b9150915060008060000160009054906101000a90046001600160a01b03166001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c091906118a8565b5050905080156106de576106d78a84308a866107e5565b93506106ed565b6106ea8a848985610cd8565b93505b6000856002811115610701576107016118dd565b03610767576003546001600160a01b03908116908a160361073857600354610733906001600160a01b03168986610e08565b610767565b6003548651610764916001600160a01b0316908b908b9088908b90600190811061022357610223611718565b93505b5050509695505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107df9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e3d565b50505050565b600654600090610802906001600160a01b03888116911685610f12565b60408051610100810182526001600160a01b038089168252878116602083015260135462ffffff1692820192909252908516606082015242608082015260a0810184905260009060c081016108578589611027565b815260006020918201526006546040805163414bf38960e01b815284516001600160a01b03908116600483015293850151841660248201529084015162ffffff1660448201526060840151831660648201526080840151608482015260a084015160a482015260c084015160c482015260e0840151831660e4820152929350169063414bf38990610104016020604051808303816000875af192505050801561091d575060408051601f3d908101601f1916820190925261091a9181019061174b565b60015b61096f576109296118f3565b806308c379a003610963575061093d61190f565b806109485750610965565b8060405163633abab960e01b81526004016101d291906119e9565b505b3d6000803e3d6000fd5b91506109789050565b95945050505050565b601180546040516335ee5f8760e01b8152602060048201526024810192909252701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b604483015260009182916001600160a01b0316906335ee5f8790606401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a14919061174b565b90506000610a2284836119fc565b600f546012546040516321f8a72160e01b81529293506000926001600160a01b03909216916321f8a72191610a5d9160040190815260200190565b602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e919061172e565b90506000816001600160a01b031663fd6ce89e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b04919061174b565b90921095945050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610b749190611a0f565b6000604051808303816000865af19150503d8060008114610bb1576040519150601f19603f3d011682016040523d82523d6000602084013e610bb6565b606091505b5091509150818015610be0575080511580610be0575080806020019051810190610be09190611a2b565b610c125760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064016101d2565b505050505050565b60008080856002811115610c3057610c306118dd565b03610c675760035484516001600160a01b0390911692508490600090610c5857610c58611718565b60200260200101519050610cd0565b6001856002811115610c7b57610c7b6118dd565b03610c965782915083600181518110610c5857610c58611718565b6002856002811115610caa57610caa6118dd565b03610cd05782915083600081518110610cc557610cc5611718565b602002602001015190505b935093915050565b6040805160c081018083526000805463038fff2d60e41b909252925183929182916001600160a01b03909116906338fff2d09060c4808501916020918187030181865afa158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d51919061174b565b8152602001600081526001600160a01b038089166020830152871660408201526060810186905260800160006040519080825280601f01601f191660200182016040528015610da7576020820181803683370190505b5090526040805160808082018352308083526000602084018190529383015260608201929092526008549183015192935091610df1916001600160a01b038a811692911690610f12565b610dfd828286426110ca565b979650505050505050565b6040516001600160a01b038316602482015260448101829052610e3890849063a9059cbb60e01b906064016107a8565b505050565b6000610e92826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111f19092919063ffffffff16565b9050805160001480610eb3575080806020019051810190610eb39190611a2b565b610e385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d2565b801580610f8c5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a919061174b565b155b610ff75760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101d2565b6040516001600160a01b038316602482015260448101829052610e3890849063095ea7b360e01b906064016107a8565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108c9190611a46565b60ff169050806012146110be576110a481601261177a565b6110af90600a611b4d565b6110b99085611b59565b6110c0565b835b9150505b92915050565b6008546040516352bbbe2960e01b81526000916001600160a01b0316906352bbbe2990611101908890889088908890600401611b7b565b6020604051808303816000875af192505050801561113c575060408051601f3d908101601f191682019092526111399181019061174b565b60015b6111c9576111486118f3565b806308c379a003610963575061115c61190f565b806111675750610965565b611190816040518060400160405280600781526020016642414c2335303760c81b815250611200565b156111ae57604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016101d291906119e9565b806000036111ea57604051635eeb40ff60e11b815260040160405180910390fd5b905061019c565b606061019c8484600085611259565b6000816040516020016112139190611a0f565b604051602081830303815290604052805190602001208360405160200161123a9190611a0f565b6040516020818303038152906040528051906020012014905092915050565b6060824710156112ba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d2565b600080866001600160a01b031685876040516112d69190611a0f565b60006040518083038185875af1925050503d8060008114611313576040519150601f19603f3d011682016040523d82523d6000602084013e611318565b606091505b5091509150610dfd878383876060831561139357825160000361138c576001600160a01b0385163b61138c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d2565b508161019c565b61019c83838151156113a85781518083602001fd5b8060405162461bcd60e51b81526004016101d291906119e9565b6001600160a01b03811681146100f557600080fd5b6000602082840312156113e957600080fd5b8135610489816113c2565b634e487b7160e01b600052604160045260246000fd5b6060810181811067ffffffffffffffff8211171561142a5761142a6113f4565b60405250565b601f8201601f1916810167ffffffffffffffff81118282101715611456576114566113f4565b6040525050565b600067ffffffffffffffff821115611477576114776113f4565b5060051b60200190565b600082601f83011261149257600080fd5b8135602061149f8261145d565b6040516114ac8282611430565b83815260059390931b85018201928281019150868411156114cc57600080fd5b8286015b848110156114e757803583529183019183016114d0565b509695505050505050565b6000806000806080858703121561150857600080fd5b8435611513816113c2565b93506020850135611523816113c2565b925060408501359150606085013567ffffffffffffffff81111561154657600080fd5b61155287828801611481565b91505092959194509250565b60006020828403121561157057600080fd5b5035919050565b60008060006060848603121561158c57600080fd5b8335611597816113c2565b925060208401356115a7816113c2565b9150604084013567ffffffffffffffff808211156115c457600080fd5b90850190604082880312156115d857600080fd5b6040516040810181811083821117156115f3576115f36113f4565b6040528235815260208301358281111561160c57600080fd5b61161889828601611481565b6020830152508093505050509250925092565b6000806040838503121561163e57600080fd5b8235611649816113c2565b915060208381013567ffffffffffffffff8082111561166757600080fd5b818601915086601f83011261167b57600080fd5b81358181111561168d5761168d6113f4565b60405191506116a5601f8201601f1916850183611430565b80825287848285010111156116b957600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806000606084860312156116ec57600080fd5b83356116f7816113c2565b92506020840135611707816113c2565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561174057600080fd5b8151610489816113c2565b60006020828403121561175d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156110c4576110c4611764565b8051611798816113c2565b919050565b600080604083850312156117b057600080fd5b825167ffffffffffffffff808211156117c857600080fd5b90840190606082870312156117dc57600080fd5b6040516117e88161140a565b825181526020808401518183015260408401518381111561180857600080fd5b80850194505087601f85011261181d57600080fd5b8351925061182a8361145d565b6040516118378282611430565b84815260059490941b850182019382810191508985111561185757600080fd5b948201945b848610156118755785518252948201949082019061185c565b806040850152505081955061188b81880161178d565b9450505050509250929050565b8051801515811461179857600080fd5b6000806000606084860312156118bd57600080fd5b6118c684611898565b925060208401519150604084015190509250925092565b634e487b7160e01b600052602160045260246000fd5b600060033d111561190c5760046000803e5060005160e01c5b90565b600060443d101561191d5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561194d57505050505090565b82850191508151818111156119655750505050505090565b843d870101602082850101111561197f5750505050505090565b61198e60208286010187611430565b509095945050505050565b60005b838110156119b457818101518382015260200161199c565b50506000910152565b600081518084526119d5816020860160208601611999565b601f01601f19169290920160200192915050565b60208152600061048960208301846119bd565b808201808211156110c4576110c4611764565b60008251611a21818460208701611999565b9190910192915050565b600060208284031215611a3d57600080fd5b61048982611898565b600060208284031215611a5857600080fd5b815160ff8116811461048957600080fd5b600181815b80851115611aa4578160001904821115611a8a57611a8a611764565b80851615611a9757918102915b93841c9390800290611a6e565b509250929050565b600082611abb575060016110c4565b81611ac8575060006110c4565b8160018114611ade5760028114611ae857611b04565b60019150506110c4565b60ff841115611af957611af9611764565b50506001821b6110c4565b5060208310610133831016604e8410600b8410161715611b27575081810a6110c4565b611b318383611a69565b8060001904821115611b4557611b45611764565b029392505050565b60006104898383611aac565b600082611b7657634e487b7160e01b600052601260045260246000fd5b500490565b60e08152845160e08201526000602086015160028110611bab57634e487b7160e01b600052602160045260246000fd5b61010083015260408601516001600160a01b03166101208301526060860151611be06101408401826001600160a01b03169052565b50608086015161016083015260a086015160c0610180840152611c076101a08401826119bd565b915050611c47602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fea2646970667358221220bff1f3b35e05dae014970ae6f4198babbf6ef83564c483305ec0fcc537fa55b964736f6c63430008150033608060405234801561001057600080fd5b50611ea8806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806397d2ead21161006657806397d2ead214610127578063b0ff97b51461013a578063c18748671461014f578063d4afb73a14610158578063f424c4ba1461016057600080fd5b80632cc3eb0a146100a357806340f1a34b146100e65780636260f55b146100fd5780638c4c501d146101055780638e9cd10c1461010f575b600080fd5b6040805180820182526000808252602091820152815180830183526016548082526017549183019182528351908152905191810191909152015b60405180910390f35b6100ef61384081565b6040519081526020016100dd565b6100ef610168565b6100ef62015f9081565b6101176101a5565b60405190151581526020016100dd565b6100ef61013536600461176c565b6103b3565b61014d610148366004611797565b610519565b005b6100ef61038481565b6100ef610585565b6100ef61060d565b60075460009081908190610186906001600160a01b03166001610644565b915091508161019c57610197610873565b61019e565b805b9250505090565b6009546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906117d9565b90506000805b6001548110156102c957600180548290811061023a5761023a6117f2565b60009182526020918290200154604080516278744560e21b815290516001600160a01b03909216926301e1d114926004808401938290030181865afa158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab91906117d9565b6102b5908361181e565b9150806102c181611831565b91505061021c565b5060165443116102f35760405163dcfa2bfd60e01b81524360048201526024015b60405180910390fd5b6000806103008385610896565b90925090506000610311838361184a565b9050600081136103275760009550505050505090565b601754600090610337908361184a565b90506000811361034e576000965050505050505090565b600061035a8383610904565b6040805143815260208101839052908101859052606081018490529091507fd47935b2f6fd998224fcce47e28065f692a3452b54180fd1e43ba90daf9eb1949060800160405180910390a1600197505050505050505090565b6000806001600160a01b03831630146103e4576001600160a01b038316600090815260236020526040902054610450565b6009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045091906117d9565b905060008060090160009054906101000a90046001600160a01b03166001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd91906117d9565b9050670de0b6b3a76400006104e0610168565b670de0b6b3a76400006104f38585611871565b6104fd919061189e565b6105079190611871565b610511919061189e565b949350505050565b8015610552576001600160a01b0383166000908152602360205260408120805484929061054790849061181e565b909155506105809050565b6001600160a01b0383166000908152602360205260408120805484929061057a9084906118b2565b90915550505b505050565b6000806000600a0160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060291906118e4565b509195945050505050565b6000670de0b6b3a7640000610620610168565b610628610585565b6106329190611871565b61063c919061189e565b600218905090565b60008061066d604051806040016040528060058152602001642d2d2d2d2d60d81b8152506109e6565b61069b6040518060400160405280600c81526020016b0383934b1b2a332b2b22f9d160a51b81525085610a2c565b6138406402540be400846106b05762015f9091505b6000806000886001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906118e4565b50935050925092506107566040518060400160405280600981526020016803937bab73224b21d160bd1b8152508469ffffffffffffffffffff16610a75565b61078060405180604001604052806008815260200167030b739bbb2b91d160c51b81525083610a75565b6107ad6040518060400160405280600b81526020016a03ab83230ba32b220ba1d160ad1b81525082610a75565b69ffffffffffffffffffff8316158015906107c85750600082135b80156107d357508015155b80156107df5750428111155b80156107f45750846107f182426118b2565b11155b1561083b57610821604051806040016040528060078152602001666e6f74206c6f6760c81b8152506109e6565b600161082d8584611871565b96509650505050505061086c565b61085f604051806040016040528060038152602001626c6f6760e81b8152506109e6565b6000809650965050505050505b9250929050565b60008061087e610aba565b9050600061088a610bab565b90506000610511610d0d565b60008060006108a3610168565b6108b28664e8d4a51000611871565b6108c490670de0b6b3a7640000611871565b6108ce919061189e565b90506000670de0b6b3a76400006108e3610585565b6108ed9087611871565b6108f7919061189e565b9196919550909350505050565b601554600090819061091e9062ffffff1684612710610d9f565b60178590559050600061092f610585565b61094183670de0b6b3a7640000611871565b61094b919061189e565b9050600061095882610dbd565b60095460155460405163a9059cbb60e01b81526001600160a01b0363010000009092048216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af11580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190611934565b50925050505b92915050565b610a29816040516024016109fa91906119a1565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610e54565b50565b610a718282604051602401610a429291906119b4565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610e54565b5050565b610a718282604051602401610a8b9291906119de565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610e54565b6024805460035460048054601354604051630b4c774160e11b81526001600160a01b03948516938101939093529083169482019490945262ffffff909316604484015260009283929190911690631698ee8290606401602060405180830381865afa158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b519190611a00565b90506000610b6082600a610e75565b50600354600454919250600091610b8f918491670de0b6b3a7640000916001600160a01b0390811691166110bb565b90506000610ba28264e8d4a51000611871565b95945050505050565b600080604051602001610bef9060408082526003908201819052620cae8d60eb1b6060830152608060208301819052820152621d5cd960ea1b60a082015260c00190565b60408051601f1981840301815290829052610c0c91602001611a1d565b60408051601f198184030181529190528051602090910120602554909150600090819081906001600160a01b031663a792765f85610c4c610384426118b2565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381865afa158015610c8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb59190810190611a97565b925092509250821580610cd25750613840610cd082426118b2565b115b15610cf057604051637614abcd60e11b815260040160405180910390fd5b81806020019051810190610d0491906117d9565b94505050505090565b6026546000908190610d28906001600160a01b031682610644565b60275490925060009150610d45906001600160a01b031682610644565b915060009050610d6982670de0b6b3a7640000610d62868261189e565b9190610d9f565b9050610d986040518060400160405280600b81526020016a03932b210383934b1b29d160ad1b81525082610a75565b9392505050565b6000826000190484118302158202610db657600080fd5b5091020490565b600080610dce603284612710610d9f565b60095460215460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015610e25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e499190611934565b50610d9881846118b2565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000808263ffffffff16600003610eb35760405162461bcd60e51b8152602060048201526002602482015261042560f41b60448201526064016102ea565b6040805160028082526060820183526000926020830190803683370190505090508381600081518110610ee857610ee86117f2565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610f1757610f176117f2565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b8152600401610f609190611b4a565b600060405180830381865afa158015610f7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fa59190810190611c2c565b91509150600082600081518110610fbe57610fbe6117f2565b602002602001015183600181518110610fd957610fd96117f2565b6020026020010151610feb9190611cf8565b9050600082600081518110611002576110026117f2565b60200260200101518360018151811061101d5761101d6117f2565b602002602001015161102f9190611d25565b905061103f600389900b83611d45565b965060008260060b128015611063575061105d600389900b83611d83565b60060b15155b15611076578661107281611da5565b9750505b600061108f6001600160a01b0363ffffffff8b16611dc8565b90506110ac640100000000600160c01b03602084901b1682611dfa565b96505050505050509250929050565b6000806110c7866111c9565b90506001600160801b036001600160a01b0382161161114d5760006110f56001600160a01b03831680611871565b9050836001600160a01b0316856001600160a01b03161061112d57611128600160c01b876001600160801b0316836115e1565b611145565b61114581876001600160801b0316600160c01b6115e1565b9250506111c0565b600061116c6001600160a01b03831680680100000000000000006115e1565b9050836001600160a01b0316856001600160a01b0316106111a45761119f600160801b876001600160801b0316836115e1565b6111bc565b6111bc81876001600160801b0316600160801b6115e1565b9250505b50949350505050565b60008060008360020b126111e0578260020b6111ed565b8260020b6111ed90611e20565b90506111fc620d89e719611e3c565b60020b8111156112325760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016102ea565b60008160011660000361124957600160801b61125b565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561129a576080611295826ffff97272373d413259a46990580e213a611871565b901c90505b60048216156112c45760806112bf826ffff2e50f5f656932ef12357cf3c7fdcc611871565b901c90505b60088216156112ee5760806112e9826fffe5caca7e10e4e61c3624eaa0941cd0611871565b901c90505b6010821615611318576080611313826fffcb9843d60f6159c9db58835c926644611871565b901c90505b602082161561134257608061133d826fff973b41fa98c081472e6896dfb254c0611871565b901c90505b604082161561136c576080611367826fff2ea16466c96a3843ec78b326b52861611871565b901c90505b6080821615611396576080611391826ffe5dee046a99a2a811c461f1969c3053611871565b901c90505b6101008216156113c15760806113bc826ffcbe86c7900a88aedcffc83b479aa3a4611871565b901c90505b6102008216156113ec5760806113e7826ff987a7253ac413176f2b074cf7815e54611871565b901c90505b610400821615611417576080611412826ff3392b0822b70005940c7a398e4b70f3611871565b901c90505b61080082161561144257608061143d826fe7159475a2c29b7443b29c7fa6e889d9611871565b901c90505b61100082161561146d576080611468826fd097f3bdfd2022b8845ad8f792aa5825611871565b901c90505b612000821615611498576080611493826fa9f746462d870fdf8a65dc1f90e061e5611871565b901c90505b6140008216156114c35760806114be826f70d869a156d2a1b890bb3df62baf32f7611871565b901c90505b6180008216156114ee5760806114e9826f31be135f97d08fd981231505542fcfa6611871565b901c90505b6201000082161561151a576080611515826f09aa508b5b7a84e1c677de54f3e99bc9611871565b901c90505b62020000821615611545576080611540826e5d6af8dedb81196699c329225ee604611871565b901c90505b6204000082161561156f57608061156a826d2216e584f5fa1ea926041bedfe98611871565b901c90505b62080000821615611597576080611592826b048a170391f7dc42444e8fa2611871565b901c90505b60008460020b13156115b2576115af8160001961189e565b90505b6115c164010000000082611e5e565b156115cd5760016115d0565b60005b6105119060ff16602083901c61181e565b600080806000198587098587029250828110838203039150508060000361161a576000841161160f57600080fd5b508290049050610d98565b80841161162657600080fd5b60008486880980840393811190920391905060008561164481611e20565b169586900495938490049360008190030460010190506116648184611871565b909317926000611675876003611871565b60021890506116848188611871565b61168f9060026118b2565b6116999082611871565b90506116a58188611871565b6116b09060026118b2565b6116ba9082611871565b90506116c68188611871565b6116d19060026118b2565b6116db9082611871565b90506116e78188611871565b6116f29060026118b2565b6116fc9082611871565b90506117088188611871565b6117139060026118b2565b61171d9082611871565b90506117298188611871565b6117349060026118b2565b61173e9082611871565b905061174a8186611871565b9998505050505050505050565b6001600160a01b0381168114610a2957600080fd5b60006020828403121561177e57600080fd5b8135610d9881611757565b8015158114610a2957600080fd5b6000806000606084860312156117ac57600080fd5b83356117b781611757565b92506020840135915060408401356117ce81611789565b809150509250925092565b6000602082840312156117eb57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109e0576109e0611808565b60006001820161184357611843611808565b5060010190565b818103600083128015838313168383128216171561186a5761186a611808565b5092915050565b80820281158282048414176109e0576109e0611808565b634e487b7160e01b600052601260045260246000fd5b6000826118ad576118ad611888565b500490565b818103818111156109e0576109e0611808565b805169ffffffffffffffffffff811681146118df57600080fd5b919050565b600080600080600060a086880312156118fc57600080fd5b611905866118c5565b9450602086015193506040860151925060608601519150611928608087016118c5565b90509295509295909350565b60006020828403121561194657600080fd5b8151610d9881611789565b60005b8381101561196c578181015183820152602001611954565b50506000910152565b6000815180845261198d816020860160208601611951565b601f01601f19169290920160200192915050565b602081526000610d986020830184611975565b6040815260006119c76040830185611975565b905060018060a01b03831660208301529392505050565b6040815260006119f16040830185611975565b90508260208301529392505050565b600060208284031215611a1257600080fd5b8151610d9881611757565b60408152600960408201526853706f74507269636560b81b6060820152608060208201526000610d986080830184611975565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a8f57611a8f611a50565b604052919050565b600080600060608486031215611aac57600080fd5b8351611ab781611789565b602085015190935067ffffffffffffffff80821115611ad557600080fd5b818601915086601f830112611ae957600080fd5b815181811115611afb57611afb611a50565b611b0e601f8201601f1916602001611a66565b9150808252876020828501011115611b2557600080fd5b611b36816020840160208601611951565b508093505050604084015190509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611b8857835163ffffffff1683529284019291840191600101611b66565b50909695505050505050565b600067ffffffffffffffff821115611bae57611bae611a50565b5060051b60200190565b600082601f830112611bc957600080fd5b81516020611bde611bd983611b94565b611a66565b82815260059290921b84018101918181019086841115611bfd57600080fd5b8286015b84811015611c21578051611c1481611757565b8352918301918301611c01565b509695505050505050565b60008060408385031215611c3f57600080fd5b825167ffffffffffffffff80821115611c5757600080fd5b818501915085601f830112611c6b57600080fd5b81516020611c7b611bd983611b94565b82815260059290921b84018101918181019089841115611c9a57600080fd5b948201945b83861015611cc85785518060060b8114611cb95760008081fd5b82529482019490820190611c9f565b91880151919650909350505080821115611ce157600080fd5b50611cee85828601611bb8565b9150509250929050565b600682810b9082900b03667fffffffffffff198112667fffffffffffff821317156109e0576109e0611808565b6001600160a01b0382811682821603908082111561186a5761186a611808565b60008160060b8360060b80611d5c57611d5c611888565b667fffffffffffff19821460001982141615611d7a57611d7a611808565b90059392505050565b60008260060b80611d9657611d96611888565b808360060b0791505092915050565b60008160020b627fffff198103611dbe57611dbe611808565b6000190192915050565b6001600160c01b03828116828216818102831692918115828504821417611df157611df1611808565b50505092915050565b60006001600160c01b0383811680611e1457611e14611888565b92169190910492915050565b6000600160ff1b8201611e3557611e35611808565b5060000390565b60008160020b627fffff198103611e5557611e55611808565b60000392915050565b600082611e6d57611e6d611888565b50069056fea2646970667358221220fa6912c40fcdc2f9a3b5f4efcd0cb2e5990fba7e606cd7be86fe769566d89b9a64736f6c63430008150033608060405234801561001057600080fd5b506040516104c03803806104c083398101604081905261002f9161013c565b8061003933610049565b61004281610099565b505061016c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381163b61011a5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561014e57600080fd5b81516001600160a01b038116811461016557600080fd5b9392505050565b6103458061017b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102df565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f61010e565b6000546001600160a01b031661007e565b61006f6100c13660046102df565b610122565b6100ce6101a0565b6100d7816101fa565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6101166101a0565b610120600061028f565b565b61012a6101a0565b6001600160a01b0381166101945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61019d8161028f565b50565b6000546001600160a01b031633146101205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018b565b6001600160a01b0381163b61026d5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b606482015260840161018b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102f157600080fd5b81356001600160a01b038116811461030857600080fd5b939250505056fea264697066735822122026e6adc95d4a1bca998169e502c20c8567eb83ec96e7387f56c14e8dda39207264736f6c63430008150033608060405234801561001057600080fd5b5061161b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80637d098e64116100715780637d098e641461013e57806380faa57d1461016b578063b88a802f1461016b578063cc1a378f1461011a578063cd3daf9d1461016b578063cffd84931461017257600080fd5b80628cc262146100b85780631f931c1c146100df5780632bc8a42d146100f45780633bba4b35146101075780633c6b16ab1461011a5780635acb2ecb1461012b575b600080fd5b6100cc6100c6366004610f30565b50600090565b6040519081526020015b60405180910390f35b6100f26100ed366004610f9b565b610185565b005b6100f261010236600461104d565b6101de565b6100f2610115366004610f30565b610208565b6100f2610128366004611071565b50565b6100f261013936600461108a565b61023c565b6040805160008082526020820181905291810182905260608101829052608081019190915260a0016100d6565b60006100cc565b6100f2610180366004610f30565b61025e565b61018d6102b2565b6101d761019a8587611143565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061032992505050565b5050505050565b6101e66102b2565b6007805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6102106102b2565b601580546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b6102446102b2565b6013805462ffffff191662ffffff92909216919091179055565b6021546001600160a01b031633146102905760405163a43f931360e01b81523360048201526024015b60405180910390fd5b602180546001600160a01b0319166001600160a01b0392909216919091179055565b60008051602061157a833981519152600401546001600160a01b031633146103275760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401610287565b565b60005b83518110156104ef57600084828151811061034957610349611287565b60200260200101516020015190506000600281111561036a5761036a61129d565b81600281111561037c5761037c61129d565b036103ca576103c585838151811061039657610396611287565b6020026020010151600001518684815181106103b4576103b4611287565b60200260200101516040015161053a565b6104dc565b60018160028111156103de576103de61129d565b03610427576103c58583815181106103f8576103f8611287565b60200260200101516000015186848151811061041657610416611287565b6020026020010151604001516106b2565b600281600281111561043b5761043b61129d565b03610484576103c585838151811061045557610455611287565b60200260200101516000015186848151811061047357610473611287565b602002602001015160400151610842565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608401610287565b50806104e7816112c9565b91505061032c565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161052393929190611332565b60405180910390a16105358282610960565b505050565b600081511161055b5760405162461bcd60e51b815260040161028790611432565b60008051602061157a8339815191526001600160a01b0383166105905760405162461bcd60e51b81526004016102879061147d565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105c6576105c68285610a26565b60005b83518110156101d75760008482815181106105e6576105e6611287565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156106845760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608401610287565b6106908583868a610a90565b8361069a816114c9565b945050505080806106aa906112c9565b9150506105c9565b60008151116106d35760405162461bcd60e51b815260040161028790611432565b60008051602061157a8339815191526001600160a01b0383166107085760405162461bcd60e51b81526004016102879061147d565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361073e5761073e8285610a26565b60005b83518110156101d757600084828151811061075e5761075e611287565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036108095760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401610287565b610814858284610b30565b6108208583868a610a90565b8361082a816114c9565b9450505050808061083a906112c9565b915050610741565b60008151116108635760405162461bcd60e51b815260040161028790611432565b60008051602061157a8339815191526001600160a01b038316156108e85760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608401610287565b60005b825181101561095a57600083828151811061090857610908611287565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610945848284610b30565b50508080610952906112c9565b9150506108eb565b50505050565b6001600160a01b038216610972575050565b6109948260405180606001604052806028815260200161159a60289139610ef3565b600080836001600160a01b0316836040516109af91906114ef565b600060405180830381855af49150503d80600081146109ea576040519150601f19603f3d011682016040523d82523d6000602084013e6109ef565b606091505b50915091508161095a57805115610a095780518082602001fd5b838360405163192105d760e01b815260040161028792919061150b565b610a48816040518060600160405280602481526020016115c260249139610ef3565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401610287565b306001600160a01b03831603610c1b5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608401610287565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610c6a91611537565b9050808214610d5c576001600160a01b03841660009081526001860160205260408120805483908110610c9f57610c9f611287565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610cf057610cf0611287565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610d8557610d85611550565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036101d7576002850154600090610de890600190611537565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610e97576000876002018381548110610e2757610e27611287565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e5857610e58611287565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610eaa57610eaa611550565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b818161095a5760405162461bcd60e51b81526004016102879190611566565b80356001600160a01b0381168114610f2b57600080fd5b919050565b600060208284031215610f4257600080fd5b610f4b82610f14565b9392505050565b60008083601f840112610f6457600080fd5b50813567ffffffffffffffff811115610f7c57600080fd5b602083019150836020828501011115610f9457600080fd5b9250929050565b600080600080600060608688031215610fb357600080fd5b853567ffffffffffffffff80821115610fcb57600080fd5b818801915088601f830112610fdf57600080fd5b813581811115610fee57600080fd5b8960208260051b850101111561100357600080fd5b6020830197508096505061101960208901610f14565b9450604088013591508082111561102f57600080fd5b5061103c88828901610f52565b969995985093965092949392505050565b60006020828403121561105f57600080fd5b813561ffff81168114610f4b57600080fd5b60006020828403121561108357600080fd5b5035919050565b60006020828403121561109c57600080fd5b813562ffffff81168114610f4b57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156110e8576110e86110af565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611117576111176110af565b604052919050565b600067ffffffffffffffff821115611139576111396110af565b5060051b60200190565b60006111566111518461111f565b6110ee565b83815260208082019190600586811b86013681111561117457600080fd5b865b8181101561127a57803567ffffffffffffffff808211156111975760008081fd5b818a019150606082360312156111ad5760008081fd5b6111b56110c5565b6111be83610f14565b815286830135600381106111d25760008081fd5b81880152604083810135838111156111ea5760008081fd5b939093019236601f85011261120157600092508283fd5b833592506112116111518461111f565b83815292871b8401880192888101903685111561122e5760008081fd5b948901945b848610156112635785356001600160e01b0319811681146112545760008081fd5b82529489019490890190611233565b918301919091525088525050948301948301611176565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112db576112db6112b3565b5060010190565b60005b838110156112fd5781810151838201526020016112e5565b50506000910152565b6000815180845261131e8160208601602086016112e2565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561140257898403607f19018652815180516001600160a01b031685528381015189860190600381106113a157634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156113ed5783516001600160e01b03191682529286019260019290920191908601906113c3565b5097850197955050509082019060010161135b565b50506001600160a01b038a169088015286810360408801526114248189611306565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b038083168181036114e5576114e56112b3565b6001019392505050565b600082516115018184602087016112e2565b9190910192915050565b6001600160a01b038316815260406020820181905260009061152f90830184611306565b949350505050565b8181038181111561154a5761154a6112b3565b92915050565b634e487b7160e01b600052603160045260246000fd5b602081526000610f4b602083018461130656fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212200d487c04a93edbc10922ed5ccb19fa9a77ccf7704f90ed86ceda38483d6f105364736f6c63430008150033608060405234801561001057600080fd5b50610a48806100206000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c8063b88a802f11610066578063b88a802f14610128578063c28cd66d14610130578063c3ae3a0914610143578063cc1a378f14610156578063cd3daf9d1461016957600080fd5b80628cc262146100a2578063020ff618146100c85780633c6b16ab146100dd5780637d098e64146100f057806380faa57d14610120575b600080fd5b6100b56100b03660046108c4565b610171565b6040519081526020015b60405180910390f35b6100db6100d63660046108c4565b6101dc565b005b6100db6100eb3660046108ed565b610227565b6100f86103c0565b604080519586526020860194909452928401919091526060830152608082015260a0016100bf565b6100b5610472565b6100b5610488565b6100db61013e3660046108ed565b6105ab565b6100db6101513660046108ed565b6105c8565b6100db6101643660046108ed565b6105ff565b6100b561062e565b6001600160a01b03811660009081526020808052604080832054601f909252822054670de0b6b3a7640000906101a561062e565b6101af919061091c565b6101b88561069e565b6101c2919061092f565b6101cc9190610946565b6101d69190610968565b92915050565b6101e461062e565b601c556101ef610472565b601a556101fb81610171565b6001600160a01b0390911660009081526020808052604080832093909355601c54601f90915291902055565b60008061023261062e565b601c5561023d610472565b601a556001600160a01b038216156102825761025882610171565b6001600160a01b03831660009081526020808052604080832093909355601c54601f909152919020555b61028a610764565b6019544211156102a9576018546102a19084610946565b601b556102e6565b6019546000906102ba90429061091c565b601b546102c7919061092f565b6018549091506102d78583610968565b6102e19190610946565b601b55505b601b546103065760405163e92aa8bd60e01b815260040160405180910390fd5b6015546040516370a0823160e01b815230600482015263010000009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015610354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610378919061097b565b601854601b54610388919061092f565b11156103a7576040516311172c5560e11b815260040160405180910390fd5b6018546103b49042610968565b601955505042601a5550565b601b54601d54601e546015546040516370a0823160e01b8152306004820152600094859485948594859463010000009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610446919061097b565b610450919061091c565b601e54601954610461904290610994565b945094509450945094509091929394565b6019546000906104839042906107f1565b905090565b6000338161049461062e565b601c5561049f610472565b601a556001600160a01b038216156104e4576104ba82610171565b6001600160a01b03831660009081526020808052604080832093909355601c54601f909152919020555b33600090815260208052604090205480156105a35733600081815260208052604080822091909155601554905163a9059cbb60e01b8152600481019290925260248201839052630100000090046001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610563573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058791906109bb565b50601d805482919060009061059d908490610968565b90915550505b92505b505090565b6105b4816105ff565b601e546105c090610227565b506000601e55565b601d80548291906000906105dd90849061091c565b9091555050601e80548291906000906105f7908490610968565b909155505050565b610607610764565b6019544211610629576040516314e75c8960e11b815260040160405180910390fd5b601855565b60008061063961080a565b90508060000361064b575050601c5490565b601a548190610658610472565b610662919061091c565b601b5461066f919061092f565b61068190670de0b6b3a764000061092f565b61068b9190610946565b601c546106989190610968565b91505090565b600154600090815b818160ff16101561075d576001805460ff83169081106106c8576106c86109dd565b6000918252602090912001546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f919061097b565b6107499084610968565b925080610755816109f3565b9150506106a6565b5050919050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146107ef5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b6000818311156108015781610803565b825b9392505050565b600154600090815b818160ff1610156105a6576001805460ff8316908110610834576108346109dd565b60009182526020918290200154604080516318160ddd60e01b815290516001600160a01b03909216926318160ddd926004808401938290030181865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a6919061097b565b6108b09084610968565b9250806108bc816109f3565b915050610812565b6000602082840312156108d657600080fd5b81356001600160a01b038116811461080357600080fd5b6000602082840312156108ff57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101d6576101d6610906565b80820281158282048414176101d6576101d6610906565b60008261096357634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156101d6576101d6610906565b60006020828403121561098d57600080fd5b5051919050565b81810360008312801583831316838312821617156109b4576109b4610906565b5092915050565b6000602082840312156109cd57600080fd5b8151801515811461080357600080fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103610a0957610a09610906565b6001019291505056fea2646970667358221220efbfde448e133b4271ec741945b729eabe5680b2de5100a5690a7b752e6341a764736f6c63430008150033608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61229480620000ee6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b6040516101519190611aa6565b60405180910390f35b61016d610168366004611aee565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d366004611b1a565b61037b565b60405160128152602001610151565b61018161039f565b61016d6101c7366004611aee565b6103ae565b6101816101da366004611b5b565b6103d0565b6101e76104b5565b6040516001600160a01b039091168152602001610151565b61018161020d366004611be7565b6104f7565b610181610220366004611cc1565b6001600160a01b031660009081526033602052604090205490565b61024e610249366004611d4e565b610795565b005b61018161025e366004611cc1565b610932565b610181610950565b6101816109c6565b610144610a3d565b61016d610289366004611aee565b610a4c565b61016d61029c366004611aee565b610ac7565b61024e6102af366004611dd6565b610ad5565b6101816102c2366004611e4d565b610bf7565b610181610c22565b6060603680546102de90611e86565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611e86565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610c2e565b60019150505b92915050565b600033610389858285610d52565b610394858585610dcc565b506001949350505050565b60006103a9610f9a565b905090565b60003361036f8185856103c18383610bf7565b6103cb9190611ed0565b610c2e565b6040516370a0823160e01b8152306004820152600090670de0b6b3a764000090829073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190611ee3565b90506000600285600281111561046a5761046a611efc565b1461047e576104798583611015565b610480565b815b9050600061048c6109c6565b9050806000036104a0575091949350505050565b6104ab84838361112e565b9695505050505050565b60006104e86104e560017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611f12565b90565b546001600160a01b0316919050565b6000806105026104b5565b9050600061050e61114c565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e9190611f25565b6001600160a01b031614801561059d5750600061059b82886111bb565b125b156105cb5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146105e6576105e6883387610d52565b60006106056105f560026103d0565b8790670de0b6b3a764000061112e565b604051631567339f60e31b81526001600160a01b038b81166004830152306024830152604482018990529192509084169063ab399cf890606401600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b505050508160008151811061068457610684611f42565b60200260200101516001600160a01b0316876001600160a01b03160361071157846000815181106106b7576106b7611f42565b60200260200101518110156106e257604051631aa1e78f60e31b8152600481018290526024016105c2565b610707826000815181106106f8576106f8611f42565b60200260200101518983611223565b925061078c915050565b60405163094463e760e01b81526001600160a01b0384169063094463e790610743908a908c9086908b90600401611f58565b6020604051808303816000875af1158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190611ee3565b93505050505b95945050505050565b600054610100900460ff16158080156107b55750600054600160ff909116105b806107cf5750303b1580156107cf575060005460ff166001145b6108325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105c2565b6000805460ff191660011790558015610855576000805461ff0019166101001790555b61085f868661127a565b61088286604051806040016040528060018152602001603160f81b8152506112af565b836108b16104e560017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611f12565b80546001600160a01b0319166001600160a01b03929092169190911790556108d930846112e0565b6108e4308584610dcc565b801561092a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b60008061095b6104b5565b6001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190611fc2565b5095945050505050565b6000806109d16104b5565b6001600160a01b0316637d098e646040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190611fc2565b509195945050505050565b6060603780546102de90611e86565b60003381610a5a8286610bf7565b905083811015610aba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105c2565b6103948286868403610c2e565b60003361036f818585610dcc565b83421115610aff5760405163184f1e0160e11b8152600481018590524260248201526044016105c2565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b2e8c6113bf565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b89826113e7565b90506000610b9982878787611435565b9050896001600160a01b0316816001600160a01b031614610be057604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016105c2565b610beb8a8a8a610c2e565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006103a960006103d0565b6001600160a01b038316610c905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105c2565b6001600160a01b038216610cf15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105c2565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d5e8484610bf7565b90506000198114610dc65781811015610db95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105c2565b610dc68484848403610c2e565b50505050565b6001600160a01b038316610e305760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105c2565b6001600160a01b038216610e925760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105c2565b6001600160a01b03831660009081526033602052604090205481811015610f0a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105c2565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610f41908490611ed0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f8d91815260200190565b60405180910390a3610dc6565b60006103a97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610fc960655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008083600281111561102a5761102a611efc565b036110b2576110ab61103a6104b5565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b9190611ee3565b8390670de0b6b3a764000061112e565b9050610375565b60018360028111156110c6576110c6611efc565b03610375576040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b1790526111056110ff6104b5565b8261145f565b905060008180602001905181019061111d9190611ee3565b905061078c8482670de0b6b3a76400005b600082600019048411830215820261114557600080fd5b5091020490565b60606111566104b5565b6001600160a01b03166338ab35d46040518163ffffffff1660e01b8152600401600060405180830381865afa158015611193573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a99190810190612002565b8151600090815b8181101561121757836001600160a01b03168582815181106111e6576111e6611f42565b60200260200101516001600160a01b0316036112055791506103759050565b8061120f81612091565b9150506111c2565b50600019949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261127590849061148b565b505050565b600054610100900460ff166112a15760405162461bcd60e51b81526004016105c2906120aa565b6112ab8282611560565b5050565b600054610100900460ff166112d65760405162461bcd60e51b81526004016105c2906120aa565b6112ab82826115a0565b6001600160a01b0382166113365760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105c2565b80603560008282546113489190611ed0565b90915550506001600160a01b03821660009081526033602052604081208054839290611375908490611ed0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006103756113f4610f9a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611446878787876115e1565b91509150611453816116ce565b5090505b949350505050565b6060611484838360405180606001604052806025815260200161223a60259139611887565b9392505050565b60006114e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118f59092919063ffffffff16565b905080516000148061150157508080602001905181019061150191906120f5565b6112755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105c2565b600054610100900460ff166115875760405162461bcd60e51b81526004016105c2906120aa565b6036611593838261215d565b506037611275828261215d565b600054610100900460ff166115c75760405162461bcd60e51b81526004016105c2906120aa565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561161857506000905060036116c5565b8460ff16601b1415801561163057508460ff16601c14155b1561164157506000905060046116c5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611695573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116be576000600192509250506116c5565b9150600090505b94509492505050565b60008160048111156116e2576116e2611efc565b036116ea5750565b60018160048111156116fe576116fe611efc565b0361174b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105c2565b600281600481111561175f5761175f611efc565b036117ac5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105c2565b60038160048111156117c0576117c0611efc565b036118185760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105c2565b600481600481111561182c5761182c611efc565b036118845760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105c2565b50565b6060600080856001600160a01b0316856040516118a4919061221d565b600060405180830381855afa9150503d80600081146118df576040519150601f19603f3d011682016040523d82523d6000602084013e6118e4565b606091505b50915091506104ab86838387611904565b6060611457848460008561197d565b6060831561197357825160000361196c576001600160a01b0385163b61196c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105c2565b5081611457565b6114578383611a58565b6060824710156119de5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105c2565b600080866001600160a01b031685876040516119fa919061221d565b60006040518083038185875af1925050503d8060008114611a37576040519150601f19603f3d011682016040523d82523d6000602084013e611a3c565b606091505b5091509150611a4d87838387611904565b979650505050505050565b815115611a685781518083602001fd5b8060405162461bcd60e51b81526004016105c29190611aa6565b60005b83811015611a9d578181015183820152602001611a85565b50506000910152565b6020815260008251806020840152611ac5816040850160208701611a82565b601f01601f19169190910160400192915050565b6001600160a01b038116811461188457600080fd5b60008060408385031215611b0157600080fd5b8235611b0c81611ad9565b946020939093013593505050565b600080600060608486031215611b2f57600080fd5b8335611b3a81611ad9565b92506020840135611b4a81611ad9565b929592945050506040919091013590565b600060208284031215611b6d57600080fd5b81356003811061148457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611bbb57611bbb611b7c565b604052919050565b600067ffffffffffffffff821115611bdd57611bdd611b7c565b5060051b60200190565b600080600080600060a08688031215611bff57600080fd5b8535611c0a81611ad9565b9450602086810135611c1b81611ad9565b94506040870135611c2b81611ad9565b935060608701359250608087013567ffffffffffffffff811115611c4e57600080fd5b8701601f81018913611c5f57600080fd5b8035611c72611c6d82611bc3565b611b92565b81815260059190911b8201830190838101908b831115611c9157600080fd5b928401925b82841015611caf57833582529284019290840190611c96565b80955050505050509295509295909350565b600060208284031215611cd357600080fd5b813561148481611ad9565b600082601f830112611cef57600080fd5b813567ffffffffffffffff811115611d0957611d09611b7c565b611d1c601f8201601f1916602001611b92565b818152846020838601011115611d3157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d6657600080fd5b853567ffffffffffffffff80821115611d7e57600080fd5b611d8a89838a01611cde565b96506020880135915080821115611da057600080fd5b50611dad88828901611cde565b9450506040860135611dbe81611ad9565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a031215611df157600080fd5b8735611dfc81611ad9565b96506020880135611e0c81611ad9565b95506040880135945060608801359350608088013560ff81168114611e3057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e6057600080fd5b8235611e6b81611ad9565b91506020830135611e7b81611ad9565b809150509250929050565b600181811c90821680611e9a57607f821691505b6020821081036113e157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037557610375611eba565b600060208284031215611ef557600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561037557610375611eba565b600060208284031215611f3757600080fd5b815161148481611ad9565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020808301919091526040820184905260806060830181905283519083018190526000918481019160a085019190845b81811015611fb357845184529382019392820192600101611f97565b50919998505050505050505050565b600080600080600060a08688031215611fda57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6000602080838503121561201557600080fd5b825167ffffffffffffffff81111561202c57600080fd5b8301601f8101851361203d57600080fd5b805161204b611c6d82611bc3565b81815260059190911b8201830190838101908783111561206a57600080fd5b928401925b82841015611a4d57835161208281611ad9565b8252928401929084019061206f565b6000600182016120a3576120a3611eba565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561210757600080fd5b8151801515811461148457600080fd5b601f82111561127557600081815260208120601f850160051c8101602086101561213e5750805b601f850160051c820191505b8181101561092a5782815560010161214a565b815167ffffffffffffffff81111561217757612177611b7c565b61218b816121858454611e86565b84612117565b602080601f8311600181146121c057600084156121a85750858301515b600019600386901b1c1916600185901b17855561092a565b600085815260208120601f198616915b828110156121ef578886015182559484019460019091019084016121d0565b508582101561220d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161222f818460208701611a82565b919091019291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220a6cbbfb5bfbcc7aad5e05a8464f9adb8012d57dbb553343d2c70cd353dc6ad8064736f6c63430008150033608060405234801561001057600080fd5b506105d1806100206000396000f3fe6080604052600436106100555760003560e01c8063335c7bbd1461005a57806371edfb9f1461006f578063d35a888e146100a0578063d36de10b146100b5578063db7645ae146100d5578063f1b5084b146100f5575b600080fd5b61006d610068366004610438565b61011a565b005b34801561007b57600080fd5b50610084610144565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ac57600080fd5b50610084610168565b3480156100c157600080fd5b5061006d6100d03660046104fc565b610187565b3480156100e157600080fd5b5061006d6100f03660046104fc565b6101af565b34801561010157600080fd5b50601554630100000090046001600160a01b0316610084565b6101226101d4565b60155461014090630100000090046001600160a01b03168383610261565b5050565b60155460009061016390630100000090046001600160a01b03166102c8565b905090565b60155460009061016390630100000090046001600160a01b0316610359565b61018f6101d4565b6015546101ac90630100000090046001600160a01b03168261037f565b50565b6101b76101d4565b6015546101ac90630100000090046001600160a01b0316826103df565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461025f5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840160405180910390fd5b565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906102919086908690600401610520565b6000604051808303818588803b1580156102aa57600080fd5b505af11580156102be573d6000803e3d6000fd5b5050505050505050565b6000806000836001600160a01b03166040516102ee906303e1469160e61b815260040190565b600060405180830381855afa9150503d8060008114610329576040519150601f19603f3d011682016040523d82523d6000602084013e61032e565b606091505b50915091508161033d57600080fd5b80806020019051810190610351919061057e565b949350505050565b6000806000836001600160a01b03166040516102ee90635c60da1b60e01b815260040190565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024015b600060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050505050565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024016103a9565b6001600160a01b03811681146101ac57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561044b57600080fd5b82356104568161040d565b9150602083013567ffffffffffffffff8082111561047357600080fd5b818501915085601f83011261048757600080fd5b81358181111561049957610499610422565b604051601f8201601f19908116603f011681019083821181831017156104c1576104c1610422565b816040528281528860208487010111156104da57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561050e57600080fd5b81356105198161040d565b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101561055c57858101830151858201606001528201610540565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121561059057600080fd5b81516105198161040d56fea264697066735822122011a2bb015a032e2319379532a76eb189fe8d0aa6b65f6668b82dd78237fe972e64736f6c63430008150033608060405260405162000e3a38038062000e3a833981016040819052620000269162000424565b828162000036828260006200004d565b50620000449050826200007f565b50505062000557565b6200005883620000f1565b600082511180620000665750805b156200007a5762000078838362000133565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000c160008051602062000df3833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620000ee8162000162565b50565b620000fc8162000200565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606200015b838360405180606001604052806027815260200162000e136027913962000297565b9392505050565b6001600160a01b038116620001cd5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b8060008051602062000df38339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381163b6200026f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620001c4565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc620001df565b6060600080856001600160a01b031685604051620002b6919062000504565b600060405180830381855af49150503d8060008114620002f3576040519150601f19603f3d011682016040523d82523d6000602084013e620002f8565b606091505b5090925090506200030c8683838762000316565b9695505050505050565b606083156200038a57825160000362000382576001600160a01b0385163b620003825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620001c4565b508162000396565b6200039683836200039e565b949350505050565b815115620003af5781518083602001fd5b8060405162461bcd60e51b8152600401620001c4919062000522565b80516001600160a01b0381168114620003e357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200041b57818101518382015260200162000401565b50506000910152565b6000806000606084860312156200043a57600080fd5b6200044584620003cb565b92506200045560208501620003cb565b60408501519092506001600160401b03808211156200047357600080fd5b818601915086601f8301126200048857600080fd5b8151818111156200049d576200049d620003e8565b604051601f8201601f19908116603f01168101908382118183101715620004c857620004c8620003e8565b81604052828152896020848701011115620004e257600080fd5b620004f5836020830160208801620003fe565b80955050505050509250925092565b6000825162000518818460208701620003fe565b9190910192915050565b602081526000825180602084015262000543816040850160208701620003fe565b601f01601f19169190910160400192915050565b61088c80620005676000396000f3fe60806040523661001357610011610017565b005b6100115b61001f610169565b6001600160a01b0316330361015f5760606001600160e01b0319600035166364d3180d60e11b810161005a5761005361019c565b9150610157565b63587086bd60e11b6001600160e01b031982160161007a576100536101f3565b63070d7c6960e41b6001600160e01b031982160161009a57610053610239565b621eb96f60e61b6001600160e01b03198216016100b95761005361026a565b63a39f25e560e01b6001600160e01b03198216016100d9576100536102aa565b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b815160208301f35b6101676102be565b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60606101a66102ce565b60006101b53660048184610683565b8101906101c291906106c9565b90506101df816040518060200160405280600081525060006102d9565b505060408051602081019091526000815290565b60606000806102053660048184610683565b81019061021291906106fa565b91509150610222828260016102d9565b604051806020016040528060008152509250505090565b60606102436102ce565b60006102523660048184610683565b81019061025f91906106c9565b90506101df81610305565b60606102746102ce565b600061027e610169565b604080516001600160a01b03831660208201529192500160405160208183030381529060405291505090565b60606102b46102ce565b600061027e61035c565b6101676102c961035c565b61036b565b341561016757600080fd5b6102e28361038f565b6000825111806102ef5750805b15610300576102fe83836103cf565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61032e610169565b604080516001600160a01b03928316815291841660208301520160405180910390a1610359816103fb565b50565b60006103666104a4565b905090565b3660008037600080366000845af43d6000803e80801561038a573d6000f35b3d6000fd5b610398816104cc565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f4838360405180606001604052806027815260200161083060279139610560565b9392505050565b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80546001600160a01b0319166001600160a01b039290921691909117905550565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61018d565b6001600160a01b0381163b6105395760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161014e565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610483565b6060600080856001600160a01b03168560405161057d91906107e0565b600060405180830381855af49150503d80600081146105b8576040519150601f19603f3d011682016040523d82523d6000602084013e6105bd565b606091505b50915091506105ce868383876105d8565b9695505050505050565b60608315610647578251600003610640576001600160a01b0385163b6106405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b5081610651565b6106518383610659565b949350505050565b8151156106695781518083602001fd5b8060405162461bcd60e51b815260040161014e91906107fc565b6000808585111561069357600080fd5b838611156106a057600080fd5b5050820193919092039150565b80356001600160a01b03811681146106c457600080fd5b919050565b6000602082840312156106db57600080fd5b6103f4826106ad565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561070d57600080fd5b610716836106ad565b9150602083013567ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b813581811115610759576107596106e4565b604051601f8201601f19908116603f01168101908382118183101715610781576107816106e4565b8160405282815288602084870101111561079a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600082516107f28184602087016107bc565b9190910192915050565b602081526000825180602084015261081b8160408501602087016107bc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202e988d1a153a333c9610e275b0e243a7562e1d5aea774b92b4f3d5f451e3cdfe64736f6c63430008150033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65640000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122011bd9e3de9d948113a90b5bb0b8d24bd06c6e68b3c20a1d10709b83a44e047c264736f6c63430008150033",
    "sourceMap": "1205:18927:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13577:1163;;;:::i;:::-;;4559:296:113;;;:::i;4476:1126:111:-;;;:::i;5730:1464::-;;;:::i;:::-;;;-1:-1:-1;;;;;195:32:118;;;177:51;;165:2;150:18;5730:1464:111;;;;;;;;1684:2707;;;:::i;2161:134:47:-;;;:::i;:::-;;;;;;;:::i;15023:643:111:-;;;:::i;2930:133:47:-;;;:::i;2631:141::-;;;:::i;12189:1381:111:-;;;:::i;1289:245::-;;;:::i;2447:178:47:-;;;:::i;:::-;;;;;;;:::i;15673:1758:111:-;;;:::i;2301:140:47:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;8146:1374:111:-;;;:::i;1866:141:47:-;;;:::i;9530:1145:111:-;;;:::i;1819:584:41:-;;;:::i;:::-;;;4061:14:118;;4054:22;4036:41;;4024:2;4009:18;1819:584:41;3896:187:118;14772:110:111;;;:::i;2013:142:47:-;;;:::i;11035:1147:111:-;;;:::i;7427:711::-;;;:::i;1572:26:41:-;;;;;;;;;13577:1163:111;13652:16;:14;:16::i;:::-;-1:-1:-1;13703:8:111;;13760:9;;13781:5;;13747:40;;-1:-1:-1;;;13747:40:111;;-1:-1:-1;;;;;13781:5:111;;;13747:40;;;177:51:118;13703:8:111;;;;13679;;13760:9;;;;;13747:33;;150:18:118;;13747:40:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13724:63;-1:-1:-1;13797:32:111;13808:20;;13797:10;:32::i;:::-;13877:5;;13863:20;;-1:-1:-1;;;13863:20:111;;-1:-1:-1;;;;;13877:5:111;;;13863:20;;;177:51:118;13840:20:111;;13863:13;;;;;150:18:118;;13863:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13840:43;;13893:16;13954:7;13930:3;-1:-1:-1;;;;;13930:19:111;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13912:39;;:15;:39;:::i;:::-;:49;;;;:::i;:::-;13893:68;;13972:28;13995:3;13972:15;:28::i;:::-;14046:17;14124:7;14085:3;-1:-1:-1;;;;;14085:19:111;;14105:14;14085:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14067:53;;:15;:53;:::i;:::-;14066:65;;;;:::i;:::-;14046:85;;14142:27;14172:123;;;;;;;;;14220:12;14172:123;;;;14234:11;14172:123;;;;;;;;;;;14249:2;;;;;;;;;-1:-1:-1;;;;;14249:2:111;-1:-1:-1;;;;;14249:21:111;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14172:123;;;;14281:2;14172:123;;;;;:33;:123::i;:::-;14337:5;;14323:20;;-1:-1:-1;;;14323:20:111;;-1:-1:-1;;;;;14337:5:111;;;14323:20;;;177:51:118;14142:153:111;;-1:-1:-1;;;;;;;;;;;;14323:13:111;;;150:18:118;;14323:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14373:2:111;;14353:41;;-1:-1:-1;;;14353:41:111;;-1:-1:-1;;;;;14353:11:111;;;;-1:-1:-1;14353:11:111;;-1:-1:-1;14353:41:111;;14373:2;;14378:15;;14353:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14446:5:111;;14484:7;;14422:135;;-1:-1:-1;;;14422:135:111;;14405:14;;-1:-1:-1;;;;;14422:10:111;;;;;;:135;;14446:5;;;;;14484:7;;14505:15;;14534:13;;14422:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14405:152;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;14568:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14655:9:111;;14676:5;;14642:40;;-1:-1:-1;;;14642:40:111;;-1:-1:-1;;;;;14676:5:111;;;14642:40;;;177:51:118;14618:21:111;;-1:-1:-1;14655:9:111;;;-1:-1:-1;14642:33:111;;150:18:118;;14642:40:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14618:64;;14692:41;14723:9;14703:16;:29;14692:10;:41::i;:::-;13617:1123;;;;;;;;13577:1163::o;4559:296:113:-;4593:21;4617:32;4632:16;4617:14;:32::i;:::-;4694:18;;-1:-1:-1;;;4694:18:113;;4593:56;;-1:-1:-1;;;;;;;;;;;;4674:19:113;;;;;4694:9;;:18;;4593:56;;4694:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4694:18:113;;;;;;;;;;;;:::i;:::-;4714:13;;4674:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4659:12;:69;4738:11;:9;:11::i;:::-;4791:18;;-1:-1:-1;;;4791:18:113;;-1:-1:-1;;;;;;;;;;;4771:19:113;;;;;4791:9;;:18;;4801:7;;4791:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4791:18:113;;;;;;;;;;;;:::i;:::-;4811:15;;4771:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4760:8;:67;4837:11;:9;:11::i;:::-;4583:272;4559:296::o;4476:1126:111:-;4550:16;:14;:16::i;:::-;-1:-1:-1;4601:8:111;;4659:5;;4645:20;;-1:-1:-1;;;4645:20:111;;-1:-1:-1;;;;;4659:5:111;;;4645:20;;;177:51:118;4601:8:111;;;4577;;4601;;4645:13;;150:18:118;;4645:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4622:43;;4675:31;4704:1;4686:15;:19;4675:10;:31::i;:::-;4717:19;4739:20;:18;:20::i;:::-;4717:42;-1:-1:-1;4769:31:111;4780:19;;4769:10;:31::i;:::-;4848:8;;4868:5;;4835:39;;-1:-1:-1;;;4835:39:111;;-1:-1:-1;;;;;4868:5:111;;;4835:39;;;177:51:118;4811:21:111;;4848:8;;;;;4835:32;;150:18:118;;4835:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4811:63;-1:-1:-1;4884:33:111;4895:21;;4884:10;:33::i;:::-;4960:5;;4946:20;;-1:-1:-1;;;4946:20:111;;-1:-1:-1;;;;;4960:5:111;;;4946:20;;;177:51:118;-1:-1:-1;;;;;;;;;;;4946:13:111;;;150:18:118;;4946:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4996:2:111;;4976:41;;-1:-1:-1;;;4976:41:111;;-1:-1:-1;;;;;4976:11:111;;;;-1:-1:-1;4976:11:111;;-1:-1:-1;4976:41:111;;4996:2;;5001:15;;4976:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5052:5:111;;5090:8;;-1:-1:-1;;;;;5028:10:111;;;;;;5052:5;;;;;;5090:8;5112:15;5141:50;5028:3;5112:15;5175;5141:11;:50::i;:::-;5028:173;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;5211:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5293:8:111;;5313:5;;5280:39;;-1:-1:-1;;;5280:39:111;;-1:-1:-1;;;;;5313:5:111;;;5280:39;;;177:51:118;5293:8:111;;;-1:-1:-1;5280:32:111;;-1:-1:-1;150:18:118;;5280:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5261:58;;5329:32;5359:1;5340:16;:20;5329:10;:32::i;:::-;5389:20;:18;:20::i;:::-;5372:37;;5419:30;5447:1;5430:14;:18;5419:10;:30::i;:::-;5459:45;5488:15;5470:14;:33;5459:10;:45::i;:::-;5547:5;;5533:20;;-1:-1:-1;;;5533:20:111;;-1:-1:-1;;;;;5547:5:111;;;5533:20;;;177:51:118;5533:13:111;;;;;;150:18:118;;5533:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5515:38;-1:-1:-1;5563:32:111;5574:20;;5563:10;:32::i;:::-;4515:1087;;;;4476:1126::o;5730:1464::-;5845:2;;5875:9;;5845:74;;-1:-1:-1;;;5845:74:111;;5771:8;;;;-1:-1:-1;;;;;5845:2:111;;;;:16;;:74;;5875:9;;5845:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5817:103;;5932:14;5952:36;5968:12;5982:5;5952:15;:36::i;:::-;5931:57;;;;5998:13;6045:9;;;;;;;;;-1:-1:-1;;;;;6045:9:111;-1:-1:-1;;;;;6032:32:111;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6026:40;;:2;:40;:::i;:::-;6014:52;;:9;:52;:::i;:::-;5998:68;;6076:29;6099:4;6076:15;:29::i;:::-;6116:16;:14;:16::i;:::-;6165:5;;6172:9;;6142:50;;6156:7;;-1:-1:-1;;;;;6165:5:111;;;;6172:9;6183:8;6142:13;:50::i;:::-;6204:18;6219:2;6204:14;:18::i;:::-;6257:8;;6312:5;;6298:20;;-1:-1:-1;;;6298:20:111;;-1:-1:-1;;;;;6312:5:111;;;6298:20;;;177:51:118;6257:8:111;;;6233;;6257;;6298:13;;150:18:118;;6298:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6277:41;-1:-1:-1;6328:30:111;6339:18;;6328:10;:30::i;:::-;6369:23;6395;:21;:23::i;:::-;6369:49;;6428;6458:18;6439:15;;:37;6428:10;:49::i;:::-;6524:2;;:17;;;-1:-1:-1;;;6524:17:111;;;;6506:15;;-1:-1:-1;;;;;6524:2:111;;:15;;:17;;;;;;;;;;;;;;6506:15;6524:2;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6506:35;;6551:22;6562:10;6551;:22::i;:::-;6584;6609:23;:21;:23::i;:::-;6584:48;-1:-1:-1;6642:34:111;6653:22;;6642:10;:34::i;:::-;6696:5;;6687:15;;-1:-1:-1;;;6687:15:111;;-1:-1:-1;;;;;6696:5:111;;;6687:15;;;177:51:118;-1:-1:-1;;;;;;;;;;;6687:8:111;;;150:18:118;;6687:15:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6712:18;6733:2;;;;;;;;;-1:-1:-1;;;;;6733:2:111;-1:-1:-1;;;;;6733:14:111;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6712:37;;6805:23;:21;:23::i;:::-;6785:43;;6838:33;6869:1;6849:17;:21;6838:10;:33::i;:::-;6918:5;;6904:20;;-1:-1:-1;;;6904:20:111;;-1:-1:-1;;;;;6918:5:111;;;6904:20;;;177:51:118;6882:19:111;;6904:13;;;;;150:18:118;;6904:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6882:42;;6934:30;6962:1;6945:14;:18;6934:10;:30::i;:::-;6974:47;7006:14;6985:17;:35;6974:10;:47::i;:::-;7032:24;7059:23;:21;:23::i;:::-;7032:50;-1:-1:-1;7092:70:111;7121:40;7032:50;7121:18;:40;:::i;:::-;7103:13;:58;7092:10;:70::i;:::-;-1:-1:-1;7180:7:111;;5730:1464;-1:-1:-1;;;;;;;;;;5730:1464:111:o;1684:2707::-;1802:10;;1822:8;;1832:9;;1843:10;;1784:70;;-1:-1:-1;;;1784:70:111;;1740:20;;-1:-1:-1;;;;;;;;;;;1763:7:111;;;-1:-1:-1;;;;;1802:10:111;;;;1784:37;;:70;;1822:8;;;;1832:9;;;;-1:-1:-1;;;1843:10:111;;;;;;1784:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1763:126;;-1:-1:-1;;;;;;1763:126:111;;;;;;;;;;1877:1;;1763:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:149;;1900:21;1923:16;1943:24;:22;:24::i;:::-;2039:2;;2069:9;;2039:74;;-1:-1:-1;;;2039:74:111;;1899:68;;-1:-1:-1;1899:68:111;;-1:-1:-1;2011:16:111;;-1:-1:-1;;;;;2039:2:111;;;;:16;;:74;;2069:9;;;2039:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2011:103;;2126:14;2146:38;2162:14;2178:5;2146:15;:38::i;:::-;2125:59;;;;2194:13;2247:9;;;;;;;;;-1:-1:-1;;;;;2247:9:111;-1:-1:-1;;;;;2234:32:111;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2228:40;;:2;:40;:::i;:::-;2211:13;2223:1;2211:9;:13;:::i;:::-;2210:58;;;;:::i;:::-;2194:74;;2278:29;2301:4;2278:15;:29::i;:::-;2318:16;:14;:16::i;:::-;2367:5;;2374:9;;2344:50;;2358:7;;-1:-1:-1;;;;;2367:5:111;;;;2374:9;2385:8;2344:13;:50::i;:::-;2405:57;2424:12;2438:13;2453:8;2405:18;:57::i;:::-;2516:5;;2498:24;;-1:-1:-1;;;2498:24:111;;-1:-1:-1;;;;;2516:5:111;;;2498:24;;;177:51:118;2473:22:111;;2498:17;;;;;150:18:118;;2498:24:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2473:49;;2532:33;2563:1;2543:17;:21;2532:10;:33::i;:::-;2576:9;2593:16;;2588:2;:21;;;;:::i;:::-;2576:33;-1:-1:-1;;;;;;;;;;;;2620:7:111;2628:22;2576:33;2628:15;:22;:::i;:::-;2620:31;;;;;;;;;;;;;13635:25:118;;13623:2;13608:18;;13489:177;2620:31:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:16;2681:18;:16;:18::i;:::-;2662:37;;2709:28;2735:1;2720:12;:16;2709:10;:28::i;:::-;2748:16;:14;:16::i;:::-;2799:8;;-1:-1:-1;;;;;2799:8:111;2775;;2864:28;2799:8;2864:23;:28::i;:::-;2819:73;;;;2921:26;2950:23;:21;:23::i;:::-;2921:52;;2983:56;3018:20;2994:21;:44;2983:10;:56::i;:::-;3064:5;;3050:20;;-1:-1:-1;;;3050:20:111;;-1:-1:-1;;;;;3064:5:111;;;3050:20;;;177:51:118;-1:-1:-1;;;;;;;;;;;3050:13:111;;;150:18:118;;3050:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3100:2:111;;3080:41;;-1:-1:-1;;;3080:41:111;;-1:-1:-1;;;;;3080:11:111;;;;-1:-1:-1;3080:11:111;;-1:-1:-1;3080:41:111;;3100:2;;3105:15;;3080:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3160:5:111;;3198:8;;-1:-1:-1;;;;;3136:10:111;;;;;;3160:5;;;;;;3198:8;3220:15;3249:49;3136:3;3220:15;3160:5;3249:11;:49::i;:::-;3136:172;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;3318:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3344:22;3368:18;3403:64;3423:21;3446:3;3451:15;3403:19;:64::i;:::-;3538:5;;3529:15;;-1:-1:-1;;;3529:15:111;;-1:-1:-1;;;;;3538:5:111;;;3529:15;;;177:51:118;3343:124:111;;-1:-1:-1;3343:124:111;-1:-1:-1;3511:8:111;;-1:-1:-1;;;;;;;;;;;3529:8:111;;;150:18:118;;3529:15:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3555:2:111;;:37;;-1:-1:-1;;;3555:37:111;;;;;13635:25:118;;;-1:-1:-1;;;;;3555:2:111;;;;-1:-1:-1;3555:28:111;;-1:-1:-1;13608:18:118;;3555:37:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3604:50;3618:7;3627:5;;;;;;;;;-1:-1:-1;;;;;3627:5:111;3634:9;;;;;;;;;-1:-1:-1;;;;;3634:9:111;3645:8;3604:13;:50::i;:::-;3708:5;;3690:24;;-1:-1:-1;;;3690:24:111;;-1:-1:-1;;;;;3708:5:111;;;3690:24;;;177:51:118;3665:22:111;;3690:17;;;;;150:18:118;;3690:24:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3665:49;-1:-1:-1;3725:9:111;3797:21;:17;3817:1;3797:21;:::i;:::-;3760;:17;3780:1;3760:21;:::i;:::-;3739:43;;:17;:43;:::i;:::-;3738:54;;3786:6;3738:54;:::i;:::-;3737:82;;;;:::i;:::-;3725:94;-1:-1:-1;3901:21:111;3912:9;;3901:10;:21::i;:::-;-1:-1:-1;;;;;;;;;;;3941:7:111;3949:22;3967:4;3949:15;:22;:::i;:::-;3941:31;;;;;;;;;;;;;13635:25:118;;13623:2;13608:18;;13489:177;3941:31:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4071:2:111;;4081:5;;4071:16;;-1:-1:-1;;;4071:16:111;;-1:-1:-1;;;;;4081:5:111;;;4071:16;;;177:51:118;4057:11:111;;-1:-1:-1;4071:2:111;;;-1:-1:-1;4071:9:111;;150:18:118;;4071:16:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4057:30;-1:-1:-1;4097:47:111;4131:12;4140:3;4057:30;4131:12;:::i;:::-;4108:19;4124:3;4108:13;:19;:::i;:::-;:35;4097:10;:47::i;:::-;4181:18;4202:16;:14;:16::i;:::-;4181:37;;4229:42;4257:13;4240;:30;;4229:10;:42::i;:::-;4281:56;4323:13;4292:27;4312:7;4292:17;:27;:::i;4281:56::-;4347:37;4358:20;:18;:20::i;:::-;:25;4347:10;:37::i;:::-;1730:2661;;;;;;;;;;;;;;;;;;;;1684:2707::o;2161:134:47:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:47;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;15023:643:111:-;15116:16;:14;:16::i;:::-;-1:-1:-1;15185:8:111;;15221:35;;-1:-1:-1;;;15221:35:111;;-1:-1:-1;;;;;15185:8:111;;;;15161;;15185;;15221:19;;:35;;15161:8;;15221:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15206:50;;15266:12;15281:3;-1:-1:-1;;;;;15281:19:111;;15301:14;15281:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15266:50;;15326:13;15342:3;-1:-1:-1;;;;;15342:19:111;;15362:15;15342:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15326:52;;15415:15;15433:50;15452:7;15461;15470:2;;;;;;;;;-1:-1:-1;;;;;15470:2:111;-1:-1:-1;;;;;15470:10:111;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15433:18;:50::i;:::-;15415:68;;15493:16;15512:52;15531:7;15540:8;15550:2;;;;;;;;;-1:-1:-1;;;;;15550:2:111;-1:-1:-1;;;;;15550:11:111;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15512:52;15493:71;-1:-1:-1;15575:46:111;15586:15;;;:34;;;15605:10;15619:1;15605:15;15586:34;15575:10;:46::i;:::-;15631:28;15642:16;;15631:10;:28::i;:::-;15082:584;;;;;;15023:643::o;2930:133:47:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:47;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:47;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;12189:1381:111:-;12271:16;:14;:16::i;:::-;-1:-1:-1;12322:8:111;;12379:9;;12400:5;;12366:40;;-1:-1:-1;;;12366:40:111;;-1:-1:-1;;;;;12400:5:111;;;12366:40;;;177:51:118;12322:8:111;;;;12298;;12379:9;;;;;12366:33;;150:18:118;;12366:40:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12343:63;-1:-1:-1;12416:32:111;12427:20;;12416:10;:32::i;:::-;12496:5;;12482:20;;-1:-1:-1;;;12482:20:111;;-1:-1:-1;;;;;12496:5:111;;;12482:20;;;177:51:118;12459:20:111;;12482:13;;;;;150:18:118;;12482:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12459:43;;12512:16;12573:7;12549:3;-1:-1:-1;;;;;12549:19:111;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12531:39;;:15;:39;:::i;:::-;:49;;;;:::i;:::-;12512:68;;12591:28;12614:3;12591:15;:28::i;:::-;12665:17;12743:7;12704:3;-1:-1:-1;;;;;12704:19:111;;12724:14;12704:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12686:53;;:15;:53;:::i;:::-;12685:65;;;;:::i;:::-;12665:85;;12761:27;12791:123;;;;;;;;;12839:12;12791:123;;;;12853:11;12791:123;;;;;;;;;;;12868:2;;;;;;;;;-1:-1:-1;;;;;12868:2:111;-1:-1:-1;;;;;12868:21:111;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12791:123;12967:8;;12995:5;;13010:2;;12761:153;;-1:-1:-1;12926:7:111;;;;;;-1:-1:-1;;;;;;;;;;;12959:7:111;;;12967:8;12977:54;;-1:-1:-1;;;;;12995:5:111;;;;13010:2;13015:15;12977:17;:54::i;:::-;12959:73;;-1:-1:-1;;;;;;12959:73:111;;;;;;;;;;13845:25:118;;;;13886:18;;;13879:34;13818:18;;12959:73:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13065:5;;13051:20;;-1:-1:-1;;;13051:20:111;;-1:-1:-1;;;;;13065:5:111;;;13051:20;;;177:51:118;12925:107:111;;-1:-1:-1;12925:107:111;;-1:-1:-1;12925:107:111;-1:-1:-1;;;;;;;;;;;;13051:13:111;;;150:18:118;;13051:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13105:5:111;;13132:2;;13081:143;;-1:-1:-1;;;13081:143:111;;-1:-1:-1;;;;;13081:10:111;;;;-1:-1:-1;13081:10:111;;-1:-1:-1;13081:143:111;;13105:5;;;13132:2;;13149:15;;13178;;13207:1;;13210;;13213;;13081:143;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13276:5:111;;13314:7;;13252:135;;-1:-1:-1;;;13252:135:111;;13235:14;;-1:-1:-1;;;;;;13252:10:111;;;;-1:-1:-1;13252:10:111;;:135;;13276:5;;;;;;13314:7;;;;13335:15;;13364:13;;13252:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13235:152;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;13398:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13485:9:111;;13506:5;;13472:40;;-1:-1:-1;;;13472:40:111;;-1:-1:-1;;;;;13506:5:111;;;13472:40;;;177:51:118;13448:21:111;;-1:-1:-1;13485:9:111;;;-1:-1:-1;13472:33:111;;150:18:118;;13472:40:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13448:64;;13522:41;13553:9;13533:16;:29;13522:10;:41::i;:::-;12236:1334;;;;;;;;;;;12189:1381::o;1289:245::-;1377:28;:26;:28::i;:::-;1451:2;;:17;;;-1:-1:-1;;;1451:17:111;;;;1433:15;;-1:-1:-1;;;;;1451:2:111;;:15;;:17;;;;;;;;;;;;;;1433:15;1451:2;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1433:35;;1504:23;1516:10;1515:11;1504:10;:23::i;2447:178:47:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;15673:1758:111:-;15847:10;;15867:8;;15877:9;;15888:10;;15829:70;;-1:-1:-1;;;15829:70:111;;15785:20;;-1:-1:-1;;;;;;;;;;;15808:7:111;;;-1:-1:-1;;;;;15847:10:111;;;;15829:37;;:70;;15867:8;;;;15877:9;;;;-1:-1:-1;;;15888:10:111;;;;;;15829:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15808:126;;-1:-1:-1;;;;;;15808:126:111;;;;;;;;;;15922:1;;15808:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15785:149;;15945:21;15968:16;15988:24;:22;:24::i;:::-;15944:68;;;;16024:14;16044:38;16060:14;16076:5;16044:15;:38::i;:::-;16023:59;;;;16154:13;16201:9;;;;;;;;;-1:-1:-1;;;;;16201:9:111;-1:-1:-1;;;;;16188:32:111;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16182:40;;:2;:40;:::i;:::-;16170:52;;:9;:52;:::i;:::-;16290:9;;16311:5;;16318:8;;16154:68;;-1:-1:-1;16233:16:111;;16254:103;;-1:-1:-1;;;;;16290:9:111;;;;16154:68;;16311:5;;;16290:9;;16233:16;16254:22;:103::i;:::-;16232:125;;;16367:57;16386:12;16400:13;16415:8;16367:18;:57::i;:::-;16497:9;;;;;;;;;-1:-1:-1;;;;;16497:9:111;-1:-1:-1;;;;;16484:32:111;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16478:40;;:2;:40;:::i;:::-;16461:13;16473:1;16461:9;:13;:::i;:::-;16460:58;;;;:::i;:::-;16551:3;;16556:9;;16449:69;;-1:-1:-1;16528:48:111;;16542:7;;-1:-1:-1;;;;;16551:3:111;;;;16556:9;16449:69;16528:13;:48::i;:::-;16587:16;:14;:16::i;:::-;16654:2;;:17;;;-1:-1:-1;;;16654:17:111;;;;16636:15;;-1:-1:-1;;;;;16654:2:111;;:15;;:17;;;;;;;;;;;;;;16636:15;16654:2;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16636:35;;16681:22;16692:10;16681;:22::i;:::-;16749:8;;16777;;16736:51;;-1:-1:-1;;;16736:51:111;;-1:-1:-1;;;;;16777:8:111;;;16736:51;;;177::118;16714:19:111;;16749:8;;;;;16736:32;;150:18:118;;16736:51:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16714:73;;16849:29;16881:2;;;;;;;;;-1:-1:-1;;;;;16881:2:111;-1:-1:-1;;;;;16881:17:111;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;16849:68;;16928:16;16947:64;16978:24;17004:6;16947:2;;;;;;;;;-1:-1:-1;;;;;16947:2:111;-1:-1:-1;;;;;16947:17:111;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;:64;:30;:64::i;:::-;16928:83;-1:-1:-1;17021:19:111;17057:40;17062:2;16928:83;17090:6;17057:19;:40::i;:::-;17043:54;;:11;:54;:::i;:::-;17021:76;;17108:17;17128:49;17154:7;17163:2;;;;;;;;;-1:-1:-1;;;;;17163:2:111;-1:-1:-1;;;;;17163:11:111;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17128:14;;:49;:25;:49::i;:::-;17108:69;-1:-1:-1;17187:13:111;17203:29;17108:69;17203:14;:29;:::i;:::-;17187:45;;17242:42;17265:1;17253:8;:13;;:30;;;;-1:-1:-1;17270:13:111;17242:10;:42::i;:::-;17328:8;;17348:5;;17315:39;;-1:-1:-1;;;17315:39:111;;-1:-1:-1;;;;;17348:5:111;;;17315:39;;;177:51:118;17295:17:111;;17328:8;;;;;17315:32;;150:18:118;;17315:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17295:59;;17364:28;17390:1;17375:12;:16;17364:10;:28::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;17403:19:111;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15724:1707;;;;;;;;;;;;;;15673:1758::o;2301:140:47:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8146:1374:111;8230:16;:14;:16::i;:::-;-1:-1:-1;8281:8:111;;8339:5;;8325:20;;-1:-1:-1;;;8325:20:111;;-1:-1:-1;;;;;8339:5:111;;;8325:20;;;177:51:118;8281:8:111;;;8257;;8348:1;;8281:8;;8325:13;;150:18:118;;8325:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;:::i;:::-;8394:8;;8414:5;;8381:39;;-1:-1:-1;;;8381:39:111;;-1:-1:-1;;;;;8414:5:111;;;8381:39;;;177:51:118;8302:47:111;;-1:-1:-1;8359:19:111;;8394:8;;;8381:32;;150:18:118;;8381:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8359:61;-1:-1:-1;8430:31:111;8441:19;;8430:10;:31::i;:::-;8480:17;8559:7;8519:3;-1:-1:-1;;;;;8519:19:111;;8539:15;8519:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8501:54;;:15;:54;:::i;:::-;8500:66;;;;:::i;:::-;8480:86;;8576:26;8599:1;8576:15;:26::i;:::-;8620:21;8644:71;8677:12;8691:2;;;;;;;;;-1:-1:-1;;;;;8691:2:111;-1:-1:-1;;;;;8691:21:111;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8644:32;:71::i;:::-;8756:13;;;8767:1;8756:13;;;;;;;;;8620:95;;-1:-1:-1;8726:27:111;;8756:13;;;;;;;;;;;;-1:-1:-1;8756:13:111;8726:43;;8798:16;8779:13;8793:1;8779:16;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;;8856:5;8842:20;;-1:-1:-1;;;8842:20:111;;-1:-1:-1;;;;;8856:5:111;;;8842:20;;;177:51:118;-1:-1:-1;;;;;;;;;;;8842:13:111;;;150:18:118;;8842:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8892:2:111;;8872:41;;-1:-1:-1;;;8872:41:111;;-1:-1:-1;;;;;8872:11:111;;;;-1:-1:-1;8872:11:111;;-1:-1:-1;8872:41:111;;8892:2;;8897:15;;8872:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8924:18;8945:3;-1:-1:-1;;;;;8945:19:111;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9018:5;;9056:8;;8994:136;;-1:-1:-1;;;8994:136:111;;8924:42;;-1:-1:-1;8977:14:111;;-1:-1:-1;;;;;8994:10:111;;;;;;:136;;9018:5;;;;;;9056:8;;;9078:15;;9107:13;;8994:136;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8977:153;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;9140:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9165:19;9187:3;-1:-1:-1;;;;;9187:19:111;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9165:43;-1:-1:-1;9260:55:111;9294:20;9311:3;9165:43;9294:20;:::i;:::-;9271:19;9287:3;9271:13;:19;:::i;9260:55::-;9387:8;;9407:5;;9374:39;;-1:-1:-1;;;9374:39:111;;-1:-1:-1;;;;;9407:5:111;;;9374:39;;;177:51:118;9351:20:111;;9387:8;;;;;9374:32;;150:18:118;;9374:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9351:62;;9432:31;9461:1;9443:15;:19;9432:10;:31::i;:::-;9473:40;9497:15;9484:9;:28;9473:10;:40::i;:::-;8195:1325;;;;;;;;;;8146:1374::o;1866:141:47:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9530:1145:111;9603:16;:14;:16::i;:::-;-1:-1:-1;9654:8:111;;9712:5;;9698:20;;-1:-1:-1;;;9698:20:111;;-1:-1:-1;;;;;9712:5:111;;;9698:20;;;177:51:118;9654:8:111;;;9630;;9654;;9698:13;;150:18:118;;9698:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9763:8;;9783:5;;9750:39;;-1:-1:-1;;;9750:39:111;;-1:-1:-1;;;;;9783:5:111;;;9750:39;;;177:51:118;9675:43:111;;-1:-1:-1;9728:19:111;;9763:8;;;9750:32;;150:18:118;;9750:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9728:61;-1:-1:-1;9799:31:111;9810:19;;9799:10;:31::i;:::-;9849:17;9928:7;9888:3;-1:-1:-1;;;;;9888:19:111;;9908:15;9888:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9870:54;;:15;:54;:::i;:::-;9869:66;;;;:::i;:::-;9849:86;;9945:26;9968:1;9945:15;:26::i;:::-;9989:21;10013:71;10046:12;10060:2;;;;;;;;;-1:-1:-1;;;;;10060:2:111;-1:-1:-1;;;;;10060:21:111;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10013:71;10125:13;;;10136:1;10125:13;;;;;;;;;9989:95;;-1:-1:-1;10095:27:111;;10125:13;;;;;;;;;;;;-1:-1:-1;10125:13:111;10095:43;;10167:16;10148:13;10162:1;10148:16;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;;10225:5;10211:20;;-1:-1:-1;;;10211:20:111;;-1:-1:-1;;;;;10225:5:111;;;10211:20;;;177:51:118;-1:-1:-1;;;;;;;;;;;10211:13:111;;;150:18:118;;10211:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10261:2:111;;10241:41;;-1:-1:-1;;;10241:41:111;;-1:-1:-1;;;;;10241:11:111;;;;-1:-1:-1;10241:11:111;;-1:-1:-1;10241:41:111;;10261:2;;10266:15;;10241:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10334:5:111;;10372:8;;10310:136;;-1:-1:-1;;;10310:136:111;;10293:14;;-1:-1:-1;;;;;10310:10:111;;;;;;:136;;10334:5;;;;;10372:8;;10394:15;;10423:13;;10310:136;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10293:153;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;10456:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10542:8:111;;10562:5;;10529:39;;-1:-1:-1;;;10529:39:111;;-1:-1:-1;;;;;10562:5:111;;;10529:39;;;177:51:118;10506:20:111;;-1:-1:-1;10542:8:111;;;-1:-1:-1;10529:32:111;;150:18:118;;10529:39:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10506:62;;10587:31;10616:1;10598:15;:19;10587:10;:31::i;:::-;10628:40;10652:15;10639:9;:28;10628:10;:40::i;1819:584:41:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:41;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:41;3066:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:41;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:41;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:41;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:41;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:41:o;14772:110:111:-;1973:20:114;;2007:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2007:43:114;-1:-1:-1;;;2007:43:114;;;2064:34;;1973:20;2064:34;;;16672:41:118;;;;-1:-1:-1;16729:18:118;;;16722:34;;;16772:18;;;;16765:34;;;;2064::114;;;;;;;;;;16645:18:118;;;2064:34:114;;;;-1:-1:-1;;;1948:160:114;;;-1:-1:-1;;;;;;;;;;;1948:11:114;;;:160;;-1:-1:-1;;;;;1973:20:114;;;;1948:160;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14850:25:111::1;:23;:25::i;:::-;2155:20:114::0;;2149:44;;;-1:-1:-1;;;2149:44:114;;;;2132:11;;-1:-1:-1;;;;;2155:20:114;;2149:42;;:44;;;;;;;;;;;;;;2155:20;2149:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2131:62;;;;2203:18;2214:6;2203:10;:18::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;2231:19:114;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:321;14772:110:111:o;2013:142:47:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:47;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;11035:1147:111:-;11112:16;:14;:16::i;:::-;-1:-1:-1;11163:8:111;;11221:5;;11207:20;;-1:-1:-1;;;11207:20:111;;-1:-1:-1;;;;;11221:5:111;;;11207:20;;;177:51:118;11163:8:111;;;11139;;11163;;11207:13;;150:18:118;;11207:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11266:8;;11286:5;;11260:32;;-1:-1:-1;;;11260:32:111;;-1:-1:-1;;;;;11286:5:111;;;11260:32;;;177:51:118;11184:43:111;;-1:-1:-1;11238:19:111;;11266:8;;;11260:25;;150:18:118;;11260:32:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11238:54;-1:-1:-1;11302:31:111;11313:19;;11302:10;:31::i;:::-;11344:17;11422:7;11383:3;-1:-1:-1;;;;;11383:19:111;;11403:14;11383:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11365:53;;:15;:53;:::i;:::-;11364:65;;;;:::i;:::-;11344:85;;11440:28;11463:3;11440:15;:28::i;:::-;11503:21;11527:71;11560:12;11574:2;;;;;;;;;-1:-1:-1;;;;;11574:2:111;-1:-1:-1;;;;;11574:21:111;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11527:71;11639:13;;;11650:1;11639:13;;;;;;;;;11503:95;;-1:-1:-1;11609:27:111;;11639:13;;;;;;;;;;;;-1:-1:-1;11639:13:111;11609:43;;11681:16;11662:13;11676:1;11662:16;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;;11739:5;11725:20;;-1:-1:-1;;;11725:20:111;;-1:-1:-1;;;;;11739:5:111;;;11725:20;;;177:51:118;-1:-1:-1;;;;;;;;;;;11725:13:111;;;150:18:118;;11725:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11775:2:111;;11755:41;;-1:-1:-1;;;11755:41:111;;-1:-1:-1;;;;;11755:11:111;;;;-1:-1:-1;11755:11:111;;-1:-1:-1;11755:41:111;;11775:2;;11780:15;;11755:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11848:5:111;;11886:8;;11824:136;;-1:-1:-1;;;11824:136:111;;11807:14;;-1:-1:-1;;;;;11824:10:111;;;;;;:136;;11848:5;;;;;11886:8;;11908:15;;11937:13;;11824:136;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11807:153;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;11971:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12058:8:111;;12078:5;;12052:32;;-1:-1:-1;;;12052:32:111;;-1:-1:-1;;;;;12078:5:111;;;12052:32;;;177:51:118;12029:20:111;;-1:-1:-1;12058:8:111;;;-1:-1:-1;12052:25:111;;150:18:118;;12052:32:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12029:55;;12094:31;12123:1;12105:15;:19;12094:10;:31::i;:::-;12135:40;12165:9;12146:15;:28;12135:10;:40::i;7427:711::-;7568:2;;7598:9;;7568:74;;-1:-1:-1;;;7568:74:111;;7540:16;;-1:-1:-1;;;;;7568:2:111;;;;:16;;:74;;7598:9;;;;7568:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7540:103;;7655:14;7675:38;7691:14;7707:5;7675:15;:38::i;:::-;7654:59;;;;7723:13;7796:2;7771:9;;;;;;;;;-1:-1:-1;;;;;7771:9:111;-1:-1:-1;;;;;7758:32:111;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7752:40;;:2;:40;:::i;:::-;7740:52;;:9;:52;:::i;:::-;7739:59;;;;:::i;:::-;7723:75;;7809:16;:14;:16::i;:::-;7836;:14;:16::i;:::-;7863:15;;7907:217;7925:2;7922:1;:5;7907:217;;;7971:5;;7978:9;;7948:50;;7962:7;;-1:-1:-1;;;;;7971:5:111;;;;7978:9;7989:8;7948:13;:50::i;:::-;8014:16;8028:2;8014:16;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;;8045:7:111;8053:28;8014:16;8053:15;:28;:::i;:::-;8045:37;;;;;;;;;;;;;13635:25:118;;13623:2;13608:18;;13489:177;8045:37:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8097:2:111;;8107:5;;8097:16;;-1:-1:-1;;;8097:16:111;;-1:-1:-1;;;;;8107:5:111;;;8097:16;;;177:51:118;8097:2:111;;;-1:-1:-1;8097:9:111;;-1:-1:-1;150:18:118;;8097:16:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7929:3:111;;;;:::i;:::-;;;;7907:217;;3262:157:41;3322:9;3317:96;;3352:30;;;;;17962:2:118;17944:21;;;18001:2;17981:18;;;17974:30;18040:25;18035:2;18020:18;;18013:53;18098:2;18083:18;;17760:347;3352:30:41;;;;;;;;3396:6;:4;:6::i;6604:196:103:-;6678:5;;6669:15;;-1:-1:-1;;;6669:15:103;;-1:-1:-1;;;;;6678:5:103;;;6669:15;;;177:51:118;-1:-1:-1;;;;;;;;;;;6669:8:103;;;150:18:118;;6669:15:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6694:2:103;;:38;;-1:-1:-1;;;6694:38:103;;18286:6:118;18274:19;;6694:38:103;;;18256::118;-1:-1:-1;;;;;6694:2:103;;;;-1:-1:-1;6694:24:103;;-1:-1:-1;18229:18:118;;6694:38:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6742:51;6780:12;6753:39;;:2;;;;;;;;;-1:-1:-1;;;;;6753:2:103;-1:-1:-1;;;;;6753:21:103;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;;6742:10;:51::i;4099:382:108:-;4323:18;;;4282:15;4323:18;;;4229:27;4323:18;;;;;;4282:15;;4323:18;;;;;;;;;;;;-1:-1:-1;4323:18:108;4307:34;;4357:6;4352:123;4369:6;4367:1;:8;4352:123;;;4415:49;4437:8;4446:1;4437:11;;;;;;;:::i;:::-;;;;;4450:10;4461:1;4450:13;;;;;;;:::i;:::-;;;;;4415:21;:49::i;:::-;4396:13;4410:1;4396:16;;;;;;;;:::i;:::-;;;;;;;;;;:68;4377:3;;;;:::i;:::-;;;;4352:123;;;;4258:223;4099:382;;;;:::o;4861:3435:113:-;4917:21;4964:16;4954:6;:26;;;;;;;;:::i;:::-;;4950:3340;;-1:-1:-1;4996:8:113;:53;;-1:-1:-1;;;;;;4996:53:113;;;5007:42;4996:53;;;;5063:8;:53;;;;5074:42;5063:53;;;5130:8;:53;;;;5141:42;5130:53;;;5197:12;:57;;;;5212:42;5197:57;;;5268:14;:59;;;;5285:42;5268:59;;;5360:13;:58;;;;5376:42;5360:58;;;5432:15;:60;;;;5450:42;5432:60;;;5506:13;:58;;;;5522:42;5506:58;;;5578:8;:53;;;;5589:42;5578:53;;;5645:20;:65;;;;5668:42;5645:65;;;5724:34;:79;;;;5761:42;5724:79;;;5817:6;:51;;;;5826:42;5817:51;;;5882:16;:61;;;;5901:42;5882:61;;;5957:8;:53;;;;5968:42;5957:53;;;6024:21;:66;;;;6048:42;6024:66;;;6104:8;:53;;;;6115:42;6104:53;;;6239:7;:52;;;;6249:42;6239:52;;;6305:17;:30;;;;;;6349:10;:23;;;;;;;6387:20;;;;;;;;;-1:-1:-1;6387:20:113;;-1:-1:-1;;;6387:20:113;;;;6439:9;6421:15;:27;2374:12:41;1819:584;-1:-1:-1;1819:584:41:o;4950:3340:113:-;6479:16;6469:6;:26;;;;;;;;:::i;:::-;;6465:1825;;-1:-1:-1;6511:8:113;:53;;-1:-1:-1;;;;;;6511:53:113;;;6522:42;6511:53;;;;6578:8;:53;;;;6589:42;6578:53;;;6645:8;:53;;;;6656:42;6645:53;;;6712:12;:57;;;;6727:42;6712:57;;;6783:14;:59;;;;6800:42;6783:59;;;6857:13;:58;;;;6873:42;6857:58;;;6943:15;:60;;;;6961:42;6943:60;;;7017:13;:58;;;;7033:42;7017:58;;;7103:8;:53;;;;7114:42;7103:53;;;7170:20;:65;;;;7193:42;7170:65;;;7249:34;:47;;;;;;7310:6;:19;;;;;;7343:16;:61;;;;7362:42;7343:61;;;7418:8;:21;;;;;;7453;:34;;;;;;7501:8;:53;;;;7512:42;7501:53;;;7568:7;:52;;;;7578:42;7568:52;;;7634:17;:62;;;;7654:42;7634:62;;;7710:32;:77;;;;7745:42;7710:77;;;7801:10;:55;;;;7814:42;7801:55;;;7870:12;:57;;;;7885:42;7870:57;;;7941:16;:61;;;;7960:42;7941:61;;;8016:16;:61;;;;;8035:42;8016:61;;;8092:20;;;;;;;;;-1:-1:-1;8092:20:113;;-1:-1:-1;;;8092:20:113;;;;8144:8;8126:15;:26;8233:8;8210:20;:31;8271:8;8255:13;:24;4861:3435;;;:::o;9190:3340::-;9299:7;;9287:9;:19;;-1:-1:-1;;;;;9299:7:113;;;-1:-1:-1;;;;;;9287:19:113;;;;;;;9357:8;;;9316:15;:59;;;;9357:8;;;9316:59;;;;;;9402:8;;9385:14;:25;;;;;9402:8;;9385:25;;;;;;9525:8;;9517:17;;-1:-1:-1;;;;;;9517:17:113;;;;;13635:25:118;;;;-1:-1:-1;;;;;;;;;;;9517:7:113;;;13608:18:118;9517:17:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9509:5;:25;;-1:-1:-1;;;;;;9509:25:113;-1:-1:-1;;;;;9509:25:113;;;;;;;;;;9560:8;;9552:17;;-1:-1:-1;;;;;;9552:17:113;;;;;13635:25:118;;;;-1:-1:-1;;;;;;;;;;;9552:7:113;;;13608:18:118;;9552:17:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9544:5;:25;;-1:-1:-1;;;;;;9544:25:113;-1:-1:-1;;;;;9544:25:113;;;;;;;;;;9593:6;;9585:15;;-1:-1:-1;;;;;;9585:15:113;;;;;13635:25:118;;;;-1:-1:-1;;;;;;;;;;;9585:7:113;;;13608:18:118;;9585:15:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9579:3;:21;;-1:-1:-1;;;;;;9579:21:113;-1:-1:-1;;;;;9579:21:113;;;;;;;;;;9628:10;;9620:19;;-1:-1:-1;;;;;;9620:19:113;;;;;13635:25:118;;;;-1:-1:-1;;;;;;;;;;;9620:7:113;;;13608:18:118;;9620:19:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9610:7;:29;;-1:-1:-1;;;;;;9610:29:113;-1:-1:-1;;;;;9610:29:113;;;;;;;;;;9693:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9682:8:113;:32;;-1:-1:-1;;;;;;9682:32:113;-1:-1:-1;;;;;9682:32:113;;;;;;;;;9748:5;;9736:37;;9748:5;;;9736:37;;;:::i;:::-;-1:-1:-1;;;;;18535:15:118;;;18517:34;;18587:15;;18582:2;18567:18;;18560:43;18467:2;18452:18;9736:37:113;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9724:9:113;:49;;-1:-1:-1;;;;;;9724:49:113;-1:-1:-1;;;;;9724:49:113;;;;;;;;;;9797:17;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9783:11:113;:31;;-1:-1:-1;;;;;;9783:31:113;-1:-1:-1;;;;;9783:31:113;;;;;;;;;;9898:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9888:7:113;:23;;-1:-1:-1;;;;;;9888:23:113;-1:-1:-1;;;;;9888:23:113;;;;;;;;;;9955:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9947:5:113;:21;;-1:-1:-1;;;;;;9947:21:113;-1:-1:-1;;;;;9947:21:113;;;;;;;;;;9990:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9978:9:113;:32;;-1:-1:-1;;;;;;9978:32:113;-1:-1:-1;;;;;9978:32:113;;;;;;;;;;10031:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10020:8:113;:31;;-1:-1:-1;;;;;;10020:31:113;-1:-1:-1;;;;;10020:31:113;;;;;;;;;;10071:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10061:7:113;:30;;-1:-1:-1;;;;;;10061:30:113;-1:-1:-1;;;;;10061:30:113;;;;;;;;;;10109:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10101:5:113;:19;;-1:-1:-1;;;;;;10101:19:113;-1:-1:-1;;;;;10101:19:113;;;;;;;;;;10139:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10130:6:113;:23;;-1:-1:-1;;;;;;10130:23:113;-1:-1:-1;;;;;10130:23:113;;;;;;;;;;10172:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10163:6:113;:23;;-1:-1:-1;;;;;;10163:23:113;-1:-1:-1;;;;;10163:23:113;;;;;;10226:7;;10205:30;;10226:7;;;10205:30;;;:::i;:::-;-1:-1:-1;;;;;195:32:118;;;177:51;;165:2;150:18;10205:30:113;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10196:6:113;:39;;-1:-1:-1;;;;;;10196:39:113;-1:-1:-1;;;;;10196:39:113;;;;;;;;;;10253:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10245:5:113;:19;;-1:-1:-1;;;;;;10245:19:113;-1:-1:-1;;;;;10245:19:113;;;;;;;;;;10292:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10274:15:113;:34;;-1:-1:-1;;;;;;10274:34:113;-1:-1:-1;;;;;10274:34:113;;;;;;;;;;10357:18;:16;:18::i;:::-;10458:30;;;10485:2;10458:30;;;;;;;;;10421:34;;10458:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;10458:30:113;;;;;;;;;;;;-1:-1:-1;;10527:5:113;;10421:67;;-1:-1:-1;10508:29:113;;-1:-1:-1;;;;;10527:5:113;;10508:10;:29::i;:::-;10498:4;10503:1;10498:7;;;;;;;;:::i;:::-;;;;;;;;;;:39;10576:9;;10557:33;;-1:-1:-1;;;;;10576:9:113;;10557:10;:33::i;:::-;10547:4;10552:1;10547:7;;;;;;;;:::i;:::-;;;;;;;;;;:43;10629:8;;10610:32;;-1:-1:-1;;;;;10629:8:113;10640:1;10610:10;:32::i;:::-;10600:4;10605:1;10600:7;;;;;;;;:::i;:::-;;;;;;;;;;:42;10681:7;;10662:31;;-1:-1:-1;;;;;10681:7:113;10691:1;10662:10;:31::i;:::-;10652:4;10657:1;10652:7;;;;;;;;:::i;:::-;;;;;;;;;;:41;10732:5;;10713:29;;-1:-1:-1;;;;;10732:5:113;10740:1;10713:10;:29::i;:::-;10703:4;10708:1;10703:7;;;;;;;;:::i;:::-;;;;;;;;;;:39;10781:6;;10762:30;;-1:-1:-1;;;;;10781:6:113;10790:1;10762:10;:30::i;:::-;10752:4;10757:1;10752:7;;;;;;;;:::i;:::-;;;;;;;;;;:40;10831:6;;10812:30;;-1:-1:-1;;;;;10831:6:113;10840:1;10812:10;:30::i;:::-;10802:4;10807:1;10802:7;;;;;;;;:::i;:::-;;;;;;;;;;:40;10881:6;;10862:30;;-1:-1:-1;;;;;10881:6:113;10890:1;10862:10;:30::i;:::-;10852:4;10857:1;10852:7;;;;;;;;:::i;:::-;;;;;;;;;;:40;10931:5;;10912:29;;-1:-1:-1;;;;;10931:5:113;10939:1;10912:10;:29::i;:::-;10902:4;10907:1;10902:7;;;;;;;;:::i;:::-;;;;;;;;;;:39;10980:8;;10961:32;;-1:-1:-1;;;;;10980:8:113;10991:1;10961:10;:32::i;:::-;10951:4;10956:1;10951:7;;;;;;;;:::i;:::-;;;;;;;;;;:42;11033:15;;11014:40;;-1:-1:-1;;;;;11033:15:113;11051:2;11014:10;:40::i;:::-;11003:4;11008:2;11003:8;;;;;;;;:::i;:::-;;;;;;;;;;;:51;;;;11115:130;;;;;;;;;11142:8;;-1:-1:-1;;;;;11142:8:113;;;11115:130;;11170:8;;;;11115:130;;;;11198:8;;;;;11115:130;;;;11226:8;;;;11115:130;;;;;;;;11277:157;;;;;;;11312:13;;;;11277:157;;11354:13;;;;11277:157;;;;11403:20;;;;11277:157;;;;11470:249;;;;;;;;11509:15;;;;11470:249;;11556:16;;;;11470:249;;;;11600:12;;;;11470:249;;;;11644:16;;;;11470:249;;;;11692:16;;;;11470:249;;;;11751:313;;;;;;;11790:9;;;;11751:313;;11830:6;;;;11751:313;;;;;;;11870:17;;;;11751:313;;;;11918:15;;;-1:-1:-1;;;11918:15:113;;;11751:313;;;;;;;11955:10;-1:-1:-1;;;11955:10:113;;;;11751:313;;;;;;;-1:-1:-1;;;12006:11:113;;;;;;11751:313;;;;;;;12043:10;;;;;11751:313;;;;12099:151;;11115:130;;11277:157;;11470:249;;11751:313;;11092:20;;-1:-1:-1;;;12135:25:113;12099:151;;11115:130;;11277:157;;11470:249;;11751:313;;12099:151;;:::i;:::-;;;;-1:-1:-1;;12099:151:113;;;;;;;;;;;;;;-1:-1:-1;;;;;12099:151:113;-1:-1:-1;;;;;;12099:151:113;;;;;;;;;;;12291:9;;12267:2;:35;;-1:-1:-1;;;;;;12267:35:113;-1:-1:-1;;;;;12291:9:113;;;12267:35;;;12356:5;;12342:20;;-1:-1:-1;;;12342:20:113;;12356:5;;12342:20;;;177:51:118;12099:151:113;-1:-1:-1;;;;;;;;;;;;12342:13:113;;;150:18:118;;12342:20:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12372:2:113;;12400:11;;12372:51;;-1:-1:-1;;;12372:51:113;;-1:-1:-1;;;;;12372:2:113;;;;-1:-1:-1;12372:13:113;;-1:-1:-1;12372:51:113;;12386:4;;12400:11;;12414:8;;12372:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12434:18;:16;:18::i;:::-;12485:12;:10;:12::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;12509:12:113;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11118:141:103;11170:4;11190:13;11208:2;;;;;;;;;-1:-1:-1;;;;;11208:2:103;-1:-1:-1;;;;;11208:17:103;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11186:41:103;11118:141;-1:-1:-1;;;;;11118:141:103:o;8574:453::-;8697:13;8722:19;8791:7;8759:4;-1:-1:-1;;;;;8759:20:103;;8780:6;8759:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8745:42;;:11;:42;:::i;:::-;8744:54;;;;:::i;:::-;8838:13;;;8849:1;8838:13;;;;;;;;;8722:76;;-1:-1:-1;8808:27:103;;8838:13;;;;;;;;;;;;-1:-1:-1;8838:13:103;8808:43;;8881:108;8927:14;8956:2;;;;;;;;;-1:-1:-1;;;;;8956:2:103;-1:-1:-1;;;;;8956:21:103;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8881:108;8862:13;8876:1;8862:16;;;;;;;;:::i;:::-;;;;;;;;;;:127;9007:13;-1:-1:-1;;8574:453:103;;;;;;:::o;8303:881:113:-;8376:4;;;;;8422;:22;;;;;;;;:::i;:::-;;:40;;8453:9;8422:40;;;8447:3;8422:40;8404:58;;;-1:-1:-1;8472:14:113;8489;8404:58;8502:1;8489:14;:::i;:::-;8472:31;-1:-1:-1;8513:18:113;8534:14;:10;8547:1;8534:14;:::i;:::-;8513:35;;8559:23;8599:9;:17;;8615:1;8599:17;;;8611:1;8599:17;8585:32;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8585:32:113;-1:-1:-1;8639:9:113;;8627;;8559:58;;-1:-1:-1;;;;;;8639:9:113;;8559:58;;8639:9;;8627;;;;:::i;:::-;;;;;;:21;-1:-1:-1;;;;;8627:21:113;;;-1:-1:-1;;;;;8627:21:113;;;;;8671:9;8667:107;;;8708:15;;8696:9;;-1:-1:-1;;;;;8708:15:113;;;;8696:6;;8708:15;;8696:9;;;;;;:::i;:::-;-1:-1:-1;;;;;8696:27:113;;;:9;;;;;;;;;:27;8749:14;;8737:9;;8749:14;;;8737:6;;8744:1;;8737:9;;;;;;:::i;:::-;;;;;;:26;-1:-1:-1;;;;;8737:26:113;;;-1:-1:-1;;;;;8737:26:113;;;;;8667:107;8798:6;8793:329;8810:6;:13;8808:1;:15;8793:329;;;8844:79;8849:6;8856:1;8849:9;;;;;;;;:::i;:::-;;;;;;;8860:5;;;;;;;;;-1:-1:-1;;;;;8860:5:113;8900:6;8907:1;8900:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8887:32:113;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8881:40;;:2;:40;:::i;:::-;8867:55;;:10;:55;:::i;:::-;8844:4;:79::i;:::-;8937:76;8942:6;8949:1;8942:9;;;;;;;;:::i;:::-;;;;;;;8953:3;;;;;;;;;-1:-1:-1;;;;;8953:3:113;8990:6;8997:1;8990:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8977:32:113;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8971:40;;:2;:40;:::i;:::-;8958:54;;:9;:54;:::i;8937:76::-;9027:84;9032:6;9039:1;9032:9;;;;;;;;:::i;:::-;;;;;;;9043:7;;;;;;;;;-1:-1:-1;;;;;9043:7:113;9088:6;9095:1;9088:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9075:32:113;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9069:40;;:2;:40;:::i;:::-;9052:58;;:13;:58;:::i;9027:84::-;8825:3;;;;:::i;:::-;;;;8793:329;;;-1:-1:-1;9140:10:113;;9152:9;;-1:-1:-1;9152:9:113;-1:-1:-1;8303:881:113;-1:-1:-1;;;;8303:881:113:o;8327:193:103:-;8386:5;;8372:20;;-1:-1:-1;;;8372:20:103;;-1:-1:-1;;;;;8386:5:103;;;8372:20;;;177:51:118;-1:-1:-1;;;;;;;;;;;8372:13:103;;;150:18:118;;8372:20:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8402:2:103;;8424:16;;8402:39;;-1:-1:-1;;;8402:39:103;;-1:-1:-1;;;;;8402:2:103;;;;-1:-1:-1;8402:21:103;;-1:-1:-1;8402:39:103;;;;13635:25:118;;;13623:2;13608:18;;13489:177;8402:39:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8451:2:103;;8473:15;;8451:38;;-1:-1:-1;;;8451:38:103;;-1:-1:-1;;;;;8451:2:103;;;;-1:-1:-1;8451:21:103;;-1:-1:-1;8451:38:103;;;;13635:25:118;;;13623:2;13608:18;;13489:177;8451:38:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;8499:12:103;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2963:842;3143:5;;3112:7;;-1:-1:-1;;;;;3143:5:103;;;3134:14;;;;3130:186;;-1:-1:-1;3169:8:103;;3130:186;;;3207:3;;-1:-1:-1;;;;;3207:3:103;;;3198:12;;;;3194:122;;-1:-1:-1;3231:6:103;;3194:122;;;3267:7;;-1:-1:-1;;;;;3267:7:103;;;3258:16;;;;3254:62;;-1:-1:-1;3295:10:103;;3254:62;3327:17;3348:90;3381:8;3391:9;3402:2;3406:5;3413:6;3421:7;3348:19;:90::i;:::-;3326:112;;3450:27;3484:24;3503:4;3484:18;:24::i;:::-;-1:-1:-1;;3519:20:103;;-1:-1:-1;;;3519:20:103;;-1:-1:-1;;;;;195:32:118;;3519:20:103;;;177:51:118;3449:59:103;;-1:-1:-1;;;;;;;;;;;;3519:13:103;;;-1:-1:-1;150:18:118;;3519:20:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3584:2:103;;3549:50;;-1:-1:-1;;;;;;3549:26:103;;;;-1:-1:-1;3584:2:103;3589:9;3549:26;:50::i;:::-;3610:24;3637:69;;;;;;;;3660:9;3637:69;;;;3683:13;3637:69;;;3610:96;;3717:8;-1:-1:-1;;;;;3717:13:103;;3742:7;3751:5;3731:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3759:5;3717:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;3784:12:103;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3102:703;;;;2963:842;;;;:::o;11793:120::-;-1:-1:-1;;;;;;;;;;;11848:7:103;11856:23;11874:5;11856:15;:23;:::i;:::-;11848:32;;;;;;;;;;;;;13635:25:118;;13623:2;13608:18;;13489:177;11848:32:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11890:16;:14;:16::i;10970:142::-;11025:4;11044:12;11062:2;;;;;;;;;-1:-1:-1;;;;;11062:2:103;-1:-1:-1;;;;;11062:17:103;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11041:40:103;;10970:142;-1:-1:-1;;;;;10970:142:103:o;10820:144::-;10875:4;10893:13;10913:2;;;;;;;;;-1:-1:-1;;;;;10913:2:103;-1:-1:-1;;;;;10913:17:103;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10891:41:103;;10820:144;-1:-1:-1;;;;;10820:144:103:o;9710:543::-;9766:7;9775;9794:14;9817:20;;;;;;;;;-1:-1:-1;;;;;9817:20:103;-1:-1:-1;;;;;9811:37:103;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9794:56;-1:-1:-1;9906:1:103;9860:30;9943:47;9794:56;9906:1;9988;9943:12;:47::i;:::-;10055:8;;10065;;10038:36;;-1:-1:-1;;23645:2:118;23641:15;;;;;10038:36:103;;;23625:37:118;23696:15;;;;;23678:12;;;23671:46;9920:70:103;;-1:-1:-1;10009:16:103;;23733:12:118;;10038:36:103;;;;;;;;;;;;10028:47;;;;;;10009:66;;10085:16;10104:39;10117:8;10127:12;10141:1;10104:12;:39::i;:::-;10182:13;;10174:32;;-1:-1:-1;;;10174:32:103;;10085:58;;-1:-1:-1;10153:18:103;;-1:-1:-1;;;;;;;;;;;10174:7:103;;;:32;;-1:-1:-1;;;;;10182:13:103;;10085:58;;10174:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10153:53;10237:8;;-1:-1:-1;9710:543:103;;-1:-1:-1;;;;;;9710:543:103:o;9075:240::-;9225:13;;9216:50;;-1:-1:-1;;;9216:50:103;;-1:-1:-1;;;;;;;;;;;9216:8:103;;;:50;;-1:-1:-1;;;;;9225:13:103;;9240:9;;9251:14;;9216:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9276:31;9296:10;9276:19;:31::i;:::-;9075:240;;;:::o;11265:137::-;11315:3;11335:12;11351:2;;;;;;;;;-1:-1:-1;;;;;11351:2:103;-1:-1:-1;;;;;11351:17:103;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11330:40;11265:137;-1:-1:-1;;;;;;11265:137:103:o;11408:379::-;11453:16;11472:3;11453:22;;11496:16;11531:45;11554:2;;;;;;;;;-1:-1:-1;;;;;11554:2:103;-1:-1:-1;;;;;11554:11:103;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11531:11;;11569:6;11531:22;:45::i;:::-;11515:2;;;;;;;;;-1:-1:-1;;;;;11515:2:103;-1:-1:-1;;;;;11515:11:103;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;;;:::i;:::-;11613:16;;11643:44;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11643:44:103;-1:-1:-1;;;11643:44:103;;;11701:68;;-1:-1:-1;11701:68:103;;;24400:34:118;;;24450:18;;;24443:34;;;24493:18;;;24486:34;;;24536:18;;;24529:34;;;24579:19;;;24572:44;24443:34;;-1:-1:-1;;;;;;;;;;;;11587:11:103;;;-1:-1:-1;;;;;11613:16:103;;24331:19:118;;11701:68:103;;;;;;;;;;;;11587:192;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18469:1020:111;18585:5;;18571:20;;-1:-1:-1;;;18571:20:111;;-1:-1:-1;;;;;18585:5:111;;;18571:20;;;177:51:118;18528:4:111;;;;;;18571:13;;;;;150:18:118;;18571:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18550:41;-1:-1:-1;18601:30:111;18612:18;;18601:10;:30::i;:::-;18642:23;18668;:21;:23::i;:::-;18642:49;;18701;18731:18;18712:15;;:37;18701:10;:49::i;:::-;18780:2;;:17;;;-1:-1:-1;;;18780:17:111;;;;18762:15;;-1:-1:-1;;;;;18780:2:111;;:15;;:17;;;;;;;;;;;;;;18762:15;18780:2;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18762:35;;18807:22;18818:10;18807;:22::i;:::-;18840;18865:23;:21;:23::i;:::-;18840:48;-1:-1:-1;18898:34:111;18909:22;;18898:10;:34::i;:::-;18952:5;;18943:15;;-1:-1:-1;;;18943:15:111;;-1:-1:-1;;;;;18952:5:111;;;18943:15;;;177:51:118;-1:-1:-1;;;;;;;;;;;18943:8:111;;;150:18:118;;18943:15:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18968:18;18989:2;;;;;;;;;-1:-1:-1;;;;;18989:2:111;-1:-1:-1;;;;;18989:14:111;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18968:37;;19036:23;:21;:23::i;:::-;19016:43;;19069:33;19100:1;19080:17;:21;19069:10;:33::i;:::-;19150:5;;19136:20;;-1:-1:-1;;;19136:20:111;;-1:-1:-1;;;;;19150:5:111;;;19136:20;;;177:51:118;19113:20:111;;19136:13;;;;;150:18:118;;19136:20:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19113:43;;19166:31;19195:1;19177:15;:19;19166:10;:31::i;:::-;19208:24;19235:23;:21;:23::i;:::-;19208:50;-1:-1:-1;19268:70:111;19297:40;19208:50;19297:18;:40;:::i;19268:70::-;19349:19;19371:20;:18;:20::i;:::-;19349:42;-1:-1:-1;19401:31:111;19412:19;;19401:10;:31::i;:::-;-1:-1:-1;19451:15:111;;19468:13;;-1:-1:-1;18469:1020:111;;-1:-1:-1;;;;;;;18469:1020:111:o;19495:634::-;19632:4;19638;19654:27;19684:23;:21;:23::i;:::-;19654:53;;19717:60;19754:22;19728;:48;19717:10;:60::i;:::-;19840:2;;19818:26;;-1:-1:-1;;;19818:26:111;;-1:-1:-1;;;;;19840:2:111;;;19818:26;;;177:51:118;19788:27:111;;19818:13;;;;;150:18:118;;19818:26:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19788:56;;19854:53;19891:15;;19865:22;:41;19854:10;:53::i;:::-;19918:22;19943:20;:18;:20::i;:::-;19918:45;;19973:49;20005:16;19984:17;:37;19973:10;:49::i;:::-;20033:18;20054:16;:14;:16::i;:::-;20089:17;;;;-1:-1:-1;19495:634:111;;-1:-1:-1;;;;;;;19495:634:111:o;10685:129:103:-;10733:4;10750:9;10767:2;;;;;;;;;-1:-1:-1;;;;;10767:2:103;-1:-1:-1;;;;;10767:17:103;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10749:37:103;;10685:129;-1:-1:-1;;;;;10685:129:103:o;10449:230::-;10583:4;10668;10657:7;10627:26;10640:13;10627:10;:26;:::i;:::-;10626:38;;;;:::i;:::-;10625:47;;;;:::i;:::-;10606:16;10618:4;10606:9;:16;:::i;:::-;:66;;;;:::i;:::-;10599:73;10449:230;-1:-1:-1;;;;10449:230:103:o;5850:376::-;6052:8;;6141:39;;-1:-1:-1;;;6141:39:103;;-1:-1:-1;;;;;195:32:118;;;6141:39:103;;;177:51:118;5980:7:103;;6006:213;;6052:8;;;6075:7;;6096:8;;6118:9;;6052:8;;6141:30;;150:18:118;;6141:39:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6194:15;6006:24;:213::i;2831:684:114:-;2913:14;2933:38;2949:14;2965:5;2933:15;:38::i;:::-;2912:59;;;;2981:13;3028:9;;;;;;;;;-1:-1:-1;;;;;3028:9:114;-1:-1:-1;;;;;3015:32:114;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3009:40;;:2;:40;:::i;:::-;2997:52;;:9;:52;:::i;:::-;3160:9;;3181:5;;3188:8;;2981:68;;-1:-1:-1;3086:16:114;;;;3124:104;;-1:-1:-1;;;;;3160:9:114;;;;2981:68;;3181:5;;;;3160:9;3086:16;;3124:22;:104::i;:::-;3299:5;;3281:24;;-1:-1:-1;;;3281:24:114;;-1:-1:-1;;;;;3299:5:114;;;3281:24;;;177:51:118;3085:143:114;;-1:-1:-1;3085:143:114;;-1:-1:-1;3265:13:114;;3281:17;;;;;;150:18:118;;3281:24:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3265:40;-1:-1:-1;3316:42:114;-1:-1:-1;;;;;3327:30:114;;;;3316:10;:42::i;:::-;3368:61;3394:34;4210:3:113;3394:9:114;:34;:::i;:::-;3379:11;:49;3368:10;:61::i;:::-;3439:69;3461:12;3450:8;:23;:57;;;;-1:-1:-1;3488:19:114;:9;3500:7;3488:19;:::i;:::-;3477:8;:30;3439:10;:69::i;1097:1151:103:-;1319:16;1337:11;1364:7;1360:202;;;1406:2;;:83;;-1:-1:-1;;;1406:83:103;;-1:-1:-1;;;;;1406:2:103;;;;:16;;:83;;1440:10;;1406:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:103;;1360:202;;;1540:10;1521:30;;1360:202;1664:9;;1573:17;;1594:100;;1628:7;;1637:9;;1648:7;;1657:5;;-1:-1:-1;;;;;1664:9:103;1675;1594:19;:100::i;:::-;1572:122;;1706:27;1740:24;1759:4;1740:18;:24::i;:::-;-1:-1:-1;;1775:20:103;;-1:-1:-1;;;1775:20:103;;-1:-1:-1;;;;;195:32:118;;1775:20:103;;;177:51:118;1705:59:103;;-1:-1:-1;;;;;;;;;;;;1775:13:103;;;-1:-1:-1;150:18:118;;1775:20:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1810:7;1806:186;;;1860:9;;1833:55;;1845:5;;-1:-1:-1;;;;;1860:9:103;1872;1883:4;1833:11;:55::i;:::-;1806:186;;;1932:9;;1959;;;1919:62;;-1:-1:-1;;;1919:62:103;;-1:-1:-1;;;;;1932:9:103;;;;1919:31;;:62;;1959:9;;;1971;;1919:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1806:186;2002:24;2029:69;;;;;;;;2052:9;2029:69;;;;2075:13;2029:69;;;2002:96;;2109:21;2144:7;2153:5;2133:26;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2133:26:103;;;;;;;;;;-1:-1:-1;;;2178:29:103;;2133:26;-1:-1:-1;;;;;;2178:12:103;;;;;:29;;2133:26;;2201:5;;2178:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2169:38;;-1:-1:-1;;;;;;;;;;;309:37:42;;-1:-1:-1;;;;;2227:12:103;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:898;;;;1097:1151;;;;;;;;;;:::o;1564:526:32:-;1680:9;1928:1;-1:-1:-1;;1911:19:32;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:32;;2047:27;;1564:526::o;2704:208:108:-;2813:17;2861:44;:9;2882:15;;;2899:5;2861:20;:44::i;:::-;2849:56;;:9;:56;:::i;:::-;2842:63;;2704:208;;;;;:::o;2409:432:41:-;-1:-1:-1;;;;;;;;;;;2985:55:41;3066:16;2452:359;;2652:67;;2489:11;;-1:-1:-1;;;;;;;;;;;1671:64:41;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:41;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:41;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:41;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:41;2820:7;:14;;-1:-1:-1;;2820:14:41;;;;;2409:432::o;17244:134:113:-;17301:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17290:8:113;:20;;-1:-1:-1;;;;;;17290:20:113;-1:-1:-1;;;;;17290:20:113;;;;;;17330:5;;17321:15;;-1:-1:-1;;;17321:15:113;;17330:5;;17321:15;;;177:51:118;-1:-1:-1;;;;;;;;;;;17321:8:113;;;150:18:118;;17321:15:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17357:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17346:8:113;:25;;-1:-1:-1;;;;;;17346:25:113;-1:-1:-1;;;;;17346:25:113;;;;;;;;;;17244:134::o;12537:4701::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;12677:11:113;12702:3;12709:1;12702:8;12698:517;;-1:-1:-1;12735:1:113;12698:517;;;12757:3;12764:1;12757:8;:20;;;;12769:3;12776:1;12769:8;12757:20;12753:462;;;-1:-1:-1;12802:1:113;12753:462;;;12824:3;12831:1;12824:8;12820:395;;-1:-1:-1;12857:1:113;12820:395;;;12879:3;12886:1;12879:8;12875:340;;-1:-1:-1;12912:1:113;12875:340;;;12934:3;12941:1;12934:8;12930:285;;-1:-1:-1;12967:1:113;12930:285;;;12990:3;12997:1;12990:8;:20;;;;13002:3;13009:1;13002:8;12990:20;12986:229;;;-1:-1:-1;13035:1:113;12986:229;;;13057:3;13064:2;13057:9;13053:162;;-1:-1:-1;13091:2:113;13053:162;;;13114:3;13121:1;13114:8;13110:105;;-1:-1:-1;13147:1:113;13110:105;;;13169:3;13176:1;13169:8;13165:50;;-1:-1:-1;13202:2:113;13165:50;13225:25;13266:6;13253:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13253:20:113;;13225:48;;13288:3;13295:1;13288:8;13284:3764;;13312:12;;-1:-1:-1;;;13327:21:113;13312:9;;13327:5;;13312:12;;;;:::i;:::-;-1:-1:-1;;;;;;13312:36:113;;;:12;;;;;;;;;;;:36;13362:12;;-1:-1:-1;;;13377:37:113;13362:9;;13377:5;;13362:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13362:52:113;;;:12;;;;;;;;;;;:52;13428:12;;-1:-1:-1;;;13443:29:113;13428:9;;13438:1;;13428:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13428:44:113;;;:12;;;;;;;;;;;:44;13486:12;;-1:-1:-1;;;13501:27:113;13486:9;;13496:1;;13486:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13486:42:113;;;:12;;;;;;;;;;;:42;13542:12;;-1:-1:-1;;;13557:32:113;13542:9;;13552:1;;13542:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13542:47:113;;;:12;;;;;;;;;;;:47;13603:12;;-1:-1:-1;;;13618:33:113;13603:9;;13613:1;;13603:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13603:48:113;;;:12;;;;;;;;;;;:48;13665:12;;-1:-1:-1;;;13680:30:113;13665:9;;13675:1;;13665:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13665:45:113;;;:12;;;;;;;;;;;:45;13724:12;;-1:-1:-1;;;13739:29:113;13724:9;;13734:1;;13724:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13724:44:113;;;:12;;;;;;;;;;;:44;13782:12;;-1:-1:-1;;;13797:23:113;13782:9;;13792:1;;13782:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13782:38:113;;;:12;;;;;;;;;;;:38;13834:12;;-1:-1:-1;;;13849:22:113;13834:9;;13844:1;;13834:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;13834:37:113;;;:12;;;;;;;;;;;:37;13885:13;;-1:-1:-1;;;13901:29:113;13885:9;;13895:2;;13885:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;13885:45:113;;;:13;;;;;;;;;;;:45;13944:13;;-1:-1:-1;;;13960:26:113;13944:9;;13954:2;;13944:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;13944:42:113;;;:13;;;;;;;;;;;:42;14000:13;;-1:-1:-1;;;14016:30:113;14000:9;;14010:2;;14000:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;14000:46:113;;;:13;;;;;;;;;;;:46;14060:13;;-1:-1:-1;;;14076:28:113;14060:9;;14070:2;;14060:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;14060:44:113;;;:13;;;;;;;;;;;:44;13284:3764;;;14125:3;14132:1;14125:8;14121:2927;;14149:12;;-1:-1:-1;;;14164:43:113;14149:9;;14164;;14149:12;;;;:::i;:::-;-1:-1:-1;;;;;;14149:58:113;;;:12;;;;;;;;;;;:58;14221:12;;-1:-1:-1;;;14236:31:113;14221:9;;14236;;14221:12;;;;;;:::i;14121:2927::-;14288:3;14295:1;14288:8;14284:2764;;14338:10;14323:25;;:9;14333:1;14323:12;;;;;;;;:::i;14284:2764::-;14369:3;14376:1;14369:8;14365:2683;;14393:12;;-1:-1:-1;;;14408:30:113;14393:9;;14408:7;;14393:12;;;;:::i;:::-;-1:-1:-1;;;;;;14393:45:113;;;:12;;;;;;;;;;;:45;14452:12;;-1:-1:-1;;;14467:35:113;14452:9;;14467:7;;14452:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;14452:50:113;;;:12;;;;;;;;;;;:50;14516:12;;-1:-1:-1;;;14531:29:113;14516:9;;14526:1;;14516:12;;;;;;:::i;14365:2683::-;14581:3;14588:1;14581:8;14577:2471;;14628:10;14613:25;;:9;14623:1;14613:12;;;;;;;;:::i;14577:2471::-;14659:3;14666:1;14659:8;14655:2393;;14683:12;;-1:-1:-1;;;14698:29:113;14683:9;;14698:6;;14683:12;;;;:::i;:::-;-1:-1:-1;;;;;;14683:44:113;;;:12;;;;;;;;;;;:44;14741:12;;-1:-1:-1;;;14756:27:113;14741:9;;14756:6;;14741:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;14741:42:113;;;:12;;;;;;;;;;;:42;14797:12;;-1:-1:-1;;;14812:22:113;14797:9;;14807:1;;14797:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;14797:37:113;;;:12;;;;;;;;;;;:37;14848:12;;-1:-1:-1;;;14863:26:113;14848:9;;14858:1;;14848:12;;;;;;:::i;14655:2393::-;14910:3;14917:1;14910:8;14906:2142;;14934:12;;-1:-1:-1;;;14949:24:113;14934:9;;14949:6;;14934:12;;;;:::i;:::-;-1:-1:-1;;;;;;14934:39:113;;;:12;;;;;;;;;;;:39;14987:12;;-1:-1:-1;;;15002:34:113;14987:9;;15002:6;;14987:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;14987:49:113;;;:12;;;;;;;;;;;:49;15050:12;;-1:-1:-1;;;15065:23:113;15050:9;;15060:1;;15050:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15050:38:113;;;:12;;;;;;;;;;;:38;15102:12;;-1:-1:-1;;;15117:24:113;15102:9;;15112:1;;15102:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15102:39:113;;;:12;;;;;;;;;;;:39;15155:12;;-1:-1:-1;;;15170:28:113;15155:9;;15165:1;;15155:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15155:43:113;;;:12;;;;;;;;;;;:43;15212:12;;-1:-1:-1;;;15227:30:113;15212:9;;15222:1;;15212:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15212:45:113;;;:12;;;;;;;;;;;:45;15271:12;;-1:-1:-1;;;15286:34:113;15271:9;;15281:1;;15271:12;;;;;;:::i;14906:2142::-;15341:3;15348:1;15341:8;15337:1711;;15365:12;;-1:-1:-1;;;15380:30:113;15365:9;;15380:6;;15365:12;;;;:::i;:::-;-1:-1:-1;;;;;;15365:45:113;;;:12;;;;;;;;;;;:45;15424:12;;-1:-1:-1;;;15439:25:113;15424:9;;15439:6;;15424:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15424:40:113;;;:12;;;;;;;;;;;:40;15478:12;;-1:-1:-1;;;15493:21:113;15478:9;;15488:1;;15478:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15478:36:113;;;:12;;;;;;;;;;;:36;15528:12;;-1:-1:-1;;;15543:33:113;15528:9;;15538:1;;15528:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15528:48:113;;;:12;;;;;;;;;;;:48;15590:12;;-1:-1:-1;;;15605:33:113;15590:9;;15600:1;;15590:12;;;;;;:::i;15337:1711::-;15659:3;15666:1;15659:8;15655:1393;;15683:12;;-1:-1:-1;;;15698:36:113;15683:9;;15698:5;;15683:12;;;;:::i;:::-;-1:-1:-1;;;;;;15683:51:113;;;:12;;;;;;;;;;;:51;15748:12;;-1:-1:-1;;;15763:27:113;15748:9;;15763:5;;15748:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15748:42:113;;;:12;;;;;;;;;;;:42;15804:12;;-1:-1:-1;;;15819:23:113;15804:9;;15814:1;;15804:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;15804:38:113;;;:12;;;;;;;;;;;:38;15856:12;;-1:-1:-1;;;15871:38:113;15856:9;;15866:1;;15856:12;;;;;;:::i;15655:1393::-;15930:3;15937:1;15930:8;15926:1122;;15954:12;;-1:-1:-1;;;15969:29:113;15954:9;;15969:8;;15954:12;;;;:::i;:::-;-1:-1:-1;;;;;;15954:44:113;;;:12;;;;;;;;;;;:44;16012:12;;-1:-1:-1;;;16027:29:113;16012:9;;16027:8;;16012:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16012:44:113;;;:12;;;;;;;;;;;:44;16070:12;;-1:-1:-1;;;16085:32:113;16070:9;;16080:1;;16070:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16070:47:113;;;:12;;;;;;;;;;;:47;16131:12;;-1:-1:-1;;;16146:32:113;16131:9;;16141:1;;16131:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16131:47:113;;;:12;;;;;;;;;;;:47;16192:12;;-1:-1:-1;;;16207:39:113;16192:9;;16202:1;;16192:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16192:54:113;;;:12;;;;;;;;;;;:54;16260:12;;-1:-1:-1;;;16275:24:113;16260:9;;16270:1;;16260:12;;;;;;:::i;15926:1122::-;16320:3;16327:2;16320:9;16316:732;;16345:12;;-1:-1:-1;;;16360:43:113;16345:9;;16360:15;;16345:12;;;;:::i;:::-;-1:-1:-1;;;;;;16345:58:113;;;:12;;;;;;;;;;;:58;16417:12;;-1:-1:-1;;;16432:43:113;16417:9;;16432:15;;16417:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16417:58:113;;;:12;;;;;;;;;;;:58;16489:12;;-1:-1:-1;;;16504:49:113;16489:9;;16499:1;;16489:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16489:64:113;;;:12;;;;;;;;;;;:64;16567:12;;-1:-1:-1;;;16582:39:113;16567:9;;16577:1;;16567:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16567:54:113;;;:12;;;;;;;;;;;:54;16635:12;;-1:-1:-1;;;16650:31:113;16635:9;;16645:1;;16635:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16635:46:113;;;:12;;;;;;;;;;;:46;16695:12;;-1:-1:-1;;;16710:36:113;16695:9;;16705:1;;16695:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16695:51:113;;;:12;;;;;;;;;;;:51;16760:12;;-1:-1:-1;;;16775:37:113;16760:9;;16770:1;;16760:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16760:52:113;;;:12;;;;;;;;;;;:52;16826:12;;-1:-1:-1;;;16841:50:113;16826:9;;16836:1;;16826:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16826:65:113;;;:12;;;;;;;;;;;:65;16905:12;;-1:-1:-1;;;16920:49:113;16905:9;;16915:1;;16905:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16905:64:113;;;:12;;;;;;;;;;;:64;16983:12;;-1:-1:-1;;;16998:39:113;16983:9;;16993:1;;16983:12;;;;;;:::i;:::-;-1:-1:-1;;;;;;16983:54:113;;;:12;;;;;;;;;;;:54;16316:732;17064:167;;;;;;;;-1:-1:-1;;;;;17064:167:113;;;;;;-1:-1:-1;17064:167:113;;;;;;;-1:-1:-1;17064:167:113;;17058:173;-1:-1:-1;;12537:4701:113:o;17384:412::-;17579:2;;17584:14;;17600:15;;17454:171;;25014:3:118;17454:171:113;;;24996:22:118;25055:1;25034:19;;;25027:30;-1:-1:-1;;;25073:19:118;;;25066:35;25139:3;25117:20;;;25110:33;25180:1;25159:19;;;25152:30;-1:-1:-1;;;25198:19:118;;;25191:34;-1:-1:-1;;;;;17579:2:113;;;25277:18:118;;;25270:60;25346:18;;;25339:34;;;;25389:19;;;25382:35;17430:21:113;;25242:19:118;;17454:171:113;;;-1:-1:-1;;17454:171:113;;;;;;;;;;;;;;-1:-1:-1;;;;;17454:171:113;-1:-1:-1;;;17454:171:113;;;17700:8;;17719;;17647:101;;17454:171;;-1:-1:-1;;;;;;17700:8:113;;;;17719;;;17454:171;;17647:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17636:8:113;:112;;-1:-1:-1;;;;;;17636:112:113;-1:-1:-1;;;;;17636:112:113;;;;;;;;;17759:2;;:30;;-1:-1:-1;;;17759:30:113;;;;;177:51:118;;;;17759:2:113;;;;:11;;150:18:118;;17759:30:113;;;;;;;;;;;;;;;;;;;17802:2161;17859:7;;;17842:44;;;-1:-1:-1;;;17842:44:113;;-1:-1:-1;;;;;17859:7:113;;;17842:44;;;26061:51:118;26128:18;;;26121:30;26187:2;26167:18;;;26160:30;;;;-1:-1:-1;;;26206:18:118;;;26199:44;-1:-1:-1;;;;;;;;;;;17842:8:113;;;26260:19:118;;17842:44:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17913:11:113;;17896:45;;-1:-1:-1;;;17896:45:113;;-1:-1:-1;;;;;;;;;;;17896:8:113;-1:-1:-1;17896:8:113;;-1:-1:-1;17896:45:113;;-1:-1:-1;;;;;17913:11:113;;17896:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17968:6:113;;17951:37;;;-1:-1:-1;;;17951:37:113;;-1:-1:-1;;;;;17968:6:113;;;17951:37;;;26940:51:118;27007:18;;;27000:30;27066:1;27046:18;;;27039:29;-1:-1:-1;;;27084:18:118;;;27077:38;-1:-1:-1;;;;;;;;;;;17951:8:113;-1:-1:-1;17951:8:113;;-1:-1:-1;27132:19:118;;17951:37:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18007:5:113;;17998:24;;;-1:-1:-1;;;17998:24:113;;-1:-1:-1;;;;;18007:5:113;;;17998:24;;;27374:51:118;27441:18;;;27434:30;27500:1;27480:18;;;27473:29;-1:-1:-1;;;27518:18:118;;;27511:35;-1:-1:-1;;;;;;;;;;;17998:8:113;-1:-1:-1;17998:8:113;;-1:-1:-1;27563:19:118;;17998:24:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18041:5:113;;18032:24;;;-1:-1:-1;;;18032:24:113;;-1:-1:-1;;;;;18041:5:113;;;18032:24;;;27805:51:118;27872:18;;;27865:30;27931:1;27911:18;;;27904:29;-1:-1:-1;;;27949:18:118;;;27942:35;-1:-1:-1;;;;;;;;;;;18032:8:113;-1:-1:-1;18032:8:113;;-1:-1:-1;27994:19:118;;18032:24:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18075:3:113;;18066:20;;;-1:-1:-1;;;18066:20:113;;-1:-1:-1;;;;;18075:3:113;;;18066:20;;;28236:51:118;28303:18;;;28296:30;28362:1;28342:18;;;28335:29;-1:-1:-1;;;28380:18:118;;;28373:33;-1:-1:-1;;;;;;;;;;;18066:8:113;-1:-1:-1;18066:8:113;;-1:-1:-1;28423:19:118;;18066:20:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18105:8:113;;;18096:31;;;-1:-1:-1;;;18096:31:113;;-1:-1:-1;;;;;18105:8:113;;;18096:31;;;28665:51:118;28732:18;;;28725:30;;;;28791:1;28771:18;;;28764:29;-1:-1:-1;;;28809:18:118;;;28802:39;-1:-1:-1;;;;;;;;;;;18096:8:113;-1:-1:-1;18096:8:113;;-1:-1:-1;28858:19:118;;18096:31:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18146:8:113;;18137:26;;;-1:-1:-1;;;18137:26:113;;-1:-1:-1;;;;;18146:8:113;;;18137:26;;;;29100:51:118;;;;29167:18;;;29160:30;;;;29206:18;;;29199:29;-1:-1:-1;;;29244:18:118;;;29237:34;-1:-1:-1;;;;;;;;;;;18137:8:113;-1:-1:-1;18137:8:113;;-1:-1:-1;29288:19:118;;18137:26:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18190:9:113;;;18173:41;;-1:-1:-1;;;18173:41:113;;-1:-1:-1;;;;;18190:9:113;;;18173:41;;;29530:51:118;29597:18;;;29590:30;;;;29656:1;29636:18;;;29629:29;-1:-1:-1;;;29674:18:118;;;29667:39;-1:-1:-1;;;;;;;;;;;18173:8:113;-1:-1:-1;18173:8:113;;-1:-1:-1;29723:19:118;;18173:41:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18241:11:113;;18224:45;;-1:-1:-1;;;18224:45:113;;-1:-1:-1;;;;;;;;;;;18224:8:113;-1:-1:-1;18224:8:113;;-1:-1:-1;18224:45:113;;-1:-1:-1;;;;;18241:11:113;;18224:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18296:8:113;;18279:46;;;-1:-1:-1;;;18279:46:113;;-1:-1:-1;;;;;18296:8:113;;;18279:46;;;29965:51:118;30032:18;;;30025:30;30091:2;30071:18;;;30064:30;-1:-1:-1;;;30110:18:118;;;30103:45;-1:-1:-1;;;;;;;;;;;18279:8:113;-1:-1:-1;18279:8:113;;-1:-1:-1;30165:19:118;;18279:46:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18352:5:113;;18335:35;;;-1:-1:-1;;;18335:35:113;;-1:-1:-1;;;;;18352:5:113;;;18335:35;;;30407:51:118;30474:18;;;30467:30;30533:1;30513:18;;;30506:29;-1:-1:-1;;;30551:18:118;;;30544:37;-1:-1:-1;;;;;;;;;;;18335:8:113;-1:-1:-1;18335:8:113;;-1:-1:-1;30598:19:118;;18335:35:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18397:9:113;;18380:46;;;-1:-1:-1;;;18380:46:113;;-1:-1:-1;;;;;18397:9:113;;;18380:46;;;30840:51:118;30907:18;;;30900:30;30966:2;30946:18;;;30939:30;-1:-1:-1;;;30985:18:118;;;30978:44;-1:-1:-1;;;;;;;;;;;18380:8:113;-1:-1:-1;18380:8:113;;-1:-1:-1;31039:19:118;;18380:46:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18453:8:113;;18436:45;;;-1:-1:-1;;;18436:45:113;;-1:-1:-1;;;;;18453:8:113;;;18436:45;;;31281:51:118;31348:18;;;31341:30;31407:2;31387:18;;;31380:30;-1:-1:-1;;;31426:18:118;;;31419:44;-1:-1:-1;;;;;;;;;;;18436:8:113;-1:-1:-1;18436:8:113;;-1:-1:-1;31480:19:118;;18436:45:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18508:5:113;;18491:33;;;-1:-1:-1;;;18491:33:113;;-1:-1:-1;;;;;18508:5:113;;;18491:33;;;31722:51:118;31789:18;;;31782:30;31848:1;31828:18;;;31821:29;-1:-1:-1;;;31866:18:118;;;31859:35;-1:-1:-1;;;;;;;;;;;18491:8:113;-1:-1:-1;18491:8:113;;-1:-1:-1;31911:19:118;;18491:33:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18543:13:113;;18534:44;;;-1:-1:-1;;;18534:44:113;;-1:-1:-1;;;;;18543:13:113;;;18534:44;;;32153:51:118;32220:18;;;32213:30;32279:2;32259:18;;;32252:30;-1:-1:-1;;;32298:18:118;;;32291:47;-1:-1:-1;;;;;;;;;;;18534:8:113;-1:-1:-1;18534:8:113;;-1:-1:-1;32355:19:118;;18534:44:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18597:15:113;;18588:48;;;-1:-1:-1;;;18588:48:113;;-1:-1:-1;;;;;18597:15:113;;;18588:48;;;32597:51:118;32664:18;;;32657:30;32723:2;32703:18;;;32696:30;-1:-1:-1;;;32742:18:118;;;32735:49;-1:-1:-1;;;;;;;;;;;18588:8:113;-1:-1:-1;18588:8:113;;-1:-1:-1;32801:19:118;;18588:48:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18655:8:113;;18646:26;;;-1:-1:-1;;;18646:26:113;;-1:-1:-1;;;;;18655:8:113;;;18646:26;;;;33043:51:118;;;;33110:18;;;33103:30;;;;33149:18;;;33142:29;-1:-1:-1;;;33187:18:118;;;33180:34;-1:-1:-1;;;;;;;;;;;18646:8:113;-1:-1:-1;18646:8:113;;-1:-1:-1;33231:19:118;;18646:26:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18691:12:113;;18682:34;;;-1:-1:-1;;;18682:34:113;;-1:-1:-1;;;;;18691:12:113;;;18682:34;;;33473:51:118;33540:18;;;33533:30;33599:1;33579:18;;;33572:29;-1:-1:-1;;;33617:18:118;;;33610:38;-1:-1:-1;;;;;;;;;;;18682:8:113;-1:-1:-1;18682:8:113;;-1:-1:-1;33665:19:118;;18682:34:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18735:14:113;;18726:42;;;-1:-1:-1;;;18726:42:113;;-1:-1:-1;;;;;18735:14:113;;;18726:42;;;33907:51:118;33974:18;;;33967:30;34033:2;34013:18;;;34006:30;-1:-1:-1;;;34052:18:118;;;34045:44;-1:-1:-1;;;;;;;;;;;18726:8:113;-1:-1:-1;18726:8:113;;-1:-1:-1;34106:19:118;;18726:42:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18787:20:113;;18778:54;;;-1:-1:-1;;;18778:54:113;;-1:-1:-1;;;;;18787:20:113;;;18778:54;;;34348:51:118;34415:18;;;34408:30;34474:2;34454:18;;;34447:30;-1:-1:-1;;;34493:18:118;;;34486:50;-1:-1:-1;;;;;;;;;;;18778:8:113;-1:-1:-1;18778:8:113;;-1:-1:-1;34553:19:118;;18778:54:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18851:13:113;;18842:40;;;-1:-1:-1;;;18842:40:113;;-1:-1:-1;;;;;18851:13:113;;;18842:40;;;34795:51:118;34862:18;;;34855:30;34921:2;34901:18;;;34894:30;-1:-1:-1;;;34940:18:118;;;34933:43;-1:-1:-1;;;;;;;;;;;18842:8:113;-1:-1:-1;18842:8:113;;-1:-1:-1;34993:19:118;;18842:40:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18901:34:113;;18892:82;;;-1:-1:-1;;;18892:82:113;;-1:-1:-1;;;;;18901:34:113;;;18892:82;;;35235:51:118;35302:18;;;35295:30;35361:2;35341:18;;;35334:30;35400:34;35380:18;;;35373:62;-1:-1:-1;;;35451:19:118;;;35444:33;-1:-1:-1;;;;;;;;;;;18892:8:113;-1:-1:-1;18892:8:113;;-1:-1:-1;35494:19:118;;18892:82:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18993:6:113;;18984:26;;;-1:-1:-1;;;18984:26:113;;-1:-1:-1;;;;;18993:6:113;;;18984:26;;;35736:51:118;35803:18;;;35796:30;35862:1;35842:18;;;35835:29;-1:-1:-1;;;35880:18:118;;;35873:36;-1:-1:-1;;;;;;;;;;;18984:8:113;-1:-1:-1;18984:8:113;;-1:-1:-1;35926:19:118;;18984:26:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19029:8:113;;19020:26;;;-1:-1:-1;;;19020:26:113;;-1:-1:-1;;;;;19029:8:113;;;19020:26;;;;36168:51:118;;;;36235:18;;;36228:30;;;;36274:18;;;36267:29;-1:-1:-1;;;36312:18:118;;;36305:34;-1:-1:-1;;;;;;;;;;;19020:8:113;-1:-1:-1;19020:8:113;;-1:-1:-1;36356:19:118;;19020:26:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19065:8:113;;19056:30;;;-1:-1:-1;;;19056:30:113;;-1:-1:-1;;;;;19065:8:113;;;19056:30;;;36598:51:118;36665:18;;;36658:30;36724:1;36704:18;;;36697:29;-1:-1:-1;;;36742:18:118;;;36735:38;-1:-1:-1;;;;;;;;;;;19056:8:113;-1:-1:-1;19056:8:113;;-1:-1:-1;36790:19:118;;19056:30:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19105:21:113;;19096:56;;;-1:-1:-1;;;19096:56:113;;-1:-1:-1;;;;;19105:21:113;;;19096:56;;;37032:51:118;37099:18;;;37092:30;37158:2;37138:18;;;37131:30;-1:-1:-1;;;37177:18:118;;;37170:51;-1:-1:-1;;;;;;;;;;;19096:8:113;-1:-1:-1;19096:8:113;;-1:-1:-1;37238:19:118;;19096:56:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19179:6:113;;19162:37;;;-1:-1:-1;;;19162:37:113;;-1:-1:-1;;;;;19179:6:113;;;19162:37;;;37480:51:118;37547:18;;;37540:30;37606:1;37586:18;;;37579:29;-1:-1:-1;;;37624:18:118;;;37617:38;-1:-1:-1;;;;;;;;;;;19162:8:113;-1:-1:-1;19162:8:113;;-1:-1:-1;37672:19:118;;19162:37:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19226:6:113;;19209:37;;;-1:-1:-1;;;19209:37:113;;-1:-1:-1;;;;;19226:6:113;;;19209:37;;;37914:51:118;37981:18;;;37974:30;38040:1;38020:18;;;38013:29;-1:-1:-1;;;38058:18:118;;;38051:38;-1:-1:-1;;;;;;;;;;;19209:8:113;-1:-1:-1;19209:8:113;;-1:-1:-1;38106:19:118;;19209:37:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19273:7:113;;19256:51;;;-1:-1:-1;;;19256:51:113;;-1:-1:-1;;;;;19273:7:113;;;19256:51;;;38348::118;38415:18;;;38408:30;38474:2;38454:18;;;38447:30;-1:-1:-1;;;38493:18:118;;;38486:51;-1:-1:-1;;;;;;;;;;;19256:8:113;-1:-1:-1;19256:8:113;;-1:-1:-1;38554:19:118;;19256:51:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19326:8:113;;19317:26;;;-1:-1:-1;;;19317:26:113;;-1:-1:-1;;;;;19326:8:113;;;19317:26;;;;38796:51:118;;;;38863:18;;;38856:30;;;;38902:18;;;38895:29;-1:-1:-1;;;38940:18:118;;;38933:34;-1:-1:-1;;;;;;;;;;;19317:8:113;-1:-1:-1;19317:8:113;;-1:-1:-1;38984:19:118;;19317:26:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19370:5:113;;19353:33;;;-1:-1:-1;;;19353:33:113;;-1:-1:-1;;;;;19370:5:113;;;19353:33;;;39226:51:118;39293:18;;;39286:30;39352:1;39332:18;;;39325:29;-1:-1:-1;;;39370:18:118;;;39363:35;-1:-1:-1;;;;;;;;;;;19353:8:113;-1:-1:-1;19353:8:113;;-1:-1:-1;39415:19:118;;19353:33:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19405:17:113;;19396:48;;;-1:-1:-1;;;19396:48:113;;-1:-1:-1;;;;;19405:17:113;;;19396:48;;;39657:51:118;39724:18;;;39717:30;39783:2;39763:18;;;39756:30;-1:-1:-1;;;39802:18:118;;;39795:47;-1:-1:-1;;;;;;;;;;;19396:8:113;-1:-1:-1;19396:8:113;;-1:-1:-1;39859:19:118;;19396:48:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19463:16:113;;19454:46;;;-1:-1:-1;;;19454:46:113;;-1:-1:-1;;;;;19463:16:113;;;19454:46;;;40101:51:118;40168:18;;;40161:30;40227:2;40207:18;;;40200:30;-1:-1:-1;;;40246:18:118;;;40239:46;-1:-1:-1;;;;;;;;;;;19454:8:113;-1:-1:-1;19454:8:113;;-1:-1:-1;40302:19:118;;19454:46:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19519:7:113;;19510:24;;;-1:-1:-1;;;19510:24:113;;-1:-1:-1;;;;;19519:7:113;;;19510:24;;;40544:51:118;40611:18;;;40604:30;40670:1;40650:18;;;40643:29;-1:-1:-1;;;40688:18:118;;;40681:33;-1:-1:-1;;;;;;;;;;;19510:8:113;-1:-1:-1;19510:8:113;;-1:-1:-1;40731:19:118;;19510:24:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19561:10:113;;19544:43;;;-1:-1:-1;;;19544:43:113;;-1:-1:-1;;;;;19561:10:113;;;19544:43;;;40973:51:118;41040:18;;;41033:30;41099:2;41079:18;;;41072:30;-1:-1:-1;;;41118:18:118;;;41111:40;-1:-1:-1;;;;;;;;;;;19544:8:113;-1:-1:-1;19544:8:113;;-1:-1:-1;41168:19:118;;19544:43:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19614:8:113;;19597:40;;;-1:-1:-1;;;19597:40:113;;-1:-1:-1;;;;;19614:8:113;;;19597:40;;;41410:51:118;41477:18;;;41470:30;41536:1;41516:18;;;41509:29;-1:-1:-1;;;41554:18:118;;;41547:39;-1:-1:-1;;;;;;;;;;;19597:8:113;-1:-1:-1;19597:8:113;;-1:-1:-1;41603:19:118;;19597:40:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19664:8:113;;19647:40;;;-1:-1:-1;;;19647:40:113;;-1:-1:-1;;;;;19664:8:113;;;19647:40;;;41845:51:118;41912:18;;;41905:30;41971:1;41951:18;;;41944:29;-1:-1:-1;;;41989:18:118;;;41982:39;-1:-1:-1;;;;;;;;;;;19647:8:113;-1:-1:-1;19647:8:113;;-1:-1:-1;42038:19:118;;19647:40:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19714:8:113;;19697:40;;;-1:-1:-1;;;19697:40:113;;-1:-1:-1;;;;;19714:8:113;;;19697:40;;;42280:51:118;42347:18;;;42340:30;42406:1;42386:18;;;42379:29;-1:-1:-1;;;42424:18:118;;;42417:39;-1:-1:-1;;;;;;;;;;;19697:8:113;-1:-1:-1;19697:8:113;;-1:-1:-1;42473:19:118;;19697:40:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19764:15:113;;19747:49;;;-1:-1:-1;;;19747:49:113;;-1:-1:-1;;;;;19764:15:113;;;19747:49;;;42715:51:118;42782:18;;;42775:30;42841:2;42821:18;;;42814:30;-1:-1:-1;;;42860:18:118;;;42853:41;-1:-1:-1;;;;;;;;;;;19747:8:113;-1:-1:-1;19747:8:113;;-1:-1:-1;42911:19:118;;19747:49:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19815:12:113;;19806:38;;;-1:-1:-1;;;19806:38:113;;-1:-1:-1;;;;;19815:12:113;;;19806:38;;;43153:51:118;43220:18;;;43213:30;43279:2;43259:18;;;43252:30;-1:-1:-1;;;43298:18:118;;;43291:42;-1:-1:-1;;;;;;;;;;;19806:8:113;-1:-1:-1;19806:8:113;;-1:-1:-1;43350:19:118;;19806:38:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19863:16:113;;19854:46;;;-1:-1:-1;;;19854:46:113;;-1:-1:-1;;;;;19863:16:113;;;19854:46;;;43592:51:118;43659:18;;;43652:30;43718:2;43698:18;;;43691:30;-1:-1:-1;;;43737:18:118;;;43730:46;-1:-1:-1;;;;;;;;;;;19854:8:113;-1:-1:-1;19854:8:113;;-1:-1:-1;43793:19:118;;19854:46:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19919:16:113;;19910:46;;;-1:-1:-1;;;19910:46:113;;-1:-1:-1;;;;;19919:16:113;;;19910:46;;;44035:51:118;44102:18;;;44095:30;44161:2;44141:18;;;44134:30;-1:-1:-1;;;44180:18:118;;;44173:46;-1:-1:-1;;;;;;;;;;;19910:8:113;-1:-1:-1;19910:8:113;;-1:-1:-1;44236:19:118;;19910:46:113;;;;;;;;;;;;;;;;;;;19884:117:45;19966:28;19971:5;19978:2;19982:4;19988:5;19966:4;:28::i;4538:980:103:-;4742:17;4787:8;4775;:20;;;;;;;;:::i;:::-;;4771:741;;4819:2;;4917:23;;;-1:-1:-1;;;4917:23:103;;;;-1:-1:-1;;;;;4819:2:103;;;;:16;;4853:9;;4889:8;;4819:2;;4917:21;;:23;;;;;;;;;;;;;;;4819:2;4917:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4819:161;;-1:-1:-1;;;;;;4819:161:103;;;;;;;;;;44495:25:118;;;;-1:-1:-1;;;;;44594:15:118;;;44574:18;;;44567:43;44658:6;44646:19;44626:18;;;44619:47;44702:15;;44682:18;;;44675:43;44467:19;;4819:161:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4819:161:103;;;;;;;;;;;;:::i;:::-;4812:168;;4771:741;;;5014:7;5002:8;:19;;;;;;;;:::i;:::-;;4998:514;;5068:2;;5114:9;;5125:23;;;-1:-1:-1;;;5125:23:103;;;;5038:27;;-1:-1:-1;;;;;5068:2:103;;;;:17;;5103:9;;5114;;;;;5068:2;;5125:21;;:23;;;;;;;;;;;;;;5068:2;5125:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5068:94;;-1:-1:-1;;;;;;5068:94:103;;;;;;;;;;45392:25:118;;;;-1:-1:-1;;;;;45453:32:118;;;45433:18;;;45426:60;45534:6;45522:19;45502:18;;;45495:47;45365:18;;5068:94:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5068:94:103;;;;;;;;;;;;:::i;:::-;:108;;;5239:7;;5068:108;;-1:-1:-1;5191:18:103;;-1:-1:-1;;;;;5229:17:103;;;5239:7;;5229:17;:139;;5346:9;;5314:54;;5329:7;;-1:-1:-1;;;;;5346:9:103;5358;5314:14;:54::i;:::-;5229:139;;;5284:9;;5249:46;;5267:7;;-1:-1:-1;;;;;5284:9:103;5249:17;:46::i;:::-;5417:28;;-1:-1:-1;;;5417:28:103;;;;;13845:25:118;;;13886:18;;;13879:34;;;5191:177:103;;-1:-1:-1;5384:7:103;;;;;;-1:-1:-1;;;;;;;;;;;5417:7:103;;;13818:18:118;;5417:28:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5383:62;;;;;;5478:13;5493:1;5496;5499;5467:34;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5460:41;;5023:489;;;;;4538:980;;;;;;;;:::o;2919:272:108:-;2987:27;3024:7;3033:9;3044;3121:5;3097:87;;;;;;;;;;;;:::i;:::-;3070:114;;;;-1:-1:-1;3070:114:108;-1:-1:-1;3070:114:108;;-1:-1:-1;2919:272:108;-1:-1:-1;;2919:272:108:o;1818:573:87:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:87;;-1:-1:-1;;;2159:39:87;;2183:4;2159:39;;;18517:34:118;-1:-1:-1;;;;;18587:15:118;;;18567:18;;;18560:43;2159:15:87;;;;;18452:18:118;;2159:39:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:87;;48213:2:118;2121:163:87;;;48195:21:118;48252:2;48232:18;;;48225:30;48291:34;48271:18;;;48264:62;-1:-1:-1;;;48342:18:118;;;48335:52;48404:19;;2121:163:87;;;;;;;;;2294:90;2314:5;2344:22;;;2368:7;2377:5;2321:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2321:62:87;;;;;;;;;;;;;;-1:-1:-1;;;;;2321:62:87;-1:-1:-1;;;;;;2321:62:87;;;;;;;;;;2294:19;:90::i;10259:183:103:-;10345:7;10427;10411:4;10417;10394:28;;;;;;;;48591:19:118;;;48635:2;48626:12;;48619:28;48672:2;48663:12;;48434:247;10394:28:103;;;;;;;;;;;;;10384:39;;;;;;10379:45;;:55;;;;:::i;9321:383::-;9535:45;;;-1:-1:-1;;48855:44:118;;9535:45:103;;;48843:57:118;9434:3:103;9422:15;;;-1:-1:-1;;;;;;48930:49:118;;48916:12;;;48909:71;9422:15:103;48855:44:118;;-1:-1:-1;;48996:12:118;9535:45:103;;;;;;;;;;;;9527:54;;;:::i;:::-;9618:10;;9638:8;;9648:9;;9659:10;;9600:70;;-1:-1:-1;;;9600:70:103;;9504:77;;-1:-1:-1;;;;;;;;;;;;9591:8:103;;;-1:-1:-1;;;;;9618:10:103;;;;9600:37;;:70;;9638:8;;;;9648:9;;;-1:-1:-1;;;9659:10:103;;;;;;9600:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9591:106;;-1:-1:-1;;;;;;9591:106:103;;;;;;;;;;9680:1;;9684:12;;9591:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:947:108;1557:7;1705:6;-1:-1:-1;;;;;1692:37:108;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1796:444;;;1840:165;1796:444;;;49608:25:118;-1:-1:-1;;;;;49707:15:118;;;49687:18;;;49680:43;;;;49759:15;;;49739:18;;;49732:43;49791:18;;;49784:34;;;49834:19;;;49827:35;;;49878:19;;;49871:35;;;49580:19;;1796:444:108;;;;;;;;;;;;;1757:509;;;;;;1614:674;;;;;;;;-1:-1:-1;;;50175:27:118;;50227:1;50218:11;;50211:27;;;;50263:2;50254:12;;50247:28;50300:2;50291:12;;49917:392;1614:674:108;;;;;;;;;;;;;1583:723;;;;;;1576:730;;1366:947;;;;;;;;:::o;3812:719:103:-;3964:7;3973:9;3984;3997:25;4016:5;3997:18;:25::i;:::-;4050:7;;4037:9;;3962:60;;-1:-1:-1;3962:60:103;;-1:-1:-1;3962:60:103;-1:-1:-1;;;;;;4050:7:103;;;4037:9;;:20;;-1:-1:-1;4033:492:103;;4086:9;;4170:37;;-1:-1:-1;;;4170:37:103;;-1:-1:-1;;;;;195:32:118;;;4170:37:103;;;177:51:118;4086:9:103;;;;4073:30;;4121:5;;4144:8;;4086:9;;4170:30;;150:18:118;;4170:37:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4073:228;;-1:-1:-1;;;;;;4073:228:103;;;;;;;-1:-1:-1;;;;;50703:15:118;;;4073:228:103;;;50685:34:118;50755:15;;;;50735:18;;;50728:43;50787:18;;;50780:34;4225:15:103;50830:18:118;;;50823:34;4258:4:103;50873:19:118;;;50866:51;50966:4;50954:17;;50933:19;;;50926:46;50988:19;;;50981:35;;;51032:19;;;51025:35;;;50619:19;;4073:228:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4033:492;;;4345:9;;4332:182;;-1:-1:-1;;;4332:182:103;;-1:-1:-1;;;;;4345:9:103;;;;4332:30;;:182;;4380:5;;4404:8;;4431:9;;4459:15;;4493:1;;4496;;4499;;4332:182;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4033:492;3952:579;;;3812:719;;;;:::o;20280:825:45:-;20444:38;;;-1:-1:-1;;;;;195:32:118;;;20444:38:45;;;;177:51:118;;;;20444:38:45;;;;;;;;;;150:18:118;;;;20444:38:45;;;;;;;-1:-1:-1;;;;;20444:38:45;-1:-1:-1;;;20444:38:45;;;20433:50;;20409:20;;20433:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20406:77;;;20493:15;20522:7;20511:30;;;;;;;;;;;;:::i;:::-;20493:48;-1:-1:-1;20578:71:45;20644:4;20578:51;20626:2;20578:38;-1:-1:-1;;;20578:22:45;:8;20594:5;20578:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;20695:6;20691:408;;;20758:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20758:34:45;-1:-1:-1;;;20758:34:45;;;20747:46;;20720:23;;-1:-1:-1;;;;;20747:10:45;;;:46;;20758:34;20747:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20717:76;;;20807:14;20835:10;20824:33;;;;;;;;;;;;:::i;:::-;20807:50;;20882:7;20875:4;:14;20871:144;;;20920:14;20930:4;20920:7;:14;:::i;:::-;20909:26;;;;:::i;:::-;;;20871:144;;;20985:14;20992:7;20985:4;:14;:::i;:::-;20974:26;;;;:::i;:::-;;;20871:144;21028:60;21081:6;21028:38;-1:-1:-1;;;21028:22:45;:8;21044:5;21028:15;:22::i;6233:365:103:-;6424:9;;6513:39;;-1:-1:-1;;;6513:39:103;;-1:-1:-1;;;;;195:32:118;;;6513:39:103;;;177:51:118;6360:7:103;;6386:205;;6424:9;;;6447:7;;6468:8;;6490:9;;6424;;6513:30;;150:18:118;;6513:39:103;14:220:118;5524:320:103;5675:9;;5741:39;;-1:-1:-1;;;5741:39:103;;-1:-1:-1;;;;;195:32:118;;;5741:39:103;;;177:51:118;5608:7:103;;5634:203;;5675:9;;;5698:7;;5719:8;;5675:9;;5741:30;;150:18:118;;5741:39:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5794:15;5823:4;5634:27;:203::i;5196:642:87:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:87;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:87;;51273:2:118;5720:111:87;;;51255:21:118;51312:2;51292:18;;;51285:30;51351:34;51331:18;;;51324:62;-1:-1:-1;;;51402:18:118;;;51395:40;51452:19;;5720:111:87;51071:406:118;7700:156:50;4573:12;;;:22;;-1:-1:-1;;;;;;4573:22:50;-1:-1:-1;;;;;4573:22:50;;;;;-1:-1:-1;4573:12:50;7813:36;4467:156;7862:143;4728:9;;;:16;;-1:-1:-1;;4728:16:50;;;;;;;;-1:-1:-1;4728:9:50;7968:30;4629:143;8167:152;5044:10;;;:47;;;;;;;8241:18;5044:47;;;;;;-1:-1:-1;;;;;5068:21:50;;5044:47;;;8302:4;8278:34;4940:179;8943:120;9023:33;9037:4;9051:3;9023:13;:33::i;:::-;8943:120;;:::o;802:558:108:-;996:7;1099:6;-1:-1:-1;;;;;1086:37:108;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1190:6;-1:-1:-1;;;;;1177:36:108;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:192;;;;;;51763:25:118;;;;-1:-1:-1;;;;;51862:15:118;;;51842:18;;;51835:43;;;;51914:15;;51894:18;;;51887:43;51946:18;;;51939:34;;;51989:19;;;51982:35;;;52061:14;;52054:22;52033:19;;;52026:51;51735:19;;1149:192:108;51482:601:118;4108:223:88;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;9297:1095:50:-;9391:12;;;;9427:9;;;;9468:11;;;;9512:10;;;9489:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9391:12:50;;;;9427:9;;;;;;9377:11;;9489:33;;9512:10;;9489:33;;9512:10;9489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9533:17;9570:4;9576:12;9584:3;9576:7;:12::i;:::-;9553:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9553:36:50;;;;;;;;;-1:-1:-1;;;;;9604:15:50;;;;;;:10;;;9553:36;9604:15;;;;;;-1:-1:-1;;;;;;9604:21:50;;;;;;;;;9553:36;;-1:-1:-1;9604:21:50;;:15;;9636:34;;9653:3;;9658:11;;9636:34;;:::i;:::-;;;;-1:-1:-1;;9636:34:50;;;;;;;;;9626:45;;9636:34;9626:45;;;;9604:68;;;;;;;;;;-1:-1:-1;9604:68:50;;;;9599:110;;9688:10;9693:4;9688;:10::i;:::-;;9599:110;-1:-1:-1;;;;;9741:15:50;;9718:12;9741:15;;;;;;;;;;;-1:-1:-1;;;;;;9741:21:50;;;;;;;;;9773:34;;9741:21;;9718:12;;9773:34;;9790:3;;9795:11;;9773:34;;:::i;:::-;;;;;;;;;;;;;9763:45;;;;;;9741:68;;;;;;;;;;;;9733:77;;9718:92;;9821:12;9860:17;9881:3;-1:-1:-1;;;;;9881:14:50;9896:4;9881:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9857:44:50;-1:-1:-1;9922:38:50;;-1:-1:-1;9857:44:50;9943:16;9948:11;9943:2;:16;:::i;:::-;9922:14;:38::i;:::-;9995:18;;-1:-1:-1;;;9995:18:50;;9915:45;;-1:-1:-1;9980:12:50;;-1:-1:-1;;;;;;;;;;;;9995:7:50;;;:18;;10003:3;;10008:4;;9995:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9980:33;;10036:4;10028;:12;10024:218;;10056:175;;-1:-1:-1;;;10056:175:50;;;;;;;:::i;:::-;10251:24;;-1:-1:-1;;;10251:24:50;;-1:-1:-1;;;;;;;;;;;10251:8:50;;;:24;;10260:3;;10265:4;;10271:3;;10251:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10292:12:50;;;10285:19;;-1:-1:-1;;;;;;10285:19:50;;;-1:-1:-1;10321:9:50;;;10314:16;;-1:-1:-1;;10314:16:50;;;10340:17;-1:-1:-1;10347:10:50;;10292:12;10340:17;:::i;:::-;10374:4;:11;;10367:18;;;9367:1025;;;;;;;;9297:1095;;:::o;5165:446:88:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:88;;53466:2:118;5354:81:88;;;53448:21:118;53505:2;53485:18;;;53478:30;53544:34;53524:18;;;53517:62;-1:-1:-1;;;53595:18:118;;;53588:36;53641:19;;5354:81:88;53264:402:118;5354:81:88;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:88;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:88:o;11471:393:50:-;11530:12;11554:19;11586:1;:8;11597:2;11586:13;;;;:::i;:::-;11576:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11576:24:50;;11554:46;;11615:9;11610:224;11634:1;:8;11630:1;:12;11610:224;;;11663:9;11675:1;11677;11675:4;;;;;;;;:::i;:::-;;;;;;;11663:16;;11808:1;11802;11798:2;11794:10;11790:2;11786:19;11778:6;11774:32;11767:43;11749:75;11644:3;;;;;:::i;:::-;;;;11610:224;;;-1:-1:-1;11851:6:50;11471:393;-1:-1:-1;;11471:393:50:o;7579:115::-;7636:7;7662:25;7682:4;7662:19;:25::i;11110:304::-;11188:7;11207:11;11229;11254:2;11243:1;:8;:13;:29;;11264:1;:8;11243:29;;;11259:2;11243:29;11229:43;;11287:9;11282:106;11306:3;11302:1;:7;11282:106;;;11371:5;:1;11375;11371:5;:::i;:::-;11345:1;11347:10;11356:1;11347:6;:10;:::i;:::-;11345:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;11345:13:50;11337:40;;11330:47;;;;;11311:3;;;;:::i;:::-;;;;11282:106;;;-1:-1:-1;11404:3:50;;11110:304;-1:-1:-1;;;;11110:304:50:o;7671:628:88:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:88;;;8113:60;;;;-1:-1:-1;;;8113:60:88;;53873:2:118;8113:60:88;;;53855:21:118;53912:2;53892:18;;;53885:30;53951:31;53931:18;;;53924:59;54000:18;;8113:60:88;53671:353:118;8113:60:88;-1:-1:-1;8208:10:88;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;1264:3197:50:-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:50;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:50;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:50;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:50;:15;;-1:-1:-1;1568:34:50;;-1:-1:-1;1452:33:50;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:50;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:50;;;;1532:174;;;-1:-1:-1;;;;;1627:15:50;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:50;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3197;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;-1:-1:-1;;;;;;;;;;;580:37:50;;-1:-1:-1;;;;;1781:9:50;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:50;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:50;-1:-1:-1;1903:38:50;;-1:-1:-1;1838:44:50;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:50;;-1:-1:-1;;;;;195:32:118;;1990:25:50;;;177:51:118;1896:45:50;;-1:-1:-1;1963:22:50;;-1:-1:-1;;;;;;;;;;;;1990:11:50;;;150:18:118;;1990:25:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:50;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2060;;2062:12;-1:-1:-1;;;;;;;;;;;580:37:50;;-1:-1:-1;;;;;2077:7:50;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:50;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;2186:17;;2160:44;;;;;;;:::i;:::-;;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:50;;;;;;;:::i;:::-;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;2556:17;;2488:86;;;;;;;;;:::i;:::-;;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:50;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:50;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:50;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:50;;;:88;;;;-1:-1:-1;;;;;2690:15:50;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:50;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:50;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:50;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:50;:75;;-1:-1:-1;;2690:75:50;;;;;;;;;;-1:-1:-1;2025:2060:50;;;2801:1;2786:5;:12;:16;2782:1303;;;2823:9;2818:1152;2842:5;:12;2838:1;:16;2818:1152;;;2879:12;-1:-1:-1;;;;;;;;;;;580:37:50;;-1:-1:-1;;;;;2894:7:50;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:50;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;3011:17;;2985:44;;;;;;;:::i;:::-;;;;;;;;2934:114;-1:-1:-1;;;;;;;;;;;580:37:50;;-1:-1:-1;;;;;3090:8:50;;3099:3;3104:5;3110:1;3104:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;3090:43:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:12;3181:17;3256:3;-1:-1:-1;;;;;3256:14:50;3271:4;3256:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3238:38:50;;-1:-1:-1;3238:38:50;-1:-1:-1;3305:38:50;3238;3326:16;3331:11;3326:2;:16;:::i;3305:38::-;3298:45;;3384:7;:37;;;;;-1:-1:-1;;;3395:4:50;:26;3384:37;3380:529;;;3519:86;3529:3;3534:4;3567:3;3572:11;3550:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3540:45;;;;;;3595:5;3601:1;3595:8;;;;;;;;:::i;:::-;;;;;;;3587:17;;3519:86;;;;;;;;;:::i;:::-;;;;;;;;3706:5;3712:1;3706:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3627:15:50;;3698:17;3627:15;;;;;;;;;;-1:-1:-1;;;;;;3627:21:50;;;;;;;;;3659:34;;3706:8;;3627:21;;3659:34;;3676:3;;3681:11;;3659:34;;:::i;:::-;;;;;;;;;;;;;3649:45;;;;;;3627:68;;;;;;;;;;;:88;;;;3808:4;3737;:10;;:15;3748:3;-1:-1:-1;;;;;3737:15:50;-1:-1:-1;;;;;3737:15:50;;;;;;;;;;;;:21;3753:4;-1:-1:-1;;;;;3737:21:50;;-1:-1:-1;;;;;3737:21:50;;;;;;;;;;;;;:68;3786:3;3791:11;3769:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3759:45;;;;;;3737:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;580:37:50;;-1:-1:-1;;;;;3834:8:50;;3843:3;3848:5;3854:1;3848:8;;;;;;;;:::i;:::-;;;;;;;3858:4;3834:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3885:5;;;;;3380:529;-1:-1:-1;;;;;;;;;;;580:37:50;;-1:-1:-1;;;;;3926:8:50;;3935:3;3940:5;3946:1;3940:8;;;;;;;;:::i;:::-;;;;;;;3950:4;3926:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1109;;;2856:3;;;;;:::i;:::-;;;;2818:1152;;;;2782:1303;;;4000:74;;;-1:-1:-1;;;4000:74:50;;55297:2:118;4000:74:50;;;55279:21:118;55316:18;;;55309:30;;;;55375:34;55355:18;;;55348:62;55446:34;55426:18;;;55419:62;55498:19;;4000:74:50;55095:428:118;2782:1303:50;-1:-1:-1;;;;;4116:15:50;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4116:21:50;;;;;;;;;4148:34;;4116:21;;:15;4148:34;;4165:3;;4170:11;;4148:34;;:::i;:::-;;;;-1:-1:-1;;4148:34:50;;;;;;;;;4138:45;;4148:34;4138:45;;;;4116:68;;;;;;;;;;-1:-1:-1;4116:68:50;;;;4095:162;;;;-1:-1:-1;;;4095:162:50;;55730:2:118;4095:162:50;;;55712:21:118;55769:2;55749:18;;;55742:30;55808:34;55788:18;;;55781:62;-1:-1:-1;;;55859:18:118;;;55852:45;55914:19;;4095:162:50;55528:411:118;4095:162:50;4275:12;;;4268:19;;-1:-1:-1;;;;;;4268:19:50;;;4304:9;;;4297:16;;-1:-1:-1;;4297:16:50;;;4323:17;-1:-1:-1;4330:10:50;;4275:12;4323:17;:::i;:::-;4350:18;4357:11;;;4350:18;;;-1:-1:-1;;;;;4386:15:50;;;;;;;;;;;;-1:-1:-1;;;;;;4386:21:50;;;;;;;;;4418:34;;4386:21;;4350:18;4418:34;;4435:3;;4440:11;;4418:34;;:::i;:::-;;;;;;;;;;;;;4408:45;;;;;;4386:68;;;;;;;;;;;;4379:75;;;;;;;;;1264:3197;;;:::o;8821:540:88:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:88;;;;;;;;:::i;6942:393:50:-;7001:12;7025:19;7057:1;:8;7068:2;7057:13;;;;:::i;:::-;7047:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7047:24:50;;7025:46;;7086:9;7081:224;7105:1;:8;7101:1;:12;7081:224;;;7134:9;7146:1;7148;7146:4;;;;;;;;:::i;:::-;;;;;;;7134:16;;7279:1;7273;7269:2;7265:10;7261:2;7257:19;7249:6;7245:32;7238:43;7220:75;7115:3;;;;;:::i;:::-;;;;7081:224;;6632:304;6710:7;6729:11;6751;6776:2;6765:1;:8;:13;:29;;6786:1;:8;6765:29;;;6781:2;6765:29;6751:43;;6809:9;6804:106;6828:3;6824:1;:7;6804:106;;;6893:5;:1;6897;6893:5;:::i;:::-;6867:1;6869:10;6878:1;6869:6;:10;:::i;:::-;6867:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;6867:13:50;6859:40;;6852:47;;;;;6833:3;;;;:::i;:::-;;;;6804:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;348:658:118:-;519:2;571:21;;;641:13;;544:18;;;663:22;;;490:4;;519:2;742:15;;;;716:2;701:18;;;490:4;785:195;799:6;796:1;793:13;785:195;;;864:13;;-1:-1:-1;;;;;860:39:118;848:52;;955:15;;;;920:12;;;;896:1;814:9;785:195;;;-1:-1:-1;997:3:118;;348:658;-1:-1:-1;;;;;;348:658:118:o;1011:461::-;1063:3;1101:5;1095:12;1128:6;1123:3;1116:19;1154:4;1183:2;1178:3;1174:12;1167:19;;1220:2;1213:5;1209:14;1241:1;1251:196;1265:6;1262:1;1259:13;1251:196;;;1330:13;;-1:-1:-1;;;;;;1326:40:118;1314:53;;1387:12;;;;1422:15;;;;1287:1;1280:9;1251:196;;;-1:-1:-1;1463:3:118;;1011:461;-1:-1:-1;;;;;1011:461:118:o;1477:1075::-;1681:4;1710:2;1750;1739:9;1735:18;1780:2;1769:9;1762:21;1803:6;1838;1832:13;1869:6;1861;1854:22;1895:2;1885:12;;1928:2;1917:9;1913:18;1906:25;;1990:2;1980:6;1977:1;1973:14;1962:9;1958:30;1954:39;2028:2;2020:6;2016:15;2049:1;2059:464;2073:6;2070:1;2067:13;2059:464;;;2138:22;;;-1:-1:-1;;2134:36:118;2122:49;;2194:13;;2239:9;;-1:-1:-1;;;;;2235:35:118;2220:51;;2310:11;;2304:18;2342:15;;;2335:27;;;2385:58;2427:15;;;2304:18;2385:58;:::i;:::-;2501:12;;;;2375:68;-1:-1:-1;;2466:15:118;;;;2095:1;2088:9;2059:464;;;-1:-1:-1;2540:6:118;;1477:1075;-1:-1:-1;;;;;;;;1477:1075:118:o;2557:250::-;2642:1;2652:113;2666:6;2663:1;2660:13;2652:113;;;2742:11;;;2736:18;2723:11;;;2716:39;2688:2;2681:10;2652:113;;;-1:-1:-1;;2799:1:118;2781:16;;2774:27;2557:250::o;2812:271::-;2854:3;2892:5;2886:12;2919:6;2914:3;2907:19;2935:76;3004:6;2997:4;2992:3;2988:14;2981:4;2974:5;2970:16;2935:76;:::i;:::-;3065:2;3044:15;-1:-1:-1;;3040:29:118;3031:39;;;;3072:4;3027:50;;2812:271;-1:-1:-1;;2812:271:118:o;3088:803::-;3250:4;3279:2;3319;3308:9;3304:18;3349:2;3338:9;3331:21;3372:6;3407;3401:13;3438:6;3430;3423:22;3476:2;3465:9;3461:18;3454:25;;3538:2;3528:6;3525:1;3521:14;3510:9;3506:30;3502:39;3488:53;;3576:2;3568:6;3564:15;3597:1;3607:255;3621:6;3618:1;3615:13;3607:255;;;3714:2;3710:7;3698:9;3690:6;3686:22;3682:36;3677:3;3670:49;3742:40;3775:6;3766;3760:13;3742:40;:::i;:::-;3732:50;-1:-1:-1;3840:12:118;;;;3805:15;;;;3643:1;3636:9;3607:255;;;-1:-1:-1;3879:6:118;;3088:803;-1:-1:-1;;;;;;;3088:803:118:o;4296:184::-;4366:6;4419:2;4407:9;4398:7;4394:23;4390:32;4387:52;;;4435:1;4432;4425:12;4387:52;-1:-1:-1;4458:16:118;;4296:184;-1:-1:-1;4296:184:118:o;4485:127::-;4546:10;4541:3;4537:20;4534:1;4527:31;4577:4;4574:1;4567:15;4601:4;4598:1;4591:15;4617:168;4690:9;;;4721;;4738:15;;;4732:22;;4718:37;4708:71;;4759:18;;:::i;4790:217::-;4830:1;4856;4846:132;;4900:10;4895:3;4891:20;4888:1;4881:31;4935:4;4932:1;4925:15;4963:4;4960:1;4953:15;4846:132;-1:-1:-1;4992:9:118;;4790:217::o;5012:127::-;5073:10;5068:3;5064:20;5061:1;5054:31;5104:4;5101:1;5094:15;5128:4;5125:1;5118:15;5144:212;5227:1;5220:5;5217:12;5207:143;;5272:10;5267:3;5263:20;5260:1;5253:31;5307:4;5304:1;5297:15;5335:4;5332:1;5325:15;5361:239;5508:2;5493:18;;5520:40;5553:6;5520:40;:::i;:::-;5569:25;;;5361:239;:::o;5605:276::-;5674:6;5727:2;5715:9;5706:7;5702:23;5698:32;5695:52;;;5743:1;5740;5733:12;5695:52;5775:9;5769:16;5825:6;5818:5;5814:18;5807:5;5804:29;5794:57;;5847:1;5844;5837:12;5886:274;-1:-1:-1;;;;;6078:32:118;;;;6060:51;;6142:2;6127:18;;6120:34;6048:2;6033:18;;5886:274::o;6165:164::-;6241:13;;6290;;6283:21;6273:32;;6263:60;;6319:1;6316;6309:12;6334:202;6401:6;6454:2;6442:9;6433:7;6429:23;6425:32;6422:52;;;6470:1;6467;6460:12;6422:52;6493:37;6520:9;6493:37;:::i;6541:435::-;6594:3;6632:5;6626:12;6659:6;6654:3;6647:19;6685:4;6714:2;6709:3;6705:12;6698:19;;6751:2;6744:5;6740:14;6772:1;6782:169;6796:6;6793:1;6790:13;6782:169;;;6857:13;;6845:26;;6891:12;;;;6926:15;;;;6818:1;6811:9;6782:169;;6981:613;-1:-1:-1;;;;;7310:15:118;;;7292:34;;7362:15;;;7357:2;7342:18;;7335:43;7414:15;;7409:2;7394:18;;7387:43;7461:2;7446:18;;7439:34;;;7272:3;7504;7489:19;;7482:32;;;7235:4;;7531:57;;7568:19;;7560:6;7531:57;:::i;7599:220::-;7748:2;7737:9;7730:21;7711:4;7768:45;7809:2;7798:9;7794:18;7786:6;7768:45;:::i;7824:127::-;7885:10;7880:3;7876:20;7873:1;7866:31;7916:4;7913:1;7906:15;7940:4;7937:1;7930:15;7956:251;8028:2;8022:9;;;8058:15;;8103:18;8088:34;;8124:22;;;8085:62;8082:88;;;8150:18;;:::i;:::-;8186:2;8179:22;7956:251;:::o;8212:275::-;8283:2;8277:9;8348:2;8329:13;;-1:-1:-1;;8325:27:118;8313:40;;8383:18;8368:34;;8404:22;;;8365:62;8362:88;;;8430:18;;:::i;:::-;8466:2;8459:22;8212:275;;-1:-1:-1;8212:275:118:o;8492:391::-;8568:5;8602:18;8594:6;8591:30;8588:56;;;8624:18;;:::i;:::-;8662:57;8707:2;8686:15;;-1:-1:-1;;8682:29:118;8713:4;8678:40;8662:57;:::i;:::-;8653:66;;8742:6;8735:5;8728:21;8782:3;8773:6;8768:3;8764:16;8761:25;8758:45;;;8799:1;8796;8789:12;8758:45;8812:65;8870:6;8863:4;8856:5;8852:16;8847:3;8812:65;:::i;8888:459::-;8968:6;9021:2;9009:9;9000:7;8996:23;8992:32;8989:52;;;9037:1;9034;9027:12;8989:52;9070:9;9064:16;9103:18;9095:6;9092:30;9089:50;;;9135:1;9132;9125:12;9089:50;9158:22;;9211:4;9203:13;;9199:27;-1:-1:-1;9189:55:118;;9240:1;9237;9230:12;9189:55;9263:78;9333:7;9328:2;9322:9;9317:2;9313;9309:11;9263:78;:::i;9352:291::-;9529:2;9518:9;9511:21;9492:4;9549:45;9590:2;9579:9;9575:18;9567:6;9549:45;:::i;:::-;9541:53;;9630:6;9625:2;9614:9;9610:18;9603:34;9352:291;;;;;:::o;9648:660::-;-1:-1:-1;;;;;9979:32:118;;;;9961:51;;10048:2;10043;10028:18;;10021:30;;;10087:2;10067:18;;;10060:30;-1:-1:-1;;;10121:3:118;10106:19;;10099:41;9999:3;10171:2;10156:18;;10149:31;;;10217:1;10196:19;;;10189:30;-1:-1:-1;;;10250:3:118;10235:19;;10228:38;10298:3;10283:19;;9648:660::o;10313:290::-;10383:6;10436:2;10424:9;10415:7;10411:23;10407:32;10404:52;;;10452:1;10449;10442:12;10404:52;10478:16;;-1:-1:-1;;;;;10523:31:118;;10513:42;;10503:70;;10569:1;10566;10559:12;10608:160;10685:13;;10738:4;10727:16;;10717:27;;10707:55;;10758:1;10755;10748:12;10773:204;10841:6;10894:2;10882:9;10873:7;10869:23;10865:32;10862:52;;;10910:1;10907;10900:12;10862:52;10933:38;10961:9;10933:38;:::i;10982:422::-;11071:1;11114:5;11071:1;11128:270;11149:7;11139:8;11136:21;11128:270;;;11208:4;11204:1;11200:6;11196:17;11190:4;11187:27;11184:53;;;11217:18;;:::i;:::-;11267:7;11257:8;11253:22;11250:55;;;11287:16;;;;11250:55;11366:22;;;;11326:15;;;;11128:270;;;11132:3;10982:422;;;;;:::o;11409:806::-;11458:5;11488:8;11478:80;;-1:-1:-1;11529:1:118;11543:5;;11478:80;11577:4;11567:76;;-1:-1:-1;11614:1:118;11628:5;;11567:76;11659:4;11677:1;11672:59;;;;11745:1;11740:130;;;;11652:218;;11672:59;11702:1;11693:10;;11716:5;;;11740:130;11777:3;11767:8;11764:17;11761:43;;;11784:18;;:::i;:::-;-1:-1:-1;;11840:1:118;11826:16;;11855:5;;11652:218;;11954:2;11944:8;11941:16;11935:3;11929:4;11926:13;11922:36;11916:2;11906:8;11903:16;11898:2;11892:4;11889:12;11885:35;11882:77;11879:159;;;-1:-1:-1;11991:19:118;;;12023:5;;11879:159;12070:34;12095:8;12089:4;12070:34;:::i;:::-;12140:6;12136:1;12132:6;12128:19;12119:7;12116:32;12113:58;;;12151:18;;:::i;:::-;12189:20;;11409:806;-1:-1:-1;;;11409:806:118:o;12220:140::-;12278:5;12307:47;12348:4;12338:8;12334:19;12328:4;12307:47;:::i;12365:128::-;12432:9;;;12453:11;;;12450:37;;;12467:18;;:::i;12498:388::-;-1:-1:-1;;;;;12754:15:118;;;12736:34;;12806:15;;;;12801:2;12786:18;;12779:43;12870:8;12858:21;;;12853:2;12838:18;;12831:49;12686:2;12671:18;;12498:388::o;13359:125::-;13424:9;;;13445:10;;;13442:36;;;13458:18;;:::i;13924:326::-;14010:6;14018;14026;14079:2;14067:9;14058:7;14054:23;14050:32;14047:52;;;14095:1;14092;14085:12;14047:52;14118:38;14146:9;14118:38;:::i;:::-;14108:48;;14196:2;14185:9;14181:18;14175:25;14165:35;;14240:2;14229:9;14225:18;14219:25;14209:35;;13924:326;;;;;:::o;14255:670::-;-1:-1:-1;;;;;14622:15:118;;;14604:34;;14674:15;;;;14669:2;14654:18;;14647:43;14721:2;14706:18;;14699:34;;;;14764:2;14749:18;;14742:34;;;;14825:4;14813:17;14807:3;14792:19;;14785:46;14584:3;14847:19;;14840:35;14906:3;14891:19;;14884:35;;;;14553:3;14538:19;;14255:670::o;14930:343::-;15028:6;15081:2;15069:9;15060:7;15056:23;15052:32;15049:52;;;15097:1;15094;15087:12;15049:52;15123:22;;:::i;:::-;15174:9;15168:16;15161:5;15154:31;15238:2;15227:9;15223:18;15217:25;15212:2;15205:5;15201:14;15194:49;15262:5;15252:15;;;14930:343;;;;:::o;15278:380::-;15357:1;15353:12;;;;15400;;;15421:61;;15475:4;15467:6;15463:17;15453:27;;15421:61;15528:2;15520:6;15517:14;15497:18;15494:38;15491:161;;15574:10;15569:3;15565:20;15562:1;15555:31;15609:4;15606:1;15599:15;15637:4;15634:1;15627:15;15491:161;;15278:380;;;:::o;15663:127::-;15724:10;15719:3;15715:20;15712:1;15705:31;15755:4;15752:1;15745:15;15779:4;15776:1;15769:15;15795:384;-1:-1:-1;;;;;;15980:33:118;;15968:46;;16037:13;;15950:3;;16059:74;16037:13;16122:1;16113:11;;16106:4;16094:17;;16059:74;:::i;:::-;16153:16;;;;16171:1;16149:24;;15795:384;-1:-1:-1;;;15795:384:118:o;16184:287::-;16313:3;16351:6;16345:13;16367:66;16426:6;16421:3;16414:4;16406:6;16402:17;16367:66;:::i;:::-;16449:16;;;;;16184:287;-1:-1:-1;;16184:287:118:o;16810:476::-;-1:-1:-1;;;;;17031:32:118;;17013:51;;17100:2;17095;17080:18;;17073:30;;;-1:-1:-1;;17126:45:118;;17152:18;;17144:6;17126:45;:::i;:::-;17219:9;17211:6;17207:22;17202:2;17191:9;17187:18;17180:50;17247:33;17273:6;17265;17247:33;:::i;17291:324::-;17376:6;17384;17392;17445:2;17433:9;17424:7;17420:23;17416:32;17413:52;;;17461:1;17458;17451:12;17413:52;17484:37;17511:9;17484:37;:::i;17620:135::-;17659:3;17680:17;;;17677:43;;17700:18;;:::i;:::-;-1:-1:-1;17747:1:118;17736:13;;17620:135::o;19622:1040::-;20095:13;;-1:-1:-1;;;;;20091:22:118;;;20073:41;;20174:4;20162:17;;;20156:24;20152:33;;20130:20;;;20123:63;20246:4;20234:17;;;20228:24;20224:33;;20202:20;;;20195:63;20318:4;20306:17;;;20300:24;20296:33;;20274:20;;;20267:63;20371:13;;20367:22;;20361:3;20346:19;;;20339:51;;;;20437:17;;;20431:24;20427:33;;20053:3;20406:19;;20399:62;20508:17;;;20502:24;20498:33;;20492:3;20477:19;;20470:62;18729:12;;18725:21;;20590:3;20575:19;;18713:34;18789:16;;;18783:23;18779:32;;18763:14;;;18756:56;18854:16;;;18848:23;18844:32;;18828:14;;;18821:56;18919:16;;18913:23;18909:32;;18893:14;;;18886:56;18984:16;;18978:23;18974:32;18958:14;;;18951:56;20022:3;20007:19;;19131:12;;-1:-1:-1;;;;;19127:21:118;;;20651:3;20636:19;;19115:34;19202:4;19191:16;;19185:23;19181:32;;19165:14;;;19158:56;19267:4;19256:16;;19250:23;19246:32;;19230:14;;;19223:56;19332:4;19321:16;;19315:23;19340:6;19311:36;19295:14;;;19288:60;19394:4;19383:16;;19377:23;19419:8;19459:21;;;19443:14;;;19436:45;19095:3;19523:16;;19517:23;19513:32;19497:14;;;19490:56;19599:4;19588:16;;19582:23;19578:32;19562:14;;;19555:56;20604:52;19622:1040;;;;;;;:::o;20667:1478::-;20935:4;20964:2;21004;20993:9;20989:18;21034:2;21023:9;21016:21;21057:6;21092;21086:13;21123:6;21115;21108:22;21161:3;21150:9;21146:19;21139:26;;21224:3;21214:6;21211:1;21207:14;21196:9;21192:30;21188:40;21174:54;;21247:4;21286:2;21278:6;21274:15;21307:1;21317:656;21331:6;21328:1;21325:13;21317:656;;;21396:22;;;-1:-1:-1;;21392:37:118;21380:50;;21453:13;;21498:9;;-1:-1:-1;;;;;21494:35:118;21479:51;;21569:11;;;21563:18;21594:46;21563:18;21594:46;:::i;:::-;21660:15;;;21653:37;21713:4;21758:11;;;21752:18;21790:15;;;21783:27;;;21833:60;21877:15;;;21752:18;21833:60;:::i;:::-;21823:70;-1:-1:-1;;21951:12:118;;;;21916:15;;;;21353:1;21346:9;21317:656;;;-1:-1:-1;;;;;;;305:31:118;;22009:18;;;293:44;-1:-1:-1;;22066:22:118;;;22059:4;22044:20;;22037:52;22106:33;22070:6;22124;22106:33;:::i;22150:429::-;22255:6;22263;22271;22279;22287;22340:3;22328:9;22319:7;22315:23;22311:33;22308:53;;;22357:1;22354;22347:12;22308:53;-1:-1:-1;;22380:16:118;;22436:2;22421:18;;22415:25;22480:2;22465:18;;22459:25;22524:2;22509:18;;22503:25;22568:3;22553:19;;;22547:26;22380:16;;22415:25;;-1:-1:-1;22459:25:118;22503;-1:-1:-1;22547:26:118;;-1:-1:-1;22150:429:118;-1:-1:-1;22150:429:118:o;22584:509::-;22791:2;22780:9;22773:21;22836:6;22830:13;22825:2;22814:9;22810:18;22803:41;22754:4;22891;22883:6;22879:17;22873:24;22933:2;22928;22917:9;22913:18;22906:30;22953:63;23011:3;23000:9;22996:19;22982:12;22953:63;:::i;:::-;22945:71;;;23083:1;23079;23074:3;23070:11;23066:19;23058:6;23054:32;23047:4;23036:9;23032:20;23025:62;22584:509;;;;;:::o;23098:315::-;23273:2;23262:9;23255:21;23236:4;23293:45;23334:2;23323:9;23319:18;23311:6;23293:45;:::i;:::-;23285:53;;23403:1;23399;23394:3;23390:11;23386:19;23378:6;23374:32;23369:2;23358:9;23354:18;23347:60;23098:315;;;;;:::o;23756:345::-;-1:-1:-1;;;;;23976:32:118;;;;23958:51;;24040:2;24025:18;;24018:34;;;;24083:2;24068:18;;24061:34;23946:2;23931:18;;23756:345::o;25428:416::-;-1:-1:-1;;;;;25669:15:118;;;25651:34;;25721:15;;25716:2;25701:18;;25694:43;25773:2;25768;25753:18;;25746:30;;;25594:4;;25793:45;;25819:18;;25811:6;25793:45;:::i;26290:433::-;-1:-1:-1;;;;;26520:32:118;;;;26502:51;;26589:2;26584;26569:18;;26562:30;;;26628:2;26608:18;;;26601:30;-1:-1:-1;;;26662:2:118;26647:18;;26640:41;26713:3;26698:19;;26290:433::o;45553:709::-;45618:5;45671:3;45664:4;45656:6;45652:17;45648:27;45638:55;;45689:1;45686;45679:12;45638:55;45718:6;45712:13;45744:4;45767:18;45763:2;45760:26;45757:52;;;45789:18;;:::i;:::-;45835:2;45832:1;45828:10;45858:28;45882:2;45878;45874:11;45858:28;:::i;:::-;45920:15;;;45990;;;45986:24;;;45951:12;;;;46022:15;;;46019:35;;;46050:1;46047;46040:12;46019:35;46086:2;46078:6;46074:15;46063:26;;46098:135;46114:6;46109:3;46106:15;46098:135;;;46180:10;;46168:23;;46131:12;;;;46211;;;;46098:135;;46267:679;46362:6;46415:2;46403:9;46394:7;46390:23;46386:32;46383:52;;;46431:1;46428;46421:12;46383:52;46464:9;46458:16;46493:18;46534:2;46526:6;46523:14;46520:34;;;46550:1;46547;46540:12;46520:34;46573:22;;;;46629:4;46611:16;;;46607:27;46604:47;;;46647:1;46644;46637:12;46604:47;46673:22;;:::i;:::-;46724:2;46718:9;46711:5;46704:24;46767:2;46763;46759:11;46753:18;46796:2;46786:8;46783:16;46780:36;;;46812:1;46809;46802:12;46780:36;46848:67;46907:7;46896:8;46892:2;46888:17;46848:67;:::i;:::-;46843:2;46832:14;;46825:91;-1:-1:-1;46836:5:118;46267:679;-1:-1:-1;;;;;46267:679:118:o;46951:483::-;47210:3;47199:9;47192:22;47173:4;47231:57;47283:3;47272:9;47268:19;47260:6;47231:57;:::i;:::-;47336:4;47324:17;;;;47319:2;47304:18;;47297:45;-1:-1:-1;47373:2:118;47358:18;;47351:34;;;;47416:2;47401:18;;;47394:34;47223:65;46951:483;-1:-1:-1;46951:483:118:o;47439:567::-;47559:6;47567;47575;47583;47636:3;47624:9;47615:7;47611:23;47607:33;47604:53;;;47653:1;47650;47643:12;47604:53;47686:9;47680:16;47719:18;47711:6;47708:30;47705:50;;;47751:1;47748;47741:12;47705:50;47774:72;47838:7;47829:6;47818:9;47814:22;47774:72;:::i;:::-;47764:82;;;47865:47;47908:2;47897:9;47893:18;47865:47;:::i;:::-;47952:2;47937:18;;47931:25;47996:2;47981:18;;;47975:25;47439:567;;47855:57;;-1:-1:-1;47439:567:118;-1:-1:-1;;;47439:567:118:o;49019:297::-;49137:12;;49184:4;49173:16;;;49167:23;;49137:12;49202:16;;49199:111;;;-1:-1:-1;;49276:4:118;49272:17;;;;49269:1;49265:25;49261:38;49250:50;;49019:297;-1:-1:-1;49019:297:118:o;52088:610::-;52334:13;;52277:3;;52308;;52387:4;52414:15;;;52277:3;52457:175;52471:6;52468:1;52465:13;52457:175;;;52534:13;;52520:28;;52570:14;;;;52607:15;;;;52493:1;52486:9;52457:175;;;-1:-1:-1;;52641:21:118;;;-1:-1:-1;52678:14:118;;;;;-1:-1:-1;;;52088:610:118:o;52703:556::-;52905:2;52887:21;;;52944:3;52924:18;;;52917:31;52984:34;52979:2;52964:18;;52957:62;53055:34;53050:2;53035:18;;53028:62;53127:34;53121:3;53106:19;;53099:63;-1:-1:-1;;;53193:3:118;53178:19;;53171:46;53249:3;53234:19;;52703:556::o;54029:614::-;54158:6;54166;54219:2;54207:9;54198:7;54194:23;54190:32;54187:52;;;54235:1;54232;54225:12;54187:52;54268:9;54262:16;54297:18;54338:2;54330:6;54327:14;54324:34;;;54354:1;54351;54344:12;54324:34;54377:72;54441:7;54432:6;54421:9;54417:22;54377:72;:::i;:::-;54367:82;;54495:2;54484:9;54480:18;54474:25;54458:41;;54524:2;54514:8;54511:16;54508:36;;;54540:1;54537;54530:12;54508:36;;54563:74;54629:7;54618:8;54607:9;54603:24;54563:74;:::i;:::-;54553:84;;;54029:614;;;;;:::o;54648:442::-;-1:-1:-1;;;;;54895:32:118;;;;54877:51;;-1:-1:-1;;;;;;54964:33:118;;;;54959:2;54944:18;;54937:61;55029:2;55014:18;;55007:34;55072:2;55057:18;;55050:34;54864:3;54849:19;;54648:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_chargeOZLfee_distributeFees()": "847f6715",
    "test_chargeOZLfee_noFeesToDistribute()": "51fd9af9",
    "test_claim_OZL()": "13220c2e",
    "test_exchangeRate_with_circulatingSupply()": "39349400",
    "test_exchange_rate_equilibrium()": "b244bf46",
    "test_new_recicling_campaing()": "19fa6141",
    "test_overflow_rewardPerToken()": "e71fdf6d",
    "test_recicled_supply()": "0e4ae323",
    "test_redeem_in_WETH_ETH()": "e5bb498e",
    "test_redeem_in_WETH_paused_pool()": "d7a83436",
    "test_redeem_in_rETH()": "b56231cb",
    "test_redeem_in_stable()": "0a1ce092",
    "test_redeem_permit_in_stable()": "49bbcc4b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_chargeOZLfee_distributeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_chargeOZLfee_noFeesToDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_claim_OZL\",\"outputs\":[{\"internalType\":\"contract ozIToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_exchangeRate_with_circulatingSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_exchange_rate_equilibrium\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_new_recicling_campaing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_overflow_rewardPerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_recicled_supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_redeem_in_WETH_ETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_redeem_in_WETH_paused_pool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_redeem_in_rETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_redeem_in_stable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_redeem_permit_in_stable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setUp()\":{\"notice\":\"FUNCTIONS *\"},\"test_overflow_rewardPerToken()\":{\"notice\":\"Tests that rewardPerToken() in OZLrewards doesn't overflow due to low totalSupply of ozTokens, during the beginning of the ozToken contracts' lifeciles, which is used in its final division.\"},\"test_redeem_in_WETH_ETH()\":{\"notice\":\"This tests, and redeem_in_stable requires such a hight slippage for WETH  because it's reflecting the incresae in the rate of rETH_ETH done by the mock call. The rETH-WETH Balancer pool doesn't recognize this increase so it's outputting a value based on the actual rETH-WETH rate, instead of the mocked one.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/OZLtoken.t.sol\":\"OZLtokenTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x6e74dad6165db150868af20af9144e21efcdc18b6d3340e7311dfdcdefd8b1ad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f4c8aa46ed564482e4863f8d2b56220a826ae4e196c30a696a98b4d54ce6ce43\",\"dweb:/ipfs/QmdnCdzHVnHZYLFwKnyVatJ6Uw8DcAH3Npy5gf3mXf1vvn\"]},\"contracts/Diamond.sol\":{\"keccak256\":\"0x67a461e00a275fc809f4acdca15faed81204d08e11b455df489c7087b5d1f59c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18e9ae1ec7ed300fd9c4dc6d7de8086a0f0f435549adf808cd0da8df9a460fef\",\"dweb:/ipfs/QmRdXCwZeU7Cw5srxJdTVKHUt7vrb6atyghJ11gBQLwYFv\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x97bd31632399bb8ab6356f652bab1d9337c1da0721720cc8883663ba20fd2c54\",\"urls\":[\"bzz-raw://e664bf17a856bc7c579232d7a3e6d38b3b70e3a5c8eb198bff59d26c9837bb26\",\"dweb:/ipfs/QmfSRDySGNP5hXwXfVbjiJAftKmmz67kbVocRTCN2cuntY\"]},\"contracts/Modifiers.sol\":{\"keccak256\":\"0x79736d0dd55e54aa1190a0b368413841ab70da8d9cc657cf23b953f68246af4e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a084b61e467b1c82dea22e228fcee291df2f21d054c0afa1f821af8584642d75\",\"dweb:/ipfs/QmbdYiVtfntEobAgpZVCLhBVxdu6fq1Zu9msJx3aWgzWZc\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0x8679a6073e2eb5956153fb61a24019af952b1991f4f93cc303fc06d1827c6937\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c590ed3f2fe612f2e88a13a387d7d1bfebdf6298e7013e5bb8e386424fa9c32c\",\"dweb:/ipfs/QmSDVygVG2w49VoevdEbWi2AJMvquXncwzguiSzKXMUyrt\"]},\"contracts/OZLrewards.sol\":{\"keccak256\":\"0x6cd0f25dcd6382e626f301fee7bb2b0ffb59bb8a898dc47447d605f601366fc9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b0b6d39d9944c19df3047d744616617dc58422bbb251ddd448ce9dd646fc6a41\",\"dweb:/ipfs/Qmc4nvaJrnb7hPgZxr9YS8t5rvknkTTjNkWRuaqL56zgPV\"]},\"contracts/ProxyAdmin.sol\":{\"keccak256\":\"0x781122e88abd24323fc61284da4556a49b2f60499c8cbb59ab004aab2359b7a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c2eb7850828c945f071998c9d7470d055c981e12107760a8848dbbe18d98061\",\"dweb:/ipfs/QmULcv15wLYtCo2s4K4oxnSpejTrjxa5osb7Jvdr2yKTK9\"]},\"contracts/facets/DiamondCutFacet.sol\":{\"keccak256\":\"0x862aadba5321ffaf88456deadba8df4ec681e4a93ce3dc44d6c0c0b3b68a8230\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b0dd3cf2631d2b1d070d8c5b24fc087853076b895d0c207386545463414efc7\",\"dweb:/ipfs/QmQuA6PvDjbHufjtDjrcuuxj8HBaABYyaRwD2Q9HyCWTV8\"]},\"contracts/facets/DiamondLoupeFacet.sol\":{\"keccak256\":\"0xb52ab6e89b35b7e6d3dc64c3e3d1cbb4e7f5014436b61f663077fd04ff53b29f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fda80ae80dd6b091ed70f9a3a862c9dcdee3ae4870371020aec34c4e2a96157\",\"dweb:/ipfs/QmYVUDydwqwmxutsnk6eFVJwPr7fuDvZZc1TLQ8azuu44c\"]},\"contracts/facets/MirrorExchange.sol\":{\"keccak256\":\"0x41851ef6e74a322cf2e171f88427404c160ebfa49e423e83c8de26acf69b782a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b2edd55bf6afb8adfa64377290dc8886a32f51f7d3f5dc21c8b8c160ca43b3c5\",\"dweb:/ipfs/QmZSpfJUjKrLxmavoKgw3KKXsDokkupy6Fh7HVtWcdKUod\"]},\"contracts/facets/OZLadmin.sol\":{\"keccak256\":\"0x8a2ebd9edaade56720ee621906191f2d822dbad326ddb0432ce9a76789d5c149\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dc3945a94f3dedede212c228db983a3302088a429ad4d39a083e5ee0d6f9b5f9\",\"dweb:/ipfs/QmeR3WeYXKKFMC7ffm9qzdH1yaH64Zfz9jykEHj6HRyWaG\"]},\"contracts/facets/OwnershipFacet.sol\":{\"keccak256\":\"0x4bf95b0eaa4f7fab2659ffb358e78b5f3ea4b7acf89890e165370ad87cf5705d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fca6c90a78b8a9d5cba2233a2e3728b5b9d0e03d030cbb4a8b4a3f8c7c5cdf13\",\"dweb:/ipfs/QmZtKqKCAGzAJeEmq3E3WH9AdAsyPixrN3GZ9cr4MNWLo7\"]},\"contracts/facets/Pools.sol\":{\"keccak256\":\"0x8eeb581afd6da050a8aa80eaf9756982e16263cf0147f57ee0501702b154294a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f6c69c3cf8c5b1bfa6d904176e29a26724a13d32a17aa3e4bb84a777b8642a7\",\"dweb:/ipfs/QmX6Q2i7pMtabrsDdjYMYiKVzQ7vbppTNZqY7EqTWefSSy\"]},\"contracts/facets/ozBeacon.sol\":{\"keccak256\":\"0x37d63f70f811baaffbbc9f063b1cdde346a8ff96853f9e0a48ec76d38dd4fea7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://462b1da119f74b9d061d420fef34056cd468ddff5226bfe3c94997a38fb5e438\",\"dweb:/ipfs/QmUq1xRCuQXbmNSzzfSv4o85bHvuAvaTY5Ej82whMqVvVe\"]},\"contracts/facets/ozCut.sol\":{\"keccak256\":\"0x5971a2392869b2b0b1dfd1fb1afc710de306aa4abe2c089f7547726eab1c9379\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a2f818f5c49e4a35a93af9fb66b5b41ad6ce903871ae29a304ca1d04516b20c7\",\"dweb:/ipfs/Qmdxaqv96Q3XMKKhvVYhMq5CUjHjcKjjMpM3ehgFn7xx25\"]},\"contracts/facets/ozEngine.sol\":{\"keccak256\":\"0x17e9eb02014ee21c02bb440aaf8ae93fa7fc9cc93369c1e2dbe53c5a103d9207\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://71dcd21c11cb1ec542f74d45ade42b9bf03435309952fb73652734618977ff92\",\"dweb:/ipfs/QmRSjjMRr2LHqctaumEa9LLz7krKvtxvYTocV6UCZDSkUU\"]},\"contracts/facets/ozLoupe.sol\":{\"keccak256\":\"0x4235a2acc27d1b03b16656932376dbbf2c9817911a8e974a8c681bf666bc5dcd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f96c9d2388134502cefdc95b7d0fc186f6345ccc22963f1bb177b94b44ad9ae9\",\"dweb:/ipfs/QmdqcL8yVo9AXXJNrg89SdHocFrSGNZ2YiJR1iQ1UE5UH7\"]},\"contracts/facets/ozOracle.sol\":{\"keccak256\":\"0x8a33d00a9a1a109f0656724a606b0668a7955668ad17359627777d9d156e87b2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78f88e686ea2ca1b23051f1c750a365ed2ca6aeadf1c10e110d8a5a58b195ef1\",\"dweb:/ipfs/QmQd2HaNwUbyNwZribuGaAFzFsBELyZnwbbr1gZiqpQZF5\"]},\"contracts/facets/ozTokenFactory.sol\":{\"keccak256\":\"0xebde758d496a76a8e9927e72daf6db145ebf7eceb04544c952b2df4ff193d652\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5c4e0440854e29c6b1aeadeb258a4d6b23fa78d796f1f3620c0b2ab1ced2286c\",\"dweb:/ipfs/QmTqEQxyuDUeWNc5ziynRVQsXFEuSdFTjwcHYcZb55xhRX\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45\",\"dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361\",\"dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851\",\"dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N\"]},\"contracts/interfaces/IOZLrewards.sol\":{\"keccak256\":\"0x0c630e69a7fcd25d28c739abfac2e55efbdf4627af91ad6cb1b26b8f6a7a83db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e3efdeed8f8c3a35e4f92d8cdf0e958cec40d8ddb725dc1306c9cbb1f86f63bf\",\"dweb:/ipfs/QmfSQyFz9uTVHYCX5E6gtxCJSVRuZ1wQn8i1fhmbtnNsEC\"]},\"contracts/interfaces/IRocketPool.sol\":{\"keccak256\":\"0x92d82fb3b430526670ba62f780fc1cd38534b1a7c42a4a49baf681ad8bcecb0f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bfd908418b6fa18d07638e9fc663e80caffcdaa858bb15ae4035e414ba02aa46\",\"dweb:/ipfs/Qmbuc6VmGJpky9LsvA2FHma2PHUEU3jKrg58FgD6bci2ww\"]},\"contracts/interfaces/IUsingTellor.sol\":{\"keccak256\":\"0x280a52f68b296f427e3b959a3a88ab58d085b22c4b831b38b5f0e0520d0c2d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b84159e9cc5b9fbf72cccb0f5941eab559cee223f225d5c588ea9eaf0f44e32\",\"dweb:/ipfs/QmTCcYdXPuCMKs89x2Y4CwT4bMBqrgMEtoobzoWgoWhwUW\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387\",\"dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0xb46117b7383eb7aa434982b24112e32bc83e634e942c4c62006bc13fbbf64bb8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81529f1d3927ac7c434a4a01813d12f86fd553a6b86f68a31c506ae77872c2ab\",\"dweb:/ipfs/QmZXnxN4Z9Qhc6XXLuvo2Waz92gfgXbDuJT2tF2JTdStRt\"]},\"contracts/interfaces/ozIToken.sol\":{\"keccak256\":\"0x0f7cac9c355ccc937669cfbe584abc544be93352e68bc44955b705f5746f7aec\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f465cd05490b895d49608ee792ae04a3387603bfc67055a1f247f0b071f79e7\",\"dweb:/ipfs/QmRyEMjStw6ovHkdDQPxuZCQeV2A58LZd6M3BNmcRDtR3R\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0x974cbc84fd5c8c34f0338e7094de5ed1a48720723141238dd265d30a371cbf6f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0b5626366e095786095e4fdbd1e7ff9495b5e13089c835654a0c16fc6559493d\",\"dweb:/ipfs/QmRC6gy83ztURwGMf8HzzrpEFqFPkEjfjZE5FAQgAaMQ2j\"]},\"contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x32804b629ea56692e6458dcaf1a4998c62ef289b071fe2690be171b25926f495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e39294f81c203fbf433ad126c3fddaaedd98df9561cf3155057bd4d8519727\",\"dweb:/ipfs/QmTh5bxtsnWEq3YshbU428zifKdWwiaWvJW19DRNmAnweb\"]},\"contracts/libraries/oracle/FullMath.sol\":{\"keccak256\":\"0xc1e4900f13db20a90009f4fc2942826207b487afe740ed6cad03fb106e99cce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8265342a25cb21d212d0649497ee995572c45e6a87822e326a71713dd76b26bd\",\"dweb:/ipfs/QmVpA8rLdR4jqBr4uc1L8tcdFFy7taQUzcSb1FKSD5sxYe\"]},\"contracts/libraries/oracle/OracleLibrary.sol\":{\"keccak256\":\"0x6e6dafbced5ec3929356a2a01e57a2e448d8ed9cd30fd704f12b7297e33cf6f2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5988358ee41c5954185144d3076365a98cdda8d01de72f5444d9f994f875c752\",\"dweb:/ipfs/QmajNZiTG2binTq7ayfrq2K84yzv3QDQtCe2LYawvi6BRK\"]},\"contracts/libraries/oracle/TickMath.sol\":{\"keccak256\":\"0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97\",\"dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2\"]},\"contracts/ozToken.sol\":{\"keccak256\":\"0x581c42a964bafa37f3e29fd46130c0bedc7d591158b0fdcd2c07fd5d75c4ad29\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6d91258111a049f353784db9e41903a975dba131169848a1c6682f62fd8d9a51\",\"dweb:/ipfs/QmeMUtHckT7raknDE5bhGv2y2maPEe2Thbu9G2basa7tcN\"]},\"contracts/ozTokenProxy.sol\":{\"keccak256\":\"0x6dc3f80fd62c7404b63bf89249190c6a31443711bd268e380185af9536ba7305\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8d8324406fe3970a76cc78d4d1ccd3581560a90f9cb26665b56fc4c8ea07ef04\",\"dweb:/ipfs/Qmb9CZx7rprP7S8PVaouj2sgMkR7AdVdd4fRG2KfmvYHgT\"]},\"contracts/upgradeInitializers/DiamondInit.sol\":{\"keccak256\":\"0x2054deefcb1c43b06310eedfdd2951955d8b064d863b07151c55115102a68a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13f5005c45c2091bf7f7ca272af81dff70cfdbd6d927e2c1a8ebfa2ff78a5148\",\"dweb:/ipfs/QmexUeerrp2pXVvjX23WoWfg4m31NWeqyvpWGCqf3E5185\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5\",\"dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10\",\"dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0x2e991b91bca58c198c3ecd905d281c5e9ae230f4f34f14835294d5fa2d478991\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbb3c9fba2ef72dd7a9226296cddcb764bef17d4d5b522c94818a8ee9a390a6\",\"dweb:/ipfs/QmdFhEFbcmzFba6hMN1xFakCzUCsPuRwtEvU2GTKQTxkae\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0x8d6afb994e123d1c294650474040d193ef102cc5cd508e3bf554c20aec015c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://912563779e1c4152c10ebc591c39cafb24e6fbd3901c023b88a7bffc17bfa5e1\",\"dweb:/ipfs/QmZ7oqbXrW64ank59zdgdVphMQ331DRq7vRvxG2c8CSJbx\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x6015b987805f2656d6cbd72b8e0d6ce36222fdfd06efc652266681cecd4298d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f136867db2688afbcf8ca5e75bc239271f365b01519d91255bb6487170de9d87\",\"dweb:/ipfs/QmUnjHmBxD4noKf9KiRsrEq8MD3GzPRf4RWteUMKA3k4h1\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/AppStorageTests.sol\":{\"keccak256\":\"0xefa291dbc6f73a177c0fb619e5becc3c31c11ee60332e42a90cc62dbf0d88745\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cc3bb7e209d397813c0158e86cf20e053b108cec2f42c8dfc2e0ac2f469ce24b\",\"dweb:/ipfs/QmVajywgVYbL4w1UCx2V8LBhaRRTmKQDDUmvhF9ffc6RnX\"]},\"test/foundry/BaseMethods.sol\":{\"keccak256\":\"0xea37835dd6ef5c559cd248d6e5ee0c1bcaa34dd64ae0b345c9e4995c8478c836\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f8578941cfc186155d2fc3193acc5c533f5f4b8b837567b641838f721b1701e1\",\"dweb:/ipfs/QmWmwCqifksr7DbREZTtJjhUn7faNTi22pHCkUkqaXApDw\"]},\"test/foundry/HelpersLib.sol\":{\"keccak256\":\"0xb7974fd4c0214e7a05f037abcda088cc136144182dd9c92a9f9a2ce26c7de457\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://123705a5792e5675152035b64a1266c91d45fce0dd5a5d50ef5660f58568488f\",\"dweb:/ipfs/QmeDLA5zUsTvJhthSCCCQnYXUJXaFWv19T7bHyu9nbXeH6\"]},\"test/foundry/OZLtoken.t.sol\":{\"keccak256\":\"0xd7cadc809842361e62debb04babd0d95d43bfa1f5b95314d96be69754d034bce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00f0245a6309aa8d854574776ee32b73566040d12228da42855674f7eb30e919\",\"dweb:/ipfs/QmSGi8myrJ2WmxaQP8qFaQ16oEvdrsojGsGwBfhY4W27uj\"]},\"test/foundry/Setup.sol\":{\"keccak256\":\"0x7f51893c230699a7cd86fd50c0d8564b399bcbdd72453cbba93361fdd940421a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://af11a3eb38bde9e3b2c07e402ca913d80df37f104390e32ba8f9eb0ba8ddd3e9\",\"dweb:/ipfs/QmVz1mqKceTESnUAPea9FnnoiTj2W9UVTB4K2rYxsTx3Xe\"]},\"test/foundry/TestMethods.sol\":{\"keccak256\":\"0x48d11f5b5bedb12e92eca91d60b946fdfdb283748fac54beada385fe81f8201b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9a48737858e3680cd11c6d12182826d7b561b82e324c42657db0fd237d67727d\",\"dweb:/ipfs/QmXM8L5CXpeLxfHupLFmxDFTJp1ufnYwDWaSA6m4zZuYJA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_chargeOZLfee_distributeFees"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_chargeOZLfee_noFeesToDistribute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_claim_OZL",
          "outputs": [
            {
              "internalType": "contract ozIToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_exchangeRate_with_circulatingSupply"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_exchange_rate_equilibrium"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_new_recicling_campaing"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_overflow_rewardPerToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_recicled_supply"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_redeem_in_WETH_ETH"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_redeem_in_WETH_paused_pool"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_redeem_in_rETH"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_redeem_in_stable"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_redeem_permit_in_stable"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setUp()": {
            "notice": "FUNCTIONS *"
          },
          "test_overflow_rewardPerToken()": {
            "notice": "Tests that rewardPerToken() in OZLrewards doesn't overflow due to low totalSupply of ozTokens, during the beginning of the ozToken contracts' lifeciles, which is used in its final division."
          },
          "test_redeem_in_WETH_ETH()": {
            "notice": "This tests, and redeem_in_stable requires such a hight slippage for WETH  because it's reflecting the incresae in the rate of rETH_ETH done by the mock call. The rETH-WETH Balancer pool doesn't recognize this increase so it's outputting a value based on the actual rETH-WETH rate, instead of the mocked one."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/OZLtoken.t.sol": "OZLtokenTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x6e74dad6165db150868af20af9144e21efcdc18b6d3340e7311dfdcdefd8b1ad",
        "urls": [
          "bzz-raw://f4c8aa46ed564482e4863f8d2b56220a826ae4e196c30a696a98b4d54ce6ce43",
          "dweb:/ipfs/QmdnCdzHVnHZYLFwKnyVatJ6Uw8DcAH3Npy5gf3mXf1vvn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Diamond.sol": {
        "keccak256": "0x67a461e00a275fc809f4acdca15faed81204d08e11b455df489c7087b5d1f59c",
        "urls": [
          "bzz-raw://18e9ae1ec7ed300fd9c4dc6d7de8086a0f0f435549adf808cd0da8df9a460fef",
          "dweb:/ipfs/QmRdXCwZeU7Cw5srxJdTVKHUt7vrb6atyghJ11gBQLwYFv"
        ],
        "license": "MIT"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x97bd31632399bb8ab6356f652bab1d9337c1da0721720cc8883663ba20fd2c54",
        "urls": [
          "bzz-raw://e664bf17a856bc7c579232d7a3e6d38b3b70e3a5c8eb198bff59d26c9837bb26",
          "dweb:/ipfs/QmfSRDySGNP5hXwXfVbjiJAftKmmz67kbVocRTCN2cuntY"
        ],
        "license": null
      },
      "contracts/Modifiers.sol": {
        "keccak256": "0x79736d0dd55e54aa1190a0b368413841ab70da8d9cc657cf23b953f68246af4e",
        "urls": [
          "bzz-raw://a084b61e467b1c82dea22e228fcee291df2f21d054c0afa1f821af8584642d75",
          "dweb:/ipfs/QmbdYiVtfntEobAgpZVCLhBVxdu6fq1Zu9msJx3aWgzWZc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/OZL.sol": {
        "keccak256": "0x8679a6073e2eb5956153fb61a24019af952b1991f4f93cc303fc06d1827c6937",
        "urls": [
          "bzz-raw://c590ed3f2fe612f2e88a13a387d7d1bfebdf6298e7013e5bb8e386424fa9c32c",
          "dweb:/ipfs/QmSDVygVG2w49VoevdEbWi2AJMvquXncwzguiSzKXMUyrt"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/OZLrewards.sol": {
        "keccak256": "0x6cd0f25dcd6382e626f301fee7bb2b0ffb59bb8a898dc47447d605f601366fc9",
        "urls": [
          "bzz-raw://b0b6d39d9944c19df3047d744616617dc58422bbb251ddd448ce9dd646fc6a41",
          "dweb:/ipfs/Qmc4nvaJrnb7hPgZxr9YS8t5rvknkTTjNkWRuaqL56zgPV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/ProxyAdmin.sol": {
        "keccak256": "0x781122e88abd24323fc61284da4556a49b2f60499c8cbb59ab004aab2359b7a7",
        "urls": [
          "bzz-raw://4c2eb7850828c945f071998c9d7470d055c981e12107760a8848dbbe18d98061",
          "dweb:/ipfs/QmULcv15wLYtCo2s4K4oxnSpejTrjxa5osb7Jvdr2yKTK9"
        ],
        "license": "MIT"
      },
      "contracts/facets/DiamondCutFacet.sol": {
        "keccak256": "0x862aadba5321ffaf88456deadba8df4ec681e4a93ce3dc44d6c0c0b3b68a8230",
        "urls": [
          "bzz-raw://6b0dd3cf2631d2b1d070d8c5b24fc087853076b895d0c207386545463414efc7",
          "dweb:/ipfs/QmQuA6PvDjbHufjtDjrcuuxj8HBaABYyaRwD2Q9HyCWTV8"
        ],
        "license": "MIT"
      },
      "contracts/facets/DiamondLoupeFacet.sol": {
        "keccak256": "0xb52ab6e89b35b7e6d3dc64c3e3d1cbb4e7f5014436b61f663077fd04ff53b29f",
        "urls": [
          "bzz-raw://7fda80ae80dd6b091ed70f9a3a862c9dcdee3ae4870371020aec34c4e2a96157",
          "dweb:/ipfs/QmYVUDydwqwmxutsnk6eFVJwPr7fuDvZZc1TLQ8azuu44c"
        ],
        "license": "MIT"
      },
      "contracts/facets/MirrorExchange.sol": {
        "keccak256": "0x41851ef6e74a322cf2e171f88427404c160ebfa49e423e83c8de26acf69b782a",
        "urls": [
          "bzz-raw://b2edd55bf6afb8adfa64377290dc8886a32f51f7d3f5dc21c8b8c160ca43b3c5",
          "dweb:/ipfs/QmZSpfJUjKrLxmavoKgw3KKXsDokkupy6Fh7HVtWcdKUod"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/OZLadmin.sol": {
        "keccak256": "0x8a2ebd9edaade56720ee621906191f2d822dbad326ddb0432ce9a76789d5c149",
        "urls": [
          "bzz-raw://dc3945a94f3dedede212c228db983a3302088a429ad4d39a083e5ee0d6f9b5f9",
          "dweb:/ipfs/QmeR3WeYXKKFMC7ffm9qzdH1yaH64Zfz9jykEHj6HRyWaG"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/OwnershipFacet.sol": {
        "keccak256": "0x4bf95b0eaa4f7fab2659ffb358e78b5f3ea4b7acf89890e165370ad87cf5705d",
        "urls": [
          "bzz-raw://fca6c90a78b8a9d5cba2233a2e3728b5b9d0e03d030cbb4a8b4a3f8c7c5cdf13",
          "dweb:/ipfs/QmZtKqKCAGzAJeEmq3E3WH9AdAsyPixrN3GZ9cr4MNWLo7"
        ],
        "license": "MIT"
      },
      "contracts/facets/Pools.sol": {
        "keccak256": "0x8eeb581afd6da050a8aa80eaf9756982e16263cf0147f57ee0501702b154294a",
        "urls": [
          "bzz-raw://9f6c69c3cf8c5b1bfa6d904176e29a26724a13d32a17aa3e4bb84a777b8642a7",
          "dweb:/ipfs/QmX6Q2i7pMtabrsDdjYMYiKVzQ7vbppTNZqY7EqTWefSSy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozBeacon.sol": {
        "keccak256": "0x37d63f70f811baaffbbc9f063b1cdde346a8ff96853f9e0a48ec76d38dd4fea7",
        "urls": [
          "bzz-raw://462b1da119f74b9d061d420fef34056cd468ddff5226bfe3c94997a38fb5e438",
          "dweb:/ipfs/QmUq1xRCuQXbmNSzzfSv4o85bHvuAvaTY5Ej82whMqVvVe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozCut.sol": {
        "keccak256": "0x5971a2392869b2b0b1dfd1fb1afc710de306aa4abe2c089f7547726eab1c9379",
        "urls": [
          "bzz-raw://a2f818f5c49e4a35a93af9fb66b5b41ad6ce903871ae29a304ca1d04516b20c7",
          "dweb:/ipfs/Qmdxaqv96Q3XMKKhvVYhMq5CUjHjcKjjMpM3ehgFn7xx25"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozEngine.sol": {
        "keccak256": "0x17e9eb02014ee21c02bb440aaf8ae93fa7fc9cc93369c1e2dbe53c5a103d9207",
        "urls": [
          "bzz-raw://71dcd21c11cb1ec542f74d45ade42b9bf03435309952fb73652734618977ff92",
          "dweb:/ipfs/QmRSjjMRr2LHqctaumEa9LLz7krKvtxvYTocV6UCZDSkUU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozLoupe.sol": {
        "keccak256": "0x4235a2acc27d1b03b16656932376dbbf2c9817911a8e974a8c681bf666bc5dcd",
        "urls": [
          "bzz-raw://f96c9d2388134502cefdc95b7d0fc186f6345ccc22963f1bb177b94b44ad9ae9",
          "dweb:/ipfs/QmdqcL8yVo9AXXJNrg89SdHocFrSGNZ2YiJR1iQ1UE5UH7"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozOracle.sol": {
        "keccak256": "0x8a33d00a9a1a109f0656724a606b0668a7955668ad17359627777d9d156e87b2",
        "urls": [
          "bzz-raw://78f88e686ea2ca1b23051f1c750a365ed2ca6aeadf1c10e110d8a5a58b195ef1",
          "dweb:/ipfs/QmQd2HaNwUbyNwZribuGaAFzFsBELyZnwbbr1gZiqpQZF5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozTokenFactory.sol": {
        "keccak256": "0xebde758d496a76a8e9927e72daf6db145ebf7eceb04544c952b2df4ff193d652",
        "urls": [
          "bzz-raw://5c4e0440854e29c6b1aeadeb258a4d6b23fa78d796f1f3620c0b2ab1ced2286c",
          "dweb:/ipfs/QmTqEQxyuDUeWNc5ziynRVQsXFEuSdFTjwcHYcZb55xhRX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7",
        "urls": [
          "bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45",
          "dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC173.sol": {
        "keccak256": "0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b",
        "urls": [
          "bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361",
          "dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456",
        "urls": [
          "bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851",
          "dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IOZLrewards.sol": {
        "keccak256": "0x0c630e69a7fcd25d28c739abfac2e55efbdf4627af91ad6cb1b26b8f6a7a83db",
        "urls": [
          "bzz-raw://e3efdeed8f8c3a35e4f92d8cdf0e958cec40d8ddb725dc1306c9cbb1f86f63bf",
          "dweb:/ipfs/QmfSQyFz9uTVHYCX5E6gtxCJSVRuZ1wQn8i1fhmbtnNsEC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IRocketPool.sol": {
        "keccak256": "0x92d82fb3b430526670ba62f780fc1cd38534b1a7c42a4a49baf681ad8bcecb0f",
        "urls": [
          "bzz-raw://bfd908418b6fa18d07638e9fc663e80caffcdaa858bb15ae4035e414ba02aa46",
          "dweb:/ipfs/Qmbuc6VmGJpky9LsvA2FHma2PHUEU3jKrg58FgD6bci2ww"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IUsingTellor.sol": {
        "keccak256": "0x280a52f68b296f427e3b959a3a88ab58d085b22c4b831b38b5f0e0520d0c2d5e",
        "urls": [
          "bzz-raw://5b84159e9cc5b9fbf72cccb0f5941eab559cee223f225d5c588ea9eaf0f44e32",
          "dweb:/ipfs/QmTCcYdXPuCMKs89x2Y4CwT4bMBqrgMEtoobzoWgoWhwUW"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d",
        "urls": [
          "bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387",
          "dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0xb46117b7383eb7aa434982b24112e32bc83e634e942c4c62006bc13fbbf64bb8",
        "urls": [
          "bzz-raw://81529f1d3927ac7c434a4a01813d12f86fd553a6b86f68a31c506ae77872c2ab",
          "dweb:/ipfs/QmZXnxN4Z9Qhc6XXLuvo2Waz92gfgXbDuJT2tF2JTdStRt"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIToken.sol": {
        "keccak256": "0x0f7cac9c355ccc937669cfbe584abc544be93352e68bc44955b705f5746f7aec",
        "urls": [
          "bzz-raw://3f465cd05490b895d49608ee792ae04a3387603bfc67055a1f247f0b071f79e7",
          "dweb:/ipfs/QmRyEMjStw6ovHkdDQPxuZCQeV2A58LZd6M3BNmcRDtR3R"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0x974cbc84fd5c8c34f0338e7094de5ed1a48720723141238dd265d30a371cbf6f",
        "urls": [
          "bzz-raw://0b5626366e095786095e4fdbd1e7ff9495b5e13089c835654a0c16fc6559493d",
          "dweb:/ipfs/QmRC6gy83ztURwGMf8HzzrpEFqFPkEjfjZE5FAQgAaMQ2j"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x32804b629ea56692e6458dcaf1a4998c62ef289b071fe2690be171b25926f495",
        "urls": [
          "bzz-raw://f0e39294f81c203fbf433ad126c3fddaaedd98df9561cf3155057bd4d8519727",
          "dweb:/ipfs/QmTh5bxtsnWEq3YshbU428zifKdWwiaWvJW19DRNmAnweb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/oracle/FullMath.sol": {
        "keccak256": "0xc1e4900f13db20a90009f4fc2942826207b487afe740ed6cad03fb106e99cce9",
        "urls": [
          "bzz-raw://8265342a25cb21d212d0649497ee995572c45e6a87822e326a71713dd76b26bd",
          "dweb:/ipfs/QmVpA8rLdR4jqBr4uc1L8tcdFFy7taQUzcSb1FKSD5sxYe"
        ],
        "license": "MIT"
      },
      "contracts/libraries/oracle/OracleLibrary.sol": {
        "keccak256": "0x6e6dafbced5ec3929356a2a01e57a2e448d8ed9cd30fd704f12b7297e33cf6f2",
        "urls": [
          "bzz-raw://5988358ee41c5954185144d3076365a98cdda8d01de72f5444d9f994f875c752",
          "dweb:/ipfs/QmajNZiTG2binTq7ayfrq2K84yzv3QDQtCe2LYawvi6BRK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/oracle/TickMath.sol": {
        "keccak256": "0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347",
        "urls": [
          "bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97",
          "dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/ozToken.sol": {
        "keccak256": "0x581c42a964bafa37f3e29fd46130c0bedc7d591158b0fdcd2c07fd5d75c4ad29",
        "urls": [
          "bzz-raw://6d91258111a049f353784db9e41903a975dba131169848a1c6682f62fd8d9a51",
          "dweb:/ipfs/QmeMUtHckT7raknDE5bhGv2y2maPEe2Thbu9G2basa7tcN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/ozTokenProxy.sol": {
        "keccak256": "0x6dc3f80fd62c7404b63bf89249190c6a31443711bd268e380185af9536ba7305",
        "urls": [
          "bzz-raw://8d8324406fe3970a76cc78d4d1ccd3581560a90f9cb26665b56fc4c8ea07ef04",
          "dweb:/ipfs/Qmb9CZx7rprP7S8PVaouj2sgMkR7AdVdd4fRG2KfmvYHgT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/upgradeInitializers/DiamondInit.sol": {
        "keccak256": "0x2054deefcb1c43b06310eedfdd2951955d8b064d863b07151c55115102a68a67",
        "urls": [
          "bzz-raw://13f5005c45c2091bf7f7ca272af81dff70cfdbd6d927e2c1a8ebfa2ff78a5148",
          "dweb:/ipfs/QmexUeerrp2pXVvjX23WoWfg4m31NWeqyvpWGCqf3E5185"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575",
        "urls": [
          "bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5",
          "dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203",
        "urls": [
          "bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10",
          "dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0x2e991b91bca58c198c3ecd905d281c5e9ae230f4f34f14835294d5fa2d478991",
        "urls": [
          "bzz-raw://2cbb3c9fba2ef72dd7a9226296cddcb764bef17d4d5b522c94818a8ee9a390a6",
          "dweb:/ipfs/QmdFhEFbcmzFba6hMN1xFakCzUCsPuRwtEvU2GTKQTxkae"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0x8d6afb994e123d1c294650474040d193ef102cc5cd508e3bf554c20aec015c30",
        "urls": [
          "bzz-raw://912563779e1c4152c10ebc591c39cafb24e6fbd3901c023b88a7bffc17bfa5e1",
          "dweb:/ipfs/QmZ7oqbXrW64ank59zdgdVphMQ331DRq7vRvxG2c8CSJbx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df",
        "urls": [
          "bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b",
          "dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a",
        "urls": [
          "bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70",
          "dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x6015b987805f2656d6cbd72b8e0d6ce36222fdfd06efc652266681cecd4298d7",
        "urls": [
          "bzz-raw://f136867db2688afbcf8ca5e75bc239271f365b01519d91255bb6487170de9d87",
          "dweb:/ipfs/QmUnjHmBxD4noKf9KiRsrEq8MD3GzPRf4RWteUMKA3k4h1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f",
        "urls": [
          "bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852",
          "dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689",
        "urls": [
          "bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017",
          "dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/AppStorageTests.sol": {
        "keccak256": "0xefa291dbc6f73a177c0fb619e5becc3c31c11ee60332e42a90cc62dbf0d88745",
        "urls": [
          "bzz-raw://cc3bb7e209d397813c0158e86cf20e053b108cec2f42c8dfc2e0ac2f469ce24b",
          "dweb:/ipfs/QmVajywgVYbL4w1UCx2V8LBhaRRTmKQDDUmvhF9ffc6RnX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/BaseMethods.sol": {
        "keccak256": "0xea37835dd6ef5c559cd248d6e5ee0c1bcaa34dd64ae0b345c9e4995c8478c836",
        "urls": [
          "bzz-raw://f8578941cfc186155d2fc3193acc5c533f5f4b8b837567b641838f721b1701e1",
          "dweb:/ipfs/QmWmwCqifksr7DbREZTtJjhUn7faNTi22pHCkUkqaXApDw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/HelpersLib.sol": {
        "keccak256": "0xb7974fd4c0214e7a05f037abcda088cc136144182dd9c92a9f9a2ce26c7de457",
        "urls": [
          "bzz-raw://123705a5792e5675152035b64a1266c91d45fce0dd5a5d50ef5660f58568488f",
          "dweb:/ipfs/QmeDLA5zUsTvJhthSCCCQnYXUJXaFWv19T7bHyu9nbXeH6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/OZLtoken.t.sol": {
        "keccak256": "0xd7cadc809842361e62debb04babd0d95d43bfa1f5b95314d96be69754d034bce",
        "urls": [
          "bzz-raw://00f0245a6309aa8d854574776ee32b73566040d12228da42855674f7eb30e919",
          "dweb:/ipfs/QmSGi8myrJ2WmxaQP8qFaQ16oEvdrsojGsGwBfhY4W27uj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/Setup.sol": {
        "keccak256": "0x7f51893c230699a7cd86fd50c0d8564b399bcbdd72453cbba93361fdd940421a",
        "urls": [
          "bzz-raw://af11a3eb38bde9e3b2c07e402ca913d80df37f104390e32ba8f9eb0ba8ddd3e9",
          "dweb:/ipfs/QmVz1mqKceTESnUAPea9FnnoiTj2W9UVTB4K2rYxsTx3Xe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/TestMethods.sol": {
        "keccak256": "0x48d11f5b5bedb12e92eca91d60b946fdfdb283748fac54beada385fe81f8201b",
        "urls": [
          "bzz-raw://9a48737858e3680cd11c6d12182826d7b561b82e324c42657db0fd237d67727d",
          "dweb:/ipfs/QmXM8L5CXpeLxfHupLFmxDFTJp1ufnYwDWaSA6m4zZuYJA"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/OZLtoken.t.sol",
    "id": 50304,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        38767
      ],
      "ERC20Upgradeable": [
        39697
      ],
      "FixedPointMathLib": [
        6016
      ],
      "HelpersLib": [
        47295
      ],
      "IAsset": [
        4387
      ],
      "IERC20Permit": [
        4814
      ],
      "IOZL": [
        4996
      ],
      "IPool": [
        4515
      ],
      "IQueries": [
        4561
      ],
      "IRocketTokenRETH": [
        5253
      ],
      "IUniswapV3Factory": [
        44388
      ],
      "IVault": [
        4495
      ],
      "IWETH": [
        5340
      ],
      "OZLtokenTest": [
        50303
      ],
      "QuoteAsset": [
        4820
      ],
      "TestMethods": [
        55024
      ],
      "Type": [
        45125
      ],
      "console": [
        30366
      ],
      "ozIToken": [
        5857
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:20087:111",
    "nodes": [
      {
        "id": 48218,
        "nodeType": "PragmaDirective",
        "src": "45:23:111",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 48220,
        "nodeType": "ImportDirective",
        "src": "71:46:111",
        "nodes": [],
        "absolutePath": "test/foundry/TestMethods.sol",
        "file": "./TestMethods.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 55025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48219,
              "name": "TestMethods",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55024,
              "src": "79:11:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48222,
        "nodeType": "ImportDirective",
        "src": "118:57:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "../../contracts/interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 4997,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48221,
              "name": "IOZL",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4996,
              "src": "126:4:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48224,
        "nodeType": "ImportDirective",
        "src": "176:59:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IWETH.sol",
        "file": "../../contracts/interfaces/IWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 5341,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48223,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5340,
              "src": "184:5:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48226,
        "nodeType": "ImportDirective",
        "src": "236:65:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIToken.sol",
        "file": "../../contracts/interfaces/ozIToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 5858,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48225,
              "name": "ozIToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5857,
              "src": "244:8:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48228,
        "nodeType": "ImportDirective",
        "src": "302:82:111",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "../../contracts/libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 6017,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48227,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6016,
              "src": "310:17:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48230,
        "nodeType": "ImportDirective",
        "src": "385:94:111",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 44389,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48229,
              "name": "IUniswapV3Factory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44388,
              "src": "393:17:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48232,
        "nodeType": "ImportDirective",
        "src": "480:73:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "../../contracts/interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 4815,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48231,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4814,
              "src": "488:12:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48234,
        "nodeType": "ImportDirective",
        "src": "554:43:111",
        "nodes": [],
        "absolutePath": "test/foundry/AppStorageTests.sol",
        "file": "./AppStorageTests.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 45174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48233,
              "name": "Type",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45125,
              "src": "562:4:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48236,
        "nodeType": "ImportDirective",
        "src": "598:76:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IRocketPool.sol",
        "file": "../../contracts/interfaces/IRocketPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 5280,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48235,
              "name": "IRocketTokenRETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5253,
              "src": "606:16:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48238,
        "nodeType": "ImportDirective",
        "src": "675:105:111",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 38768,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48237,
              "name": "AggregatorV3Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38767,
              "src": "683:21:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48240,
        "nodeType": "ImportDirective",
        "src": "781:63:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "../../contracts/interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 4997,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48239,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4820,
              "src": "789:10:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48242,
        "nodeType": "ImportDirective",
        "src": "845:44:111",
        "nodes": [],
        "absolutePath": "test/foundry/HelpersLib.sol",
        "file": "./HelpersLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 47296,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48241,
              "name": "HelpersLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47295,
              "src": "853:10:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48247,
        "nodeType": "ImportDirective",
        "src": "890:89:111",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IBalancer.sol",
        "file": "../../contracts/interfaces/IBalancer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 4562,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48243,
              "name": "IVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4495,
              "src": "898:6:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48244,
              "name": "IAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4387,
              "src": "906:6:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48245,
              "name": "IPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4515,
              "src": "914:5:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48246,
              "name": "IQueries",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4561,
              "src": "921:8:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48249,
        "nodeType": "ImportDirective",
        "src": "980:108:111",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 39698,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48248,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39697,
              "src": "988:16:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48250,
        "nodeType": "ImportDirective",
        "src": "1091:31:111",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50304,
        "sourceUnit": 30367,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50303,
        "nodeType": "ContractDefinition",
        "src": "1205:18927:111",
        "nodes": [
          {
            "id": 48255,
            "nodeType": "UsingForDirective",
            "src": "1249:33:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48253,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1255:17:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6016,
              "src": "1255:17:111"
            },
            "typeName": {
              "id": 48254,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1277:4:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 48273,
            "nodeType": "FunctionDefinition",
            "src": "1289:245:111",
            "nodes": [],
            "body": {
              "id": 48272,
              "nodeType": "Block",
              "src": "1344:190:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48258,
                      "name": "_minting_approve_smallMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52897,
                      "src": "1377:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48260,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:28:111"
                },
                {
                  "assignments": [
                    48262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48262,
                      "mutability": "mutable",
                      "name": "wasCharged",
                      "nameLocation": "1438:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48272,
                      "src": "1433:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 48261,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1433:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48266,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48263,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "1451:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 48264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1454:12:111",
                      "memberName": "chargeOZLfee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5450,
                      "src": "1451:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () external returns (bool)"
                      }
                    },
                    "id": 48265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1433:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1515:11:111",
                        "subExpression": {
                          "id": 48268,
                          "name": "wasCharged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48262,
                          "src": "1516:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48267,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "1504:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48271,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:23:111"
                }
              ]
            },
            "functionSelector": "51fd9af9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_chargeOZLfee_noFeesToDistribute",
            "nameLocation": "1298:36:111",
            "parameters": {
              "id": 48256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:2:111"
            },
            "returnParameters": {
              "id": 48257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48588,
            "nodeType": "FunctionDefinition",
            "src": "1684:2707:111",
            "nodes": [],
            "body": {
              "id": 48587,
              "nodeType": "Block",
              "src": "1730:2661:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48277,
                      "mutability": "mutable",
                      "name": "oldSlot0data",
                      "nameLocation": "1748:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "1740:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48276,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1740:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48293,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48284,
                            "name": "wethAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50644,
                            "src": "1822:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 48285,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "1832:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 48286,
                            "name": "uniPoolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50750,
                            "src": "1843:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 48281,
                                "name": "uniFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50684,
                                "src": "1802:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48280,
                              "name": "IUniswapV3Factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44388,
                              "src": "1784:17:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$44388_$",
                                "typeString": "type(contract IUniswapV3Factory)"
                              }
                            },
                            "id": 48282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1784:29:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Factory_$44388",
                              "typeString": "contract IUniswapV3Factory"
                            }
                          },
                          "id": 48283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1814:7:111",
                          "memberName": "getPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44361,
                          "src": "1784:37:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                            "typeString": "function (address,address,uint24) view external returns (address)"
                          }
                        },
                        "id": 48287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:70:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 48290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1877:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1869:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 48288,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1869:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:10:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 48278,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "1763:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1766:4:111",
                      "memberName": "load",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21030,
                      "src": "1763:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes32) view external returns (bytes32)"
                      }
                    },
                    "id": 48292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1763:126:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1740:149:111"
                },
                {
                  "assignments": [
                    48295,
                    48297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48295,
                      "mutability": "mutable",
                      "name": "oldSharedCash",
                      "nameLocation": "1908:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "1900:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48294,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1900:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48297,
                      "mutability": "mutable",
                      "name": "cashSlot",
                      "nameLocation": "1931:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "1923:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48296,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1923:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48300,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48298,
                      "name": "_getSharedCashBalancer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46233,
                      "src": "1943:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 48299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:24:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1899:68:111"
                },
                {
                  "assignments": [
                    48303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48303,
                      "mutability": "mutable",
                      "name": "ozERC20",
                      "nameLocation": "2020:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2011:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIToken_$5857",
                        "typeString": "contract ozIToken"
                      },
                      "typeName": {
                        "id": 48302,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48301,
                          "name": "ozIToken",
                          "nameLocations": [
                            "2011:8:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5857,
                          "src": "2011:8:111"
                        },
                        "referencedDeclaration": 5857,
                        "src": "2011:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48312,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48307,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "2069:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "4f7a656c2d4552433230",
                            "id": 48308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2080:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            "value": "Ozel-ERC20"
                          },
                          {
                            "hexValue": "6f7a4552433230",
                            "id": 48309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2094:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            },
                            "value": "ozERC20"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            }
                          ],
                          "expression": {
                            "id": 48305,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "2039:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 48306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2042:13:111",
                          "memberName": "createOzToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5377,
                          "src": "2039:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,string memory,string memory) external returns (address)"
                          }
                        },
                        "id": 48310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2039:74:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48304,
                      "name": "ozIToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5857,
                      "src": "2030:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIToken_$5857_$",
                        "typeString": "type(contract ozIToken)"
                      }
                    },
                    "id": 48311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2030:84:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2011:103:111"
                },
                {
                  "assignments": [
                    48314,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48314,
                      "mutability": "mutable",
                      "name": "rawAmount",
                      "nameLocation": "2131:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2126:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48313,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2126:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 48320,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48316,
                          "name": "Quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50638,
                          "src": "2162:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Quantity_$50638_$",
                            "typeString": "type(enum Setup.Quantity)"
                          }
                        },
                        "id": 48317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2171:5:111",
                        "memberName": "SMALL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50636,
                        "src": "2162:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 48318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2178:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48315,
                      "name": "_dealUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51200,
                      "src": "2146:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Quantity_$50638_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (enum Setup.Quantity,bool) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 48319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2146:38:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2125:59:111"
                },
                {
                  "assignments": [
                    48322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48322,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "2199:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2194:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48321,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2194:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48335,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48323,
                            "name": "rawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48314,
                            "src": "2211:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 48324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2223:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2211:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48326,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2210:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 48333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 48327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2228:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 48329,
                                "name": "testToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50686,
                                "src": "2247:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48328,
                              "name": "IERC20Permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "2234:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                                "typeString": "type(contract IERC20Permit)"
                              }
                            },
                            "id": 48330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2234:23:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                              "typeString": "contract IERC20Permit"
                            }
                          },
                          "id": 48331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2258:8:111",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4760,
                          "src": "2234:32:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 48332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2234:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2228:40:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2210:58:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2194:74:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "39393030",
                            "id": 48339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2301:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9900_by_1",
                              "typeString": "int_const 9900"
                            },
                            "value": "9900"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9900_by_1",
                              "typeString": "int_const 9900"
                            }
                          ],
                          "id": 48338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2294:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 48337,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "2294:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2294:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 48336,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "2278:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 48341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2278:29:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48342,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:29:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48343,
                      "name": "_startCampaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "2318:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2318:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48345,
                  "nodeType": "ExpressionStatement",
                  "src": "2318:16:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48347,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48303,
                        "src": "2358:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      {
                        "id": 48348,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "2367:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48349,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "2374:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48350,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48322,
                        "src": "2385:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48346,
                      "name": "_mintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45524,
                      "src": "2344:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ozIToken,address,address,uint256)"
                      }
                    },
                    "id": 48351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48352,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:50:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48354,
                        "name": "oldSlot0data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48277,
                        "src": "2424:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48355,
                        "name": "oldSharedCash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48295,
                        "src": "2438:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48356,
                        "name": "cashSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48297,
                        "src": "2453:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48353,
                      "name": "_resetPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46117,
                      "src": "2405:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,bytes32)"
                      }
                    },
                    "id": 48357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2405:57:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48358,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:57:111"
                },
                {
                  "assignments": [
                    48360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48360,
                      "mutability": "mutable",
                      "name": "oldOzTokenBalance",
                      "nameLocation": "2478:17:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2473:22:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48359,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2473:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48365,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48363,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "2516:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48361,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48303,
                        "src": "2498:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "id": 48362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2506:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5694,
                      "src": "2498:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2498:24:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2473:49:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48367,
                          "name": "oldOzTokenBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48360,
                          "src": "2543:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2563:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2543:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48366,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "2532:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48371,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:33:111"
                },
                {
                  "assignments": [
                    48373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48373,
                      "mutability": "mutable",
                      "name": "secs",
                      "nameLocation": "2581:4:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2576:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48372,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2576:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 48374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2588:2:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 48375,
                      "name": "campaignDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50772,
                      "src": "2593:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2588:21:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2576:33:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48381,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2628:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 48382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2634:9:111",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2628:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48383,
                          "name": "secs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48373,
                          "src": "2646:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2628:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48378,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "2620:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2623:4:111",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21962,
                      "src": "2620:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 48385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2620:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48386,
                  "nodeType": "ExpressionStatement",
                  "src": "2620:31:111"
                },
                {
                  "assignments": [
                    48388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48388,
                      "mutability": "mutable",
                      "name": "durationLeft",
                      "nameLocation": "2666:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2662:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 48387,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "2662:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48391,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48389,
                      "name": "_getDurationLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46357,
                      "src": "2681:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 48390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2681:18:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:37:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 48395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48393,
                          "name": "durationLeft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48388,
                          "src": "2720:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2735:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2720:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48392,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "2709:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2709:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48397,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:28:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48398,
                      "name": "_mock_rETH_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46412,
                      "src": "2748:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2748:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48400,
                  "nodeType": "ExpressionStatement",
                  "src": "2748:16:111"
                },
                {
                  "assignments": [
                    48403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48403,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "2780:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2775:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 48402,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48401,
                          "name": "IOZL",
                          "nameLocations": [
                            "2775:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "2775:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "2775:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48410,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48407,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "2799:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 48406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2791:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48405,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2791:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2791:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48404,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "2786:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 48409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2775:34:111"
                },
                {
                  "assignments": [
                    48412,
                    48414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48412,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "2825:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2820:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48411,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2820:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48414,
                      "mutability": "mutable",
                      "name": "claimedReward",
                      "nameLocation": "2847:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2842:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48413,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2842:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48418,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48416,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48403,
                        "src": "2888:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      ],
                      "id": 48415,
                      "name": "_checkChargeFeeClaimOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50240,
                      "src": "2864:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IOZL_$4996_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract IOZL) returns (uint256,uint256)"
                      }
                    },
                    "id": 48417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2864:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2819:73:111"
                },
                {
                  "assignments": [
                    48420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48420,
                      "mutability": "mutable",
                      "name": "pendingAllocPreRedeem",
                      "nameLocation": "2926:21:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "2921:26:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48419,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2921:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48423,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48421,
                      "name": "_getPendingAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46329,
                      "src": "2950:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 48422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2921:52:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48425,
                          "name": "pendingAllocPreRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48420,
                          "src": "2994:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "id": 48431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "id": 48428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31",
                                  "id": 48426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3019:1:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 48427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3023:4:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "3019:8:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              }
                            ],
                            "id": 48429,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3018:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030303030",
                            "id": 48430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3031:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1000000"
                          },
                          "src": "3018:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        },
                        "src": "2994:44:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48424,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "2983:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:56:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48434,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:56:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48438,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "3064:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48435,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "3050:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3053:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "3050:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48440,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48446,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "3100:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 48445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3092:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48444,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3092:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3092:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48448,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48412,
                        "src": "3105:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48441,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48403,
                        "src": "3080:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3084:7:111",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "3080:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 48449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48450,
                  "nodeType": "ExpressionStatement",
                  "src": "3080:41:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48454,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "3160:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48455,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "3179:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48456,
                        "name": "wethAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50644,
                        "src": "3198:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48457,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48412,
                        "src": "3220:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48459,
                            "name": "OZL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48403,
                            "src": "3261:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOZL_$4996",
                              "typeString": "contract IOZL"
                            }
                          },
                          {
                            "id": 48460,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48412,
                            "src": "3266:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 48461,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4820,
                              "src": "3283:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 48462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3294:3:111",
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4818,
                            "src": "3283:14:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IOZL_$4996",
                              "typeString": "contract IOZL"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 48458,
                          "name": "_getMinsOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46095,
                          "src": "3249:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IOZL_$4996_$_t_uint256_$_t_enum$_QuoteAsset_$4820_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (contract IOZL,uint256,enum QuoteAsset) view returns (uint256[] memory)"
                          }
                        },
                        "id": 48463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3249:49:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 48451,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48403,
                        "src": "3136:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3140:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "3136:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 48464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3136:172:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48465,
                  "nodeType": "ExpressionStatement",
                  "src": "3136:172:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48466,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "3318:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3321:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "3318:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3318:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48470,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:14:111"
                },
                {
                  "assignments": [
                    48472,
                    48474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48472,
                      "mutability": "mutable",
                      "name": "oldRecicledSupply",
                      "nameLocation": "3349:17:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "3344:22:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48471,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3344:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48474,
                      "mutability": "mutable",
                      "name": "oldRewardRate",
                      "nameLocation": "3373:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "3368:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3368:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48480,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48476,
                        "name": "pendingAllocPreRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48420,
                        "src": "3423:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48477,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48403,
                        "src": "3446:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      {
                        "id": 48478,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48412,
                        "src": "3451:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48475,
                      "name": "_checkSupplyAndRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50302,
                      "src": "3403:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_IOZL_$4996_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,contract IOZL,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 48479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3403:64:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3343:124:111"
                },
                {
                  "assignments": [
                    48482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48482,
                      "mutability": "mutable",
                      "name": "oneYear",
                      "nameLocation": "3501:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "3496:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3496:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48484,
                  "initialValue": {
                    "hexValue": "3331353630303030",
                    "id": 48483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3511:8:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_31560000_by_1",
                      "typeString": "int_const 31560000"
                    },
                    "value": "31560000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3496:23:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48488,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50626,
                        "src": "3538:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48485,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "3529:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3532:5:111",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22003,
                      "src": "3529:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3529:15:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48490,
                  "nodeType": "ExpressionStatement",
                  "src": "3529:15:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48494,
                        "name": "oneYear",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48482,
                        "src": "3584:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48491,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "3555:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 48493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3558:25:111",
                      "memberName": "startNewReciclingCampaign",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5552,
                      "src": "3555:28:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 48495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48496,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:37:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48498,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48303,
                        "src": "3618:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      {
                        "id": 48499,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "3627:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48500,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "3634:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48501,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48322,
                        "src": "3645:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48497,
                      "name": "_mintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45524,
                      "src": "3604:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ozIToken,address,address,uint256)"
                      }
                    },
                    "id": 48502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48503,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:50:111"
                },
                {
                  "assignments": [
                    48505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48505,
                      "mutability": "mutable",
                      "name": "newOzTokenBalance",
                      "nameLocation": "3670:17:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "3665:22:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48504,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3665:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48508,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "3708:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48506,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48303,
                        "src": "3690:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "id": 48507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3698:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5694,
                      "src": "3690:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:24:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3665:49:111"
                },
                {
                  "assignments": [
                    48512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48512,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "3730:4:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "3725:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48511,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3725:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48528,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 48518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 48513,
                                  "name": "newOzTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48505,
                                  "src": "3739:17:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 48516,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 48514,
                                        "name": "oldOzTokenBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48360,
                                        "src": "3760:17:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "32",
                                        "id": 48515,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3780:1:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "3760:21:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 48517,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3759:23:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3739:43:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 48519,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3738:45:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31305f303030",
                            "id": 48520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3786:6:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10_000"
                          },
                          "src": "3738:54:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48522,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3737:56:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48523,
                            "name": "oldOzTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48360,
                            "src": "3797:17:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 48524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3817:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3797:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48526,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3796:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3737:82:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3725:94:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48530,
                          "name": "diff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48512,
                          "src": "3912:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3920:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3912:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48529,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "3901:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3901:21:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48534,
                  "nodeType": "ExpressionStatement",
                  "src": "3901:21:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48538,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3949:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 48539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3955:9:111",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3949:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 48540,
                          "name": "secs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48373,
                          "src": "3967:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3949:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48535,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "3941:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3944:4:111",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21962,
                      "src": "3941:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 48542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3941:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48543,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:31:111"
                },
                {
                  "assignments": [
                    48545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48545,
                      "mutability": "mutable",
                      "name": "earned",
                      "nameLocation": "4062:6:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "4057:11:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48544,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4057:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48550,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48548,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "4081:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48546,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "4071:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 48547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4074:6:111",
                      "memberName": "earned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5506,
                      "src": "4071:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4057:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48552,
                            "name": "claimedReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48414,
                            "src": "4108:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316539",
                            "id": 48553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4124:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1e9"
                          },
                          "src": "4108:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48555,
                            "name": "earned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48545,
                            "src": "4131:6:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316539",
                            "id": 48556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4140:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000_by_1",
                              "typeString": "int_const 1000000000"
                            },
                            "value": "1e9"
                          },
                          "src": "4131:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4108:35:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48551,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4097:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:47:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48560,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:47:111"
                },
                {
                  "assignments": [
                    48562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48562,
                      "mutability": "mutable",
                      "name": "newRewardRate",
                      "nameLocation": "4186:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48587,
                      "src": "4181:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48561,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4181:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48565,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48563,
                      "name": "_getRewardRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46301,
                      "src": "4202:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 48564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4181:37:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48567,
                          "name": "oldRewardRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48474,
                          "src": "4240:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 48568,
                          "name": "newRewardRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48562,
                          "src": "4257:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4240:30:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48566,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4229:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:42:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48571,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:42:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48573,
                            "name": "oldRecicledSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48472,
                            "src": "4292:17:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 48574,
                            "name": "oneYear",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48482,
                            "src": "4312:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4292:27:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 48576,
                          "name": "newRewardRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48562,
                          "src": "4323:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4292:44:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48572,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4281:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4281:56:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48579,
                  "nodeType": "ExpressionStatement",
                  "src": "4281:56:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 48581,
                            "name": "_getRecicledSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46343,
                            "src": "4358:18:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 48582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4358:20:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4382:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4358:25:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48580,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4347:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48586,
                  "nodeType": "ExpressionStatement",
                  "src": "4347:37:111"
                }
              ]
            },
            "functionSelector": "19fa6141",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_new_recicling_campaing",
            "nameLocation": "1693:27:111",
            "parameters": {
              "id": 48274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:2:111"
            },
            "returnParameters": {
              "id": 48275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1730:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48725,
            "nodeType": "FunctionDefinition",
            "src": "4476:1126:111",
            "nodes": [],
            "body": {
              "id": 48724,
              "nodeType": "Block",
              "src": "4515:1087:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48591,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "4550:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 48592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 48593,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:16:111"
                },
                {
                  "assignments": [
                    48596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48596,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "4582:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48724,
                      "src": "4577:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 48595,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48594,
                          "name": "IOZL",
                          "nameLocations": [
                            "4577:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "4577:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "4577:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48603,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48600,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "4601:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 48599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4593:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4593:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4593:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48597,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "4588:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 48602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4588:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4577:34:111"
                },
                {
                  "assignments": [
                    48605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48605,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "4627:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48724,
                      "src": "4622:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48604,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4622:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48610,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48608,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "4659:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48606,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48596,
                        "src": "4645:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4649:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "4645:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4645:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4622:43:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48612,
                          "name": "ozlBalanceAlice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48605,
                          "src": "4686:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4704:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4686:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48611,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4675:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4675:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48616,
                  "nodeType": "ExpressionStatement",
                  "src": "4675:31:111"
                },
                {
                  "assignments": [
                    48618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48618,
                      "mutability": "mutable",
                      "name": "recicledSupply",
                      "nameLocation": "4722:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48724,
                      "src": "4717:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48617,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4717:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48621,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48619,
                      "name": "_getRecicledSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46343,
                      "src": "4739:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 48620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4739:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4717:42:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48623,
                          "name": "recicledSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48618,
                          "src": "4780:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4798:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4780:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48622,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4769:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4769:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48627,
                  "nodeType": "ExpressionStatement",
                  "src": "4769:31:111"
                },
                {
                  "assignments": [
                    48629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48629,
                      "mutability": "mutable",
                      "name": "rEthBalanceAlice",
                      "nameLocation": "4816:16:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48724,
                      "src": "4811:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48628,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4811:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48636,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48634,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "4868:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48631,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "4848:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48630,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "4835:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 48632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4835:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 48633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4858:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "4835:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4835:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4811:63:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48638,
                          "name": "rEthBalanceAlice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48629,
                          "src": "4895:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4915:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4895:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48637,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "4884:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4884:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48642,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:33:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48646,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "4960:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48643,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "4946:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4949:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "4946:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4946:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48648,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48654,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "4996:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 48653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4988:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48652,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4988:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4988:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48656,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48605,
                        "src": "5001:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48649,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48596,
                        "src": "4976:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4980:7:111",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "4976:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 48657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4976:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48658,
                  "nodeType": "ExpressionStatement",
                  "src": "4976:41:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48662,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "5052:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48663,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "5071:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48664,
                        "name": "rEthAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50646,
                        "src": "5090:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48665,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48605,
                        "src": "5112:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48667,
                            "name": "OZL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48596,
                            "src": "5153:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOZL_$4996",
                              "typeString": "contract IOZL"
                            }
                          },
                          {
                            "id": 48668,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48605,
                            "src": "5158:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 48669,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4820,
                              "src": "5175:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 48670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5186:4:111",
                            "memberName": "rETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4819,
                            "src": "5175:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IOZL_$4996",
                              "typeString": "contract IOZL"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 48666,
                          "name": "_getMinsOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46095,
                          "src": "5141:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IOZL_$4996_$_t_uint256_$_t_enum$_QuoteAsset_$4820_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (contract IOZL,uint256,enum QuoteAsset) view returns (uint256[] memory)"
                          }
                        },
                        "id": 48671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5141:50:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 48659,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48596,
                        "src": "5028:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5032:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "5028:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 48672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5028:173:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48673,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:173:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48674,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "5211:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5214:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "5211:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5211:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48678,
                  "nodeType": "ExpressionStatement",
                  "src": "5211:14:111"
                },
                {
                  "expression": {
                    "id": 48686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48679,
                      "name": "rEthBalanceAlice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48629,
                      "src": "5261:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48684,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50628,
                          "src": "5313:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 48681,
                              "name": "rEthAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50646,
                              "src": "5293:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 48680,
                            "name": "IERC20Permit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4814,
                            "src": "5280:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                              "typeString": "type(contract IERC20Permit)"
                            }
                          },
                          "id": 48682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5280:22:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                            "typeString": "contract IERC20Permit"
                          }
                        },
                        "id": 48683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5303:9:111",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4700,
                        "src": "5280:32:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5280:39:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5261:58:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48687,
                  "nodeType": "ExpressionStatement",
                  "src": "5261:58:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48689,
                          "name": "rEthBalanceAlice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48629,
                          "src": "5340:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5359:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5340:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48688,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "5329:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5329:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48693,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:32:111"
                },
                {
                  "expression": {
                    "id": 48697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48694,
                      "name": "recicledSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48618,
                      "src": "5372:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 48695,
                        "name": "_getRecicledSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46343,
                        "src": "5389:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 48696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5389:20:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5372:37:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48698,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:37:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48700,
                          "name": "recicledSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48618,
                          "src": "5430:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5447:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5430:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48699,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "5419:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5419:30:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48704,
                  "nodeType": "ExpressionStatement",
                  "src": "5419:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48706,
                          "name": "recicledSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48618,
                          "src": "5470:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 48707,
                          "name": "ozlBalanceAlice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48605,
                          "src": "5488:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5470:33:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48705,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "5459:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5459:45:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48710,
                  "nodeType": "ExpressionStatement",
                  "src": "5459:45:111"
                },
                {
                  "expression": {
                    "id": 48716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48711,
                      "name": "ozlBalanceAlice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48605,
                      "src": "5515:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48714,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50628,
                          "src": "5547:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48712,
                          "name": "OZL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48596,
                          "src": "5533:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOZL_$4996",
                            "typeString": "contract IOZL"
                          }
                        },
                        "id": 48713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5537:9:111",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4852,
                        "src": "5533:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5533:20:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5515:38:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48717,
                  "nodeType": "ExpressionStatement",
                  "src": "5515:38:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48719,
                          "name": "ozlBalanceAlice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48605,
                          "src": "5574:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5593:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5574:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48718,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "5563:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5563:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48723,
                  "nodeType": "ExpressionStatement",
                  "src": "5563:32:111"
                }
              ]
            },
            "functionSelector": "0e4ae323",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_recicled_supply",
            "nameLocation": "4485:20:111",
            "parameters": {
              "id": 48589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4505:2:111"
            },
            "returnParameters": {
              "id": 48590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4515:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48897,
            "nodeType": "FunctionDefinition",
            "src": "5730:1464:111",
            "nodes": [],
            "body": {
              "id": 48896,
              "nodeType": "Block",
              "src": "5781:1413:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48733,
                      "mutability": "mutable",
                      "name": "ozERC20",
                      "nameLocation": "5826:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "5817:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIToken_$5857",
                        "typeString": "contract ozIToken"
                      },
                      "typeName": {
                        "id": 48732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48731,
                          "name": "ozIToken",
                          "nameLocations": [
                            "5817:8:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5857,
                          "src": "5817:8:111"
                        },
                        "referencedDeclaration": 5857,
                        "src": "5817:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48742,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48737,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "5875:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "4f7a656c2d4552433230",
                            "id": 48738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5886:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            "value": "Ozel-ERC20"
                          },
                          {
                            "hexValue": "6f7a4552433230",
                            "id": 48739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5900:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            },
                            "value": "ozERC20"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            }
                          ],
                          "expression": {
                            "id": 48735,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "5845:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 48736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5848:13:111",
                          "memberName": "createOzToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5377,
                          "src": "5845:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,string memory,string memory) external returns (address)"
                          }
                        },
                        "id": 48740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5845:74:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48734,
                      "name": "ozIToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5857,
                      "src": "5836:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIToken_$5857_$",
                        "typeString": "type(contract ozIToken)"
                      }
                    },
                    "id": 48741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5836:84:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5817:103:111"
                },
                {
                  "assignments": [
                    48744,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48744,
                      "mutability": "mutable",
                      "name": "rawAmount",
                      "nameLocation": "5937:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "5932:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48743,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5932:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 48750,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48746,
                          "name": "Quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50638,
                          "src": "5968:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Quantity_$50638_$",
                            "typeString": "type(enum Setup.Quantity)"
                          }
                        },
                        "id": 48747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5977:3:111",
                        "memberName": "BIG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50637,
                        "src": "5968:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 48748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5982:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48745,
                      "name": "_dealUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51200,
                      "src": "5952:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Quantity_$50638_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (enum Setup.Quantity,bool) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 48749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5952:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5931:57:111"
                },
                {
                  "assignments": [
                    48752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48752,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "6003:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "5998:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5998:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48762,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48753,
                      "name": "rawAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48744,
                      "src": "6014:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 48760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 48754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6026:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 48756,
                                "name": "testToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50686,
                                "src": "6045:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48755,
                              "name": "IERC20Permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "6032:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                                "typeString": "type(contract IERC20Permit)"
                              }
                            },
                            "id": 48757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6032:23:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                              "typeString": "contract IERC20Permit"
                            }
                          },
                          "id": 48758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6056:8:111",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4760,
                          "src": "6032:32:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 48759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6032:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "6026:40:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6014:52:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5998:68:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "39393030",
                            "id": 48766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6099:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9900_by_1",
                              "typeString": "int_const 9900"
                            },
                            "value": "9900"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9900_by_1",
                              "typeString": "int_const 9900"
                            }
                          ],
                          "id": 48765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6092:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 48764,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "6092:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6092:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 48763,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "6076:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 48768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6076:29:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48769,
                  "nodeType": "ExpressionStatement",
                  "src": "6076:29:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48770,
                      "name": "_startCampaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "6116:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6116:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48772,
                  "nodeType": "ExpressionStatement",
                  "src": "6116:16:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48774,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48733,
                        "src": "6156:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      {
                        "id": 48775,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "6165:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48776,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "6172:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48777,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48752,
                        "src": "6183:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48773,
                      "name": "_mintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45524,
                      "src": "6142:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ozIToken,address,address,uint256)"
                      }
                    },
                    "id": 48778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6142:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48779,
                  "nodeType": "ExpressionStatement",
                  "src": "6142:50:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3135",
                        "id": 48781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6219:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 48780,
                      "name": "_accrueRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46430,
                      "src": "6204:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6204:18:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48783,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:18:111"
                },
                {
                  "assignments": [
                    48786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48786,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "6238:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6233:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 48785,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48784,
                          "name": "IOZL",
                          "nameLocations": [
                            "6233:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "6233:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "6233:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48793,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48790,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "6257:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 48789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6249:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48788,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6249:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6249:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48787,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "6244:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 48792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6244:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6233:34:111"
                },
                {
                  "assignments": [
                    48795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48795,
                      "mutability": "mutable",
                      "name": "ozlBalancePre",
                      "nameLocation": "6282:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6277:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48794,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6277:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48800,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48798,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "6312:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48796,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48786,
                        "src": "6298:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6302:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "6298:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6298:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6277:41:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48802,
                          "name": "ozlBalancePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48795,
                          "src": "6339:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6356:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6339:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48801,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6328:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6328:30:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48806,
                  "nodeType": "ExpressionStatement",
                  "src": "6328:30:111"
                },
                {
                  "assignments": [
                    48808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48808,
                      "mutability": "mutable",
                      "name": "pendingOZLallocPre",
                      "nameLocation": "6374:18:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6369:23:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48807,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6369:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48809,
                      "name": "_getPendingAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46329,
                      "src": "6395:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 48810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6369:49:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48813,
                          "name": "communityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50777,
                          "src": "6439:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 48814,
                          "name": "pendingOZLallocPre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48808,
                          "src": "6458:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6439:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48812,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6428:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6428:49:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48817,
                  "nodeType": "ExpressionStatement",
                  "src": "6428:49:111"
                },
                {
                  "assignments": [
                    48819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48819,
                      "mutability": "mutable",
                      "name": "wasCharged",
                      "nameLocation": "6511:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6506:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 48818,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6506:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48823,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48820,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "6524:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 48821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6527:12:111",
                      "memberName": "chargeOZLfee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5450,
                      "src": "6524:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () external returns (bool)"
                      }
                    },
                    "id": 48822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6524:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6506:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48825,
                        "name": "wasCharged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48819,
                        "src": "6562:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48824,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6551:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6551:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48827,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:22:111"
                },
                {
                  "assignments": [
                    48829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48829,
                      "mutability": "mutable",
                      "name": "circulatingSupply",
                      "nameLocation": "6589:17:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6584:22:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48828,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6584:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48832,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48830,
                      "name": "_getCirculatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46315,
                      "src": "6609:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 48831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6609:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6584:48:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48834,
                          "name": "circulatingSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48829,
                          "src": "6653:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6674:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6653:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48833,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6642:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6642:34:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48838,
                  "nodeType": "ExpressionStatement",
                  "src": "6642:34:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48842,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "6696:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48839,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "6687:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6690:5:111",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22003,
                      "src": "6687:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6687:15:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48844,
                  "nodeType": "ExpressionStatement",
                  "src": "6687:15:111"
                },
                {
                  "assignments": [
                    48846
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48846,
                      "mutability": "mutable",
                      "name": "claimedReward",
                      "nameLocation": "6717:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6712:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48845,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6712:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48850,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48847,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "6733:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 48848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6736:11:111",
                      "memberName": "claimReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5511,
                      "src": "6733:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 48849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6733:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6712:37:111"
                },
                {
                  "expression": {
                    "id": 48854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48851,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48829,
                      "src": "6785:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 48852,
                        "name": "_getCirculatingSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46315,
                        "src": "6805:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 48853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6805:23:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6785:43:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48855,
                  "nodeType": "ExpressionStatement",
                  "src": "6785:43:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48857,
                          "name": "circulatingSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48829,
                          "src": "6849:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6869:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6849:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48856,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6838:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6838:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48861,
                  "nodeType": "ExpressionStatement",
                  "src": "6838:33:111"
                },
                {
                  "assignments": [
                    48863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48863,
                      "mutability": "mutable",
                      "name": "ozlBalancePost",
                      "nameLocation": "6887:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "6882:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48862,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6882:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48868,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48866,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "6918:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48864,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48786,
                        "src": "6904:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 48865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6908:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "6904:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6904:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6882:42:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48870,
                          "name": "ozlBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48863,
                          "src": "6945:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6962:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6945:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48869,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6934:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6934:30:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48874,
                  "nodeType": "ExpressionStatement",
                  "src": "6934:30:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48876,
                          "name": "circulatingSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48829,
                          "src": "6985:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 48877,
                          "name": "ozlBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48863,
                          "src": "7006:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6985:35:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48875,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "6974:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:47:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48880,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:47:111"
                },
                {
                  "assignments": [
                    48882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48882,
                      "mutability": "mutable",
                      "name": "pendingOZLallocPost",
                      "nameLocation": "7037:19:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48896,
                      "src": "7032:24:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48881,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7032:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48885,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48883,
                      "name": "_getPendingAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46329,
                      "src": "7059:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 48884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7059:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7032:50:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48887,
                          "name": "claimedReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48846,
                          "src": "7103:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48888,
                            "name": "pendingOZLallocPre",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48808,
                            "src": "7121:18:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 48889,
                            "name": "pendingOZLallocPost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48882,
                            "src": "7142:19:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7121:40:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7103:58:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48886,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "7092:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 48892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7092:70:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48893,
                  "nodeType": "ExpressionStatement",
                  "src": "7092:70:111"
                },
                {
                  "expression": {
                    "id": 48894,
                    "name": "ozERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48733,
                    "src": "7180:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "functionReturnParameters": 48730,
                  "id": 48895,
                  "nodeType": "Return",
                  "src": "7173:14:111"
                }
              ]
            },
            "functionSelector": "13220c2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_claim_OZL",
            "nameLocation": "5739:14:111",
            "parameters": {
              "id": 48726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5753:2:111"
            },
            "returnParameters": {
              "id": 48730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48729,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48897,
                  "src": "5771:8:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIToken_$5857",
                    "typeString": "contract ozIToken"
                  },
                  "typeName": {
                    "id": 48728,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48727,
                      "name": "ozIToken",
                      "nameLocations": [
                        "5771:8:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5857,
                      "src": "5771:8:111"
                    },
                    "referencedDeclaration": 5857,
                    "src": "5771:8:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5770:10:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48984,
            "nodeType": "FunctionDefinition",
            "src": "7427:711:111",
            "nodes": [],
            "body": {
              "id": 48983,
              "nodeType": "Block",
              "src": "7474:664:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48903,
                      "mutability": "mutable",
                      "name": "ozERC20",
                      "nameLocation": "7549:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48983,
                      "src": "7540:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIToken_$5857",
                        "typeString": "contract ozIToken"
                      },
                      "typeName": {
                        "id": 48902,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48901,
                          "name": "ozIToken",
                          "nameLocations": [
                            "7540:8:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5857,
                          "src": "7540:8:111"
                        },
                        "referencedDeclaration": 5857,
                        "src": "7540:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48912,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48907,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "7598:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "4f7a656c2d4552433230",
                            "id": 48908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7609:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            "value": "Ozel-ERC20"
                          },
                          {
                            "hexValue": "6f7a4552433230",
                            "id": 48909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7623:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            },
                            "value": "ozERC20"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            }
                          ],
                          "expression": {
                            "id": 48905,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "7568:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 48906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7571:13:111",
                          "memberName": "createOzToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5377,
                          "src": "7568:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,string memory,string memory) external returns (address)"
                          }
                        },
                        "id": 48910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7568:74:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48904,
                      "name": "ozIToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5857,
                      "src": "7559:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIToken_$5857_$",
                        "typeString": "type(contract ozIToken)"
                      }
                    },
                    "id": 48911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7559:84:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7540:103:111"
                },
                {
                  "assignments": [
                    48914,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48914,
                      "mutability": "mutable",
                      "name": "rawAmount",
                      "nameLocation": "7660:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48983,
                      "src": "7655:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48913,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7655:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 48920,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48916,
                          "name": "Quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50638,
                          "src": "7691:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Quantity_$50638_$",
                            "typeString": "type(enum Setup.Quantity)"
                          }
                        },
                        "id": 48917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7700:5:111",
                        "memberName": "SMALL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50636,
                        "src": "7691:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 48918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7707:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48915,
                      "name": "_dealUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51200,
                      "src": "7675:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Quantity_$50638_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (enum Setup.Quantity,bool) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 48919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7675:38:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7654:59:111"
                },
                {
                  "assignments": [
                    48922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48922,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "7728:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48983,
                      "src": "7723:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48921,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7723:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48935,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 48931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48923,
                            "name": "rawAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48914,
                            "src": "7740:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 48924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7752:2:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 48926,
                                      "name": "testToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50686,
                                      "src": "7771:9:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 48925,
                                    "name": "IERC20Permit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4814,
                                    "src": "7758:12:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                                      "typeString": "type(contract IERC20Permit)"
                                    }
                                  },
                                  "id": 48927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7758:23:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                                    "typeString": "contract IERC20Permit"
                                  }
                                },
                                "id": 48928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7782:8:111",
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4760,
                                "src": "7758:32:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view external returns (uint8)"
                                }
                              },
                              "id": 48929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7758:34:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "7752:40:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7740:52:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 48932,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7739:54:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 48933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7796:2:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "7739:59:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7723:75:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48936,
                      "name": "_startCampaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "7809:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48938,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:16:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48939,
                      "name": "_mock_rETH_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46412,
                      "src": "7836:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7836:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48941,
                  "nodeType": "ExpressionStatement",
                  "src": "7836:16:111"
                },
                {
                  "assignments": [
                    48943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48943,
                      "mutability": "mutable",
                      "name": "timePassed",
                      "nameLocation": "7868:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48983,
                      "src": "7863:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48942,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7863:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48944,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7863:15:111"
                },
                {
                  "body": {
                    "id": 48981,
                    "nodeType": "Block",
                    "src": "7934:190:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48956,
                              "name": "ozERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48903,
                              "src": "7962:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIToken_$5857",
                                "typeString": "contract ozIToken"
                              }
                            },
                            {
                              "id": 48957,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50628,
                              "src": "7971:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 48958,
                              "name": "testToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50686,
                              "src": "7978:9:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 48959,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48922,
                              "src": "7989:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ozIToken_$5857",
                                "typeString": "contract ozIToken"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 48955,
                            "name": "_mintOzTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45524,
                            "src": "7948:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract ozIToken,address,address,uint256)"
                            }
                          },
                          "id": 48960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7948:50:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48961,
                        "nodeType": "ExpressionStatement",
                        "src": "7948:50:111"
                      },
                      {
                        "expression": {
                          "id": 48964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 48962,
                            "name": "timePassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48943,
                            "src": "8014:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 48963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8028:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "8014:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48965,
                        "nodeType": "ExpressionStatement",
                        "src": "8014:16:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 48972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 48969,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8053:5:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 48970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8059:9:111",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8053:15:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 48971,
                                "name": "timePassed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48943,
                                "src": "8071:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8053:28:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 48966,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12104,
                              "src": "8045:2:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$22302",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 48968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8048:4:111",
                            "memberName": "warp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21962,
                            "src": "8045:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 48973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8045:37:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48974,
                        "nodeType": "ExpressionStatement",
                        "src": "8045:37:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48978,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50628,
                              "src": "8107:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 48975,
                              "name": "OZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50735,
                              "src": "8097:2:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 48977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8100:6:111",
                            "memberName": "earned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5506,
                            "src": "8097:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 48979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8097:16:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 48980,
                        "nodeType": "ExpressionStatement",
                        "src": "8097:16:111"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48949,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48946,
                      "src": "7922:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 48950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7925:2:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "7922:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48982,
                  "initializationExpression": {
                    "assignments": [
                      48946
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48946,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7917:1:111",
                        "nodeType": "VariableDeclaration",
                        "scope": 48982,
                        "src": "7912:6:111",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48945,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7912:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48948,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7919:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7912:8:111"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7929:3:111",
                      "subExpression": {
                        "id": 48952,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48946,
                        "src": "7929:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48954,
                    "nodeType": "ExpressionStatement",
                    "src": "7929:3:111"
                  },
                  "nodeType": "ForStatement",
                  "src": "7907:217:111"
                }
              ]
            },
            "documentation": {
              "id": 48898,
              "nodeType": "StructuredDocumentation",
              "src": "7200:222:111",
              "text": " Tests that rewardPerToken() in OZLrewards doesn't overflow due to low totalSupply\n of ozTokens, during the beginning of the ozToken contracts' lifeciles, which is\n used in its final division."
            },
            "functionSelector": "e71fdf6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_overflow_rewardPerToken",
            "nameLocation": "7436:28:111",
            "parameters": {
              "id": 48899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7464:2:111"
            },
            "returnParameters": {
              "id": 48900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7474:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49147,
            "nodeType": "FunctionDefinition",
            "src": "8146:1374:111",
            "nodes": [],
            "body": {
              "id": 49146,
              "nodeType": "Block",
              "src": "8195:1325:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48987,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "8230:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 48988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8230:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 48989,
                  "nodeType": "ExpressionStatement",
                  "src": "8230:16:111"
                },
                {
                  "assignments": [
                    48992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48992,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "8262:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8257:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 48991,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48990,
                          "name": "IOZL",
                          "nameLocations": [
                            "8257:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "8257:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "8257:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48999,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48996,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "8281:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 48995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8273:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8273:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8273:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48993,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "8268:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 48998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8268:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8257:34:111"
                },
                {
                  "assignments": [
                    49001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49001,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "8307:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8302:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49000,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8302:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49008,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 49004,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50628,
                          "src": "8339:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 49002,
                          "name": "OZL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48992,
                          "src": "8325:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOZL_$4996",
                            "typeString": "contract IOZL"
                          }
                        },
                        "id": 49003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8329:9:111",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4852,
                        "src": "8325:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 49005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8325:20:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 49006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8348:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "8325:24:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8302:47:111"
                },
                {
                  "assignments": [
                    49010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49010,
                      "mutability": "mutable",
                      "name": "rEthBalancePre",
                      "nameLocation": "8364:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8359:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49009,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8359:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49017,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49015,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "8414:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49012,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "8394:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49011,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "8381:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8381:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8404:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "8381:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8381:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8359:61:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49019,
                          "name": "rEthBalancePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49010,
                          "src": "8441:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8459:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8441:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49018,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "8430:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8430:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49023,
                  "nodeType": "ExpressionStatement",
                  "src": "8430:31:111"
                },
                {
                  "assignments": [
                    49025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49025,
                      "mutability": "mutable",
                      "name": "rEthToRedeem",
                      "nameLocation": "8485:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8480:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49024,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8480:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49036,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49026,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49001,
                            "src": "8501:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 49029,
                                  "name": "QuoteAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4820,
                                  "src": "8539:10:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                    "typeString": "type(enum QuoteAsset)"
                                  }
                                },
                                "id": 49030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8550:4:111",
                                "memberName": "rETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4819,
                                "src": "8539:15:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              ],
                              "expression": {
                                "id": 49027,
                                "name": "OZL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48992,
                                "src": "8519:3:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOZL_$4996",
                                  "typeString": "contract IOZL"
                                }
                              },
                              "id": 49028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8523:15:111",
                              "memberName": "getExchangeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4954,
                              "src": "8519:19:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                                "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                              }
                            },
                            "id": 49031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8519:36:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8501:54:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49033,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8500:56:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8559:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "8500:66:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8480:86:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 49040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8599:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 49039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8592:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 49038,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "8592:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8592:9:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 49037,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "8576:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 49042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8576:26:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49043,
                  "nodeType": "ExpressionStatement",
                  "src": "8576:26:111"
                },
                {
                  "assignments": [
                    49045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49045,
                      "mutability": "mutable",
                      "name": "minAmountOutReth",
                      "nameLocation": "8625:16:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8620:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49044,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8620:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49053,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49048,
                        "name": "rEthToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49025,
                        "src": "8677:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49049,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "8691:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8694:18:111",
                          "memberName": "getDefaultSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5410,
                          "src": "8691:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                            "typeString": "function () view external returns (uint16)"
                          }
                        },
                        "id": 49051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8691:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 49046,
                        "name": "HelpersLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47295,
                        "src": "8644:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelpersLib_$47295_$",
                          "typeString": "type(library HelpersLib)"
                        }
                      },
                      "id": 49047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8655:21:111",
                      "memberName": "calculateMinAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47083,
                      "src": "8644:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 49052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8644:71:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8620:95:111"
                },
                {
                  "assignments": [
                    49058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49058,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nameLocation": "8740:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8726:27:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49056,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8726:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49057,
                        "nodeType": "ArrayTypeName",
                        "src": "8726:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49064,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8767:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 49061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8756:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49059,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8760:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49060,
                        "nodeType": "ArrayTypeName",
                        "src": "8760:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 49063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8756:13:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8726:43:111"
                },
                {
                  "expression": {
                    "id": 49069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49065,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49058,
                        "src": "8779:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 49067,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8793:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8779:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49068,
                      "name": "minAmountOutReth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49045,
                      "src": "8798:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8779:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49070,
                  "nodeType": "ExpressionStatement",
                  "src": "8779:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49074,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "8856:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49071,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "8842:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8845:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "8842:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8842:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49076,
                  "nodeType": "ExpressionStatement",
                  "src": "8842:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49082,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "8892:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 49081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8884:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49080,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8884:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8884:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49084,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49001,
                        "src": "8897:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49077,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48992,
                        "src": "8872:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8876:7:111",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "8872:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8872:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49086,
                  "nodeType": "ExpressionStatement",
                  "src": "8872:41:111"
                },
                {
                  "assignments": [
                    49088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49088,
                      "mutability": "mutable",
                      "name": "ratePreRedeem",
                      "nameLocation": "8929:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8924:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49087,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8924:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49092,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49089,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48992,
                        "src": "8945:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8949:15:111",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4959,
                      "src": "8945:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 49091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8945:21:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8924:42:111"
                },
                {
                  "assignments": [
                    49094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49094,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "8982:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "8977:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49093,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8977:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49103,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49097,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "9018:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49098,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "9037:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49099,
                        "name": "rEthAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50646,
                        "src": "9056:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49100,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49001,
                        "src": "9078:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49101,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49058,
                        "src": "9107:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 49095,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48992,
                        "src": "8994:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8998:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "8994:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 49102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8994:136:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8977:153:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49104,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "9140:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9143:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "9140:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9140:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49108,
                  "nodeType": "ExpressionStatement",
                  "src": "9140:14:111"
                },
                {
                  "assignments": [
                    49110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49110,
                      "mutability": "mutable",
                      "name": "ratePostRedeem",
                      "nameLocation": "9170:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "9165:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49109,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9165:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49114,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49111,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48992,
                        "src": "9187:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9191:15:111",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4959,
                      "src": "9187:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 49113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9187:21:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9165:43:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49116,
                            "name": "ratePreRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49088,
                            "src": "9271:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316535",
                            "id": 49117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9287:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "1e5"
                          },
                          "src": "9271:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49119,
                            "name": "ratePostRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49110,
                            "src": "9294:14:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316535",
                            "id": 49120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9311:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "1e5"
                          },
                          "src": "9294:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9271:43:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49115,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "9260:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9260:55:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49124,
                  "nodeType": "ExpressionStatement",
                  "src": "9260:55:111"
                },
                {
                  "assignments": [
                    49126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49126,
                      "mutability": "mutable",
                      "name": "rEthBalancePost",
                      "nameLocation": "9356:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49146,
                      "src": "9351:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49125,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9351:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49131,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "9407:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49128,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "9387:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49127,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "9374:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9374:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9397:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "9374:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9374:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9351:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49135,
                          "name": "rEthBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49126,
                          "src": "9443:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9461:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9443:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49134,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "9432:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9432:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49139,
                  "nodeType": "ExpressionStatement",
                  "src": "9432:31:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49141,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49094,
                          "src": "9484:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 49142,
                          "name": "rEthBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49126,
                          "src": "9497:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9484:28:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49140,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "9473:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9473:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49145,
                  "nodeType": "ExpressionStatement",
                  "src": "9473:40:111"
                }
              ]
            },
            "functionSelector": "b244bf46",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_exchange_rate_equilibrium",
            "nameLocation": "8155:30:111",
            "parameters": {
              "id": 48985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8185:2:111"
            },
            "returnParameters": {
              "id": 48986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8195:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49286,
            "nodeType": "FunctionDefinition",
            "src": "9530:1145:111",
            "nodes": [],
            "body": {
              "id": 49285,
              "nodeType": "Block",
              "src": "9568:1107:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49150,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "9603:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 49151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9603:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 49152,
                  "nodeType": "ExpressionStatement",
                  "src": "9603:16:111"
                },
                {
                  "assignments": [
                    49155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49155,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "9635:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "9630:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 49154,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49153,
                          "name": "IOZL",
                          "nameLocations": [
                            "9630:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "9630:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "9630:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49162,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49159,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "9654:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 49158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9646:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9646:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9646:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49156,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "9641:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 49161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9641:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9630:34:111"
                },
                {
                  "assignments": [
                    49164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49164,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "9680:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "9675:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9675:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49167,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "9712:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49165,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49155,
                        "src": "9698:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9702:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "9698:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9698:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9675:43:111"
                },
                {
                  "assignments": [
                    49171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49171,
                      "mutability": "mutable",
                      "name": "rEthBalancePre",
                      "nameLocation": "9733:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "9728:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49170,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9728:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49178,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49176,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "9783:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49173,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "9763:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49172,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "9750:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9750:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9773:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "9750:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9750:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9728:61:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49180,
                          "name": "rEthBalancePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49171,
                          "src": "9810:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9828:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9810:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49179,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "9799:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9799:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49184,
                  "nodeType": "ExpressionStatement",
                  "src": "9799:31:111"
                },
                {
                  "assignments": [
                    49186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49186,
                      "mutability": "mutable",
                      "name": "rEthToRedeem",
                      "nameLocation": "9854:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "9849:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9849:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49187,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49164,
                            "src": "9870:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 49190,
                                  "name": "QuoteAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4820,
                                  "src": "9908:10:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                    "typeString": "type(enum QuoteAsset)"
                                  }
                                },
                                "id": 49191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "9919:4:111",
                                "memberName": "rETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4819,
                                "src": "9908:15:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              ],
                              "expression": {
                                "id": 49188,
                                "name": "OZL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49155,
                                "src": "9888:3:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOZL_$4996",
                                  "typeString": "contract IOZL"
                                }
                              },
                              "id": 49189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9892:15:111",
                              "memberName": "getExchangeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4954,
                              "src": "9888:19:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                                "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                              }
                            },
                            "id": 49192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9888:36:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9870:54:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49194,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9869:56:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9928:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "9869:66:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9849:86:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 49201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9968:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 49200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9961:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 49199,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "9961:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9961:9:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 49198,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "9945:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 49203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9945:26:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49204,
                  "nodeType": "ExpressionStatement",
                  "src": "9945:26:111"
                },
                {
                  "assignments": [
                    49206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49206,
                      "mutability": "mutable",
                      "name": "minAmountOutReth",
                      "nameLocation": "9994:16:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "9989:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49205,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9989:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49214,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49209,
                        "name": "rEthToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49186,
                        "src": "10046:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49210,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "10060:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10063:18:111",
                          "memberName": "getDefaultSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5410,
                          "src": "10060:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                            "typeString": "function () view external returns (uint16)"
                          }
                        },
                        "id": 49212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10060:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 49207,
                        "name": "HelpersLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47295,
                        "src": "10013:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelpersLib_$47295_$",
                          "typeString": "type(library HelpersLib)"
                        }
                      },
                      "id": 49208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10024:21:111",
                      "memberName": "calculateMinAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47083,
                      "src": "10013:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 49213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10013:71:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9989:95:111"
                },
                {
                  "assignments": [
                    49219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49219,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nameLocation": "10109:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "10095:27:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49217,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10095:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49218,
                        "nodeType": "ArrayTypeName",
                        "src": "10095:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49225,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10136:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 49222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10125:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49220,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10129:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49221,
                        "nodeType": "ArrayTypeName",
                        "src": "10129:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 49224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10125:13:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10095:43:111"
                },
                {
                  "expression": {
                    "id": 49230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49226,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49219,
                        "src": "10148:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 49228,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10162:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10148:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49229,
                      "name": "minAmountOutReth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49206,
                      "src": "10167:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10148:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49231,
                  "nodeType": "ExpressionStatement",
                  "src": "10148:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49235,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "10225:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49232,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "10211:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10214:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "10211:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10211:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49237,
                  "nodeType": "ExpressionStatement",
                  "src": "10211:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49243,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "10261:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 49242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10253:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10253:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10253:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49245,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49164,
                        "src": "10266:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49238,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49155,
                        "src": "10241:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10245:7:111",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "10241:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10241:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49247,
                  "nodeType": "ExpressionStatement",
                  "src": "10241:41:111"
                },
                {
                  "assignments": [
                    49249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49249,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "10298:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "10293:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49248,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10293:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49258,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49252,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "10334:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49253,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "10353:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49254,
                        "name": "rEthAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50646,
                        "src": "10372:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49255,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49164,
                        "src": "10394:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49256,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49219,
                        "src": "10423:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 49250,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49155,
                        "src": "10310:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10314:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "10310:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 49257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10310:136:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10293:153:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49259,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "10456:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10459:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "10456:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10456:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49263,
                  "nodeType": "ExpressionStatement",
                  "src": "10456:14:111"
                },
                {
                  "assignments": [
                    49265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49265,
                      "mutability": "mutable",
                      "name": "rEthBalancePost",
                      "nameLocation": "10511:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49285,
                      "src": "10506:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49264,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10506:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49272,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49270,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "10562:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49267,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "10542:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49266,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "10529:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10529:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10552:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "10529:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10529:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10506:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49274,
                          "name": "rEthBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49265,
                          "src": "10598:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10616:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10598:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49273,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "10587:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10587:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49278,
                  "nodeType": "ExpressionStatement",
                  "src": "10587:31:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49280,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49249,
                          "src": "10639:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 49281,
                          "name": "rEthBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49265,
                          "src": "10652:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10639:28:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49279,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "10628:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10628:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49284,
                  "nodeType": "ExpressionStatement",
                  "src": "10628:40:111"
                }
              ]
            },
            "functionSelector": "b56231cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_redeem_in_rETH",
            "nameLocation": "9539:19:111",
            "parameters": {
              "id": 49148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9558:2:111"
            },
            "returnParameters": {
              "id": 49149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9568:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49426,
            "nodeType": "FunctionDefinition",
            "src": "11035:1147:111",
            "nodes": [],
            "body": {
              "id": 49425,
              "nodeType": "Block",
              "src": "11077:1105:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49290,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "11112:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 49291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11112:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 49292,
                  "nodeType": "ExpressionStatement",
                  "src": "11112:16:111"
                },
                {
                  "assignments": [
                    49295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49295,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "11144:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11139:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 49294,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49293,
                          "name": "IOZL",
                          "nameLocations": [
                            "11139:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "11139:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "11139:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49302,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49299,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "11163:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 49298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11155:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11155:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11155:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49296,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "11150:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 49301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11150:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11139:34:111"
                },
                {
                  "assignments": [
                    49304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49304,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "11189:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11184:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49303,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11184:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49309,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49307,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "11221:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49305,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49295,
                        "src": "11207:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11211:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "11207:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11207:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11184:43:111"
                },
                {
                  "assignments": [
                    49311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49311,
                      "mutability": "mutable",
                      "name": "wethBalancePre",
                      "nameLocation": "11243:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11238:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49310,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11238:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49318,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49316,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "11286:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49313,
                            "name": "wethAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50644,
                            "src": "11266:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49312,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5340,
                          "src": "11260:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$5340_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 49314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11260:15:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$5340",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 49315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11276:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5316,
                      "src": "11260:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11260:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11238:54:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49320,
                          "name": "wethBalancePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49311,
                          "src": "11313:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11331:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11313:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49319,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "11302:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11302:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49324,
                  "nodeType": "ExpressionStatement",
                  "src": "11302:31:111"
                },
                {
                  "assignments": [
                    49326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49326,
                      "mutability": "mutable",
                      "name": "wethToRedeem",
                      "nameLocation": "11349:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11344:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49325,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11344:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49337,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49327,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49304,
                            "src": "11365:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 49330,
                                  "name": "QuoteAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4820,
                                  "src": "11403:10:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                    "typeString": "type(enum QuoteAsset)"
                                  }
                                },
                                "id": 49331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "11414:3:111",
                                "memberName": "ETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4818,
                                "src": "11403:14:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              ],
                              "expression": {
                                "id": 49328,
                                "name": "OZL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49295,
                                "src": "11383:3:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOZL_$4996",
                                  "typeString": "contract IOZL"
                                }
                              },
                              "id": 49329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11387:15:111",
                              "memberName": "getExchangeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4954,
                              "src": "11383:19:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                                "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                              }
                            },
                            "id": 49332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11383:35:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11365:53:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49334,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11364:55:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11422:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "11364:65:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11344:85:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "353030",
                            "id": 49341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11463:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            }
                          ],
                          "id": 49340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11456:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 49339,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "11456:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11456:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 49338,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "11440:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 49343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11440:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49344,
                  "nodeType": "ExpressionStatement",
                  "src": "11440:28:111"
                },
                {
                  "assignments": [
                    49346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49346,
                      "mutability": "mutable",
                      "name": "minAmountOutWeth",
                      "nameLocation": "11508:16:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11503:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49345,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11503:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49354,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49349,
                        "name": "wethToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49326,
                        "src": "11560:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49350,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "11574:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11577:18:111",
                          "memberName": "getDefaultSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5410,
                          "src": "11574:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                            "typeString": "function () view external returns (uint16)"
                          }
                        },
                        "id": 49352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11574:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 49347,
                        "name": "HelpersLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47295,
                        "src": "11527:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelpersLib_$47295_$",
                          "typeString": "type(library HelpersLib)"
                        }
                      },
                      "id": 49348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11538:21:111",
                      "memberName": "calculateMinAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47083,
                      "src": "11527:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 49353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11527:71:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11503:95:111"
                },
                {
                  "assignments": [
                    49359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49359,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nameLocation": "11623:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11609:27:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49357,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11609:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49358,
                        "nodeType": "ArrayTypeName",
                        "src": "11609:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49365,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11650:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 49362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11639:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49360,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11643:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49361,
                        "nodeType": "ArrayTypeName",
                        "src": "11643:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 49364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11639:13:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11609:43:111"
                },
                {
                  "expression": {
                    "id": 49370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49366,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49359,
                        "src": "11662:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 49368,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11676:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11662:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49369,
                      "name": "minAmountOutWeth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49346,
                      "src": "11681:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11662:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49371,
                  "nodeType": "ExpressionStatement",
                  "src": "11662:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49375,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "11739:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49372,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "11725:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11728:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "11725:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11725:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49377,
                  "nodeType": "ExpressionStatement",
                  "src": "11725:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49383,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "11775:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 49382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11767:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49381,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11767:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11767:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49385,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49304,
                        "src": "11780:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49378,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49295,
                        "src": "11755:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11759:7:111",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "11755:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11755:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49387,
                  "nodeType": "ExpressionStatement",
                  "src": "11755:41:111"
                },
                {
                  "assignments": [
                    49389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49389,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "11812:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "11807:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49388,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11807:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49398,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49392,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "11848:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49393,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "11867:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49394,
                        "name": "wethAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50644,
                        "src": "11886:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49395,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49304,
                        "src": "11908:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49396,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49359,
                        "src": "11937:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 49390,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49295,
                        "src": "11824:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11828:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "11824:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 49397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11824:136:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11807:153:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49399,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "11971:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11974:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "11971:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11971:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49403,
                  "nodeType": "ExpressionStatement",
                  "src": "11971:14:111"
                },
                {
                  "assignments": [
                    49405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49405,
                      "mutability": "mutable",
                      "name": "wethBalancePost",
                      "nameLocation": "12034:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49425,
                      "src": "12029:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49404,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12029:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49412,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49410,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "12078:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49407,
                            "name": "wethAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50644,
                            "src": "12058:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49406,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5340,
                          "src": "12052:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$5340_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 49408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12052:15:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$5340",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 49409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12068:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5316,
                      "src": "12052:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12052:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12029:55:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49414,
                          "name": "wethBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49405,
                          "src": "12105:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12123:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12105:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49413,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "12094:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12094:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49418,
                  "nodeType": "ExpressionStatement",
                  "src": "12094:31:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49420,
                          "name": "wethBalancePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49405,
                          "src": "12146:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 49421,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49389,
                          "src": "12165:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12146:28:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49419,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "12135:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12135:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49424,
                  "nodeType": "ExpressionStatement",
                  "src": "12135:40:111"
                }
              ]
            },
            "documentation": {
              "id": 49287,
              "nodeType": "StructuredDocumentation",
              "src": "10683:347:111",
              "text": " This tests, and redeem_in_stable requires such a hight slippage for WETH \n because it's reflecting the incresae in the rate of rETH_ETH done by the mock call.\n The rETH-WETH Balancer pool doesn't recognize this increase so it's outputting\n a value based on the actual rETH-WETH rate, instead of the mocked one."
            },
            "functionSelector": "e5bb498e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_redeem_in_WETH_ETH",
            "nameLocation": "11044:23:111",
            "parameters": {
              "id": 49288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11067:2:111"
            },
            "returnParameters": {
              "id": 49289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11077:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49587,
            "nodeType": "FunctionDefinition",
            "src": "12189:1381:111",
            "nodes": [],
            "body": {
              "id": 49586,
              "nodeType": "Block",
              "src": "12236:1334:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49429,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "12271:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 49430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12271:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 49431,
                  "nodeType": "ExpressionStatement",
                  "src": "12271:16:111"
                },
                {
                  "assignments": [
                    49434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49434,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "12303:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12298:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 49433,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49432,
                          "name": "IOZL",
                          "nameLocations": [
                            "12298:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "12298:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "12298:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49441,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49438,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "12322:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 49437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12314:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12314:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12314:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49435,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "12309:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 49440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12309:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12298:34:111"
                },
                {
                  "assignments": [
                    49443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49443,
                      "mutability": "mutable",
                      "name": "balanceAlicePre",
                      "nameLocation": "12348:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12343:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49442,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12343:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49450,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49448,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "12400:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49445,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "12379:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49444,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "12366:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12366:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12390:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "12366:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12366:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12343:63:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49452,
                          "name": "balanceAlicePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49443,
                          "src": "12427:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12446:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12427:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49451,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "12416:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12416:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49456,
                  "nodeType": "ExpressionStatement",
                  "src": "12416:32:111"
                },
                {
                  "assignments": [
                    49458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49458,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "12464:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12459:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49457,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12459:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49463,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49461,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "12496:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49459,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49434,
                        "src": "12482:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12486:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "12482:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12482:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12459:43:111"
                },
                {
                  "assignments": [
                    49465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49465,
                      "mutability": "mutable",
                      "name": "usdToRedeem",
                      "nameLocation": "12517:11:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12512:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49464,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12512:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49473,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49466,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49458,
                        "src": "12531:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49467,
                            "name": "OZL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49434,
                            "src": "12549:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOZL_$4996",
                              "typeString": "contract IOZL"
                            }
                          },
                          "id": 49468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12553:15:111",
                          "memberName": "getExchangeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4959,
                          "src": "12549:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 49469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12549:21:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12531:39:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12573:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "12531:49:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12512:68:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "353030",
                            "id": 49477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12614:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            }
                          ],
                          "id": 49476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12607:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 49475,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "12607:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12607:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 49474,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "12591:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 49479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12591:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49480,
                  "nodeType": "ExpressionStatement",
                  "src": "12591:28:111"
                },
                {
                  "assignments": [
                    49482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49482,
                      "mutability": "mutable",
                      "name": "wethToRedeem",
                      "nameLocation": "12670:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12665:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12665:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49493,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49483,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49458,
                            "src": "12686:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 49486,
                                  "name": "QuoteAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4820,
                                  "src": "12724:10:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                    "typeString": "type(enum QuoteAsset)"
                                  }
                                },
                                "id": 49487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12735:3:111",
                                "memberName": "ETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4818,
                                "src": "12724:14:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              ],
                              "expression": {
                                "id": 49484,
                                "name": "OZL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49434,
                                "src": "12704:3:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOZL_$4996",
                                  "typeString": "contract IOZL"
                                }
                              },
                              "id": 49485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12708:15:111",
                              "memberName": "getExchangeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4954,
                              "src": "12704:19:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                                "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                              }
                            },
                            "id": 49488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12704:35:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12686:53:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49490,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12685:55:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12743:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "12685:65:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12665:85:111"
                },
                {
                  "assignments": [
                    49498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49498,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nameLocation": "12775:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12761:27:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49496,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12761:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49497,
                        "nodeType": "ArrayTypeName",
                        "src": "12761:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49513,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 49501,
                            "name": "wethToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49482,
                            "src": "12839:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 49502,
                            "name": "usdToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49465,
                            "src": "12853:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49503,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12838:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 49504,
                                "name": "OZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50735,
                                "src": "12868:2:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                                  "typeString": "contract ozIDiamond"
                                }
                              },
                              "id": 49505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12871:18:111",
                              "memberName": "getDefaultSlippage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5410,
                              "src": "12868:21:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                "typeString": "function () view external returns (uint16)"
                              }
                            },
                            "id": 49506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12868:23:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "3530",
                                "id": 49509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12900:2:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                "value": "50"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                }
                              ],
                              "id": 49508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12893:6:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 49507,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "12893:6:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12893:10:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "id": 49511,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12867:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                          "typeString": "uint16[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                          "typeString": "uint16[2] memory"
                        }
                      ],
                      "expression": {
                        "id": 49499,
                        "name": "HelpersLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47295,
                        "src": "12791:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelpersLib_$47295_$",
                          "typeString": "type(library HelpersLib)"
                        }
                      },
                      "id": 49500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12802:22:111",
                      "memberName": "calculateMinAmountsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47294,
                      "src": "12791:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint16_$2_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[2] memory,uint16[2] memory) pure returns (uint256[] memory)"
                      }
                    },
                    "id": 49512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12791:123:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12761:153:111"
                },
                {
                  "assignments": [
                    49515,
                    49517,
                    49519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49515,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "12932:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12926:7:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 49514,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12926:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49517,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "12943:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12935:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49516,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12935:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49519,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "12954:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "12946:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49518,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12946:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49532,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49522,
                        "name": "ALICE_PK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50618,
                        "src": "12967:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49524,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50628,
                            "src": "12995:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 49527,
                                "name": "OZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50735,
                                "src": "13010:2:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                                  "typeString": "contract ozIDiamond"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                                  "typeString": "contract ozIDiamond"
                                }
                              ],
                              "id": 49526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13002:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49525,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13002:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13002:11:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 49529,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49458,
                            "src": "13015:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 49523,
                          "name": "_getPermitHashOZL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45753,
                          "src": "12977:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                            "typeString": "function (address,address,uint256) view returns (bytes32)"
                          }
                        },
                        "id": 49530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12977:54:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 49520,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "12959:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12962:4:111",
                      "memberName": "sign",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21043,
                      "src": "12959:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (uint256,bytes32) pure external returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 49531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12959:73:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12925:107:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49536,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13065:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49533,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "13051:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13054:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "13051:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13051:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49538,
                  "nodeType": "ExpressionStatement",
                  "src": "13051:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49542,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13105:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49545,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "13132:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 49544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13124:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49543,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13124:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13124:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49547,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49458,
                        "src": "13149:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 49548,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13178:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 49549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13184:9:111",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13178:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49550,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49515,
                        "src": "13207:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 49551,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49517,
                        "src": "13210:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49552,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49519,
                        "src": "13213:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 49539,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49434,
                        "src": "13081:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13085:6:111",
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4939,
                      "src": "13081:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 49553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13081:143:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49554,
                  "nodeType": "ExpressionStatement",
                  "src": "13081:143:111"
                },
                {
                  "assignments": [
                    49556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49556,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "13240:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "13235:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13235:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49565,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49559,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13276:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49560,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13295:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49561,
                        "name": "daiAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50650,
                        "src": "13314:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49562,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49458,
                        "src": "13335:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49563,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49498,
                        "src": "13364:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 49557,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49434,
                        "src": "13252:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13256:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "13252:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 49564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13252:135:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13235:152:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49566,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "13398:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13401:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "13398:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13398:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49570,
                  "nodeType": "ExpressionStatement",
                  "src": "13398:14:111"
                },
                {
                  "assignments": [
                    49572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49572,
                      "mutability": "mutable",
                      "name": "balanceAlicePost",
                      "nameLocation": "13453:16:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49586,
                      "src": "13448:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49571,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13448:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49579,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49577,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13506:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49574,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "13485:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49573,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "13472:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13472:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13496:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "13472:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13472:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13448:64:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49581,
                          "name": "balanceAlicePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49572,
                          "src": "13533:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 49582,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49556,
                          "src": "13553:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13533:29:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49580,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "13522:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13522:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49585,
                  "nodeType": "ExpressionStatement",
                  "src": "13522:41:111"
                }
              ]
            },
            "functionSelector": "49bbcc4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_redeem_permit_in_stable",
            "nameLocation": "12198:28:111",
            "parameters": {
              "id": 49427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12226:2:111"
            },
            "returnParameters": {
              "id": 49428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12236:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49723,
            "nodeType": "FunctionDefinition",
            "src": "13577:1163:111",
            "nodes": [],
            "body": {
              "id": 49722,
              "nodeType": "Block",
              "src": "13617:1123:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49590,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "13652:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 49591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13652:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 49592,
                  "nodeType": "ExpressionStatement",
                  "src": "13652:16:111"
                },
                {
                  "assignments": [
                    49595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49595,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "13684:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "13679:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 49594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49593,
                          "name": "IOZL",
                          "nameLocations": [
                            "13679:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "13679:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "13679:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49602,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49599,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "13703:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 49598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13695:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49597,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13695:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13695:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49596,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "13690:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 49601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13690:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13679:34:111"
                },
                {
                  "assignments": [
                    49604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49604,
                      "mutability": "mutable",
                      "name": "balanceAlicePre",
                      "nameLocation": "13729:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "13724:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49603,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13724:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49611,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49609,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13781:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49606,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "13760:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49605,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "13747:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13747:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13771:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "13747:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13747:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13724:63:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49613,
                          "name": "balanceAlicePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49604,
                          "src": "13808:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13827:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13808:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49612,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "13797:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13797:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49617,
                  "nodeType": "ExpressionStatement",
                  "src": "13797:32:111"
                },
                {
                  "assignments": [
                    49619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49619,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "13845:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "13840:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49618,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13840:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49624,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49622,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "13877:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49620,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49595,
                        "src": "13863:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13867:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "13863:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13863:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13840:43:111"
                },
                {
                  "assignments": [
                    49626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49626,
                      "mutability": "mutable",
                      "name": "usdToRedeem",
                      "nameLocation": "13898:11:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "13893:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49625,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13893:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49634,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49627,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49619,
                        "src": "13912:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49628,
                            "name": "OZL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49595,
                            "src": "13930:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IOZL_$4996",
                              "typeString": "contract IOZL"
                            }
                          },
                          "id": 49629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13934:15:111",
                          "memberName": "getExchangeRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4959,
                          "src": "13930:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 49630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13930:21:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13912:39:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13954:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "13912:49:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13893:68:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "353030",
                            "id": 49638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13995:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            },
                            "value": "500"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500_by_1",
                              "typeString": "int_const 500"
                            }
                          ],
                          "id": 49637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13988:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 49636,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "13988:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13988:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 49635,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "13972:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 49640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13972:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49641,
                  "nodeType": "ExpressionStatement",
                  "src": "13972:28:111"
                },
                {
                  "assignments": [
                    49643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49643,
                      "mutability": "mutable",
                      "name": "wethToRedeem",
                      "nameLocation": "14051:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "14046:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49642,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14046:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49654,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49644,
                            "name": "ozlBalanceAlice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49619,
                            "src": "14067:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 49647,
                                  "name": "QuoteAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4820,
                                  "src": "14105:10:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                                    "typeString": "type(enum QuoteAsset)"
                                  }
                                },
                                "id": 49648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "14116:3:111",
                                "memberName": "ETH",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4818,
                                "src": "14105:14:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                                  "typeString": "enum QuoteAsset"
                                }
                              ],
                              "expression": {
                                "id": 49645,
                                "name": "OZL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49595,
                                "src": "14085:3:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOZL_$4996",
                                  "typeString": "contract IOZL"
                                }
                              },
                              "id": 49646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14089:15:111",
                              "memberName": "getExchangeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4954,
                              "src": "14085:19:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                                "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                              }
                            },
                            "id": 49649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14085:35:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14067:53:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49651,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14066:55:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 49652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14124:7:111",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "14066:65:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14046:85:111"
                },
                {
                  "assignments": [
                    49659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49659,
                      "mutability": "mutable",
                      "name": "minAmountsOut",
                      "nameLocation": "14156:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "14142:27:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49657,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14142:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49658,
                        "nodeType": "ArrayTypeName",
                        "src": "14142:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49674,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 49662,
                            "name": "wethToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49643,
                            "src": "14220:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 49663,
                            "name": "usdToRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49626,
                            "src": "14234:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49664,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14219:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 49665,
                                "name": "OZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50735,
                                "src": "14249:2:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                                  "typeString": "contract ozIDiamond"
                                }
                              },
                              "id": 49666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14252:18:111",
                              "memberName": "getDefaultSlippage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5410,
                              "src": "14249:21:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                "typeString": "function () view external returns (uint16)"
                              }
                            },
                            "id": 49667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14249:23:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "3530",
                                "id": 49670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14281:2:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                "value": "50"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                }
                              ],
                              "id": 49669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14274:6:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 49668,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "14274:6:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14274:10:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "id": 49672,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14248:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                          "typeString": "uint16[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                          "typeString": "uint16[2] memory"
                        }
                      ],
                      "expression": {
                        "id": 49660,
                        "name": "HelpersLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47295,
                        "src": "14172:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelpersLib_$47295_$",
                          "typeString": "type(library HelpersLib)"
                        }
                      },
                      "id": 49661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14183:22:111",
                      "memberName": "calculateMinAmountsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47294,
                      "src": "14172:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint16_$2_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[2] memory,uint16[2] memory) pure returns (uint256[] memory)"
                      }
                    },
                    "id": 49673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14172:123:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14142:153:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49678,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "14337:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49675,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "14323:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14326:10:111",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22008,
                      "src": "14323:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 49679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14323:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49680,
                  "nodeType": "ExpressionStatement",
                  "src": "14323:20:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49686,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "14373:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 49685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14365:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49684,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14365:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14365:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49688,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49619,
                        "src": "14378:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49681,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49595,
                        "src": "14353:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14357:7:111",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "14353:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14353:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49690,
                  "nodeType": "ExpressionStatement",
                  "src": "14353:41:111"
                },
                {
                  "assignments": [
                    49692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49692,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "14410:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "14405:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49691,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14405:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49701,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49695,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "14446:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49696,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "14465:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49697,
                        "name": "daiAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50650,
                        "src": "14484:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49698,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49619,
                        "src": "14505:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49699,
                        "name": "minAmountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49659,
                        "src": "14534:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 49693,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49595,
                        "src": "14422:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14426:6:111",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4995,
                      "src": "14422:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 49700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14422:135:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14405:152:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49702,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "14568:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14571:9:111",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22025,
                      "src": "14568:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 49705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14568:14:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49706,
                  "nodeType": "ExpressionStatement",
                  "src": "14568:14:111"
                },
                {
                  "assignments": [
                    49708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49708,
                      "mutability": "mutable",
                      "name": "balanceAlicePost",
                      "nameLocation": "14623:16:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49722,
                      "src": "14618:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49707,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14618:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49715,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49713,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "14676:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49710,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "14655:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49709,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "14642:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14642:23:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14666:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "14642:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14642:40:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14618:64:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49717,
                          "name": "balanceAlicePost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49708,
                          "src": "14703:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 49718,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49692,
                          "src": "14723:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14703:29:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49716,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "14692:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14692:41:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49721,
                  "nodeType": "ExpressionStatement",
                  "src": "14692:41:111"
                }
              ]
            },
            "functionSelector": "0a1ce092",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_redeem_in_stable",
            "nameLocation": "13586:21:111",
            "parameters": {
              "id": 49588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13607:2:111"
            },
            "returnParameters": {
              "id": 49589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13617:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49732,
            "nodeType": "FunctionDefinition",
            "src": "14772:110:111",
            "nodes": [],
            "body": {
              "id": 49731,
              "nodeType": "Block",
              "src": "14840:42:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49728,
                      "name": "test_redeem_in_WETH_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49426,
                      "src": "14850:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14850:25:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49730,
                  "nodeType": "ExpressionStatement",
                  "src": "14850:25:111"
                }
              ]
            },
            "functionSelector": "d7a83436",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49726,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49725,
                  "name": "pauseBalancerPool",
                  "nameLocations": [
                    "14822:17:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52763,
                  "src": "14822:17:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "14822:17:111"
              }
            ],
            "name": "test_redeem_in_WETH_paused_pool",
            "nameLocation": "14781:31:111",
            "parameters": {
              "id": 49724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14812:2:111"
            },
            "returnParameters": {
              "id": 49727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14840:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49809,
            "nodeType": "FunctionDefinition",
            "src": "15023:643:111",
            "nodes": [],
            "body": {
              "id": 49808,
              "nodeType": "Block",
              "src": "15082:584:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49735,
                      "name": "test_claim_OZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48897,
                      "src": "15116:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_ozIToken_$5857_$",
                        "typeString": "function () returns (contract ozIToken)"
                      }
                    },
                    "id": 49736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15116:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "id": 49737,
                  "nodeType": "ExpressionStatement",
                  "src": "15116:16:111"
                },
                {
                  "assignments": [
                    49740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49740,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "15166:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49808,
                      "src": "15161:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 49739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49738,
                          "name": "IOZL",
                          "nameLocations": [
                            "15161:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "15161:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "15161:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49747,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49744,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "15185:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 49743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15177:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49742,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15177:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15177:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49741,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "15172:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 49746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15172:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15161:34:111"
                },
                {
                  "assignments": [
                    49749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49749,
                      "mutability": "mutable",
                      "name": "rateUsd",
                      "nameLocation": "15211:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49808,
                      "src": "15206:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49748,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15206:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49755,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49752,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "15241:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 49753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15252:3:111",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4817,
                        "src": "15241:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 49750,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49740,
                        "src": "15221:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15225:15:111",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4954,
                      "src": "15221:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 49754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15221:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15206:50:111"
                },
                {
                  "assignments": [
                    49757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49757,
                      "mutability": "mutable",
                      "name": "rateEth",
                      "nameLocation": "15271:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49808,
                      "src": "15266:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49756,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15266:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49763,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49760,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "15301:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 49761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15312:3:111",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4818,
                        "src": "15301:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 49758,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49740,
                        "src": "15281:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15285:15:111",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4954,
                      "src": "15281:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 49762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15281:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15266:50:111"
                },
                {
                  "assignments": [
                    49765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49765,
                      "mutability": "mutable",
                      "name": "rateReth",
                      "nameLocation": "15331:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49808,
                      "src": "15326:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49764,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15326:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49771,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49768,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "15362:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 49769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "15373:4:111",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4819,
                        "src": "15362:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 49766,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49740,
                        "src": "15342:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 49767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15346:15:111",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4954,
                      "src": "15342:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 49770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15342:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15326:52:111"
                },
                {
                  "assignments": [
                    49773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49773,
                      "mutability": "mutable",
                      "name": "diffUSDETH",
                      "nameLocation": "15420:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49808,
                      "src": "15415:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49772,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15415:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49781,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49775,
                        "name": "rateUsd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49749,
                        "src": "15452:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49776,
                        "name": "rateEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49757,
                        "src": "15461:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49777,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "15470:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15473:7:111",
                          "memberName": "ETH_USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5440,
                          "src": "15470:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 49779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15470:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49774,
                      "name": "_getRateDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46287,
                      "src": "15433:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 49780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15433:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15415:68:111"
                },
                {
                  "assignments": [
                    49783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49783,
                      "mutability": "mutable",
                      "name": "diffETHRETH",
                      "nameLocation": "15498:11:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 49808,
                      "src": "15493:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49782,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15493:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49791,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49785,
                        "name": "rateEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49757,
                        "src": "15531:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49786,
                        "name": "rateReth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49765,
                        "src": "15540:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49787,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "15550:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15553:8:111",
                          "memberName": "rETH_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5435,
                          "src": "15550:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () external returns (uint256)"
                          }
                        },
                        "id": 49789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15550:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49784,
                      "name": "_getRateDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46287,
                      "src": "15512:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 49790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15512:52:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15493:71:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 49799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49793,
                            "name": "diffUSDETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49773,
                            "src": "15586:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 49794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15600:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15586:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49796,
                            "name": "diffUSDETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49773,
                            "src": "15605:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 49797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15619:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15605:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15586:34:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49792,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "15575:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15575:46:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49801,
                  "nodeType": "ExpressionStatement",
                  "src": "15575:46:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49803,
                          "name": "diffETHRETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49783,
                          "src": "15642:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15657:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15642:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49802,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "15631:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15631:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49807,
                  "nodeType": "ExpressionStatement",
                  "src": "15631:28:111"
                }
              ]
            },
            "functionSelector": "39349400",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_exchangeRate_with_circulatingSupply",
            "nameLocation": "15032:40:111",
            "parameters": {
              "id": 49733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15072:2:111"
            },
            "returnParameters": {
              "id": 49734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15082:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50004,
            "nodeType": "FunctionDefinition",
            "src": "15673:1758:111",
            "nodes": [],
            "body": {
              "id": 50003,
              "nodeType": "Block",
              "src": "15724:1707:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49814,
                      "mutability": "mutable",
                      "name": "oldSlot0data",
                      "nameLocation": "15793:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "15785:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49813,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15785:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " Pre-conditions",
                  "id": 49830,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49821,
                            "name": "wethAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50644,
                            "src": "15867:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 49822,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "15877:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 49823,
                            "name": "uniPoolFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50750,
                            "src": "15888:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 49818,
                                "name": "uniFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50684,
                                "src": "15847:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 49817,
                              "name": "IUniswapV3Factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44388,
                              "src": "15829:17:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$44388_$",
                                "typeString": "type(contract IUniswapV3Factory)"
                              }
                            },
                            "id": 49819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15829:29:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Factory_$44388",
                              "typeString": "contract IUniswapV3Factory"
                            }
                          },
                          "id": 49820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15859:7:111",
                          "memberName": "getPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44361,
                          "src": "15829:37:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                            "typeString": "function (address,address,uint24) view external returns (address)"
                          }
                        },
                        "id": 49824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15829:70:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15922:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15914:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 49825,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "15914:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15914:10:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 49815,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "15808:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 49816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15811:4:111",
                      "memberName": "load",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21030,
                      "src": "15808:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes32) view external returns (bytes32)"
                      }
                    },
                    "id": 49829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15808:126:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15785:149:111"
                },
                {
                  "assignments": [
                    49832,
                    49834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49832,
                      "mutability": "mutable",
                      "name": "oldSharedCash",
                      "nameLocation": "15953:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "15945:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49831,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15945:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49834,
                      "mutability": "mutable",
                      "name": "cashSlot",
                      "nameLocation": "15976:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "15968:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 49833,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15968:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49837,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49835,
                      "name": "_getSharedCashBalancer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46233,
                      "src": "15988:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 49836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15988:24:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15944:68:111"
                },
                {
                  "assignments": [
                    49839,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49839,
                      "mutability": "mutable",
                      "name": "rawAmount",
                      "nameLocation": "16029:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16024:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49838,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16024:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 49845,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49841,
                          "name": "Quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50638,
                          "src": "16060:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Quantity_$50638_$",
                            "typeString": "type(enum Setup.Quantity)"
                          }
                        },
                        "id": 49842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "16069:5:111",
                        "memberName": "SMALL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50636,
                        "src": "16060:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 49843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16076:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49840,
                      "name": "_dealUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51200,
                      "src": "16044:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Quantity_$50638_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (enum Setup.Quantity,bool) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 49844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16044:38:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16023:59:111"
                },
                {
                  "assignments": [
                    49848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49848,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "16159:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16154:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49847,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16154:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " Actions",
                  "id": 49858,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49849,
                      "name": "rawAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49839,
                      "src": "16170:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 49850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16182:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 49852,
                                "name": "testToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50686,
                                "src": "16201:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 49851,
                              "name": "IERC20Permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "16188:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                                "typeString": "type(contract IERC20Permit)"
                              }
                            },
                            "id": 49853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16188:23:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                              "typeString": "contract IERC20Permit"
                            }
                          },
                          "id": 49854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16212:8:111",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4760,
                          "src": "16188:32:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 49855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16188:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "16182:40:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16170:52:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16154:68:111"
                },
                {
                  "assignments": [
                    49861,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49861,
                      "mutability": "mutable",
                      "name": "ozERC20",
                      "nameLocation": "16242:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16233:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIToken_$5857",
                        "typeString": "contract ozIToken"
                      },
                      "typeName": {
                        "id": 49860,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 49859,
                          "name": "ozIToken",
                          "nameLocations": [
                            "16233:8:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5857,
                          "src": "16233:8:111"
                        },
                        "referencedDeclaration": 5857,
                        "src": "16233:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 49872,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49863,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "16290:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49864,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49848,
                        "src": "16301:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49865,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "16311:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49866,
                        "name": "ALICE_PK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50618,
                        "src": "16318:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 49867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16328:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 49868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16334:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "id": 49869,
                          "name": "Type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45125,
                          "src": "16340:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Type_$45125_$",
                            "typeString": "type(enum Type)"
                          }
                        },
                        "id": 49870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "16345:2:111",
                        "memberName": "IN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45123,
                        "src": "16340:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Type_$45125",
                          "typeString": "enum Type"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_enum$_Type_$45125",
                          "typeString": "enum Type"
                        }
                      ],
                      "id": 49862,
                      "name": "_createAndMintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45339,
                      "src": "16254:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$_t_bool_$_t_enum$_Type_$45125_$returns$_t_contract$_ozIToken_$5857_$_t_uint256_$",
                        "typeString": "function (address,uint256,address,uint256,bool,bool,enum Type) returns (contract ozIToken,uint256)"
                      }
                    },
                    "id": 49871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16254:103:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ozIToken_$5857_$_t_uint256_$",
                      "typeString": "tuple(contract ozIToken,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16232:125:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49874,
                        "name": "oldSlot0data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49814,
                        "src": "16386:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49875,
                        "name": "oldSharedCash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49832,
                        "src": "16400:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 49876,
                        "name": "cashSlot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49834,
                        "src": "16415:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 49873,
                      "name": "_resetPoolBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46117,
                      "src": "16367:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,bytes32)"
                      }
                    },
                    "id": 49877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16367:57:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49878,
                  "nodeType": "ExpressionStatement",
                  "src": "16367:57:111"
                },
                {
                  "expression": {
                    "id": 49892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49879,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49848,
                      "src": "16449:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49880,
                              "name": "rawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49839,
                              "src": "16461:9:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 49881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16473:1:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "16461:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 49883,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16460:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 49884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16478:2:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 49886,
                                  "name": "testToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50686,
                                  "src": "16497:9:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 49885,
                                "name": "IERC20Permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "16484:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                                  "typeString": "type(contract IERC20Permit)"
                                }
                              },
                              "id": 49887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16484:23:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 49888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16508:8:111",
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4760,
                            "src": "16484:32:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 49889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16484:34:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "16478:40:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16460:58:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16449:69:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49893,
                  "nodeType": "ExpressionStatement",
                  "src": "16449:69:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49895,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49861,
                        "src": "16542:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      {
                        "id": 49896,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50630,
                        "src": "16551:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49897,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "16556:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49898,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49848,
                        "src": "16567:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49894,
                      "name": "_mintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45524,
                      "src": "16528:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ozIToken,address,address,uint256)"
                      }
                    },
                    "id": 49899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16528:48:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49900,
                  "nodeType": "ExpressionStatement",
                  "src": "16528:48:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49901,
                      "name": "_mock_rETH_ETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46412,
                      "src": "16587:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16587:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49903,
                  "nodeType": "ExpressionStatement",
                  "src": "16587:16:111"
                },
                {
                  "assignments": [
                    49905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49905,
                      "mutability": "mutable",
                      "name": "wasCharged",
                      "nameLocation": "16641:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16636:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 49904,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16636:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49909,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49906,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "16654:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 49907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16657:12:111",
                      "memberName": "chargeOZLfee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5450,
                      "src": "16654:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () external returns (bool)"
                      }
                    },
                    "id": 49908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16654:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16636:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49911,
                        "name": "wasCharged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49905,
                        "src": "16692:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49910,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "16681:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16681:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49913,
                  "nodeType": "ExpressionStatement",
                  "src": "16681:22:111"
                },
                {
                  "assignments": [
                    49915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49915,
                      "mutability": "mutable",
                      "name": "ozlRethBalance",
                      "nameLocation": "16719:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16714:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49914,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16714:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49925,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49922,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "16777:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 49921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16769:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16769:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16769:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49917,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "16749:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49916,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "16736:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16736:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16759:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "16736:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16736:51:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16714:73:111"
                },
                {
                  "assignments": [
                    49928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49928,
                      "mutability": "mutable",
                      "name": "pastCalculatedRewardsETH",
                      "nameLocation": "16854:24:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16849:29:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49927,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16849:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " Post-conditions",
                  "id": 49933,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 49929,
                          "name": "OZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50735,
                          "src": "16881:2:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 49930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16884:14:111",
                        "memberName": "getLastRewards",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5474,
                        "src": "16881:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_LastRewards_$151_memory_ptr_$",
                          "typeString": "function () view external returns (struct LastRewards memory)"
                        }
                      },
                      "id": 49931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16881:19:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LastRewards_$151_memory_ptr",
                        "typeString": "struct LastRewards memory"
                      }
                    },
                    "id": 49932,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16901:16:111",
                    "memberName": "prevTotalRewards",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 150,
                    "src": "16881:36:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16849:68:111"
                },
                {
                  "assignments": [
                    49935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49935,
                      "mutability": "mutable",
                      "name": "ozelFeesETH",
                      "nameLocation": "16933:11:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "16928:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49934,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16928:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49943,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49940,
                        "name": "pastCalculatedRewardsETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49928,
                        "src": "16978:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 49941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17004:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49936,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "16947:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16950:14:111",
                          "memberName": "getProtocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5479,
                          "src": "16947:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 49938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16947:19:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 49939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16967:10:111",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5947,
                      "src": "16947:30:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 49942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16947:64:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16928:83:111"
                },
                {
                  "assignments": [
                    49945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49945,
                      "mutability": "mutable",
                      "name": "netOzelFeesETH",
                      "nameLocation": "17026:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "17021:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49944,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17021:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49956,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49946,
                      "name": "ozelFeesETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49935,
                      "src": "17043:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 49952,
                          "name": "ozelFeesETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49935,
                          "src": "17077:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31305f303030",
                          "id": 49953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17090:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10_000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530",
                              "id": 49949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17062:2:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              }
                            ],
                            "id": 49948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17057:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 49947,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17057:4:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17057:8:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17066:10:111",
                        "memberName": "mulDivDown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5947,
                        "src": "17057:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 49954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17057:40:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17043:54:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17021:76:111"
                },
                {
                  "assignments": [
                    49958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49958,
                      "mutability": "mutable",
                      "name": "ozelFeesRETH",
                      "nameLocation": "17113:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "17108:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49957,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17108:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49966,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17154:7:111",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49962,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "17163:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 49963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17166:8:111",
                          "memberName": "rETH_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5435,
                          "src": "17163:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () external returns (uint256)"
                          }
                        },
                        "id": 49964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17163:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49959,
                        "name": "netOzelFeesETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49945,
                        "src": "17128:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 49960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17143:10:111",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5947,
                      "src": "17128:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 49965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17128:49:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17108:69:111"
                },
                {
                  "assignments": [
                    49968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49968,
                      "mutability": "mutable",
                      "name": "feesDiff",
                      "nameLocation": "17192:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "17187:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49967,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17187:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49972,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49969,
                      "name": "ozlRethBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49915,
                      "src": "17203:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 49970,
                      "name": "ozelFeesRETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49958,
                      "src": "17220:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17203:29:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17187:45:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 49980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49974,
                            "name": "feesDiff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49968,
                            "src": "17253:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 49975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17265:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "17253:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49977,
                            "name": "feesDiff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49968,
                            "src": "17270:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 49978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17282:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17270:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17253:30:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49973,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "17242:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17242:42:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49982,
                  "nodeType": "ExpressionStatement",
                  "src": "17242:42:111"
                },
                {
                  "assignments": [
                    49984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49984,
                      "mutability": "mutable",
                      "name": "ownerBalance",
                      "nameLocation": "17300:12:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50003,
                      "src": "17295:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49983,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17295:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49989,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50626,
                        "src": "17348:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49986,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50646,
                            "src": "17328:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49985,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4814,
                          "src": "17315:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 49987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17315:22:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 49988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17338:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "17315:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 49990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17315:39:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17295:59:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49993,
                          "name": "ownerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49984,
                          "src": "17375:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17390:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17375:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49992,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "17364:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 49996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17364:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49997,
                  "nodeType": "ExpressionStatement",
                  "src": "17364:28:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49998,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "17403:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17406:16:111",
                      "memberName": "clearMockedCalls",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22099,
                      "src": "17403:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17403:21:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50002,
                  "nodeType": "ExpressionStatement",
                  "src": "17403:21:111"
                }
              ]
            },
            "functionSelector": "847f6715",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_chargeOZLfee_distributeFees",
            "nameLocation": "15682:32:111",
            "parameters": {
              "id": 49810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15714:2:111"
            },
            "returnParameters": {
              "id": 49811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15724:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50120,
            "nodeType": "FunctionDefinition",
            "src": "17538:904:111",
            "nodes": [],
            "body": {
              "id": 50119,
              "nodeType": "Block",
              "src": "17586:856:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50009,
                      "mutability": "mutable",
                      "name": "ozERC20",
                      "nameLocation": "17605:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50119,
                      "src": "17596:16:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIToken_$5857",
                        "typeString": "contract ozIToken"
                      },
                      "typeName": {
                        "id": 50008,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50007,
                          "name": "ozIToken",
                          "nameLocations": [
                            "17596:8:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5857,
                          "src": "17596:8:111"
                        },
                        "referencedDeclaration": 5857,
                        "src": "17596:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50018,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50013,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50686,
                            "src": "17654:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "4f7a656c2d4552433230",
                            "id": 50014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17665:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            "value": "Ozel-ERC20"
                          },
                          {
                            "hexValue": "6f7a4552433230",
                            "id": 50015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17679:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            },
                            "value": "ozERC20"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_69f1ee87e115974d10d6bdd8a66f0280d6968e6c384ca171166e9fbc02b5d0cb",
                              "typeString": "literal_string \"Ozel-ERC20\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_137a786bfc29b0339010fb942c47e698fc01875fe6ab09383fbae924312e07e0",
                              "typeString": "literal_string \"ozERC20\""
                            }
                          ],
                          "expression": {
                            "id": 50011,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "17624:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 50012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17627:13:111",
                          "memberName": "createOzToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5377,
                          "src": "17624:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,string memory,string memory) external returns (address)"
                          }
                        },
                        "id": 50016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17624:74:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50010,
                      "name": "ozIToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5857,
                      "src": "17615:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIToken_$5857_$",
                        "typeString": "type(contract ozIToken)"
                      }
                    },
                    "id": 50017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17615:84:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIToken_$5857",
                      "typeString": "contract ozIToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17596:103:111"
                },
                {
                  "assignments": [
                    50020,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50020,
                      "mutability": "mutable",
                      "name": "rawAmount",
                      "nameLocation": "17716:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50119,
                      "src": "17711:14:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50019,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17711:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 50026,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50022,
                          "name": "Quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50638,
                          "src": "17747:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Quantity_$50638_$",
                            "typeString": "type(enum Setup.Quantity)"
                          }
                        },
                        "id": 50023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "17756:3:111",
                        "memberName": "BIG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50637,
                        "src": "17747:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 50024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17761:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50021,
                      "name": "_dealUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51200,
                      "src": "17731:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Quantity_$50638_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (enum Setup.Quantity,bool) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 50025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17731:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17710:57:111"
                },
                {
                  "assignments": [
                    50028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50028,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "17782:8:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50119,
                      "src": "17777:13:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50027,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17777:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50038,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50029,
                      "name": "rawAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50020,
                      "src": "17793:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 50036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 50030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17805:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 50032,
                                "name": "testToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50686,
                                "src": "17824:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 50031,
                              "name": "IERC20Permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "17811:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4814_$",
                                "typeString": "type(contract IERC20Permit)"
                              }
                            },
                            "id": 50033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17811:23:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Permit_$4814",
                              "typeString": "contract IERC20Permit"
                            }
                          },
                          "id": 50034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17835:8:111",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4760,
                          "src": "17811:32:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 50035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17811:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "17805:40:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17793:52:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17777:68:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "39393030",
                            "id": 50042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17878:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9900_by_1",
                              "typeString": "int_const 9900"
                            },
                            "value": "9900"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9900_by_1",
                              "typeString": "int_const 9900"
                            }
                          ],
                          "id": 50041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17871:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 50040,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "17871:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17871:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 50039,
                      "name": "_changeSlippage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45807,
                      "src": "17855:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 50044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17855:29:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50045,
                  "nodeType": "ExpressionStatement",
                  "src": "17855:29:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50046,
                      "name": "_startCampaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "17895:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17895:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50048,
                  "nodeType": "ExpressionStatement",
                  "src": "17895:16:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50050,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50009,
                        "src": "17935:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      {
                        "id": 50051,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "17944:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50052,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "17951:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50053,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50028,
                        "src": "17962:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50049,
                      "name": "_mintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45524,
                      "src": "17921:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ozIToken,address,address,uint256)"
                      }
                    },
                    "id": 50054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17921:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50055,
                  "nodeType": "ExpressionStatement",
                  "src": "17921:50:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3135",
                        "id": 50057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17998:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        }
                      ],
                      "id": 50056,
                      "name": "_accrueRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46430,
                      "src": "17983:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 50058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17983:18:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50059,
                  "nodeType": "ExpressionStatement",
                  "src": "17983:18:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50061,
                          "name": "Quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50638,
                          "src": "18028:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Quantity_$50638_$",
                            "typeString": "type(enum Setup.Quantity)"
                          }
                        },
                        "id": 50062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "18037:3:111",
                        "memberName": "BIG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50637,
                        "src": "18028:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 50063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18042:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Quantity_$50638",
                          "typeString": "enum Setup.Quantity"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50060,
                      "name": "_dealUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51200,
                      "src": "18012:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Quantity_$50638_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (enum Setup.Quantity,bool) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 50064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18012:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 50065,
                  "nodeType": "ExpressionStatement",
                  "src": "18012:36:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50067,
                        "name": "ozERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50009,
                        "src": "18072:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        }
                      },
                      {
                        "id": 50068,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "18081:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50069,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50686,
                        "src": "18088:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50070,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50028,
                        "src": "18099:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ozIToken_$5857",
                          "typeString": "contract ozIToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50066,
                      "name": "_mintOzTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45524,
                      "src": "18058:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ozIToken_$5857_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ozIToken,address,address,uint256)"
                      }
                    },
                    "id": 50071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18058:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50072,
                  "nodeType": "ExpressionStatement",
                  "src": "18058:50:111"
                },
                {
                  "assignments": [
                    50074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50074,
                      "mutability": "mutable",
                      "name": "wasCharged",
                      "nameLocation": "18164:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50119,
                      "src": "18159:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50073,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18159:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50078,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50075,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "18177:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 50076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18180:12:111",
                      "memberName": "chargeOZLfee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5450,
                      "src": "18177:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () external returns (bool)"
                      }
                    },
                    "id": 50077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18177:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18159:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50080,
                        "name": "wasCharged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50074,
                        "src": "18215:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50079,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "18204:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18204:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50082,
                  "nodeType": "ExpressionStatement",
                  "src": "18204:22:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50086,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "18246:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50083,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "18237:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18240:5:111",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22003,
                      "src": "18237:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18237:15:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50088,
                  "nodeType": "ExpressionStatement",
                  "src": "18237:15:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50089,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "18262:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 50091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18265:11:111",
                      "memberName": "claimReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5511,
                      "src": "18262:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 50092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18262:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50093,
                  "nodeType": "ExpressionStatement",
                  "src": "18262:16:111"
                },
                {
                  "assignments": [
                    50096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50096,
                      "mutability": "mutable",
                      "name": "OZL",
                      "nameLocation": "18310:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50119,
                      "src": "18305:8:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOZL_$4996",
                        "typeString": "contract IOZL"
                      },
                      "typeName": {
                        "id": 50095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50094,
                          "name": "IOZL",
                          "nameLocations": [
                            "18305:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4996,
                          "src": "18305:4:111"
                        },
                        "referencedDeclaration": 4996,
                        "src": "18305:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50103,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50100,
                            "name": "ozlProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50741,
                            "src": "18329:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$43353",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 50099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18321:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18321:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18321:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50097,
                      "name": "IOZL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "18316:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOZL_$4996_$",
                        "typeString": "type(contract IOZL)"
                      }
                    },
                    "id": 50102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18316:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18305:34:111"
                },
                {
                  "assignments": [
                    50105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50105,
                      "mutability": "mutable",
                      "name": "rate",
                      "nameLocation": "18355:4:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50119,
                      "src": "18350:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50104,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18350:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50111,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50108,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "18382:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4820_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 50109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "18393:3:111",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4817,
                        "src": "18382:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4820",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 50106,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50096,
                        "src": "18362:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 50107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18366:15:111",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4954,
                      "src": "18362:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$4820_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 50110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18362:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18350:47:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "72617465333a20",
                        "id": 50115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18419:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c869688367818a253e5b37b8610ad4a4a0c0e25975beec4d62b71b7a1847ab3c",
                          "typeString": "literal_string \"rate3: \""
                        },
                        "value": "rate3: "
                      },
                      {
                        "id": 50116,
                        "name": "rate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50105,
                        "src": "18430:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c869688367818a253e5b37b8610ad4a4a0c0e25975beec4d62b71b7a1847ab3c",
                          "typeString": "literal_string \"rate3: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50112,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30366,
                        "src": "18407:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30366_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 50114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18415:3:111",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23010,
                      "src": "18407:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 50117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18407:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50118,
                  "nodeType": "ExpressionStatement",
                  "src": "18407:28:111"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_exchangeRate_edge_case",
            "nameLocation": "17547:27:111",
            "parameters": {
              "id": 50005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17574:2:111"
            },
            "returnParameters": {
              "id": 50006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17586:0:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50240,
            "nodeType": "FunctionDefinition",
            "src": "18469:1020:111",
            "nodes": [],
            "body": {
              "id": 50239,
              "nodeType": "Block",
              "src": "18540:949:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50131,
                      "mutability": "mutable",
                      "name": "ozlBalancePre",
                      "nameLocation": "18555:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "18550:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50130,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18550:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50134,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "18585:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50132,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50123,
                        "src": "18571:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 50133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18575:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "18571:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 50135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18571:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18550:41:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50138,
                          "name": "ozlBalancePre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50131,
                          "src": "18612:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18629:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18612:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50137,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "18601:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18601:30:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50142,
                  "nodeType": "ExpressionStatement",
                  "src": "18601:30:111"
                },
                {
                  "assignments": [
                    50144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50144,
                      "mutability": "mutable",
                      "name": "pendingOZLallocPre",
                      "nameLocation": "18647:18:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "18642:23:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18642:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50147,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50145,
                      "name": "_getPendingAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46329,
                      "src": "18668:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18668:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18642:49:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50149,
                          "name": "communityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50777,
                          "src": "18712:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50150,
                          "name": "pendingOZLallocPre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50144,
                          "src": "18731:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18712:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50148,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "18701:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18701:49:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50153,
                  "nodeType": "ExpressionStatement",
                  "src": "18701:49:111"
                },
                {
                  "assignments": [
                    50155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50155,
                      "mutability": "mutable",
                      "name": "wasCharged",
                      "nameLocation": "18767:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "18762:15:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50154,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18762:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50159,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50156,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "18780:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 50157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18783:12:111",
                      "memberName": "chargeOZLfee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5450,
                      "src": "18780:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () external returns (bool)"
                      }
                    },
                    "id": 50158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18780:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18762:35:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50161,
                        "name": "wasCharged",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50155,
                        "src": "18818:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50160,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "18807:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18807:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50163,
                  "nodeType": "ExpressionStatement",
                  "src": "18807:22:111"
                },
                {
                  "assignments": [
                    50165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50165,
                      "mutability": "mutable",
                      "name": "circulatingSupply",
                      "nameLocation": "18845:17:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "18840:22:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50164,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18840:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50168,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50166,
                      "name": "_getCirculatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46315,
                      "src": "18865:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18865:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18840:48:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50170,
                          "name": "circulatingSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50165,
                          "src": "18909:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18930:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18909:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50169,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "18898:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18898:34:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50174,
                  "nodeType": "ExpressionStatement",
                  "src": "18898:34:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50178,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "18952:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50175,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12104,
                        "src": "18943:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22302",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 50177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18946:5:111",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22003,
                      "src": "18943:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 50179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18943:15:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50180,
                  "nodeType": "ExpressionStatement",
                  "src": "18943:15:111"
                },
                {
                  "assignments": [
                    50182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50182,
                      "mutability": "mutable",
                      "name": "claimedReward",
                      "nameLocation": "18973:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "18968:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50181,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18968:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50186,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50183,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50735,
                        "src": "18989:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 50184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18992:11:111",
                      "memberName": "claimReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5511,
                      "src": "18989:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 50185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18989:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18968:37:111"
                },
                {
                  "expression": {
                    "id": 50190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50187,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50165,
                      "src": "19016:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 50188,
                        "name": "_getCirculatingSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46315,
                        "src": "19036:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 50189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19036:23:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19016:43:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50191,
                  "nodeType": "ExpressionStatement",
                  "src": "19016:43:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50193,
                          "name": "circulatingSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50165,
                          "src": "19080:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19100:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19080:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50192,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19069:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19069:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50197,
                  "nodeType": "ExpressionStatement",
                  "src": "19069:33:111"
                },
                {
                  "assignments": [
                    50199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50199,
                      "mutability": "mutable",
                      "name": "ozlBalanceAlice",
                      "nameLocation": "19118:15:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "19113:20:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50198,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19113:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50202,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50628,
                        "src": "19150:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50200,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50123,
                        "src": "19136:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 50201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19140:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "19136:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 50203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19136:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19113:43:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50206,
                          "name": "ozlBalanceAlice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50199,
                          "src": "19177:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19195:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19177:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50205,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19166:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19166:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50210,
                  "nodeType": "ExpressionStatement",
                  "src": "19166:31:111"
                },
                {
                  "assignments": [
                    50212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50212,
                      "mutability": "mutable",
                      "name": "pendingOZLallocPost",
                      "nameLocation": "19213:19:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "19208:24:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50211,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19208:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50215,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50213,
                      "name": "_getPendingAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46329,
                      "src": "19235:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19235:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19208:50:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50217,
                          "name": "claimedReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50182,
                          "src": "19279:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 50220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 50218,
                            "name": "pendingOZLallocPre",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50144,
                            "src": "19297:18:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 50219,
                            "name": "pendingOZLallocPost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50212,
                            "src": "19318:19:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19297:40:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19279:58:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50216,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19268:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19268:70:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50223,
                  "nodeType": "ExpressionStatement",
                  "src": "19268:70:111"
                },
                {
                  "assignments": [
                    50225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50225,
                      "mutability": "mutable",
                      "name": "recicledSupply",
                      "nameLocation": "19354:14:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50239,
                      "src": "19349:19:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50224,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19349:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50228,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50226,
                      "name": "_getRecicledSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46343,
                      "src": "19371:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19371:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19349:42:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50230,
                          "name": "recicledSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50225,
                          "src": "19412:14:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19430:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19412:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50229,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19401:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19401:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50234,
                  "nodeType": "ExpressionStatement",
                  "src": "19401:31:111"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 50235,
                        "name": "ozlBalanceAlice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50199,
                        "src": "19451:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50236,
                        "name": "claimedReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50182,
                        "src": "19468:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 50237,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19450:32:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 50129,
                  "id": 50238,
                  "nodeType": "Return",
                  "src": "19443:39:111"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkChargeFeeClaimOZL",
            "nameLocation": "18478:23:111",
            "parameters": {
              "id": 50124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50123,
                  "mutability": "mutable",
                  "name": "OZL",
                  "nameLocation": "18507:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 50240,
                  "src": "18502:8:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOZL_$4996",
                    "typeString": "contract IOZL"
                  },
                  "typeName": {
                    "id": 50122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50121,
                      "name": "IOZL",
                      "nameLocations": [
                        "18502:4:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4996,
                      "src": "18502:4:111"
                    },
                    "referencedDeclaration": 4996,
                    "src": "18502:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18501:10:111"
            },
            "returnParameters": {
              "id": 50129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50126,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50240,
                  "src": "18528:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50125,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18528:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50240,
                  "src": "18534:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50127,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18534:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18527:12:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 50302,
            "nodeType": "FunctionDefinition",
            "src": "19495:634:111",
            "nodes": [],
            "body": {
              "id": 50301,
              "nodeType": "Block",
              "src": "19644:485:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50255,
                      "mutability": "mutable",
                      "name": "pendingAllocPostRedeem",
                      "nameLocation": "19659:22:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50301,
                      "src": "19654:27:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50254,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19654:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50256,
                      "name": "_getPendingAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46329,
                      "src": "19684:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19684:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19654:53:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50260,
                          "name": "pendingAllocPreRedeem_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50242,
                          "src": "19728:22:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50261,
                          "name": "pendingAllocPostRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50255,
                          "src": "19754:22:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19728:48:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50259,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19717:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19717:60:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50264,
                  "nodeType": "ExpressionStatement",
                  "src": "19717:60:111"
                },
                {
                  "assignments": [
                    50266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50266,
                      "mutability": "mutable",
                      "name": "ozlBalanceOZPostRedeem",
                      "nameLocation": "19793:22:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50301,
                      "src": "19788:27:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50265,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19788:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50274,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50271,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "19840:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5656",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 50270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19832:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19832:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19832:11:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50267,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50245,
                        "src": "19818:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOZL_$4996",
                          "typeString": "contract IOZL"
                        }
                      },
                      "id": 50268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19822:9:111",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4852,
                      "src": "19818:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 50273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19818:26:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19788:56:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50276,
                          "name": "ozlBalanceOZPostRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50266,
                          "src": "19865:22:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50277,
                          "name": "communityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50777,
                          "src": "19891:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19865:41:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50275,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19854:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19854:53:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50280,
                  "nodeType": "ExpressionStatement",
                  "src": "19854:53:111"
                },
                {
                  "assignments": [
                    50282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50282,
                      "mutability": "mutable",
                      "name": "oldRecicledSupply",
                      "nameLocation": "19923:17:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50301,
                      "src": "19918:22:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50281,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19918:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50285,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50283,
                      "name": "_getRecicledSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46343,
                      "src": "19943:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19943:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19918:45:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50287,
                          "name": "oldRecicledSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50282,
                          "src": "19984:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50288,
                          "name": "ozlBalanceAlice_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50247,
                          "src": "20005:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19984:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50286,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10534,
                        10555
                      ],
                      "referencedDeclaration": 10534,
                      "src": "19973:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 50290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19973:49:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50291,
                  "nodeType": "ExpressionStatement",
                  "src": "19973:49:111"
                },
                {
                  "assignments": [
                    50293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50293,
                      "mutability": "mutable",
                      "name": "oldRewardRate",
                      "nameLocation": "20038:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 50301,
                      "src": "20033:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50292,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20033:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50296,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50294,
                      "name": "_getRewardRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46301,
                      "src": "20054:14:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 50295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20054:16:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20033:37:111"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 50297,
                        "name": "oldRecicledSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50282,
                        "src": "20089:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50298,
                        "name": "oldRewardRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50293,
                        "src": "20108:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 50299,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "20088:34:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 50253,
                  "id": 50300,
                  "nodeType": "Return",
                  "src": "20081:41:111"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkSupplyAndRate",
            "nameLocation": "19504:19:111",
            "parameters": {
              "id": 50248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50242,
                  "mutability": "mutable",
                  "name": "pendingAllocPreRedeem_",
                  "nameLocation": "19538:22:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 50302,
                  "src": "19533:27:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50241,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19533:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50245,
                  "mutability": "mutable",
                  "name": "OZL",
                  "nameLocation": "19575:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 50302,
                  "src": "19570:8:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOZL_$4996",
                    "typeString": "contract IOZL"
                  },
                  "typeName": {
                    "id": 50244,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50243,
                      "name": "IOZL",
                      "nameLocations": [
                        "19570:4:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4996,
                      "src": "19570:4:111"
                    },
                    "referencedDeclaration": 4996,
                    "src": "19570:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOZL_$4996",
                      "typeString": "contract IOZL"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50247,
                  "mutability": "mutable",
                  "name": "ozlBalanceAlice_",
                  "nameLocation": "19593:16:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 50302,
                  "src": "19588:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50246,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19588:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19523:92:111"
            },
            "returnParameters": {
              "id": 50253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50302,
                  "src": "19632:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50249,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19632:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50302,
                  "src": "19638:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50251,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19638:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19631:12:111"
            },
            "scope": 50303,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48251,
              "name": "TestMethods",
              "nameLocations": [
                "1230:11:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55024,
              "src": "1230:11:111"
            },
            "id": 48252,
            "nodeType": "InheritanceSpecifier",
            "src": "1230:11:111"
          }
        ],
        "canonicalName": "OZLtokenTest",
        "contractDependencies": [
          291,
          1096,
          1636,
          1800,
          1995,
          2107,
          2141,
          2152,
          2168,
          2247,
          3028,
          3407,
          4200,
          4384,
          9920,
          10264,
          43353
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50303,
          55024,
          46431,
          52666,
          20990,
          12111,
          12108,
          20941,
          16740,
          16450,
          15791,
          14219,
          13525,
          12051
        ],
        "name": "OZLtokenTest",
        "nameLocation": "1214:12:111",
        "scope": 50304,
        "usedErrors": [],
        "usedEvents": [
          10270,
          10274,
          10278,
          10282,
          10286,
          10290,
          10294,
          10298,
          10304,
          10310,
          10318,
          10326,
          10332,
          10338,
          10344,
          10350,
          12136,
          12141,
          12146,
          12153,
          12160,
          12167,
          17500,
          17506
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 111
}