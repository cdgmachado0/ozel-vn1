{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount0Requested",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1Requested",
          "type": "uint128"
        }
      ],
      "name": "collectProtocol",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount0",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "feeProtocol0",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "feeProtocol1",
          "type": "uint8"
        }
      ],
      "name": "setFeeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "collectProtocol(address,uint128,uint128)": "85b66729",
    "setFeeProtocol(uint8,uint8)": "8206a4d1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "amount0Requested",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1Requested",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocol",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "feeProtocol0",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "feeProtocol1",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeProtocol"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "collectProtocol(address,uint128,uint128)": {
            "params": {
              "amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
              "amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
              "recipient": "The address to which collected protocol fees should be sent"
            },
            "returns": {
              "amount0": "The protocol fee collected in token0",
              "amount1": "The protocol fee collected in token1"
            }
          },
          "setFeeProtocol(uint8,uint8)": {
            "params": {
              "feeProtocol0": "new protocol fee for token0 of the pool",
              "feeProtocol1": "new protocol fee for token1 of the pool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "collectProtocol(address,uint128,uint128)": {
            "notice": "Collect the protocol fee accrued to the pool"
          },
          "setFeeProtocol(uint8,uint8)": {
            "notice": "Set the denominator of the protocol's % share of the fees"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": "IUniswapV3PoolOwnerActions"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "id": 38815,
    "exportedSymbols": {
      "IUniswapV3PoolOwnerActions": [
        38814
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1143:81",
    "nodes": [
      {
        "id": 38790,
        "nodeType": "PragmaDirective",
        "src": "45:24:81",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 38814,
        "nodeType": "ContractDefinition",
        "src": "187:1000:81",
        "nodes": [
          {
            "id": 38799,
            "nodeType": "FunctionDefinition",
            "src": "440:73:81",
            "nodes": [],
            "documentation": {
              "id": 38792,
              "nodeType": "StructuredDocumentation",
              "src": "230:205:81",
              "text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
            },
            "functionSelector": "8206a4d1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeProtocol",
            "nameLocation": "449:14:81",
            "parameters": {
              "id": 38797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38794,
                  "mutability": "mutable",
                  "name": "feeProtocol0",
                  "nameLocation": "470:12:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38799,
                  "src": "464:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 38793,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38796,
                  "mutability": "mutable",
                  "name": "feeProtocol1",
                  "nameLocation": "490:12:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38799,
                  "src": "484:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 38795,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:40:81"
            },
            "returnParameters": {
              "id": 38798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:81"
            },
            "scope": 38814,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38813,
            "nodeType": "FunctionDefinition",
            "src": "1007:178:81",
            "nodes": [],
            "documentation": {
              "id": 38800,
              "nodeType": "StructuredDocumentation",
              "src": "519:483:81",
              "text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
            },
            "functionSelector": "85b66729",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collectProtocol",
            "nameLocation": "1016:15:81",
            "parameters": {
              "id": 38807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38802,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1049:9:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38813,
                  "src": "1041:17:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38804,
                  "mutability": "mutable",
                  "name": "amount0Requested",
                  "nameLocation": "1076:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38813,
                  "src": "1068:24:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 38803,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38806,
                  "mutability": "mutable",
                  "name": "amount1Requested",
                  "nameLocation": "1110:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38813,
                  "src": "1102:24:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 38805,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:101:81"
            },
            "returnParameters": {
              "id": 38812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38809,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1159:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38813,
                  "src": "1151:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 38808,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38811,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1176:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 38813,
                  "src": "1168:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 38810,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1150:34:81"
            },
            "scope": 38814,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IUniswapV3PoolOwnerActions",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 38791,
          "nodeType": "StructuredDocumentation",
          "src": "71:116:81",
          "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          38814
        ],
        "name": "IUniswapV3PoolOwnerActions",
        "nameLocation": "197:26:81",
        "scope": 38815,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 81
}