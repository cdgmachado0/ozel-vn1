{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin_",
          "type": "address"
        }
      ],
      "name": "changeOZLadmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLogic_",
          "type": "address"
        }
      ],
      "name": "changeOZLlogic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLogic_",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "changeOZLlogicAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransparentUpgradeableProxy",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeProxyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZLadmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZLlogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransparentUpgradeableProxy",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "getProxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransparentUpgradeableProxy",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "getProxyImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransparentUpgradeableProxy",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransparentUpgradeableProxy",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a348061007e6000396000f3fe6080604052600436106100dd5760003560e01c806399a88ec41161007f578063db7645ae11610059578063db7645ae14610210578063f1b5084b14610230578063f2fde38b14610245578063f3b7dead1461026557600080fd5b806399a88ec4146101bb578063d35a888e146101db578063d36de10b146101f057600080fd5b806371edfb9f116100bb57806371edfb9f146101555780637eff275e1461016a5780638da5cb5b1461018a5780639623609d146101a857600080fd5b8063204e1c7a146100e2578063335c7bbd1461011e578063715018a614610140575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461079b565b610285565b6040516001600160a01b03909116815260200160405180910390f35b34801561012a57600080fd5b5061013e610139366004610862565b610316565b005b34801561014c57600080fd5b5061013e610340565b34801561016157600080fd5b50610102610354565b34801561017657600080fd5b5061013e6101853660046108b2565b610378565b34801561019657600080fd5b506000546001600160a01b0316610102565b61013e6101b63660046108eb565b6103e0565b3480156101c757600080fd5b5061013e6101d63660046108b2565b61044f565b3480156101e757600080fd5b50610102610485565b3480156101fc57600080fd5b5061013e61020b36600461079b565b6104a4565b34801561021c57600080fd5b5061013e61022b36600461079b565b6104cc565b34801561023c57600080fd5b506101026104f1565b34801561025157600080fd5b5061013e61026036600461079b565b610553565b34801561027157600080fd5b5061010261028036600461079b565b6105ce565b6000806000836001600160a01b03166040516102ab90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146102e6576040519150601f19603f3d011682016040523d82523d6000602084013e6102eb565b606091505b5091509150816102fa57600080fd5b8080602001905181019061030e919061094d565b949350505050565b61031e6105f4565b60175461033c90630100000090046001600160a01b031683836103e0565b5050565b61034861067b565b61035260006106d5565b565b60175460009061037390630100000090046001600160a01b03166105ce565b905090565b61038061067b565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050505050565b6103e861067b565b60405163278f794360e11b81526001600160a01b03841690634f1ef28690349061041890869086906004016109b0565b6000604051808303818588803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b5050505050505050565b61045761067b565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016103aa565b60175460009061037390630100000090046001600160a01b0316610285565b6104ac6105f4565b6017546104c990630100000090046001600160a01b03168261044f565b50565b6104d46105f4565b6017546104c990630100000090046001600160a01b031682610378565b6040805180820190915260158152740399737bd36283937bc3c9034b71030b236b4b71d1605d1b602082015260175460009161053c91630100000090046001600160a01b0316610725565b50601754630100000090046001600160a01b031690565b61055b61067b565b6001600160a01b0381166105c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104c9816106d5565b6000806000836001600160a01b03166040516102ab906303e1469160e61b815260040190565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146103525760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016105bc565b6000546001600160a01b031633146103525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61033c828260405160240161073b9291906109d4565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b03811681146104c957600080fd5b6000602082840312156107ad57600080fd5b81356107b881610786565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126107e657600080fd5b813567ffffffffffffffff80821115610801576108016107bf565b604051601f8301601f19908116603f01168101908282118183101715610829576108296107bf565b8160405283815286602085880101111561084257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561087557600080fd5b823561088081610786565b9150602083013567ffffffffffffffff81111561089c57600080fd5b6108a8858286016107d5565b9150509250929050565b600080604083850312156108c557600080fd5b82356108d081610786565b915060208301356108e081610786565b809150509250929050565b60008060006060848603121561090057600080fd5b833561090b81610786565b9250602084013561091b81610786565b9150604084013567ffffffffffffffff81111561093757600080fd5b610943868287016107d5565b9150509250925092565b60006020828403121561095f57600080fd5b81516107b881610786565b6000815180845260005b8181101561099057602081850181015186830182015201610974565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038316815260406020820181905260009061030e9083018461096a565b6040815260006109e7604083018561096a565b905060018060a01b0383166020830152939250505056fea26469706673582212200abb3f9e092a9652246cd9a3af435fd91632e31b1da17d81e110bdec4c3a243a64736f6c63430008150033",
    "sourceMap": "413:1087:7:-:0;;;;;;;;;;;;-1:-1:-1;936:32:66;719:10:79;936:18:66;:32::i;:::-;413:1087:7;;2426:187:66;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:66;;;-1:-1:-1;;;;;;2534:17:66;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;413:1087:7:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100dd5760003560e01c806399a88ec41161007f578063db7645ae11610059578063db7645ae14610210578063f1b5084b14610230578063f2fde38b14610245578063f3b7dead1461026557600080fd5b806399a88ec4146101bb578063d35a888e146101db578063d36de10b146101f057600080fd5b806371edfb9f116100bb57806371edfb9f146101555780637eff275e1461016a5780638da5cb5b1461018a5780639623609d146101a857600080fd5b8063204e1c7a146100e2578063335c7bbd1461011e578063715018a614610140575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461079b565b610285565b6040516001600160a01b03909116815260200160405180910390f35b34801561012a57600080fd5b5061013e610139366004610862565b610316565b005b34801561014c57600080fd5b5061013e610340565b34801561016157600080fd5b50610102610354565b34801561017657600080fd5b5061013e6101853660046108b2565b610378565b34801561019657600080fd5b506000546001600160a01b0316610102565b61013e6101b63660046108eb565b6103e0565b3480156101c757600080fd5b5061013e6101d63660046108b2565b61044f565b3480156101e757600080fd5b50610102610485565b3480156101fc57600080fd5b5061013e61020b36600461079b565b6104a4565b34801561021c57600080fd5b5061013e61022b36600461079b565b6104cc565b34801561023c57600080fd5b506101026104f1565b34801561025157600080fd5b5061013e61026036600461079b565b610553565b34801561027157600080fd5b5061010261028036600461079b565b6105ce565b6000806000836001600160a01b03166040516102ab90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146102e6576040519150601f19603f3d011682016040523d82523d6000602084013e6102eb565b606091505b5091509150816102fa57600080fd5b8080602001905181019061030e919061094d565b949350505050565b61031e6105f4565b60175461033c90630100000090046001600160a01b031683836103e0565b5050565b61034861067b565b61035260006106d5565b565b60175460009061037390630100000090046001600160a01b03166105ce565b905090565b61038061067b565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050505050565b6103e861067b565b60405163278f794360e11b81526001600160a01b03841690634f1ef28690349061041890869086906004016109b0565b6000604051808303818588803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b5050505050505050565b61045761067b565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016103aa565b60175460009061037390630100000090046001600160a01b0316610285565b6104ac6105f4565b6017546104c990630100000090046001600160a01b03168261044f565b50565b6104d46105f4565b6017546104c990630100000090046001600160a01b031682610378565b6040805180820190915260158152740399737bd36283937bc3c9034b71030b236b4b71d1605d1b602082015260175460009161053c91630100000090046001600160a01b0316610725565b50601754630100000090046001600160a01b031690565b61055b61067b565b6001600160a01b0381166105c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104c9816106d5565b6000806000836001600160a01b03166040516102ab906303e1469160e61b815260040190565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146103525760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016105bc565b6000546001600160a01b031633146103525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61033c828260405160240161073b9291906109d4565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b03811681146104c957600080fd5b6000602082840312156107ad57600080fd5b81356107b881610786565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126107e657600080fd5b813567ffffffffffffffff80821115610801576108016107bf565b604051601f8301601f19908116603f01168101908282118183101715610829576108296107bf565b8160405283815286602085880101111561084257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561087557600080fd5b823561088081610786565b9150602083013567ffffffffffffffff81111561089c57600080fd5b6108a8858286016107d5565b9150509250929050565b600080604083850312156108c557600080fd5b82356108d081610786565b915060208301356108e081610786565b809150509250929050565b60008060006060848603121561090057600080fd5b833561090b81610786565b9250602084013561091b81610786565b9150604084013567ffffffffffffffff81111561093757600080fd5b610943868287016107d5565b9150509250925092565b60006020828403121561095f57600080fd5b81516107b881610786565b6000815180845260005b8181101561099057602081850181015186830182015201610974565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038316815260406020820181905260009061030e9083018461096a565b6040815260006109e7604083018561096a565b905060018060a01b0383166020830152939250505056fea26469706673582212200abb3f9e092a9652246cd9a3af435fd91632e31b1da17d81e110bdec4c3a243a64736f6c63430008150033",
    "sourceMap": "413:1087:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:438:75;;;;;;;;;;-1:-1:-1;650:438:75;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;664:32:104;;;646:51;;634:2;619:18;650:438:75;;;;;;;1283:215:7;;;;;;;;;;-1:-1:-1;1283:215:7;;;;;:::i;:::-;;:::i;:::-;;1824:101:66;;;;;;;;;;;;;:::i;775:133:7:-;;;;;;;;;;;;;:::i;1842:149:75:-;;;;;;;;;;-1:-1:-1;1842:149:75;;;;;:::i;:::-;;:::i;1201:85:66:-;;;;;;;;;;-1:-1:-1;1247:7:66;1273:6;-1:-1:-1;;;;;1273:6:66;1201:85;;2612:245:75;;;;;;:::i;:::-;;:::i;2196:150::-;;;;;;;;;;-1:-1:-1;2196:150:75;;;;;:::i;:::-;;:::i;627:142:7:-;;;;;;;;;;;;;:::i;1103:174::-;;;;;;;;;;-1:-1:-1;1103:174:7;;;;;:::i;:::-;;:::i;914:183::-;;;;;;;;;;-1:-1:-1;914:183:7;;;;;:::i;:::-;;:::i;480:141::-;;;;;;;;;;;;;:::i;2074:198:66:-;;;;;;;;;;-1:-1:-1;2074:198:66;;;;;:::i;:::-;;:::i;1248:420:75:-;;;;;;;;;;-1:-1:-1;1248:420:75;;;;;:::i;:::-;;:::i;650:438::-;747:7;924:12;938:23;973:5;-1:-1:-1;;;;;965:25:75;:40;;;;-1:-1:-1;;;3726:33:104;;3784:1;3775:11;;3525:267;965:40:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:82;;;;1023:7;1015:16;;;;;;1059:10;1048:33;;;;;;;;;;;;:::i;:::-;1041:40;650:438;-1:-1:-1;;;;650:438:75:o;1283:215:7:-;1372:35;:33;:35::i;:::-;1461:10;;1417:74;;1461:10;;;-1:-1:-1;;;;;1461:10:7;1474:9;1485:5;1417:14;:74::i;:::-;1283:215;;:::o;1824:101:66:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;775:133:7:-;889:10;;820:7;;846:55;;889:10;;;-1:-1:-1;;;;;889:10:7;846:13;:55::i;:::-;839:62;;775:133;:::o;1842:149:75:-;1094:13:66;:11;:13::i;:::-;1957:27:75::1;::::0;-1:-1:-1;;;1957:27:75;;-1:-1:-1;;;;;664:32:104;;;1957:27:75::1;::::0;::::1;646:51:104::0;1957:17:75;::::1;::::0;::::1;::::0;619:18:104;;1957:27:75::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1842:149:::0;;:::o;2612:245::-;1094:13:66;:11;:13::i;:::-;2788:62:75::1;::::0;-1:-1:-1;;;2788:62:75;;-1:-1:-1;;;;;2788:22:75;::::1;::::0;::::1;::::0;2818:9:::1;::::0;2788:62:::1;::::0;2829:14;;2845:4;;2788:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2612:245:::0;;;:::o;2196:150::-;1094:13:66;:11;:13::i;:::-;2308:31:75::1;::::0;-1:-1:-1;;;2308:31:75;;-1:-1:-1;;;;;664:32:104;;;2308:31:75::1;::::0;::::1;646:51:104::0;2308:15:75;::::1;::::0;::::1;::::0;619:18:104;;2308:31:75::1;500:203:104::0;627:142:7;750:10;;672:7;;698:64;;750:10;;;-1:-1:-1;;;;;750:10:7;698:22;:64::i;1103:174::-;1165:35;:33;:35::i;:::-;1247:10;;1210:60;;1247:10;;;-1:-1:-1;;;;;1247:10:7;1260:9;1210:7;:60::i;:::-;1103:174;:::o;914:183::-;976:35;:33;:35::i;:::-;1067:10;;1021:69;;1067:10;;;-1:-1:-1;;;;;1067:10:7;1080:9;1021:16;:69::i;480:141::-;539:48;;;;;;;;;;;;-1:-1:-1;;;539:48:7;;;;576:10;;-1:-1:-1;;539:48:7;;576:10;;;-1:-1:-1;;;;;576:10:7;539:11;:48::i;:::-;-1:-1:-1;604:10:7;;;;;-1:-1:-1;;;;;604:10:7;;480:141::o;2074:198:66:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:66;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:66;;5039:2:104;2154:73:66::1;::::0;::::1;5021:21:104::0;5078:2;5058:18;;;5051:30;5117:34;5097:18;;;5090:62;-1:-1:-1;;;5168:18:104;;;5161:36;5214:19;;2154:73:66::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;1248:420:75:-:0;1336:7;1504:12;1518:23;1553:5;-1:-1:-1;;;;;1545:25:75;:40;;;;-1:-1:-1;;;5445:33:104;;5503:1;5494:11;;5244:267;2507:156:29;736:45;2587:30;;;-1:-1:-1;;;;;2587:30:29;2573:10;:44;2565:91;;;;-1:-1:-1;;;2565:91:29;;5718:2:104;2565:91:29;;;5700:21:104;5757:2;5737:18;;;5730:30;5796:34;5776:18;;;5769:62;-1:-1:-1;;;5847:18:104;;;5840:32;5889:19;;2565:91:29;5516:398:104;1359:130:66;1247:7;1273:6;-1:-1:-1;;;;;1273:6:66;719:10:79;1422:23:66;1414:68;;;;-1:-1:-1;;;1414:68:66;;6121:2:104;1414:68:66;;;6103:21:104;;;6140:18;;;6133:30;6199:34;6179:18;;;6172:62;6251:18;;1414:68:66;5919:356:104;2426:187:66;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:66;;;-1:-1:-1;;;;;;2534:17:66;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;6994:145:47:-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:47;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:47;-1:-1:-1;;;7077:54:47;;;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;14:161:104:-;-1:-1:-1;;;;;119:31:104;;109:42;;99:70;;165:1;162;155:12;180:315;277:6;330:2;318:9;309:7;305:23;301:32;298:52;;;346:1;343;336:12;298:52;385:9;372:23;404:61;459:5;404:61;:::i;:::-;484:5;180:315;-1:-1:-1;;;180:315:104:o;708:127::-;769:10;764:3;760:20;757:1;750:31;800:4;797:1;790:15;824:4;821:1;814:15;840:718;882:5;935:3;928:4;920:6;916:17;912:27;902:55;;953:1;950;943:12;902:55;989:6;976:20;1015:18;1052:2;1048;1045:10;1042:36;;;1058:18;;:::i;:::-;1133:2;1127:9;1101:2;1187:13;;-1:-1:-1;;1183:22:104;;;1207:2;1179:31;1175:40;1163:53;;;1231:18;;;1251:22;;;1228:46;1225:72;;;1277:18;;:::i;:::-;1317:10;1313:2;1306:22;1352:2;1344:6;1337:18;1398:3;1391:4;1386:2;1378:6;1374:15;1370:26;1367:35;1364:55;;;1415:1;1412;1405:12;1364:55;1479:2;1472:4;1464:6;1460:17;1453:4;1445:6;1441:17;1428:54;1526:1;1519:4;1514:2;1506:6;1502:15;1498:26;1491:37;1546:6;1537:15;;;;;;840:718;;;;:::o;1563:485::-;1640:6;1648;1701:2;1689:9;1680:7;1676:23;1672:32;1669:52;;;1717:1;1714;1707:12;1669:52;1756:9;1743:23;1775:61;1830:5;1775:61;:::i;:::-;1855:5;-1:-1:-1;1911:2:104;1896:18;;1883:32;1938:18;1927:30;;1924:50;;;1970:1;1967;1960:12;1924:50;1993:49;2034:7;2025:6;2014:9;2010:22;1993:49;:::i;:::-;1983:59;;;1563:485;;;;;:::o;2053:486::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2275:9;2262:23;2294:61;2349:5;2294:61;:::i;:::-;2374:5;-1:-1:-1;2431:2:104;2416:18;;2403:32;2444:63;2403:32;2444:63;:::i;:::-;2526:7;2516:17;;;2053:486;;;;;:::o;2544:694::-;2668:6;2676;2684;2737:2;2725:9;2716:7;2712:23;2708:32;2705:52;;;2753:1;2750;2743:12;2705:52;2792:9;2779:23;2811:61;2866:5;2811:61;:::i;:::-;2891:5;-1:-1:-1;2948:2:104;2933:18;;2920:32;2961:63;2920:32;2961:63;:::i;:::-;3043:7;-1:-1:-1;3101:2:104;3086:18;;3073:32;3128:18;3117:30;;3114:50;;;3160:1;3157;3150:12;3114:50;3183:49;3224:7;3215:6;3204:9;3200:22;3183:49;:::i;:::-;3173:59;;;2544:694;;;;;:::o;3797:289::-;3875:6;3928:2;3916:9;3907:7;3903:23;3899:32;3896:52;;;3944:1;3941;3934:12;3896:52;3976:9;3970:16;3995:61;4050:5;3995:61;:::i;4091:422::-;4132:3;4170:5;4164:12;4197:6;4192:3;4185:19;4222:1;4232:162;4246:6;4243:1;4240:13;4232:162;;;4308:4;4364:13;;;4360:22;;4354:29;4336:11;;;4332:20;;4325:59;4261:12;4232:162;;;4236:3;4439:1;4432:4;4423:6;4418:3;4414:16;4410:27;4403:38;4502:4;4495:2;4491:7;4486:2;4478:6;4474:15;4470:29;4465:3;4461:39;4457:50;4450:57;;;4091:422;;;;:::o;4518:314::-;-1:-1:-1;;;;;4693:32:104;;4675:51;;4762:2;4757;4742:18;;4735:30;;;-1:-1:-1;;4782:44:104;;4807:18;;4799:6;4782:44;:::i;6280:316::-;6457:2;6446:9;6439:21;6420:4;6477:44;6517:2;6506:9;6502:18;6494:6;6477:44;:::i;:::-;6469:52;;6586:1;6582;6577:3;6573:11;6569:19;6561:6;6557:32;6552:2;6541:9;6537:18;6530:60;6280:316;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "changeOZLadmin(address)": "db7645ae",
    "changeOZLlogic(address)": "d36de10b",
    "changeOZLlogicAndCall(address,bytes)": "335c7bbd",
    "changeProxyAdmin(address,address)": "7eff275e",
    "getOZL()": "f1b5084b",
    "getOZLadmin()": "71edfb9f",
    "getOZLlogic()": "d35a888e",
    "getProxyAdmin(address)": "f3b7dead",
    "getProxyImplementation(address)": "204e1c7a",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "upgrade(address,address)": "99a88ec4",
    "upgradeAndCall(address,address,bytes)": "9623609d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin_\",\"type\":\"address\"}],\"name\":\"changeOZLadmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLogic_\",\"type\":\"address\"}],\"name\":\"changeOZLlogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLogic_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"changeOZLlogicAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZLadmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZLlogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/OZLadmin.sol\":\"OZLadmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x9f3804360f054def99001a1d13ec400a09c3a91d9036b9c3f30ee2c89fc0f108\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://04fb33cb9a4b13bc24fd8714eebfb640f677d094751b1862b2f694c2e9fd04a3\",\"dweb:/ipfs/QmbpEQ2qqVLpzBWtq5KH23QtAm5nD5nuubNWt2VCdPXWuZ\"]},\"contracts/facets/OZLadmin.sol\":{\"keccak256\":\"0x5083e1dcc4ca1cf23750af4ef28cfd4b107a49d04326ea2d67584d2d47beb1ba\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://24c92715c84e2fb1d757b7ca04064a251c5a6142607807877c2d8c5746d5c989\",\"dweb:/ipfs/QmPPgiDYR8TdWgVkF64TaDrZtMvDUG2rZP63cFGr4i5LQh\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x32804b629ea56692e6458dcaf1a4998c62ef289b071fe2690be171b25926f495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e39294f81c203fbf433ad126c3fddaaedd98df9561cf3155057bd4d8519727\",\"dweb:/ipfs/QmTh5bxtsnWEq3YshbU428zifKdWwiaWvJW19DRNmAnweb\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3\",\"dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeOZLadmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newLogic_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeOZLlogic"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newLogic_",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeOZLlogicAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeProxyAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZLadmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZLlogic",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProxyAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProxyImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransparentUpgradeableProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "changeProxyAdmin(address,address)": {
            "details": "Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."
          },
          "getProxyAdmin(address)": {
            "details": "Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."
          },
          "getProxyImplementation(address)": {
            "details": "Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgrade(address,address)": {
            "details": "Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."
          },
          "upgradeAndCall(address,address,bytes)": {
            "details": "Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/facets/OZLadmin.sol": "OZLadmin"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x9f3804360f054def99001a1d13ec400a09c3a91d9036b9c3f30ee2c89fc0f108",
        "urls": [
          "bzz-raw://04fb33cb9a4b13bc24fd8714eebfb640f677d094751b1862b2f694c2e9fd04a3",
          "dweb:/ipfs/QmbpEQ2qqVLpzBWtq5KH23QtAm5nD5nuubNWt2VCdPXWuZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/OZLadmin.sol": {
        "keccak256": "0x5083e1dcc4ca1cf23750af4ef28cfd4b107a49d04326ea2d67584d2d47beb1ba",
        "urls": [
          "bzz-raw://24c92715c84e2fb1d757b7ca04064a251c5a6142607807877c2d8c5746d5c989",
          "dweb:/ipfs/QmPPgiDYR8TdWgVkF64TaDrZtMvDUG2rZP63cFGr4i5LQh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x32804b629ea56692e6458dcaf1a4998c62ef289b071fe2690be171b25926f495",
        "urls": [
          "bzz-raw://f0e39294f81c203fbf433ad126c3fddaaedd98df9561cf3155057bd4d8519727",
          "dweb:/ipfs/QmTh5bxtsnWEq3YshbU428zifKdWwiaWvJW19DRNmAnweb"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c",
        "urls": [
          "bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3",
          "dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689",
        "urls": [
          "bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017",
          "dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/facets/OZLadmin.sol",
    "id": 693,
    "exportedSymbols": {
      "AppStorage": [
        61
      ],
      "ITransparentUpgradeableProxy": [
        38606
      ],
      "LibDiamond": [
        4384
      ],
      "OZLadmin": [
        692
      ],
      "ProxyAdmin": [
        38572
      ],
      "console": [
        25868
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1455:7",
    "nodes": [
      {
        "id": 574,
        "nodeType": "PragmaDirective",
        "src": "45:23:7",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 576,
        "nodeType": "ImportDirective",
        "src": "71:84:7",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
        "file": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 693,
        "sourceUnit": 38573,
        "symbolAliases": [
          {
            "foreign": {
              "id": 575,
              "name": "ProxyAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38572,
              "src": "79:10:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 578,
        "nodeType": "ImportDirective",
        "src": "156:55:7",
        "nodes": [],
        "absolutePath": "contracts/libraries/LibDiamond.sol",
        "file": "../libraries/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 693,
        "sourceUnit": 4385,
        "symbolAliases": [
          {
            "foreign": {
              "id": 577,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4384,
              "src": "164:10:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 580,
        "nodeType": "ImportDirective",
        "src": "212:45:7",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "../AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 693,
        "sourceUnit": 120,
        "symbolAliases": [
          {
            "foreign": {
              "id": 579,
              "name": "AppStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61,
              "src": "220:10:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 582,
        "nodeType": "ImportDirective",
        "src": "258:119:7",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "file": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 693,
        "sourceUnit": 38896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 581,
              "name": "ITransparentUpgradeableProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38606,
              "src": "266:28:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 583,
        "nodeType": "ImportDirective",
        "src": "379:31:7",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 693,
        "sourceUnit": 25869,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 692,
        "nodeType": "ContractDefinition",
        "src": "413:1087:7",
        "nodes": [
          {
            "id": 588,
            "nodeType": "VariableDeclaration",
            "src": "452:20:7",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s",
            "nameLocation": "471:1:7",
            "scope": 692,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AppStorage_$61_storage",
              "typeString": "struct AppStorage"
            },
            "typeName": {
              "id": 587,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 586,
                "name": "AppStorage",
                "nameLocations": [
                  "452:10:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61,
                "src": "452:10:7"
              },
              "referencedDeclaration": 61,
              "src": "452:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AppStorage_$61_storage_ptr",
                "typeString": "struct AppStorage"
              }
            },
            "visibility": "private"
          },
          {
            "id": 605,
            "nodeType": "FunctionDefinition",
            "src": "480:141:7",
            "nodes": [],
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "529:92:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "732e6f7a6c50726f787920696e2061646d696e3a20",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "551:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78da484783d4213f5a9aec424d1f21b100353530fe6618ceeba5877e316f0de0",
                          "typeString": "literal_string \"s.ozlProxy in admin: \""
                        },
                        "value": "s.ozlProxy in admin: "
                      },
                      {
                        "expression": {
                          "id": 597,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "576:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                            "typeString": "struct AppStorage storage ref"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "578:8:7",
                        "memberName": "ozlProxy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60,
                        "src": "576:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_78da484783d4213f5a9aec424d1f21b100353530fe6618ceeba5877e316f0de0",
                          "typeString": "literal_string \"s.ozlProxy in admin: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 593,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25868,
                        "src": "539:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$25868_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "547:3:7",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18563,
                      "src": "539:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "539:48:7"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 601,
                      "name": "s",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "604:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                        "typeString": "struct AppStorage storage ref"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "606:8:7",
                    "memberName": "ozlProxy",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 60,
                    "src": "604:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 592,
                  "id": 603,
                  "nodeType": "Return",
                  "src": "597:17:7"
                }
              ]
            },
            "functionSelector": "f1b5084b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZL",
            "nameLocation": "489:6:7",
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:2:7"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "520:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "519:9:7"
            },
            "scope": 692,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 618,
            "nodeType": "FunctionDefinition",
            "src": "627:142:7",
            "nodes": [],
            "body": {
              "id": 617,
              "nodeType": "Block",
              "src": "681:88:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 612,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "750:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                                "typeString": "struct AppStorage storage ref"
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "752:8:7",
                            "memberName": "ozlProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "750:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 611,
                          "name": "ITransparentUpgradeableProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38606,
                          "src": "721:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$38606_$",
                            "typeString": "type(contract ITransparentUpgradeableProxy)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      ],
                      "id": 610,
                      "name": "getProxyImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38477,
                      "src": "698:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ITransparentUpgradeableProxy_$38606_$returns$_t_address_$",
                        "typeString": "function (contract ITransparentUpgradeableProxy) view returns (address)"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "698:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 609,
                  "id": 616,
                  "nodeType": "Return",
                  "src": "691:71:7"
                }
              ]
            },
            "functionSelector": "d35a888e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZLlogic",
            "nameLocation": "636:11:7",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:7"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "672:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "671:9:7"
            },
            "scope": 692,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 631,
            "nodeType": "FunctionDefinition",
            "src": "775:133:7",
            "nodes": [],
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "829:79:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 625,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "889:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                                "typeString": "struct AppStorage storage ref"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "891:8:7",
                            "memberName": "ozlProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "889:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 624,
                          "name": "ITransparentUpgradeableProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38606,
                          "src": "860:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$38606_$",
                            "typeString": "type(contract ITransparentUpgradeableProxy)"
                          }
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "860:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      ],
                      "id": 623,
                      "name": "getProxyAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38511,
                      "src": "846:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ITransparentUpgradeableProxy_$38606_$returns$_t_address_$",
                        "typeString": "function (contract ITransparentUpgradeableProxy) view returns (address)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "846:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "839:62:7"
                }
              ]
            },
            "functionSelector": "71edfb9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZLadmin",
            "nameLocation": "784:11:7",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:7"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "820:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:9:7"
            },
            "scope": 692,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 650,
            "nodeType": "FunctionDefinition",
            "src": "914:183:7",
            "nodes": [],
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "966:131:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 636,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4384,
                        "src": "976:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$4384_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "987:22:7",
                      "memberName": "enforceIsContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3691,
                      "src": "976:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "976:35:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 643,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "1067:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                                "typeString": "struct AppStorage storage ref"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1069:8:7",
                            "memberName": "ozlProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "1067:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 642,
                          "name": "ITransparentUpgradeableProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38606,
                          "src": "1038:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$38606_$",
                            "typeString": "type(contract ITransparentUpgradeableProxy)"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1038:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      {
                        "id": 646,
                        "name": "newAdmin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "1080:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 641,
                      "name": "changeProxyAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38529,
                      "src": "1021:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ITransparentUpgradeableProxy_$38606_$_t_address_$returns$__$",
                        "typeString": "function (contract ITransparentUpgradeableProxy,address)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:69:7"
                }
              ]
            },
            "functionSelector": "db7645ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeOZLadmin",
            "nameLocation": "923:14:7",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "newAdmin_",
                  "nameLocation": "946:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "938:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "937:19:7"
            },
            "returnParameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "966:0:7"
            },
            "scope": 692,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 669,
            "nodeType": "FunctionDefinition",
            "src": "1103:174:7",
            "nodes": [],
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "1155:122:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 655,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4384,
                        "src": "1165:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$4384_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1176:22:7",
                      "memberName": "enforceIsContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3691,
                      "src": "1165:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:35:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 662,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "1247:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                                "typeString": "struct AppStorage storage ref"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1249:8:7",
                            "memberName": "ozlProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "1247:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 661,
                          "name": "ITransparentUpgradeableProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38606,
                          "src": "1218:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$38606_$",
                            "typeString": "type(contract ITransparentUpgradeableProxy)"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      {
                        "id": 665,
                        "name": "newLogic_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "1260:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 660,
                      "name": "upgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38547,
                      "src": "1210:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ITransparentUpgradeableProxy_$38606_$_t_address_$returns$__$",
                        "typeString": "function (contract ITransparentUpgradeableProxy,address)"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:60:7"
                }
              ]
            },
            "functionSelector": "d36de10b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeOZLlogic",
            "nameLocation": "1112:14:7",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "newLogic_",
                  "nameLocation": "1135:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "1127:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1126:19:7"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:7"
            },
            "scope": 692,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 691,
            "nodeType": "FunctionDefinition",
            "src": "1283:215:7",
            "nodes": [],
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "1362:136:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 676,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4384,
                        "src": "1372:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$4384_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1383:22:7",
                      "memberName": "enforceIsContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3691,
                      "src": "1372:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:35:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 683,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "1461:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppStorage_$61_storage",
                                "typeString": "struct AppStorage storage ref"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1463:8:7",
                            "memberName": "ozlProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "1461:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 682,
                          "name": "ITransparentUpgradeableProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38606,
                          "src": "1432:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$38606_$",
                            "typeString": "type(contract ITransparentUpgradeableProxy)"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      {
                        "id": 686,
                        "name": "newLogic_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "1474:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 687,
                        "name": "data_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "1485:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$38606",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 681,
                      "name": "upgradeAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38571,
                      "src": "1417:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ITransparentUpgradeableProxy_$38606_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ITransparentUpgradeableProxy,address,bytes memory)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:74:7"
                }
              ]
            },
            "functionSelector": "335c7bbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeOZLlogicAndCall",
            "nameLocation": "1292:21:7",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "newLogic_",
                  "nameLocation": "1322:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "1314:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "data_",
                  "nameLocation": "1346:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "1333:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:39:7"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:7"
            },
            "scope": 692,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 584,
              "name": "ProxyAdmin",
              "nameLocations": [
                "434:10:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38572,
              "src": "434:10:7"
            },
            "id": 585,
            "nodeType": "InheritanceSpecifier",
            "src": "434:10:7"
          }
        ],
        "canonicalName": "OZLadmin",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          692,
          38572,
          37861,
          39325
        ],
        "name": "OZLadmin",
        "nameLocation": "422:8:7",
        "scope": 693,
        "usedErrors": [],
        "usedEvents": [
          37762
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 7
}