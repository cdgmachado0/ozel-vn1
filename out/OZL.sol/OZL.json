{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "OZError01",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError02",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "OZError08",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "OZError09",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorCode",
          "type": "string"
        }
      ],
      "name": "OZError10",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "OZError18",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OZError19",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError20",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "OZError21",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum QuoteAsset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZ",
      "outputs": [
        {
          "internalType": "contract ozIDiamond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ozDiamond_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "communityAmount_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recicledSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ozlAmountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmountsOut_",
          "type": "uint256[]"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612c8a80620000f46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b604051610151919061232b565b60405180910390f35b61016d610168366004612353565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d36600461237f565b61037b565b60405160128152602001610151565b6101816103a1565b61016d6101c7366004612353565b6103b0565b6101816101da3660046123c0565b6103d2565b6101e761051f565b6040516001600160a01b039091168152602001610151565b61018161020d366004612424565b610561565b61018161022036600461250f565b6001600160a01b031660009081526033602052604090205490565b61024e6102493660046125a0565b610812565b005b61018161025e36600461250f565b6109af565b6101816109cd565b610181610a38565b610144610a7f565b61016d610289366004612353565b610a8e565b61016d61029c366004612353565b610b14565b61024e6102af366004612628565b610b22565b6101816102c236600461269f565b610c44565b610181610c6f565b6060603680546102de906126d8565b80601f016020809104026020016040519081016040528092919081815260200182805461030a906126d8565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610c7b565b60019150505b92915050565b600033610389858285610d9f565b610394858585610e19565b60019150505b9392505050565b60006103ab610fe7565b905090565b60003361036f8185856103c38383610c44565b6103cd9190612722565b610c7b565b6000670de0b6b3a7640000816103e661051f565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190612758565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba919061281d565b9050600060028660028111156104d2576104d2612836565b146104e6576104e18683611062565b6104e8565b815b905060006104f4610a38565b90508060000361050957509295945050505050565b61051485838361118c565b979650505050505050565b600061055261054f60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d5761284c565b90565b546001600160a01b0316919050565b60008061056c61051f565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190612758565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610643919061285f565b6001600160a01b031614801561066f57508060e001516001600160a01b0316866001600160a01b031614155b801561069157508060c001516001600160a01b0316866001600160a01b031614155b156106bf5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146106da576106da883387610d9f565b60006106f96106e960006103d2565b8790670de0b6b3a764000061118c565b90506000610773670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b919061281d565b84919061118c565b90506107808a85896111aa565b8260c001516001600160a01b0316886001600160a01b0316036107f557856000815181106107b0576107b061287c565b60200260200101518110156107db57604051631aa1e78f60e31b8152600481018290526024016106b6565b6107ea8360c001518a83611215565b945050505050610809565b61080283898b848a611229565b9450505050505b95945050505050565b600054610100900460ff16158080156108325750600054600160ff909116105b8061084c5750303b15801561084c575060005460ff166001145b6108af5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b6565b6000805460ff1916600117905580156108d2576000805461ff0019166101001790555b6108dc8686611244565b6108ff86604051806040016040528060018152602001603160f81b815250611279565b8361092e61054f60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d5761284c565b80546001600160a01b0319166001600160a01b039290921691909117905561095630846112aa565b610961308584610e19565b80156109a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b60006109d761051f565b6001600160a01b0316636a533a4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab919061281d565b6000610a4261051f565b6001600160a01b0316632b112e496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a14573d6000803e3d6000fd5b6060603780546102de906126d8565b60003381610a9c8286610c44565b905083811015610afc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b6565b610b098286868403610c7b565b506001949350505050565b60003361036f818585610e19565b83421115610b4c5760405163184f1e0160e11b8152600481018590524260248201526044016106b6565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b7b8c611389565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bd6826113b1565b90506000610be6828787876113ff565b9050896001600160a01b0316816001600160a01b031614610c2d57604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016106b6565b610c388a8a8a610c7b565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006103ab60006103d2565b6001600160a01b038316610cdd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b6565b6001600160a01b038216610d3e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b6565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610dab8484610c44565b90506000198114610e135781811015610e065760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b6565b610e138484848403610c7b565b50505050565b6001600160a01b038316610e7d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b6565b6001600160a01b038216610edf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b6565b6001600160a01b03831660009081526033602052604090205481811015610f575760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b6565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610f8e908490612722565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fda91815260200190565b60405180910390a3610e13565b60006103ab7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61101660655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b17905260009061109f61109961051f565b8261142e565b90506000818060200190518101906110b7919061281d565b905060008560028111156110cd576110cd612836565b036111555761114e6110dd61051f565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561111a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113e919061281d565b8590670de0b6b3a764000061118c565b9250611184565b600185600281111561116957611169612836565b03611184576111818482670de0b6b3a764000061118c565b92505b505092915050565b60008260001904841183021582026111a357600080fd5b5091020490565b6111b630848484611453565b60405163c3ae3a0960e01b8152600481018290526001600160a01b0383169063c3ae3a0990602401600060405180830381600087803b1580156111f857600080fd5b505af115801561120c573d6000803e3d6000fd5b50505050505050565b60006112228484846114be565b5092915050565b600061123a868686868660006114ee565b9695505050505050565b600054610100900460ff1661126b5760405162461bcd60e51b81526004016106b690612892565b61127582826116b5565b5050565b600054610100900460ff166112a05760405162461bcd60e51b81526004016106b690612892565b61127582826116f5565b6001600160a01b0382166113005760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b6565b80603560008282546113129190612722565b90915550506001600160a01b0382166000908152603360205260408120805483929061133f908490612722565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006103756113be610fe7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061141087878787611736565b9150915061141d81611823565b5090505b949350505050565b505050565b606061039a8383604051806060016040528060258152602001612c30602591396119dc565b6040516001600160a01b0380851660248301528316604482015260648101829052610e139085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a4a565b6040516001600160a01b03831660248201526044810182905261142990849063a9059cbb60e01b90606401611487565b600080808084600281111561150557611505612836565b0361151757505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561155b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157f91906128ed565b5050905080156115c1576115ba8383308d600001518e602001518c8c6000815181106115ad576115ad61287c565b6020026020010151611b1f565b93506115e1565b6115de83838c604001518d606001518e608001518c8c6000611c77565b93505b8960e001516001600160a01b0316896001600160a01b03160361167d5760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611653573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116779190612922565b506116a8565b6116a58a60e001518a8a8d600001518e60200151898c6001815181106115ad576115ad61287c565b93505b5050509695505050505050565b600054610100900460ff166116dc5760405162461bcd60e51b81526004016106b690612892565b60366116e88382612983565b5060376114298282612983565b600054610100900460ff1661171c5760405162461bcd60e51b81526004016106b690612892565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561176d575060009050600361181a565b8460ff16601b1415801561178557508460ff16601c14155b15611796575060009050600461181a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156117ea573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118135760006001925092505061181a565b9150600090505b94509492505050565b600081600481111561183757611837612836565b0361183f5750565b600181600481111561185357611853612836565b036118a05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b6565b60028160048111156118b4576118b4612836565b036119015760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106b6565b600381600481111561191557611915612836565b0361196d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106b6565b600481600481111561198157611981612836565b036119d95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106b6565b50565b6060600080856001600160a01b0316856040516119f99190612a43565b600060405180830381855afa9150503d8060008114611a34576040519150601f19603f3d011682016040523d82523d6000602084013e611a39565b606091505b509150915061123a86838387611ec6565b6000611a9f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f3f9092919063ffffffff16565b9050805160001480611ac0575080806020019051810190611ac09190612922565b6114295760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b6565b6000611b2c888685611f4e565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af1925050508015611c1c575060408051601f3d908101601f19168201909252611c199181019061281d565b60015b611c6e57611c28612a5f565b806308c379a003611c625750611c3c612a7a565b80611c475750611c64565b8060405163633abab960e01b81526004016106b6919061232b565b505b3d6000803e3d6000fd5b91506105149050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce7919061281d565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f191660200182016040528015611d3d576020820181803683370190505b5090526040805160808101825230808252600060208301819052928201526060810182905291925080856002811115611d7857611d78612836565b03611d9f5785600081518110611d9057611d9061287c565b60200260200101519050611e9a565b6000856002811115611db357611db3612836565b14611e9a5760405163e969f6b360e01b81526001600160a01b038a169063e969f6b390611de69086908690600401612b79565b6020604051808303816000875af1925050508015611e21575060408051601f3d908101601f19168201909252611e1e9181019061281d565b60015b611e6757611e2d612a5f565b806308c379a003611c625750611e41612a7a565b80611e4c5750611c64565b8060405163dafe91cd60e01b81526004016106b6919061232b565b600087600081518110611e7c57611e7c61287c565b60200260200101519050818111611e935781611e95565b805b925050505b611ea98c898560800151611f4e565b611eb68884848442612063565b9c9b505050505050505050505050565b60608315611f35578251600003611f2e576001600160a01b0385163b611f2e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b6565b5081611421565b6114218383612188565b606061142184846000856121b2565b801580611fc85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc6919061281d565b155b6120335760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016106b6565b6040516001600160a01b03831660248201526044810182905261142990849063095ea7b360e01b90606401611487565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe2990612098908890889088908890600401612bcb565b6020604051808303816000875af19250505080156120d3575060408051601f3d908101601f191682019092526120d09181019061281d565b60015b612160576120df612a5f565b806308c379a003611c6257506120f3612a7a565b806120fe5750611c64565b612127816040518060400160405280600781526020016642414c2335303760c81b815250612282565b1561214557604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106b6919061232b565b8060000361218157604051635eeb40ff60e11b815260040160405180910390fd5b9050610809565b8151156121985781518083602001fd5b8060405162461bcd60e51b81526004016106b6919061232b565b6060824710156122135760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106b6565b600080866001600160a01b0316858760405161222f9190612a43565b60006040518083038185875af1925050503d806000811461226c576040519150601f19603f3d011682016040523d82523d6000602084013e612271565b606091505b509150915061051487838387611ec6565b6000816040516020016122959190612a43565b60405160208183030381529060405280519060200120836040516020016122bc9190612a43565b6040516020818303038152906040528051906020012014905092915050565b60005b838110156122f65781810151838201526020016122de565b50506000910152565b600081518084526123178160208601602086016122db565b601f01601f19169290920160200192915050565b60208152600061039a60208301846122ff565b6001600160a01b03811681146119d957600080fd5b6000806040838503121561236657600080fd5b82356123718161233e565b946020939093013593505050565b60008060006060848603121561239457600080fd5b833561239f8161233e565b925060208401356123af8161233e565b929592945050506040919091013590565b6000602082840312156123d257600080fd5b81356003811061039a57600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561241d5761241d6123e1565b6040525050565b600080600080600060a0868803121561243c57600080fd5b85356124478161233e565b94506020868101356124588161233e565b945060408701356124688161233e565b935060608701359250608087013567ffffffffffffffff8082111561248c57600080fd5b818901915089601f8301126124a057600080fd5b8135818111156124b2576124b26123e1565b8060051b91506040516124c7858401826123f7565b8181529183018401918481018c8411156124e057600080fd5b938501935b838510156124fc57843581529385019385016124e5565b5080955050505050509295509295909350565b60006020828403121561252157600080fd5b813561039a8161233e565b600082601f83011261253d57600080fd5b813567ffffffffffffffff811115612557576125576123e1565b60405161256e601f8301601f1916602001826123f7565b81815284602083860101111561258357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156125b857600080fd5b853567ffffffffffffffff808211156125d057600080fd5b6125dc89838a0161252c565b965060208801359150808211156125f257600080fd5b506125ff8882890161252c565b94505060408601356126108161233e565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a03121561264357600080fd5b873561264e8161233e565b9650602088013561265e8161233e565b95506040880135945060608801359350608088013560ff8116811461268257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156126b257600080fd5b82356126bd8161233e565b915060208301356126cd8161233e565b809150509250929050565b600181811c908216806126ec57607f821691505b6020821081036113ab57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156103755761037561270c565b80516127408161233e565b919050565b805162ffffff8116811461274057600080fd5b600061010080838503121561276c57600080fd5b6040519081019067ffffffffffffffff8211818310171561278f5761278f6123e1565b8160405261279c84612735565b81526127aa60208501612745565b60208201526127bb60408501612735565b60408201526127cc60608501612735565b60608201526127dd60808501612735565b60808201526127ee60a08501612735565b60a08201526127ff60c08501612735565b60c082015261281060e08501612735565b60e0820152949350505050565b60006020828403121561282f57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b818103818111156103755761037561270c565b60006020828403121561287157600080fd5b815161039a8161233e565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8051801515811461274057600080fd5b60008060006060848603121561290257600080fd5b61290b846128dd565b925060208401519150604084015190509250925092565b60006020828403121561293457600080fd5b61039a826128dd565b601f82111561142957600081815260208120601f850160051c810160208610156129645750805b601f850160051c820191505b818110156109a757828155600101612970565b815167ffffffffffffffff81111561299d5761299d6123e1565b6129b1816129ab84546126d8565b8461293d565b602080601f8311600181146129e657600084156129ce5750858301515b600019600386901b1c1916600185901b1785556109a7565b600085815260208120601f198616915b82811015612a15578886015182559484019460019091019084016129f6565b5085821015612a335787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612a558184602087016122db565b9190910192915050565b600060033d111561054f5760046000803e5060005160e01c90565b600060443d1015612a885790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612ab857505050505090565b8285019150815181811115612ad05750505050505090565b843d8701016020828501011115612aea5750505050505090565b612af9602082860101876123f7565b509095945050505050565b805182526000602082015160028110612b2d57634e487b7160e01b600052602160045260246000fd5b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a085015261142160c08501826122ff565b60a081526000612b8c60a0830185612b04565b905061039a602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e081526000612bde60e0830187612b04565b9050612c1d602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a264697066735822122010f380148247e87b8c29ea13fd70ee081a10ddbfb43d24b3c7107c1661065a0664736f6c63430008150033",
    "sourceMap": "1264:6604:4:-:0;;;1755:53;;;;;;;;;-1:-1:-1;1779:22:4;:20;:22::i;:::-;1264:6604;;5388:279:57;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:57;;216:2:110;5447:66:57;;;198:21:110;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:110;;;338:37;392:19;;5447:66:57;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:57;5588:15;5573:30;;;;;;5622:28;;564:36:110;;;5622:28:57;;552:2:110;537:18;5622:28:57;;;;;;;5523:138;5388:279::o;422:184:110:-;1264:6604:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1264:6604:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:110;;1384:22;1366:41;;1354:2;1339:18;4770:197:58;1226:187:110;3581:106:58;3668:12;;3581:106;;;1564:25:110;;;1552:2;1537:18;3581:106:58;1418:177:110;5529:286:58;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;2203:36:110;;2191:2;2176:18;3430:91:58;2061:184:110;5535:104:4;;;:::i;6210:234:58:-;;;;;;:::i;:::-;;:::i;2704:511:4:-;;;;;;:::i;:::-;;:::i;5233:135::-;;;:::i;:::-;;;-1:-1:-1;;;;;2891:32:110;;;2873:51;;2861:2;2846:18;5233:135:4;2708:222:110;3749:1253:4;;;;;;:::i;:::-;;:::i;3745:125:58:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:58;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1815:764:4;;;;;;:::i;:::-;;:::i;:::-;;5848:111;;;;;;:::i;:::-;;:::i;5124:103::-;;;:::i;5009:109::-;;;:::i;2704:102:58:-;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;6945:623:4:-;;;;;;:::i;:::-;;:::i;4313:149:58:-;;;;;;:::i;:::-;;:::i;2587:110:4:-;;;:::i;2493:98:58:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:65;4907:32:58;929:10:65;4923:7:58;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:65;5712:38:58;5728:4;929:10:65;5743:6:58;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;5535:104:4:-;5586:7;5612:20;:18;:20::i;:::-;5605:27;;5535:104;:::o;6210:234:58:-;6298:4;929:10:65;6352:64:58;929:10:65;6368:7:58;6405:10;6377:25;929:10:65;6368:7:58;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2704:511:4:-;2768:4;2795:7;2768:4;2827:7;:5;:7::i;:::-;-1:-1:-1;;;;;2827:22:4;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;2887:43;;-1:-1:-1;;;2887:43:4;;2924:4;2887:43;;;2873:51:110;2827:29:4;;-1:-1:-1;2866:18:4;;-1:-1:-1;;;;;2887:28:4;;;;;2846:18:110;;2887:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2866:64;-1:-1:-1;2941:19:4;2973:15;2963:6;:25;;;;;;;;:::i;:::-;;:101;;3026:38;3042:6;3050:13;3026:15;:38::i;:::-;2963:101;;;3000:13;2963:101;2941:123;;3075:13;3091:19;:17;:19::i;:::-;3075:35;;3125:8;3137:1;3125:13;3121:29;;-1:-1:-1;3147:3:4;;2704:511;-1:-1:-1;;;;;2704:511:4:o;3121:29::-;3168:40;:3;3183:14;3199:8;3168:14;:40::i;:::-;3161:47;2704:511;-1:-1:-1;;;;;;;2704:511:4:o;5233:135::-;5270:10;5310:44;1477:45;1521:1;1482:35;1477:45;:::i;:::-;2029:4:86;1859:190;5310:44:4;:50;-1:-1:-1;;;;;5310:50:4;;5233:135;-1:-1:-1;5233:135:4:o;3749:1253::-;3934:14;3960:13;3976:7;:5;:7::i;:::-;3960:23;;3993;4019:2;-1:-1:-1;;;;;4019:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4066:22;;-1:-1:-1;;;4066:22:4;;-1:-1:-1;;;;;2891:32:110;;;4066:22:4;;;2873:51:110;3993:45:4;;-1:-1:-1;4100:1:4;;4066:11;;;;;2846:18:110;;4066:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:36:4;;:71;;;;;4131:1;:6;;;-1:-1:-1;;;;;4118:19:4;:9;-1:-1:-1;;;;;4118:19:4;;;4066:71;:106;;;;;4166:1;:6;;;-1:-1:-1;;;;;4153:19:4;:9;-1:-1:-1;;;;;4153:19:4;;;4066:106;4049:161;;;4190:20;;-1:-1:-1;;;4190:20:4;;-1:-1:-1;;;;;2891:32:110;;4190:20:4;;;2873:51:110;2846:18;;4190:20:4;;;;;;;;4049:161;4225:10;-1:-1:-1;;;;;4225:20:4;;;4221:100;;4261:49;4277:6;4285:10;4297:12;4261:15;:49::i;:::-;4331:13;4347:65;4371:31;4387:14;4371:15;:31::i;:::-;4347:12;;4404:7;4347:23;:65::i;:::-;4331:81;;4422:17;4442:43;4462:7;4471:2;-1:-1:-1;;;;;4471:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4442:8;;:43;:19;:43::i;:::-;4422:63;;4496:56;4518:6;4534:2;4539:12;4496:21;:56::i;:::-;4588:1;:6;;;-1:-1:-1;;;;;4575:19:4;:9;-1:-1:-1;;;;;4575:19:4;;4571:190;;4629:14;4644:1;4629:17;;;;;;;;:::i;:::-;;;;;;;4614:12;:32;4610:68;;;4655:23;;-1:-1:-1;;;4655:23:4;;;;;1564:25:110;;;1537:18;;4655:23:4;1418:177:110;4610:68:4;4699:51;4718:1;:6;;;4726:9;4737:12;4699:18;:51::i;:::-;4692:58;;;;;;;;4571:190;4778:143;4810:1;4825:9;4848;4871:12;4897:14;4778:17;:143::i;:::-;4771:150;;;;;;3749:1253;;;;;;;;:::o;1815:764::-;3111:19:57;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:57;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:57;1476:19:64;:23;;;3219:66:57;;-1:-1:-1;3268:12:57;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:57;;10960:2:110;3157:201:57;;;10942:21:110;10999:2;10979:18;;;10972:30;11038:34;11018:18;;;11011:62;-1:-1:-1;;;11089:18:110;;;11082:44;11143:19;;3157:201:57;10758:410:110;3157:201:57;3368:12;:16;;-1:-1:-1;;3368:16:57;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:57;;;;;3394:65;2019:28:4::1;2032:5;2039:7;2019:12;:28::i;:::-;2057:25;2071:5;2057:25;;;;;;;;;;;;;-1:-1:-1::0;;;2057:25:4::1;;::::0;:13:::1;:25::i;:::-;2145:10:::0;2092:44:::1;1477:45;1521:1;1482:35;1477:45;:::i;2092:44::-;:63:::0;;-1:-1:-1;;;;;;2092:63:4::1;-1:-1:-1::0;;;;;2092:63:4;;;::::1;::::0;;;::::1;::::0;;2473:34:::1;2487:4;2494:12:::0;2473:5:::1;:34::i;:::-;2518:54;2536:4;2543:10;2555:16;2518:9;:54::i;:::-;3483:14:57::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:57;;;3553:14;;-1:-1:-1;2203:36:110;;3553:14:57;;2191:2:110;2176:18;3553:14:57;;;;;;;3479:99;3101:483;1815:764:4;;;;;:::o;5848:111::-;-1:-1:-1;;;;;5928:14:4;;5902:7;5928:14;;;:7;:14;;;;;929::66;5928:24:4;838:112:66;5124:103:4;5170:4;5193:7;:5;:7::i;:::-;-1:-1:-1;;;;;5193:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5009:109::-;5058:4;5081:7;:5;:7::i;:::-;-1:-1:-1;;;;;5081:28:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102:58;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:65;7024:4:58;7105:25;929:10:65;7122:7:58;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:58;;11574:2:110;7140:85:58;;;11556:21:110;11613:2;11593:18;;;11586:30;11652:34;11632:18;;;11625:62;-1:-1:-1;;;11703:18:110;;;11696:35;11748:19;;7140:85:58;11372:401:110;7140:85:58;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:58;;6931:427;-1:-1:-1;;;;6931:427:58:o;4066:189::-;4145:4;929:10:65;4199:28:58;929:10:65;4216:2:58;4220:6;4199:9;:28::i;6945:623:4:-;7161:8;7143:15;:26;7139:75;;;7178:36;;-1:-1:-1;;;7178:36:4;;;;;11952:25:110;;;7198:15:4;11993:18:110;;;11986:34;11925:18;;7178:36:4;11778:248:110;7139:75:4;7225:18;1582:95;7285:5;7292:7;7301:5;7308:16;7318:5;7308:9;:16::i;:::-;7256:79;;;;;;12318:25:110;;;;-1:-1:-1;;;;;12417:15:110;;;12397:18;;;12390:43;12469:15;;;;12449:18;;;12442:43;12501:18;;;12494:34;12544:19;;;12537:35;12588:19;;;12581:35;;;12290:19;;7256:79:4;;;;;;;;;;;;7246:90;;;;;;7225:111;;7346:12;7361:28;7378:10;7361:16;:28::i;:::-;7346:43;;7399:14;7416:40;7441:4;7447:1;7450;7453:2;7416:24;:40::i;:::-;7399:57;;7481:5;-1:-1:-1;;;;;7471:15:4;:6;-1:-1:-1;;;;;7471:15:4;;7467:52;;7495:24;;-1:-1:-1;;;7495:24:4;;-1:-1:-1;;;;;12857:15:110;;;7495:24:4;;;12839:34:110;12909:15;;12889:18;;;12882:43;12774:18;;7495:24:4;12627:304:110;7467:52:4;7530:31;7539:5;7546:7;7555:5;7530:8;:31::i;:::-;7129:439;;;6945:623;;;;;;;:::o;4313:149:58:-;-1:-1:-1;;;;;4428:18:58;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;2587:110:4:-;2636:4;2659:31;2675:14;2659:15;:31::i;10447:370:58:-;-1:-1:-1;;;;;10578:19:58;;10570:68;;;;-1:-1:-1;;;10570:68:58;;13138:2:110;10570:68:58;;;13120:21:110;13177:2;13157:18;;;13150:30;13216:34;13196:18;;;13189:62;-1:-1:-1;;;13267:18:110;;;13260:34;13311:19;;10570:68:58;12936:400:110;10570:68:58;-1:-1:-1;;;;;10656:21:58;;10648:68;;;;-1:-1:-1;;;10648:68:58;;13543:2:110;10648:68:58;;;13525:21:110;13582:2;13562:18;;;13555:30;13621:34;13601:18;;;13594:62;-1:-1:-1;;;13672:18:110;;;13665:32;13714:19;;10648:68:58;13341:398:110;10648:68:58;-1:-1:-1;;;;;10727:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1564:25:110;;;10778:32:58;;1537:18:110;10778:32:58;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:58;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:58;;13946:2:110;11347:68:58;;;13928:21:110;13985:2;13965:18;;;13958:30;14024:31;14004:18;;;13997:59;14073:18;;11347:68:58;13744:353:110;11347:68:58;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:58;;7930:68;;;;-1:-1:-1;;;7930:68:58;;14304:2:110;7930:68:58;;;14286:21:110;14343:2;14323:18;;;14316:30;14382:34;14362:18;;;14355:62;-1:-1:-1;;;14433:18:110;;;14426:35;14478:19;;7930:68:58;14102:401:110;7930:68:58;-1:-1:-1;;;;;8016:16:58;;8008:64;;;;-1:-1:-1;;;8008:64:58;;14710:2:110;8008:64:58;;;14692:21:110;14749:2;14729:18;;;14722:30;14788:34;14768:18;;;14761:62;-1:-1:-1;;;14839:18:110;;;14832:33;14882:19;;8008:64:58;14508:399:110;8008:64:58;-1:-1:-1;;;;;8154:15:58;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:58;;15114:2:110;8179:72:58;;;15096:21:110;15153:2;15133:18;;;15126:30;15192:34;15172:18;;;15165:62;-1:-1:-1;;;15243:18:110;;;15236:36;15289:19;;8179:72:58;14912:402:110;8179:72:58;-1:-1:-1;;;;;8285:15:58;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:58;8391:4;-1:-1:-1;;;;;8382:26:58;;8401:6;8382:26;;;;1564:25:110;;1552:2;1537:18;;1418:177;8382:26:58;;;;;;;;8419:37;12123:121;2842:160:69;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;16350:25:110;;;16391:18;;;16384:34;;;16434:18;;;16427:34;;;3228:13:69;16477:18:110;;;16470:34;3251:4:69;16520:19:110;;;16513:61;3148:7:69;;16322:19:110;;3184:73:69;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;3222:520:4;3347:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3347:37:4;-1:-1:-1;;;3347:37:4;;;3305:10;;3401:50;3436:7;:5;:7::i;:::-;3446:4;3401:26;:50::i;:::-;3394:57;;3462:13;3489:4;3478:24;;;;;;;;;;;;:::i;:::-;3462:40;-1:-1:-1;3524:14:4;3517:3;:21;;;;;;;;:::i;:::-;;3513:223;;3562:54;3588:7;:5;:7::i;:::-;-1:-1:-1;;;;;3588:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3562:14;;3608:7;3562:25;:54::i;:::-;3554:62;;3513:223;;;3643:14;3636:3;:21;;;;;;;;:::i;:::-;;3633:103;;3681:44;:14;3707:8;3717:7;3681:25;:44::i;:::-;3673:52;;3633:103;3317:425;;3222:520;;;;:::o;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;687:264:34:-;808:80;850:4;858:6;866:10;878:9;808:26;:80::i;:::-;898:46;;-1:-1:-1;;;898:46:34;;;;;1564:25:110;;;-1:-1:-1;;;;;898:35:34;;;;;1537:18:110;;898:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:264;;;:::o;5610:216::-;5723:4;5739:56;5769:4;5776:9;5787:7;5739:22;:56::i;:::-;-1:-1:-1;5812:7:34;5610:216;-1:-1:-1;;5610:216:34:o;957:391::-;1148:4;1171:170;1203:1;1218:9;1241;1264:12;1290:14;1318:13;1171:18;:170::i;:::-;1164:177;957:391;-1:-1:-1;;;;;;957:391:34:o;2116:147:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2218:38:58::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;2306::69:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2408:38:69::1;2432:4;2438:7;2408:23;:38::i;8739:389:58:-:0;-1:-1:-1;;;;;8822:21:58;;8814:65;;;;-1:-1:-1;;;8814:65:58;;15933:2:110;8814:65:58;;;15915:21:110;15972:2;15952:18;;;15945:30;16011:33;15991:18;;;15984:61;16062:18;;8814:65:58;15731:355:110;8814:65:58;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:58;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:58;;1564:25:110;;;-1:-1:-1;;;;;9025:37:58;;;9042:1;;9025:37;;1552:2:110;1537:18;9025:37:58;;;;;;;2116:147;;:::o;6149:206:4:-;-1:-1:-1;;;;;6271:14:4;;6200:15;6271:14;;;:7;:14;;;;;929::66;;1061:1;1043:19;;;;929:14;6331:17:4;6217:138;6149:206;;;:::o;3890:176:69:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:68;;-1:-1:-1;;;8710:57:68;;;20411:27:110;20454:11;;;20447:27;;;20490:12;;;20483:28;;;8674:7:68;;20527:12:110;;8710:57:68;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;6925:270;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;-1:-1:-1;7179:9:68;-1:-1:-1;6925:270:68;;;;;;;:::o;12123:121:58:-;;;;:::o;5788:197:84:-;5874:12;5905:73;5924:6;5932:4;5905:73;;;;;;;;;;;;;;;;;:18;:73::i;1355:203:83:-;1482:68;;-1:-1:-1;;;;;16843:15:110;;;1482:68:83;;;16825:34:110;16895:15;;16875:18;;;16868:43;16927:18;;;16920:34;;;1455:96:83;;1475:5;;-1:-1:-1;;;1505:27:83;16760:18:110;;1482:68:83;;;;-1:-1:-1;;1482:68:83;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:83;-1:-1:-1;;;;;;1482:68:83;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;-1:-1:-1;;;;;17157:32:110;;1050:58:83;;;17139:51:110;17206:18;;;17199:34;;;1023:86:83;;1043:5;;-1:-1:-1;;;1073:23:83;17112:18:110;;1050:58:83;16965:274:110;1355:1479:34;1576:14;;;;1658:5;:22;;;;;;;;:::i;:::-;;1654:100;;-1:-1:-1;;1706:6:34;;;;1737;;;;1654:100;1766:11;1789:1;:22;;;-1:-1:-1;;;;;1783:44:34;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1765:64;;;;1845:6;1841:593;;;1879:225;1905:7;1930:8;1964:4;1987:1;:15;;;2020:1;:8;;;2046:9;2073:14;2088:1;2073:17;;;;;;;;:::i;:::-;;;;;;;1879:8;:225::i;:::-;1867:237;;1841:593;;;2147:276;2178:7;2203:8;2229:1;:22;;;2269:1;:17;;;2304:1;:15;;;2337:9;2364:14;2396:13;2147;:276::i;:::-;2135:288;;1841:593;2461:1;:6;;;-1:-1:-1;;;;;2448:19:34;:9;-1:-1:-1;;;;;2448:19:34;;2444:384;;2515:6;;;;2509:44;;-1:-1:-1;;;2509:44:34;;-1:-1:-1;;;;;17157:32:110;;;2509:44:34;;;17139:51:110;17206:18;;;17199:34;;;2509:22:34;;;;;;17112:18:110;;2509:44:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2444:384;;;2596:221;2622:1;:6;;;2646:9;2673;2700:1;:15;;;2733:1;:8;;;2759:9;2786:14;2801:1;2786:17;;;;;;;;:::i;2596:221::-;2584:233;;2444:384;1592:1242;;;1355:1479;;;;;;;;:::o;2269:159:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2381:5:58::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:58::1;:17;2414:7:::0;2404;:17:::1;:::i;2459:297:69:-:0;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2592:22:69;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:68:-;5315:7;;6239:66;6226:79;;6222:161;;;-1:-1:-1;6337:1:68;;-1:-1:-1;6341:30:68;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:68;;-1:-1:-1;6450:30:68;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;20777:25:110;;;20850:4;20838:17;;20818:18;;;20811:45;;;;20872:18;;;20865:34;;;20915:18;;;20908:34;;;6603:24:68;;20749:19:110;;6603:24:68;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:68;;-1:-1:-1;;6603:24:68;;;-1:-1:-1;;;;;;;6641:20:68;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:68;;-1:-1:-1;5189:1603:68;;;;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;788:34;;-1:-1:-1;;;788:34:68;;21155:2:110;788:34:68;;;21137:21:110;21194:2;21174:18;;;21167:30;21233:26;21213:18;;;21206:54;21277:18;;788:34:68;20953:348:110;730:465:68;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;903:41;;-1:-1:-1;;;903:41:68;;21508:2:110;903:41:68;;;21490:21:110;21547:2;21527:18;;;21520:30;21586:33;21566:18;;;21559:61;21637:18;;903:41:68;21306:355:110;839:356:68;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;1020:44;;-1:-1:-1;;;1020:44:68;;21868:2:110;1020:44:68;;;21850:21:110;21907:2;21887:18;;;21880:30;21946:34;21926:18;;;21919:62;-1:-1:-1;;;21997:18:110;;;21990:32;22039:19;;1020:44:68;21666:398:110;961:234:68;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;1140:44;;-1:-1:-1;;;1140:44:68;;22271:2:110;1140:44:68;;;22253:21:110;22310:2;22290:18;;;22283:30;22349:34;22329:18;;;22322:62;-1:-1:-1;;;22400:18:110;;;22393:32;22442:19;;1140:44:68;22069:398:110;1081:114:68;570:631;:::o;6169:326:84:-;6313:12;6338;6352:23;6379:6;-1:-1:-1;;;;;6379:17:84;6397:4;6379:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:65;;;;6419:69;6446:6;6454:7;6463:10;6475:12;6419:26;:69::i;5196:642:83:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:83;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:83;;22966:2:110;5720:111:83;;;22948:21:110;23005:2;22985:18;;;22978:30;23044:34;23024:18;;;23017:62;-1:-1:-1;;;23095:18:110;;;23088:40;23145:19;;5720:111:83;22764:406:110;2841:1009:34;3064:4;3080:59;3109:8;3120:7;3129:9;3080:21;:59::i;:::-;3213:420;;;;;;;;-1:-1:-1;;;;;3213:420:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:15;3213:420;;;;;;;;;;;;;;;;;;-1:-1:-1;3213:420:34;;;;;;3648:45;;-1:-1:-1;;;3648:45:34;;23464:13:110;;23460:22;;3648:45:34;;;23442:41:110;23525:24;;23521:33;;23499:20;;;23492:63;23597:24;;23593:39;;;23571:20;;;23564:69;23675:24;;23671:33;;23649:20;;;23642:63;23743:24;23721:20;;;23714:54;23806:24;;23784:20;;;23777:54;23869:24;23847:20;;;23840:54;23936:24;;23932:33;;23910:20;;;23903:63;3213:420:34;;3648:37;;;;;;23376:19:110;;3648:45:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;3648:45:34;;;;;;;;-1:-1:-1;;3648:45:34;;;;;;;;;;;;:::i;:::-;;;3644:200;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3826:6;3816:17;;-1:-1:-1;;;3816:17:34;;;;;;;;:::i;3644:200::-;;;;;;;;;;;3740:9;-1:-1:-1;3733:16:34;;-1:-1:-1;3733:16:34;3857:1746;4114:14;4149:35;4187:266;;;;;;;;4233:5;-1:-1:-1;;;;;4227:22:34;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4187:266;;;;4271:24;4187:266;;-1:-1:-1;;;;;4187:266:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4430:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4430:12:34;-1:-1:-1;4187:266:34;;4501:194;;;;;;;;4553:4;4501:194;;;4464:34;4501:194;;;;;;;;;;;;;;;;4149:304;;-1:-1:-1;4464:34:34;4740:5;:22;;;;;;;;:::i;:::-;;4736:697;;4787:14;4802:1;4787:17;;;;;;;;:::i;:::-;;;;;;;4778:26;;4736:697;;;4858:13;4849:5;:22;;;;;;;;:::i;:::-;;4845:588;;4891:47;;-1:-1:-1;;;4891:47:34;;-1:-1:-1;;;;;4891:28:34;;;;;:47;;4920:10;;4932:5;;4891:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4891:47:34;;;;;;;;-1:-1:-1;;4891:47:34;;;;;;;;;;;;:::i;:::-;;;4887:536;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5401:6;5391:17;;-1:-1:-1;;;5391:17:34;;;;;;;;:::i;4887:536::-;4985:25;5013:14;5028:1;5013:17;;;;;;;;:::i;:::-;;;;;;;4985:45;;5080:13;5057:20;:36;:75;;5119:13;5057:75;;;5096:20;5057:75;5048:84;;4967:364;4939:392;4887:536;5443:66;5472:8;5483:6;5491:10;:17;;;5443:21;:66::i;:::-;5532:64;5545:6;5553:10;5565:5;5572:6;5580:15;5532:12;:64::i;:::-;5520:76;3857:1746;-1:-1:-1;;;;;;;;;;;;3857:1746:34:o;7671:628:84:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1476:19:64;;;8113:60:84;;;;-1:-1:-1;;;8113:60:84;;26811:2:110;8113:60:84;;;26793:21:110;26850:2;26830:18;;;26823:30;26889:31;26869:18;;;26862:59;26938:18;;8113:60:84;26609:353:110;8113:60:84;-1:-1:-1;8208:10:84;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;4108:223::-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;1818:573:83:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:83;;-1:-1:-1;;;2159:39:83;;2183:4;2159:39;;;12839:34:110;-1:-1:-1;;;;;12909:15:110;;;12889:18;;;12882:43;2159:15:83;;;;;12774:18:110;;2159:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:83;;27169:2:110;2121:163:83;;;27151:21:110;27208:2;27188:18;;;27181:30;27247:34;27227:18;;;27220:62;-1:-1:-1;;;27298:18:110;;;27291:52;27360:19;;2121:163:83;26967:418:110;2121:163:83;2321:62;;-1:-1:-1;;;;;17157:32:110;;2321:62:83;;;17139:51:110;17206:18;;;17199:34;;;2294:90:83;;2314:5;;-1:-1:-1;;;2344:22:83;17112:18:110;;2321:62:83;16965:274:110;5865:650:34;6103:68;;-1:-1:-1;;;6103:68:34;;6078:4;;-1:-1:-1;;;;;6103:19:34;;;;;:68;;6123:11;;6136:6;;6144:13;;6159:11;;6103:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6103:68:34;;;;;;;;-1:-1:-1;;6103:68:34;;;;;;;;;;;;:::i;:::-;;;6099:410;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6342:41;6365:6;6342:41;;;;;;;;;;;;;-1:-1:-1;;;6342:41:34;;;:22;:41::i;:::-;6338:161;;;6410:11;;-1:-1:-1;;;6410:11:34;;;;;;;;;;;6338:161;6477:6;6467:17;;-1:-1:-1;;;6467:17:34;;;;;;;;:::i;6099:410::-;6214:9;6227:1;6214:14;6210:38;;6237:11;;-1:-1:-1;;;6237:11:34;;;;;;;;;;;6210:38;6269:9;-1:-1:-1;6262:16:34;;8821:540:84;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:84;;;;;;;;:::i;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:84;;28171:2:110;5354:81:84;;;28153:21:110;28210:2;28190:18;;;28183:30;28249:34;28229:18;;;28222:62;-1:-1:-1;;;28300:18:110;;;28293:36;28346:19;;5354:81:84;27969:402:110;5354:81:84;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:84;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;4369:212:32:-;4479:4;4567:5;4550:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4540:34;;;;;;4529:5;4512:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4502:34;;;;;;:72;4495:79;;4369:212;;;;:::o;14:250:110:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:110;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:110;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:110:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:110;;835:42;;825:70;;891:1;888;881:12;906:315;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:110:o;1600:456::-;1677:6;1685;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:110;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1600:456;;1992:7;;-1:-1:-1;;;2046:2:110;2031:18;;;;2018:32;;1600:456::o;2432:271::-;2506:6;2559:2;2547:9;2538:7;2534:23;2530:32;2527:52;;;2575:1;2572;2565:12;2527:52;2614:9;2601:23;2653:1;2646:5;2643:12;2633:40;;2669:1;2666;2659:12;2935:127;2996:10;2991:3;2987:20;2984:1;2977:31;3027:4;3024:1;3017:15;3051:4;3048:1;3041:15;3067:249;3177:2;3158:13;;-1:-1:-1;;3154:27:110;3142:40;;3212:18;3197:34;;3233:22;;;3194:62;3191:88;;;3259:18;;:::i;:::-;3295:2;3288:22;-1:-1:-1;;3067:249:110:o;3321:1474::-;3441:6;3449;3457;3465;3473;3526:3;3514:9;3505:7;3501:23;3497:33;3494:53;;;3543:1;3540;3533:12;3494:53;3582:9;3569:23;3601:31;3626:5;3601:31;:::i;:::-;3651:5;-1:-1:-1;3675:2:110;3714:18;;;3701:32;3742:33;3701:32;3742:33;:::i;:::-;3794:7;-1:-1:-1;3853:2:110;3838:18;;3825:32;3866:33;3825:32;3866:33;:::i;:::-;3918:7;-1:-1:-1;3972:2:110;3957:18;;3944:32;;-1:-1:-1;4027:3:110;4012:19;;3999:33;4051:18;4081:14;;;4078:34;;;4108:1;4105;4098:12;4078:34;4146:6;4135:9;4131:22;4121:32;;4191:7;4184:4;4180:2;4176:13;4172:27;4162:55;;4213:1;4210;4203:12;4162:55;4249:2;4236:16;4271:2;4267;4264:10;4261:36;;;4277:18;;:::i;:::-;4323:2;4320:1;4316:10;4306:20;;4355:2;4349:9;4367:40;4403:2;4399;4395:11;4387:6;4367:40;:::i;:::-;4442:18;;;4518:11;;;4514:20;;;4476:15;;;4546:19;;;4543:39;;;4578:1;4575;4568:12;4543:39;4602:11;;;;4622:142;4638:6;4633:3;4630:15;4622:142;;;4704:17;;4692:30;;4655:12;;;;4742;;4622:142;;;4626:3;4783:6;4773:16;;;;;;;3321:1474;;;;;;;;:::o;4800:247::-;4859:6;4912:2;4900:9;4891:7;4887:23;4883:32;4880:52;;;4928:1;4925;4918:12;4880:52;4967:9;4954:23;4986:31;5011:5;4986:31;:::i;5052:556::-;5095:5;5148:3;5141:4;5133:6;5129:17;5125:27;5115:55;;5166:1;5163;5156:12;5115:55;5202:6;5189:20;5228:18;5224:2;5221:26;5218:52;;;5250:18;;:::i;:::-;5299:2;5293:9;5311:67;5366:2;5347:13;;-1:-1:-1;;5343:27:110;5372:4;5339:38;5293:9;5311:67;:::i;:::-;5402:2;5394:6;5387:18;5448:3;5441:4;5436:2;5428:6;5424:15;5420:26;5417:35;5414:55;;;5465:1;5462;5455:12;5414:55;5529:2;5522:4;5514:6;5510:17;5503:4;5495:6;5491:17;5478:54;5576:1;5552:15;;;5569:4;5548:26;5541:37;;;;5556:6;5052:556;-1:-1:-1;;;5052:556:110:o;5613:816::-;5728:6;5736;5744;5752;5760;5813:3;5801:9;5792:7;5788:23;5784:33;5781:53;;;5830:1;5827;5820:12;5781:53;5870:9;5857:23;5899:18;5940:2;5932:6;5929:14;5926:34;;;5956:1;5953;5946:12;5926:34;5979:50;6021:7;6012:6;6001:9;5997:22;5979:50;:::i;:::-;5969:60;;6082:2;6071:9;6067:18;6054:32;6038:48;;6111:2;6101:8;6098:16;6095:36;;;6127:1;6124;6117:12;6095:36;;6150:52;6194:7;6183:8;6172:9;6168:24;6150:52;:::i;:::-;6140:62;;;6252:2;6241:9;6237:18;6224:32;6265:31;6290:5;6265:31;:::i;:::-;5613:816;;;;-1:-1:-1;6315:5:110;;6367:2;6352:18;;6339:32;;-1:-1:-1;6418:3:110;6403:19;6390:33;;5613:816;-1:-1:-1;;5613:816:110:o;6434:829::-;6545:6;6553;6561;6569;6577;6585;6593;6646:3;6634:9;6625:7;6621:23;6617:33;6614:53;;;6663:1;6660;6653:12;6614:53;6702:9;6689:23;6721:31;6746:5;6721:31;:::i;:::-;6771:5;-1:-1:-1;6828:2:110;6813:18;;6800:32;6841:33;6800:32;6841:33;:::i;:::-;6893:7;-1:-1:-1;6947:2:110;6932:18;;6919:32;;-1:-1:-1;6998:2:110;6983:18;;6970:32;;-1:-1:-1;7054:3:110;7039:19;;7026:33;7103:4;7090:18;;7078:31;;7068:59;;7123:1;7120;7113:12;7068:59;6434:829;;;;-1:-1:-1;6434:829:110;;;;7146:7;7200:3;7185:19;;7172:33;;-1:-1:-1;7252:3:110;7237:19;;;7224:33;;6434:829;-1:-1:-1;;6434:829:110:o;7268:388::-;7336:6;7344;7397:2;7385:9;7376:7;7372:23;7368:32;7365:52;;;7413:1;7410;7403:12;7365:52;7452:9;7439:23;7471:31;7496:5;7471:31;:::i;:::-;7521:5;-1:-1:-1;7578:2:110;7563:18;;7550:32;7591:33;7550:32;7591:33;:::i;:::-;7643:7;7633:17;;;7268:388;;;;;:::o;7661:380::-;7740:1;7736:12;;;;7783;;;7804:61;;7858:4;7850:6;7846:17;7836:27;;7804:61;7911:2;7903:6;7900:14;7880:18;7877:38;7874:161;;7957:10;7952:3;7948:20;7945:1;7938:31;7992:4;7989:1;7982:15;8020:4;8017:1;8010:15;8046:127;8107:10;8102:3;8098:20;8095:1;8088:31;8138:4;8135:1;8128:15;8162:4;8159:1;8152:15;8178:125;8243:9;;;8264:10;;;8261:36;;;8277:18;;:::i;8308:138::-;8387:13;;8409:31;8387:13;8409:31;:::i;:::-;8308:138;;;:::o;8451:165::-;8529:13;;8582:8;8571:20;;8561:31;;8551:59;;8606:1;8603;8596:12;8621:1082;8722:6;8753:3;8797:2;8785:9;8776:7;8772:23;8768:32;8765:52;;;8813:1;8810;8803:12;8765:52;8846:2;8840:9;8876:15;;;;8921:18;8906:34;;8942:22;;;8903:62;8900:88;;;8968:18;;:::i;:::-;9008:10;9004:2;8997:22;9043:40;9073:9;9043:40;:::i;:::-;9035:6;9028:56;9117:48;9161:2;9150:9;9146:18;9117:48;:::i;:::-;9112:2;9104:6;9100:15;9093:73;9199:49;9244:2;9233:9;9229:18;9199:49;:::i;:::-;9194:2;9186:6;9182:15;9175:74;9282:49;9327:2;9316:9;9312:18;9282:49;:::i;:::-;9277:2;9269:6;9265:15;9258:74;9366:50;9411:3;9400:9;9396:19;9366:50;:::i;:::-;9360:3;9352:6;9348:16;9341:76;9451:50;9496:3;9485:9;9481:19;9451:50;:::i;:::-;9445:3;9437:6;9433:16;9426:76;9536:50;9581:3;9570:9;9566:19;9536:50;:::i;:::-;9530:3;9522:6;9518:16;9511:76;9621:50;9666:3;9655:9;9651:19;9621:50;:::i;:::-;9615:3;9603:16;;9596:76;9607:6;8621:1082;-1:-1:-1;;;;8621:1082:110:o;9916:184::-;9986:6;10039:2;10027:9;10018:7;10014:23;10010:32;10007:52;;;10055:1;10052;10045:12;10007:52;-1:-1:-1;10078:16:110;;9916:184;-1:-1:-1;9916:184:110:o;10105:127::-;10166:10;10161:3;10157:20;10154:1;10147:31;10197:4;10194:1;10187:15;10221:4;10218:1;10211:15;10237:128;10304:9;;;10325:11;;;10322:37;;;10339:18;;:::i;10370:251::-;10440:6;10493:2;10481:9;10472:7;10468:23;10464:32;10461:52;;;10509:1;10506;10499:12;10461:52;10541:9;10535:16;10560:31;10585:5;10560:31;:::i;10626:127::-;10687:10;10682:3;10678:20;10675:1;10668:31;10718:4;10715:1;10708:15;10742:4;10739:1;10732:15;15319:407;15521:2;15503:21;;;15560:2;15540:18;;;15533:30;15599:34;15594:2;15579:18;;15572:62;-1:-1:-1;;;15665:2:110;15650:18;;15643:41;15716:3;15701:19;;15319:407::o;17244:164::-;17320:13;;17369;;17362:21;17352:32;;17342:60;;17398:1;17395;17388:12;17413:324;17498:6;17506;17514;17567:2;17555:9;17546:7;17542:23;17538:32;17535:52;;;17583:1;17580;17573:12;17535:52;17606:37;17633:9;17606:37;:::i;:::-;17596:47;;17683:2;17672:9;17668:18;17662:25;17652:35;;17727:2;17716:9;17712:18;17706:25;17696:35;;17413:324;;;;;:::o;17742:202::-;17809:6;17862:2;17850:9;17841:7;17837:23;17833:32;17830:52;;;17878:1;17875;17868:12;17830:52;17901:37;17928:9;17901:37;:::i;18075:545::-;18177:2;18172:3;18169:11;18166:448;;;18213:1;18238:5;18234:2;18227:17;18283:4;18279:2;18269:19;18353:2;18341:10;18337:19;18334:1;18330:27;18324:4;18320:38;18389:4;18377:10;18374:20;18371:47;;;-1:-1:-1;18412:4:110;18371:47;18467:2;18462:3;18458:12;18455:1;18451:20;18445:4;18441:31;18431:41;;18522:82;18540:2;18533:5;18530:13;18522:82;;;18585:17;;;18566:1;18555:13;18522:82;;18796:1352;18922:3;18916:10;18949:18;18941:6;18938:30;18935:56;;;18971:18;;:::i;:::-;19000:97;19090:6;19050:38;19082:4;19076:11;19050:38;:::i;:::-;19044:4;19000:97;:::i;:::-;19152:4;;19216:2;19205:14;;19233:1;19228:663;;;;19935:1;19952:6;19949:89;;;-1:-1:-1;20004:19:110;;;19998:26;19949:89;-1:-1:-1;;18753:1:110;18749:11;;;18745:24;18741:29;18731:40;18777:1;18773:11;;;18728:57;20051:81;;19198:944;;19228:663;18022:1;18015:14;;;18059:4;18046:18;;-1:-1:-1;;19264:20:110;;;19382:236;19396:7;19393:1;19390:14;19382:236;;;19485:19;;;19479:26;19464:42;;19577:27;;;;19545:1;19533:14;;;;19412:19;;19382:236;;;19386:3;19646:6;19637:7;19634:19;19631:201;;;19707:19;;;19701:26;-1:-1:-1;;19790:1:110;19786:14;;;19802:3;19782:24;19778:37;19774:42;19759:58;19744:74;;19631:201;-1:-1:-1;;;;;19878:1:110;19862:14;;;19858:22;19845:36;;-1:-1:-1;18796:1352:110:o;22472:287::-;22601:3;22639:6;22633:13;22655:66;22714:6;22709:3;22702:4;22694:6;22690:17;22655:66;:::i;:::-;22737:16;;;;;22472:287;-1:-1:-1;;22472:287:110:o;23977:179::-;24012:3;24054:1;24036:16;24033:23;24030:120;;;24100:1;24097;24094;24079:23;-1:-1:-1;24137:1:110;24131:8;24126:3;24122:18;23977:179;:::o;24161:671::-;24200:3;24242:4;24224:16;24221:26;24218:39;;;24161:671;:::o;24218:39::-;24284:2;24278:9;-1:-1:-1;;24349:16:110;24345:25;;24342:1;24278:9;24321:50;24400:4;24394:11;24424:16;24459:18;24530:2;24523:4;24515:6;24511:17;24508:25;24503:2;24495:6;24492:14;24489:45;24486:58;;;24537:5;;;;;24161:671;:::o;24486:58::-;24574:6;24568:4;24564:17;24553:28;;24610:3;24604:10;24637:2;24629:6;24626:14;24623:27;;;24643:5;;;;;;24161:671;:::o;24623:27::-;24727:2;24708:16;24702:4;24698:27;24694:36;24687:4;24678:6;24673:3;24669:16;24665:27;24662:69;24659:82;;;24734:5;;;;;;24161:671;:::o;24659:82::-;24750:57;24801:4;24792:6;24784;24780:19;24776:30;24770:4;24750:57;:::i;:::-;-1:-1:-1;24823:3:110;;24161:671;-1:-1:-1;;;;;24161:671:110:o;25026:783::-;25115:5;25109:12;25104:3;25097:25;25079:3;25168:4;25161:5;25157:16;25151:23;25210:1;25196:12;25193:19;25183:150;;25255:10;25250:3;25246:20;25243:1;25236:31;25290:4;25287:1;25280:15;25318:4;25315:1;25308:15;25183:150;25365:12;25358:4;25353:3;25349:14;25342:36;;25426:4;25419:5;25415:16;25409:23;25468:1;25464;25459:3;25455:11;25451:19;25522:2;25506:14;25502:23;25495:4;25490:3;25486:14;25479:47;25587:2;25579:4;25572:5;25568:16;25562:23;25558:32;25551:4;25546:3;25542:14;25535:56;;;25640:4;25633:5;25629:16;25623:23;25616:4;25611:3;25607:14;25600:47;25695:4;25688:5;25684:16;25678:23;25733:4;25726;25721:3;25717:14;25710:28;25754:49;25797:4;25792:3;25788:14;25772;25754:49;:::i;26174:430::-;26451:3;26440:9;26433:22;26414:4;26472:57;26524:3;26513:9;26509:19;26501:6;26472:57;:::i;:::-;26464:65;;26538:60;26594:2;26583:9;26579:18;26571:6;25936:12;;-1:-1:-1;;;;;25932:21:110;;;25920:34;;26017:4;26006:16;;;26000:23;25993:31;25986:39;25970:14;;;25963:63;26079:4;26068:16;;;26062:23;26058:32;;;26042:14;;;26035:56;26154:4;26143:16;;;26137:23;26130:31;26123:39;26107:14;;26100:63;25814:355;27390:574;27723:3;27712:9;27705:22;27686:4;27744:57;27796:3;27785:9;27781:19;27773:6;27744:57;:::i;:::-;27736:65;;27810:60;27866:2;27855:9;27851:18;27843:6;25936:12;;-1:-1:-1;;;;;25932:21:110;;;25920:34;;26017:4;26006:16;;;26000:23;25993:31;25986:39;25970:14;;;25963:63;26079:4;26068:16;;;26062:23;26058:32;;;26042:14;;;26035:56;26154:4;26143:16;;;26137:23;26130:31;26123:39;26107:14;;26100:63;25814:355;27810:60;27901:3;27886:19;;27879:35;;;;27945:3;27930:19;27923:35;27390:574;;-1:-1:-1;;27390:574:110:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "circulatingSupply()": "9358928b",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getExchangeRate()": "e6aa216c",
    "getExchangeRate(uint8)": "4d02a3f7",
    "getOZ()": "59c64e12",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,uint256,uint256)": "74823132",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "recicledSupply()": "8b5f1a6b",
    "redeem(address,address,address,uint256,uint256[])": "6afa0287",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"OZError01\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError02\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"OZError08\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"OZError09\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorCode\",\"type\":\"string\"}],\"name\":\"OZError10\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"OZError18\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OZError19\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError20\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OZError21\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum QuoteAsset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZ\",\"outputs\":[{\"internalType\":\"contract ozIDiamond\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ozDiamond_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"communityAmount_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recicledSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ozlAmountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut_\",\"type\":\"uint256[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OZError01(string)\":[{\"details\":\"See https://eips.ethereum.org/EIPS/eip-6093\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"params\":{\"owner\":\"The address whose nonce is to be retrieved.\"},\"returns\":{\"_0\":\"The current nonce as a uint256 value.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Uses the EIP-2612 standard.\",\"params\":{\"deadline\":\"The expiration time of the signature, specified as a Unix timestamp.\",\"owner\":\"The address of the token owner.\",\"r\":\"The first 32 bytes of the signature.\",\"s_\":\"The second 32 bytes of the signature.\",\"spender\":\"The address of the spender.\",\"v\":\"The recovery byte of the signature.\",\"value\":\"The amount of tokens to be approved.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"errors\":{\"OZError01(string)\":[{\"notice\":\"Standard ERC20 Errors\"}]},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the EIP-712 DOMAIN_SEPARATOR.\"},\"nonces(address)\":{\"notice\":\"Returns the current nonce for the given owner address.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x5f37269de4985bc8c76617a7cf3f019a54859a7c6d019425876f66fd5fcdacef\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9a56fbe82e6491b26a90af7887ffa3ca95b78c64497ed5d230357e1a1edd1da3\",\"dweb:/ipfs/QmSKPgKW7yct4BZ5YRvJ9akxY9YLZBPcUuG11FwcgwUo36\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b\",\"urls\":[\"bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe\",\"dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0xe28c7aa0cec08041ae81246beaa153829a4db5022e149887a8a28a7800a9cf3a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://96fa0de617656ddcdae98785a8eb4f109b588bd93c9a73a3bf16f8c39dea53f2\",\"dweb:/ipfs/QmSwBSPBY4w7ATvtU9uTVQ5WAGbP8nVfaddRzV97LxbbFE\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851\",\"dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387\",\"dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x28a8af7b2dea168a48258c444a7d7726b9527324945a3958145e213f1a6125c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8f806ebefe1bcf10c2ec740b5bc7e40e9b84794b33171c0c21d16bec4bb10e94\",\"dweb:/ipfs/QmNRXJnFtxh2zRqhuVeGQ7NWPWFwqnasg2uM6ujhxqm7L1\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845\",\"dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv\"]},\"contracts/libraries/TradingLib.sol\":{\"keccak256\":\"0x3ff5e867597472dd3bca443f105d6b21691d2122e33e470cbe91fbf5cae5347c\",\"urls\":[\"bzz-raw://97a3ac88a29383c86d6d6a89604fa3e03799616f3d1d1b6a9d90fb302cffa28c\",\"dweb:/ipfs/QmVskb8oXFxh7LgUxHphxh9eCkAXUfMjDpGbr8jCd68nQZ\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorMsg",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError01"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError02"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError08"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError09"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorCode",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError10"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError18"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError19"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError20"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError21"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "circulatingSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum QuoteAsset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZ",
          "outputs": [
            {
              "internalType": "contract ozIDiamond",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ozDiamond_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "communityAmount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s_",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "recicledSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ozlAmountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "_0": "A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "params": {
              "owner": "The address whose nonce is to be retrieved."
            },
            "returns": {
              "_0": "The current nonce as a uint256 value."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Uses the EIP-2612 standard.",
            "params": {
              "deadline": "The expiration time of the signature, specified as a Unix timestamp.",
              "owner": "The address of the token owner.",
              "r": "The first 32 bytes of the signature.",
              "s_": "The second 32 bytes of the signature.",
              "spender": "The address of the spender.",
              "v": "The recovery byte of the signature.",
              "value": "The amount of tokens to be approved."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "Returns the EIP-712 DOMAIN_SEPARATOR."
          },
          "nonces(address)": {
            "notice": "Returns the current nonce for the given owner address."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x5f37269de4985bc8c76617a7cf3f019a54859a7c6d019425876f66fd5fcdacef",
        "urls": [
          "bzz-raw://9a56fbe82e6491b26a90af7887ffa3ca95b78c64497ed5d230357e1a1edd1da3",
          "dweb:/ipfs/QmSKPgKW7yct4BZ5YRvJ9akxY9YLZBPcUuG11FwcgwUo36"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b",
        "urls": [
          "bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe",
          "dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv"
        ],
        "license": null
      },
      "contracts/OZL.sol": {
        "keccak256": "0xe28c7aa0cec08041ae81246beaa153829a4db5022e149887a8a28a7800a9cf3a",
        "urls": [
          "bzz-raw://96fa0de617656ddcdae98785a8eb4f109b588bd93c9a73a3bf16f8c39dea53f2",
          "dweb:/ipfs/QmSwBSPBY4w7ATvtU9uTVQ5WAGbP8nVfaddRzV97LxbbFE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456",
        "urls": [
          "bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851",
          "dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d",
        "urls": [
          "bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387",
          "dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0x28a8af7b2dea168a48258c444a7d7726b9527324945a3958145e213f1a6125c3",
        "urls": [
          "bzz-raw://8f806ebefe1bcf10c2ec740b5bc7e40e9b84794b33171c0c21d16bec4bb10e94",
          "dweb:/ipfs/QmNRXJnFtxh2zRqhuVeGQ7NWPWFwqnasg2uM6ujhxqm7L1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f",
        "urls": [
          "bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845",
          "dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TradingLib.sol": {
        "keccak256": "0x3ff5e867597472dd3bca443f105d6b21691d2122e33e470cbe91fbf5cae5347c",
        "urls": [
          "bzz-raw://97a3ac88a29383c86d6d6a89604fa3e03799616f3d1d1b6a9d90fb302cffa28c",
          "dweb:/ipfs/QmVskb8oXFxh7LgUxHphxh9eCkAXUfMjDpGbr8jCd68nQZ"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 1046,
    "exportedSymbols": {
      "Address": [
        42156
      ],
      "CountersUpgradeable": [
        39057
      ],
      "ECDSAUpgradeable": [
        39671
      ],
      "EIP712Upgradeable": [
        39821
      ],
      "ERC20Upgradeable": [
        37680
      ],
      "FixedPointMathLib": [
        5105
      ],
      "IERC20": [
        41414
      ],
      "IERC20Permit": [
        4000
      ],
      "OZError01": [
        301
      ],
      "OZError02": [
        303
      ],
      "OZError03": [
        325
      ],
      "OZError04": [
        331
      ],
      "OZError05": [
        335
      ],
      "OZError06": [
        343
      ],
      "OZError07": [
        351
      ],
      "OZError08": [
        357
      ],
      "OZError09": [
        363
      ],
      "OZError10": [
        307
      ],
      "OZError11": [
        311
      ],
      "OZError12": [
        315
      ],
      "OZError13": [
        319
      ],
      "OZError14": [
        323
      ],
      "OZError15": [
        365
      ],
      "OZError16": [
        367
      ],
      "OZError17": [
        369
      ],
      "OZError18": [
        373
      ],
      "OZError19": [
        377
      ],
      "OZError20": [
        379
      ],
      "OZError21": [
        383
      ],
      "OZL": [
        1045
      ],
      "OZLrewards": [
        177
      ],
      "QuoteAsset": [
        4006
      ],
      "SafeERC20": [
        41826
      ],
      "StorageSlot": [
        42288
      ],
      "TradingLib": [
        6934
      ],
      "TradingPackage": [
        100
      ],
      "console": [
        28445
      ],
      "ozIDiamond": [
        4739
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:7823:4",
    "nodes": [
      {
        "id": 470,
        "nodeType": "PragmaDirective",
        "src": "45:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 472,
        "nodeType": "ImportDirective",
        "src": "71:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 37681,
        "symbolAliases": [
          {
            "foreign": {
              "id": 471,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37680,
              "src": "79:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 474,
        "nodeType": "ImportDirective",
        "src": "180:59:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "./interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 4001,
        "symbolAliases": [
          {
            "foreign": {
              "id": 473,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4000,
              "src": "188:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 476,
        "nodeType": "ImportDirective",
        "src": "240:68:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 5106,
        "symbolAliases": [
          {
            "foreign": {
              "id": 475,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5105,
              "src": "248:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 478,
        "nodeType": "ImportDirective",
        "src": "309:74:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "file": "@openzeppelin/contracts/utils/StorageSlot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 42289,
        "symbolAliases": [
          {
            "foreign": {
              "id": 477,
              "name": "StorageSlot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42288,
              "src": "317:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 480,
        "nodeType": "ImportDirective",
        "src": "384:55:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIDiamond.sol",
        "file": "./interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 4740,
        "symbolAliases": [
          {
            "foreign": {
              "id": 479,
              "name": "ozIDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4739,
              "src": "392:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 482,
        "nodeType": "ImportDirective",
        "src": "440:49:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "./interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 4183,
        "symbolAliases": [
          {
            "foreign": {
              "id": 481,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4006,
              "src": "448:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 484,
        "nodeType": "ImportDirective",
        "src": "490:66:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 42157,
        "symbolAliases": [
          {
            "foreign": {
              "id": 483,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42156,
              "src": "498:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 486,
        "nodeType": "ImportDirective",
        "src": "557:82:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 41827,
        "symbolAliases": [
          {
            "foreign": {
              "id": 485,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41826,
              "src": "565:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 488,
        "nodeType": "ImportDirective",
        "src": "640:70:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 41415,
        "symbolAliases": [
          {
            "foreign": {
              "id": 487,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41414,
              "src": "648:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 490,
        "nodeType": "ImportDirective",
        "src": "711:54:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/TradingLib.sol",
        "file": "./libraries/TradingLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 6935,
        "symbolAliases": [
          {
            "foreign": {
              "id": 489,
              "name": "TradingLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6934,
              "src": "719:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 493,
        "nodeType": "ImportDirective",
        "src": "766:60:4",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "./AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 178,
        "symbolAliases": [
          {
            "foreign": {
              "id": 491,
              "name": "TradingPackage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 100,
              "src": "774:14:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 492,
              "name": "OZLrewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 177,
              "src": "790:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 495,
        "nodeType": "ImportDirective",
        "src": "827:123:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 39822,
        "symbolAliases": [
          {
            "foreign": {
              "id": 494,
              "name": "EIP712Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39821,
              "src": "835:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 497,
        "nodeType": "ImportDirective",
        "src": "951:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 39058,
        "symbolAliases": [
          {
            "foreign": {
              "id": 496,
              "name": "CountersUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39057,
              "src": "959:19:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 499,
        "nodeType": "ImportDirective",
        "src": "1060:115:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 39672,
        "symbolAliases": [
          {
            "foreign": {
              "id": 498,
              "name": "ECDSAUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39671,
              "src": "1068:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 500,
        "nodeType": "ImportDirective",
        "src": "1176:22:4",
        "nodes": [],
        "absolutePath": "contracts/Errors.sol",
        "file": "./Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 501,
        "nodeType": "ImportDirective",
        "src": "1200:31:4",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1046,
        "sourceUnit": 28446,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1045,
        "nodeType": "ContractDefinition",
        "src": "1264:6604:4",
        "nodes": [
          {
            "id": 509,
            "nodeType": "UsingForDirective",
            "src": "1323:58:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 506,
              "name": "CountersUpgradeable",
              "nameLocations": [
                "1329:19:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39057,
              "src": "1329:19:4"
            },
            "typeName": {
              "id": 508,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 507,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "1353:19:4",
                  "1373:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38989,
                "src": "1353:27:4"
              },
              "referencedDeclaration": 38989,
              "src": "1353:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$38989_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 512,
            "nodeType": "UsingForDirective",
            "src": "1386:33:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 510,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1392:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5105,
              "src": "1392:17:4"
            },
            "typeName": {
              "id": 511,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1414:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 525,
            "nodeType": "VariableDeclaration",
            "src": "1425:98:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_OZ_DIAMOND_SLOT",
            "nameLocation": "1450:16:4",
            "scope": 1045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 513,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1425:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 523,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7a4469616d6f6e642e73746f726167652e736c6f74",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1492:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            },
                            "value": "ozDiamond.storage.slot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            }
                          ],
                          "id": 518,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1482:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1482:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1477:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 516,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1477:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1521:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "1477:45:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 515,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1469:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 514,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1469:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 524,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1469:54:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 530,
            "nodeType": "VariableDeclaration",
            "src": "1530:147:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_PERMIT_TYPEHASH",
            "nameLocation": "1555:16:4",
            "scope": 1045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 526,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1530:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 528,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1592:84:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 527,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1582:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 529,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1582:95:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 535,
            "nodeType": "VariableDeclaration",
            "src": "1684:63:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "1740:7:4",
            "scope": 1045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38989_storage_$",
              "typeString": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "typeName": {
              "id": 534,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 531,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1692:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1684:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38989_storage_$",
                "typeString": "mapping(address => struct CountersUpgradeable.Counter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 533,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 532,
                  "name": "CountersUpgradeable.Counter",
                  "nameLocations": [
                    "1703:19:4",
                    "1723:7:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38989,
                  "src": "1703:27:4"
                },
                "referencedDeclaration": 38989,
                "src": "1703:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$38989_storage_ptr",
                  "typeString": "struct CountersUpgradeable.Counter"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 542,
            "nodeType": "FunctionDefinition",
            "src": "1755:53:4",
            "nodes": [],
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "1769:39:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 538,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37068,
                      "src": "1779:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:22:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:2:4"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:4"
            },
            "scope": 1045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 594,
            "nodeType": "FunctionDefinition",
            "src": "1815:764:4",
            "nodes": [],
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "2009:570:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 558,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "2032:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 559,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "2039:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 557,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37116,
                      "src": "2019:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 563,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "2071:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        }
                      ],
                      "id": 562,
                      "name": "__EIP712_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39703,
                      "src": "2057:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2057:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:25:4"
                },
                {
                  "expression": {
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 570,
                            "name": "_OZ_DIAMOND_SLOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2119:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 567,
                            "name": "StorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42288,
                            "src": "2092:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42288_$",
                              "typeString": "type(library StorageSlot)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2104:14:4",
                          "memberName": "getAddressSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42210,
                          "src": "2092:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$42184_storage_ptr_$",
                            "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2092:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$42184_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot storage pointer"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2137:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42183,
                      "src": "2092:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 573,
                      "name": "ozDiamond_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "2145:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2092:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:63:4"
                },
                {
                  "documentation": " Add here later the vesting strategy using\n OP's VestingWallet.sol / https://medium.com/cardstack/building-a-token-vesting-contract-b368a954f99\n Use linear distribution, not all unlocked at once.\n When they vest, add it to circulating supply.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 579,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2487:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1045",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1045",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2479:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 577,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2479:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2479:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 581,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "2494:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 576,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37492,
                      "src": "2473:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 587,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2536:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1045",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1045",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2528:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2528:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 589,
                        "name": "ozDiamond_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "2543:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 590,
                        "name": "communityAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "2555:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37436,
                      "src": "2518:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:54:4"
                }
              ]
            },
            "functionSelector": "74823132",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 555,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 554,
                  "name": "initializer",
                  "nameLocations": [
                    "1997:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36989,
                  "src": "1997:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1997:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "1824:10:4",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1858:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1844:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1888:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1874:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "ozDiamond_",
                  "nameLocation": "1913:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1905:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1938:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1933:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "communityAmount_",
                  "nameLocation": "1965:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1960:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:153:4"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:4"
            },
            "scope": 1045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 605,
            "nodeType": "FunctionDefinition",
            "src": "2587:110:4",
            "nodes": [],
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "2642:55:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4006,
                          "src": "2675:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4006_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2686:3:4",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4003,
                        "src": "2675:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "id": 599,
                      "name": "getExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "2659:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$4006_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view returns (uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 603,
                  "nodeType": "Return",
                  "src": "2652:38:4"
                }
              ]
            },
            "functionSelector": "e6aa216c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2596:15:4",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2611:2:4"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "2636:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:6:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 668,
            "nodeType": "FunctionDefinition",
            "src": "2704:511:4",
            "nodes": [],
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "2774:441:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 614,
                      "mutability": "mutable",
                      "name": "ONE",
                      "nameLocation": "2789:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2784:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 613,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2784:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2795:7:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2784:18:4"
                },
                {
                  "assignments": [
                    618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "rETH",
                      "nameLocation": "2820:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2812:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 617,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2812:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 624,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 619,
                            "name": "getOZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "2827:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4739_$",
                              "typeString": "function () view returns (contract ozIDiamond)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2827:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2835:14:4",
                        "memberName": "tradingPackage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4713,
                        "src": "2827:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                          "typeString": "function () view external returns (struct TradingPackage memory)"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2827:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage memory"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2852:4:4",
                    "memberName": "rETH",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 97,
                    "src": "2827:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2812:44:4"
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "totalFeesRETH",
                      "nameLocation": "2871:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2866:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2866:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 633,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2924:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1045",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1045",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2916:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 631,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2916:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2916:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 628,
                            "name": "rETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "2900:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 627,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4000,
                          "src": "2887:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4000_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2887:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4000",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2906:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3886,
                      "src": "2887:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2887:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2866:64:4"
                },
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "totalFeesQuote",
                      "nameLocation": "2946:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2941:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2941:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 639,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "2963:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 640,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4006,
                          "src": "2973:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4006_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2984:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4005,
                        "src": "2973:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "2963:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 645,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "3042:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                            "typeString": "enum QuoteAsset"
                          }
                        },
                        {
                          "id": 646,
                          "name": "totalFeesRETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "3050:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                            "typeString": "enum QuoteAsset"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 644,
                        "name": "_convertToQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "3026:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$4006_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (enum QuoteAsset,uint256) view returns (uint256)"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3026:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2963:101:4",
                    "trueExpression": {
                      "id": 643,
                      "name": "totalFeesRETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "3000:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2941:123:4"
                },
                {
                  "assignments": [
                    651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "c_Supply",
                      "nameLocation": "3080:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "3075:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3075:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 654,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 652,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 882,
                      "src": "3091:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3091:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3075:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 655,
                      "name": "c_Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "3125:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3137:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3125:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 660,
                  "nodeType": "IfStatement",
                  "src": "3121:29:4",
                  "trueBody": {
                    "expression": {
                      "id": 658,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "3147:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 612,
                    "id": 659,
                    "nodeType": "Return",
                    "src": "3140:10:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 663,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "3183:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 664,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "3199:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 661,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "3168:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3172:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5036,
                      "src": "3168:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 612,
                  "id": 666,
                  "nodeType": "Return",
                  "src": "3161:47:4"
                }
              ]
            },
            "functionSelector": "4d02a3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2713:15:4",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2740:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "2729:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 606,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2729:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4006,
                      "src": "2729:10:4"
                    },
                    "referencedDeclaration": 4006,
                    "src": "2729:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2728:19:4"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "2768:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2767:6:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 739,
            "nodeType": "FunctionDefinition",
            "src": "3222:520:4",
            "nodes": [],
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "3317:425:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 679,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3340:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3327:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 678,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3327:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 684,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "724554485f4554482829",
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3371:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        },
                        "value": "rETH_ETH()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        }
                      ],
                      "expression": {
                        "id": 680,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3347:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3351:19:4",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "3347:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3327:57:4"
                },
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 685,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "3394:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 690,
                                "name": "getOZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 908,
                                "src": "3436:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4739_$",
                                  "typeString": "function () view returns (contract ozIDiamond)"
                                }
                              },
                              "id": 691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3436:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                                "typeString": "contract ozIDiamond"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                                "typeString": "contract ozIDiamond"
                              }
                            ],
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3428:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 688,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3428:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3428:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 693,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "3446:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 686,
                          "name": "Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42156,
                          "src": "3401:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Address_$42156_$",
                            "typeString": "type(library Address)"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3409:18:4",
                        "memberName": "functionStaticCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41997,
                        "src": "3401:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (address,bytes memory) view returns (bytes memory)"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3401:50:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3394:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "3394:57:4"
                },
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "reth_eth",
                      "nameLocation": "3467:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3462:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 697,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3462:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 701,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "3489:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3496:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 702,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3496:4:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 704,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3495:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 699,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3478:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3482:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3478:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3478:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3462:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                      "typeString": "enum QuoteAsset"
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 707,
                      "name": "qt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "3517:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 708,
                        "name": "QuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4006,
                        "src": "3524:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4006_$",
                          "typeString": "type(enum QuoteAsset)"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3535:3:4",
                      "memberName": "USD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4003,
                      "src": "3524:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "src": "3517:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 723,
                        "name": "qt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "3636:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 724,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4006,
                          "src": "3643:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4006_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3654:3:4",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4004,
                        "src": "3643:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "3636:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 736,
                    "nodeType": "IfStatement",
                    "src": "3633:103:4",
                    "trueBody": {
                      "id": 735,
                      "nodeType": "Block",
                      "src": "3659:77:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 727,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 676,
                              "src": "3673:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 730,
                                  "name": "reth_eth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 698,
                                  "src": "3707:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3717:7:4",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 728,
                                  "name": "totalFeesRETH_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 673,
                                  "src": "3681:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3696:10:4",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5036,
                                "src": "3681:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3681:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3673:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 734,
                          "nodeType": "ExpressionStatement",
                          "src": "3673:52:4"
                        }
                      ]
                    }
                  },
                  "id": 737,
                  "nodeType": "IfStatement",
                  "src": "3513:223:4",
                  "trueBody": {
                    "id": 722,
                    "nodeType": "Block",
                    "src": "3540:87:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 711,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 676,
                            "src": "3554:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 714,
                                      "name": "getOZ",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 908,
                                      "src": "3588:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4739_$",
                                        "typeString": "function () view returns (contract ozIDiamond)"
                                      }
                                    },
                                    "id": 715,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3588:7:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                                      "typeString": "contract ozIDiamond"
                                    }
                                  },
                                  "id": 716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3596:8:4",
                                  "memberName": "rETH_USD",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4614,
                                  "src": "3588:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3588:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3608:7:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "id": 712,
                                "name": "totalFeesRETH_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 673,
                                "src": "3562:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3577:10:4",
                              "memberName": "mulDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5036,
                              "src": "3562:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3562:54:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3554:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "3554:62:4"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToQuote",
            "nameLocation": "3231:15:4",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "qt_",
                  "nameLocation": "3258:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3247:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 670,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 669,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "3247:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4006,
                      "src": "3247:10:4"
                    },
                    "referencedDeclaration": 4006,
                    "src": "3247:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "totalFeesRETH_",
                  "nameLocation": "3268:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3263:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3246:37:4"
            },
            "returnParameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "3310:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3305:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:12:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 871,
            "nodeType": "FunctionDefinition",
            "src": "3749:1253:4",
            "nodes": [],
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "3950:1052:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "OZ",
                      "nameLocation": "3971:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 870,
                      "src": "3960:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                        "typeString": "contract ozIDiamond"
                      },
                      "typeName": {
                        "id": 756,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 755,
                          "name": "ozIDiamond",
                          "nameLocations": [
                            "3960:10:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4739,
                          "src": "3960:10:4"
                        },
                        "referencedDeclaration": 4739,
                        "src": "3960:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 758,
                      "name": "getOZ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "3976:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4739_$",
                        "typeString": "function () view returns (contract ozIDiamond)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3976:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3960:23:4"
                },
                {
                  "assignments": [
                    763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "4015:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 870,
                      "src": "3993:23:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage"
                      },
                      "typeName": {
                        "id": 762,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 761,
                          "name": "TradingPackage",
                          "nameLocations": [
                            "3993:14:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100,
                          "src": "3993:14:4"
                        },
                        "referencedDeclaration": 100,
                        "src": "3993:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_storage_ptr",
                          "typeString": "struct TradingPackage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 767,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 764,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "4019:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4022:14:4",
                      "memberName": "tradingPackage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4713,
                      "src": "4019:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                        "typeString": "function () view external returns (struct TradingPackage memory)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4019:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                      "typeString": "struct TradingPackage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3993:45:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 770,
                              "name": "tokenOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4078:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 768,
                              "name": "OZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "4066:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4069:8:4",
                            "memberName": "ozTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4707,
                            "src": "4066:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4066:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4100:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4092:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 772,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4092:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4092:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4066:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 777,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "4118:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 778,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "4131:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                              "typeString": "struct TradingPackage memory"
                            }
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4133:4:4",
                          "memberName": "WETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "4131:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4118:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4066:71:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 782,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "4153:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 783,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "4166:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                            "typeString": "struct TradingPackage memory"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4168:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 97,
                        "src": "4166:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4153:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4066:106:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 791,
                  "nodeType": "IfStatement",
                  "src": "4049:161:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 788,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "4200:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 787,
                        "name": "OZError18",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "4190:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4190:20:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 790,
                    "nodeType": "RevertStatement",
                    "src": "4183:27:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 792,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4225:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4229:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4225:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 794,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "4239:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4225:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 804,
                  "nodeType": "IfStatement",
                  "src": "4221:100:4",
                  "trueBody": {
                    "id": 803,
                    "nodeType": "Block",
                    "src": "4247:74:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 797,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 741,
                              "src": "4277:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 798,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4285:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4289:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4285:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 800,
                              "name": "ozlAmountIn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 747,
                              "src": "4297:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 796,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37652,
                            "src": "4261:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 802,
                        "nodeType": "ExpressionStatement",
                        "src": "4261:49:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "usdValue",
                      "nameLocation": "4336:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 870,
                      "src": "4331:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4331:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 815,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 810,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4006,
                              "src": "4387:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4006_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4398:3:4",
                            "memberName": "USD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4003,
                            "src": "4387:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4006",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 809,
                          "name": "getExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 668,
                          "src": "4371:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$4006_$returns$_t_uint256_$",
                            "typeString": "function (enum QuoteAsset) view returns (uint256)"
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4371:31:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4404:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 807,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "4347:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4360:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5036,
                      "src": "4347:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4347:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4331:81:4"
                },
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "mutability": "mutable",
                      "name": "rETHtoRedeem",
                      "nameLocation": "4427:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 870,
                      "src": "4422:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 816,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4422:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 825,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4462:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 821,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "4471:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4474:8:4",
                          "memberName": "rETH_USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4614,
                          "src": "4471:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4471:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 818,
                        "name": "usdValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "4442:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4451:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5036,
                      "src": "4442:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4442:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4422:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 829,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "4518:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 832,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "4534:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4526:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4526:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4526:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "4539:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 826,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6934,
                        "src": "4496:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6934_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4507:10:4",
                      "memberName": "recicleOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6468,
                      "src": "4496:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4496:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:56:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 837,
                      "name": "tokenOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "4575:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 838,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "4588:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4590:4:4",
                      "memberName": "rETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "4588:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4575:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 860,
                  "nodeType": "IfStatement",
                  "src": "4571:190:4",
                  "trueBody": {
                    "id": 859,
                    "nodeType": "Block",
                    "src": "4596:165:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 841,
                            "name": "rETHtoRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "4614:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 842,
                              "name": "minAmountsOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "4629:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 844,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4644:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4629:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4614:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 850,
                        "nodeType": "IfStatement",
                        "src": "4610:68:4",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 847,
                                "name": "rETHtoRedeem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "4665:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 846,
                              "name": "OZError19",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "4655:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4655:23:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 849,
                          "nodeType": "RevertStatement",
                          "src": "4648:30:4"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 853,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 763,
                                "src": "4718:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                                  "typeString": "struct TradingPackage memory"
                                }
                              },
                              "id": 854,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4720:4:4",
                              "memberName": "rETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 97,
                              "src": "4718:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 855,
                              "name": "receiver_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 743,
                              "src": "4726:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 856,
                              "name": "rETHtoRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "4737:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 851,
                              "name": "TradingLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6934,
                              "src": "4699:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradingLib_$6934_$",
                                "typeString": "type(library TradingLib)"
                              }
                            },
                            "id": 852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4710:7:4",
                            "memberName": "sendLSD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6870,
                            "src": "4699:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) returns (uint256)"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4699:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 754,
                        "id": 858,
                        "nodeType": "Return",
                        "src": "4692:58:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 863,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "4810:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      {
                        "id": 864,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "4825:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 865,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "4848:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 866,
                        "name": "rETHtoRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "4871:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 867,
                        "name": "minAmountsOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "4897:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 861,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6934,
                        "src": "4778:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6934_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4789:6:4",
                      "memberName": "useOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6496,
                      "src": "4778:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TradingPackage_$100_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct TradingPackage memory,address,address,uint256,uint256[] memory) returns (uint256)"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:143:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 754,
                  "id": 869,
                  "nodeType": "Return",
                  "src": "4771:150:4"
                }
              ]
            },
            "functionSelector": "6afa0287",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "3758:6:4",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "3782:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3774:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3774:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "3806:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3798:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3798:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "3833:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3825:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3825:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "3860:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3852:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3852:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "minAmountsOut_",
                  "nameLocation": "3896:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3882:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 748,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3882:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 749,
                    "nodeType": "ArrayTypeName",
                    "src": "3882:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3764:152:4"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3939:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3934:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3933:16:4"
            },
            "scope": 1045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 882,
            "nodeType": "FunctionDefinition",
            "src": "5009:109:4",
            "nodes": [],
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "5064:54:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 876,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 908,
                          "src": "5081:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4739_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5081:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5089:20:4",
                      "memberName": "getCirculatingSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4700,
                      "src": "5081:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5081:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 875,
                  "id": 880,
                  "nodeType": "Return",
                  "src": "5074:37:4"
                }
              ]
            },
            "functionSelector": "9358928b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "circulatingSupply",
            "nameLocation": "5018:17:4",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5035:2:4"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "5058:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5058:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5057:6:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 893,
            "nodeType": "FunctionDefinition",
            "src": "5124:103:4",
            "nodes": [],
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "5176:51:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 887,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 908,
                          "src": "5193:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4739_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5193:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5201:17:4",
                      "memberName": "getRecicledSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4728,
                      "src": "5193:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5193:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 886,
                  "id": 891,
                  "nodeType": "Return",
                  "src": "5186:34:4"
                }
              ]
            },
            "functionSelector": "8b5f1a6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recicledSupply",
            "nameLocation": "5133:14:4",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5147:2:4"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "5170:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5169:6:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 908,
            "nodeType": "FunctionDefinition",
            "src": "5233:135:4",
            "nodes": [],
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "5282:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 902,
                              "name": "_OZ_DIAMOND_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 525,
                              "src": "5337:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 900,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42288,
                              "src": "5310:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42288_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5322:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42210,
                            "src": "5310:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$42184_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5310:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$42184_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5355:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42183,
                        "src": "5310:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 899,
                      "name": "ozIDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4739,
                      "src": "5299:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$4739_$",
                        "typeString": "type(contract ozIDiamond)"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5299:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "functionReturnParameters": 898,
                  "id": 906,
                  "nodeType": "Return",
                  "src": "5292:69:4"
                }
              ]
            },
            "functionSelector": "59c64e12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZ",
            "nameLocation": "5242:5:4",
            "parameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5247:2:4"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "5270:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                    "typeString": "contract ozIDiamond"
                  },
                  "typeName": {
                    "id": 896,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 895,
                      "name": "ozIDiamond",
                      "nameLocations": [
                        "5270:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4739,
                      "src": "5270:10:4"
                    },
                    "referencedDeclaration": 4739,
                    "src": "5270:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4739",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5269:12:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 918,
            "nodeType": "FunctionDefinition",
            "src": "5535:104:4",
            "nodes": [],
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "5595:44:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 914,
                      "name": "_domainSeparatorV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39754,
                      "src": "5612:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5612:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 913,
                  "id": 916,
                  "nodeType": "Return",
                  "src": "5605:27:4"
                }
              ]
            },
            "documentation": {
              "id": 909,
              "nodeType": "StructuredDocumentation",
              "src": "5392:138:4",
              "text": " @notice Returns the EIP-712 DOMAIN_SEPARATOR.\n @return A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR."
            },
            "functionSelector": "3644e515",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "5544:16:4",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5560:2:4"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "5586:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5585:9:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 933,
            "nodeType": "FunctionDefinition",
            "src": "5848:111:4",
            "nodes": [],
            "body": {
              "id": 932,
              "nodeType": "Block",
              "src": "5911:48:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 926,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "5928:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38989_storage_$",
                            "typeString": "mapping(address => struct CountersUpgradeable.Counter storage ref)"
                          }
                        },
                        "id": 928,
                        "indexExpression": {
                          "id": 927,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "5936:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5928:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$38989_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5943:7:4",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39001,
                      "src": "5928:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$38989_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$38989_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5928:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 925,
                  "id": 931,
                  "nodeType": "Return",
                  "src": "5921:31:4"
                }
              ]
            },
            "documentation": {
              "id": 919,
              "nodeType": "StructuredDocumentation",
              "src": "5645:198:4",
              "text": " @notice Returns the current nonce for the given owner address.\n @param owner The address whose nonce is to be retrieved.\n @return The current nonce as a uint256 value."
            },
            "functionSelector": "7ecebe00",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "5857:6:4",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5872:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 933,
                  "src": "5864:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5864:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5863:15:4"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 933,
                  "src": "5902:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:9:4"
            },
            "scope": 1045,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 962,
            "nodeType": "FunctionDefinition",
            "src": "6149:206:4",
            "nodes": [],
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "6217:138:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "6263:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "6227:41:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$38989_storage_ptr",
                        "typeString": "struct CountersUpgradeable.Counter"
                      },
                      "typeName": {
                        "id": 944,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 943,
                          "name": "CountersUpgradeable.Counter",
                          "nameLocations": [
                            "6227:19:4",
                            "6247:7:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38989,
                          "src": "6227:27:4"
                        },
                        "referencedDeclaration": 38989,
                        "src": "6227:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$38989_storage_ptr",
                          "typeString": "struct CountersUpgradeable.Counter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "baseExpression": {
                      "id": 946,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "6271:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38989_storage_$",
                        "typeString": "mapping(address => struct CountersUpgradeable.Counter storage ref)"
                      }
                    },
                    "id": 948,
                    "indexExpression": {
                      "id": 947,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "6279:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6271:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$38989_storage",
                      "typeString": "struct CountersUpgradeable.Counter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6227:58:4"
                },
                {
                  "expression": {
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 950,
                      "name": "current",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "6295:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 951,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "6305:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$38989_storage_ptr",
                            "typeString": "struct CountersUpgradeable.Counter storage pointer"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6311:7:4",
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39001,
                        "src": "6305:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$38989_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$38989_storage_ptr_$",
                          "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6305:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6295:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "6295:25:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 956,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "6331:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$38989_storage_ptr",
                          "typeString": "struct CountersUpgradeable.Counter storage pointer"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6337:9:4",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39015,
                      "src": "6331:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$38989_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$38989_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6331:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "6331:17:4"
                }
              ]
            },
            "documentation": {
              "id": 934,
              "nodeType": "StructuredDocumentation",
              "src": "5965:179:4",
              "text": " @dev Private function that increments and returns the current nonce for a given owner address.\n @param owner The address whose nonce is to be incremented."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_useNonce",
            "nameLocation": "6158:9:4",
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6176:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "6168:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6168:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6167:15:4"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "current",
                  "nameLocation": "6208:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "6200:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6200:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6199:17:4"
            },
            "scope": 1045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1039,
            "nodeType": "FunctionDefinition",
            "src": "6945:623:4",
            "nodes": [],
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "7129:439:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 980,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7143:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7149:9:4",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7143:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 982,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "7161:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7143:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 990,
                  "nodeType": "IfStatement",
                  "src": "7139:75:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 985,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "7188:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 986,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7198:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7204:9:4",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7198:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 984,
                        "name": "OZError08",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "7178:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7178:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 989,
                    "nodeType": "RevertStatement",
                    "src": "7171:43:4"
                  }
                },
                {
                  "assignments": [
                    992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 992,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "7233:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1038,
                      "src": "7225:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 991,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7225:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1006,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 996,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "7267:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 997,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "7285:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 998,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "7292:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 999,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "7301:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1001,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "7318:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1000,
                              "name": "_useNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "7308:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) returns (uint256)"
                              }
                            },
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7308:16:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1003,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "7326:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 994,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7256:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7260:6:4",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7256:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7256:79:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 993,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7246:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7246:90:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7225:111:4"
                },
                {
                  "assignments": [
                    1008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1008,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "7354:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1038,
                      "src": "7346:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1007,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7346:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1012,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1010,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "7378:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1009,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39797,
                      "src": "7361:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7361:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7346:43:4"
                },
                {
                  "assignments": [
                    1014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1014,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "7407:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1038,
                      "src": "7399:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1013,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7399:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1017,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "7441:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1018,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "7447:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1019,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "7450:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1020,
                        "name": "s_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "7453:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1015,
                        "name": "ECDSAUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39671,
                        "src": "7416:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSAUpgradeable_$39671_$",
                          "typeString": "type(library ECDSAUpgradeable)"
                        }
                      },
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7433:7:4",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39611,
                      "src": "7416:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7416:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7399:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1023,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "7471:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1024,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "7481:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7471:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1031,
                  "nodeType": "IfStatement",
                  "src": "7467:52:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 1027,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "7505:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1028,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "7513:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1026,
                        "name": "OZError09",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "7495:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address) pure"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7495:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1030,
                    "nodeType": "RevertStatement",
                    "src": "7488:31:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1033,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "7539:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1034,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "7546:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1035,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "7555:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1032,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37609,
                      "src": "7530:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7530:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "7530:31:4"
                }
              ]
            },
            "documentation": {
              "id": 963,
              "nodeType": "StructuredDocumentation",
              "src": "6361:579:4",
              "text": " @notice Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction.\n @dev Uses the EIP-2612 standard.\n @param owner The address of the token owner.\n @param spender The address of the spender.\n @param value The amount of tokens to be approved.\n @param deadline The expiration time of the signature, specified as a Unix timestamp.\n @param v The recovery byte of the signature.\n @param r The first 32 bytes of the signature.\n @param s_ The second 32 bytes of the signature."
            },
            "functionSelector": "d505accf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "6954:6:4",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6978:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "6970:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6970:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7001:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "6993:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6993:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7026:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "7018:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7018:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7049:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "7041:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7041:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "7073:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "7067:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7067:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "7092:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "7084:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7084:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "7111:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "7103:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6960:159:4"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7129:0:4"
            },
            "scope": 1045,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1044,
            "nodeType": "VariableDeclaration",
            "src": "7833:25:4",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1040,
              "nodeType": "StructuredDocumentation",
              "src": "7574:254:4",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "7853:5:4",
            "scope": 1045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$42_storage",
              "typeString": "uint256[42]"
            },
            "typeName": {
              "baseType": {
                "id": 1041,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7833:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1043,
              "length": {
                "hexValue": "3432",
                "id": 1042,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7841:2:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_42_by_1",
                  "typeString": "int_const 42"
                },
                "value": "42"
              },
              "nodeType": "ArrayTypeName",
              "src": "7833:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$42_storage_ptr",
                "typeString": "uint256[42]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 502,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "1280:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37680,
              "src": "1280:16:4"
            },
            "id": 503,
            "nodeType": "InheritanceSpecifier",
            "src": "1280:16:4"
          },
          {
            "baseName": {
              "id": 504,
              "name": "EIP712Upgradeable",
              "nameLocations": [
                "1298:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39821,
              "src": "1298:17:4"
            },
            "id": 505,
            "nodeType": "InheritanceSpecifier",
            "src": "1298:17:4"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1045,
          39821,
          37680,
          38381,
          37758,
          38983,
          37069
        ],
        "name": "OZL",
        "nameLocation": "1273:3:4",
        "scope": 1046,
        "usedErrors": [
          301,
          303,
          307,
          357,
          363,
          373,
          377,
          379,
          383
        ],
        "usedEvents": [
          36933,
          37692,
          37701
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 4
}