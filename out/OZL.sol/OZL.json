{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AssetOutNoExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "OZError01",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError02",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorCode",
          "type": "string"
        }
      ],
      "name": "OZError10",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum QuoteAsset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZ",
      "outputs": [
        {
          "internalType": "contract ozIDiamond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ozDiamond_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "communityAmount_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ozlAmountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut_",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61226d80620000ee6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d71461022c578063a9059cbb1461023f578063be78b2ba14610252578063dd62ed3e14610265578063e6aa216c1461027857600080fd5b806370a08231146101de57806374823132146102075780639358928b1461021c57806395d89b411461022457600080fd5b806325caa262116100e957806325caa26214610181578063313ce5671461018957806339509351146101985780634d02a3f7146101ab57806359c64e12146101be57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b610123610280565b6040516101309190611a01565b60405180910390f35b61014c610147366004611a2c565b610312565b6040519015158152602001610130565b6035545b604051908152602001610130565b61014c61017c366004611a58565b61032c565b610160610352565b60405160128152602001610130565b61014c6101a6366004611a2c565b610410565b6101606101b9366004611a99565b610432565b6101c66104f7565b6040516001600160a01b039091168152602001610130565b6101606101ec366004611aba565b6001600160a01b031660009081526033602052604090205490565b61021a610215366004611b8e565b610539565b005b6101606106b8565b610123610728565b61014c61023a366004611a2c565b610737565b61014c61024d366004611a2c565b6107bd565b61021a610260366004611c16565b6107cb565b610160610273366004611c59565b6108e3565b61016061090e565b60606036805461028f90611c92565b80601f01602080910402602001604051908101604052809291908181526020018280546102bb90611c92565b80156103085780601f106102dd57610100808354040283529160200191610308565b820191906000526020600020905b8154815290600101906020018083116102eb57829003601f168201915b5050505050905090565b600033610320818585610951565b60019150505b92915050565b60003361033a858285610a75565b610345858585610aef565b60019150505b9392505050565b6040516370a0823160e01b8152306004820152600090819073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190611ccc565b905061040b6040518060400160405280601a81526020017f724554482062616c202866726f6d206665657329202a2a2a3a2000000000000081525082610cbd565b919050565b60003361032081858561042383836108e3565b61042d9190611cfb565b610951565b6040516370a0823160e01b8152306004820152600090670de0b6b3a764000090829073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611ccc565b905060006104c28583610d06565b905060006104ce6106b8565b9050806000036104e2575091949350505050565b6104ed848383610e32565b9695505050505050565b600061052a61052760017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611d0e565b90565b546001600160a01b0316919050565b600054610100900460ff16158080156105595750600054600160ff909116105b806105735750303b158015610573575060005460ff166001145b6105db5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156105fe576000805461ff0019166101001790555b6106088686610e50565b8361063761052760017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611d0e565b80546001600160a01b0319166001600160a01b039290921691909117905561065f3084610e81565b61066a308584610aef565b80156106b0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006106c26104f7565b6001600160a01b0316631e4d84c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190611ccc565b905090565b60606037805461028f90611c92565b6000338161074582866108e3565b9050838110156107a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105d2565b6107b28286868403610951565b506001949350505050565b600033610320818585610aef565b60006107d56104f7565b60405163423f0b9160e01b81526001600160a01b038681166004830152919091169063423f0b9190602401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190611d2c565b6001600160a01b031614801561087457506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14155b801561089d57506001600160a01b03831673ae78736cd615f374d3085123a210448e74fc639314155b156108bb5760405163f67dc7cd60e01b815260040160405180910390fd5b336001600160a01b038616146108d6576108d6853384610a75565b6106b08585858585610f60565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610934908490600401611d7d565b602060405180830381865afa1580156106ff573d6000803e3d6000fd5b6001600160a01b0383166109b35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d2565b6001600160a01b038216610a145760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d2565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610a8184846108e3565b90506000198114610ae95781811015610adc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d2565b610ae98484848403610951565b50505050565b6001600160a01b038316610b535760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d2565b6001600160a01b038216610bb55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d2565b6001600160a01b03831660009081526033602052604090205481811015610c2d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105d2565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610c64908490611cfb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cb091815260200190565b60405180910390a3610ae9565b610d028282604051602401610cd3929190611d90565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526110ca565b5050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b179052600090610d43610d3d6104f7565b826110eb565b9050600081806020019051810190610d5b9190611ccc565b9050600080866001811115610d7257610d72611d49565b03610dfa57610df3610d826104f7565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611ccc565b8690670de0b6b3a7640000610e32565b9050610e29565b6001866001811115610e0e57610e0e611d49565b03610e2957610e268583670de0b6b3a7640000610e32565b90505b95945050505050565b6000826000190484118302158202610e4957600080fd5b5091020490565b600054610100900460ff16610e775760405162461bcd60e51b81526004016105d290611db2565b610d028282611110565b6001600160a01b038216610ed75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d2565b8060356000828254610ee99190611cfb565b90915550506001600160a01b03821660009081526033602052604081208054839290610f16908490611cfb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610f73610f6d6104f7565b846107bd565b506000610f93610f836000610432565b8590670de0b6b3a7640000610e32565b90506000611014670de0b6b3a7640000610fab6104f7565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190611ccc565b849190610e32565b905073ae78736cd615f374d3085123a210448e74fc6392196001600160a01b03871601611044579150610e299050565b6110ba61104f6104f7565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa15801561108d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b19190611e10565b87898488611150565b505095945050505050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606061034b83836040518060600160405280602581526020016122136025913961115f565b600054610100900460ff166111375760405162461bcd60e51b81526004016105d290611db2565b60366111438382611f1b565b5060376110c58282611f1b565b6106b0858585858560006111cd565b6060600080856001600160a01b03168560405161117c9190611fdb565b600060405180830381855afa9150503d80600081146111b7576040519150601f19603f3d011682016040523d82523d6000602084013e6111bc565b606091505b50915091506104ed868383876112cc565b60008080808460028111156111e4576111e4611d49565b036111f657505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e9190612007565b5050905080156112855761127f8383308d600001518e602001518c8c61134d565b506112a3565b6112a083838c604001518d606001518e608001518c8c6114b1565b93505b6112be8a60e001518a8a8d600001518e60200151898c61134d565b9a9950505050505050505050565b6060831561133b578251600003611334576001600160a01b0385163b6113345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105d2565b5081611345565b6113458383611718565b949350505050565b600061135a888685611742565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b8152600060c0890181815260e08a01918252995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a4830152935160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af192505050801561144b575060408051601f3d908101601f1916820190925261144891810190611ccc565b60015b61149d5761145761203c565b806308c379a003611491575061146b612057565b806114765750611493565b8060405163633abab960e01b81526004016105d29190611a01565b505b3d6000803e3d6000fd5b91506114a69050565b979650505050505050565b6000806040518060c00160405280886001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115219190611ccc565b8152602001600081526001600160a01b03808c1660208301528a1660408201526060810186905260800160006040519080825280601f01601f191660200182016040528015611577576020820181803683370190505b5090526040805160808101825230808252600060208301819052828401919091526060820152905163e969f6b360e01b8152919250906001600160a01b0388169063e969f6b3906115ce9085908590600401612141565b6020604051808303816000875af1925050508015611609575060408051601f3d908101601f1916820190925261160691810190611ccc565b60015b61164f5761161561203c565b806308c379a0036114915750611629612057565b806116345750611493565b8060405163dafe91cd60e01b81526004016105d29190611a01565b600081861161165e5781611660565b855b90506116718c898660800151611742565b6040516352bbbe2960e01b81526001600160a01b038916906352bbbe29906116a3908790879086904290600401612193565b6020604051808303816000875af11580156116c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e69190611ccc565b945050508260000361170b57604051635eeb40ff60e11b815260040160405180910390fd5b5050979650505050505050565b8151156117285781518083602001fd5b8060405162461bcd60e51b81526004016105d29190611a01565b8015806117bc5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba9190611ccc565b155b6118275760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016105d2565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663095ea7b360e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526110c5928692916000916118b7918516908490611937565b90508051600014806118d85750808060200190518101906118d891906121f7565b6110c55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105d2565b6060611345848460008585600080866001600160a01b0316858760405161195e9190611fdb565b60006040518083038185875af1925050503d806000811461199b576040519150601f19603f3d011682016040523d82523d6000602084013e6119a0565b606091505b50915091506114a6878383876112cc565b60005b838110156119cc5781810151838201526020016119b4565b50506000910152565b600081518084526119ed8160208601602086016119b1565b601f01601f19169290920160200192915050565b60208152600061034b60208301846119d5565b6001600160a01b0381168114611a2957600080fd5b50565b60008060408385031215611a3f57600080fd5b8235611a4a81611a14565b946020939093013593505050565b600080600060608486031215611a6d57600080fd5b8335611a7881611a14565b92506020840135611a8881611a14565b929592945050506040919091013590565b600060208284031215611aab57600080fd5b81356002811061034b57600080fd5b600060208284031215611acc57600080fd5b813561034b81611a14565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611b1357611b13611ad7565b6040525050565b600082601f830112611b2b57600080fd5b813567ffffffffffffffff811115611b4557611b45611ad7565b604051611b5c601f8301601f191660200182611aed565b818152846020838601011115611b7157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611ba657600080fd5b853567ffffffffffffffff80821115611bbe57600080fd5b611bca89838a01611b1a565b96506020880135915080821115611be057600080fd5b50611bed88828901611b1a565b9450506040860135611bfe81611a14565b94979396509394606081013594506080013592915050565b600080600080600060a08688031215611c2e57600080fd5b8535611c3981611a14565b94506020860135611c4981611a14565b93506040860135611bfe81611a14565b60008060408385031215611c6c57600080fd5b8235611c7781611a14565b91506020830135611c8781611a14565b809150509250929050565b600181811c90821680611ca657607f821691505b602082108103611cc657634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611cde57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561032657610326611ce5565b8181038181111561032657610326611ce5565b805161040b81611a14565b600060208284031215611d3e57600080fd5b815161034b81611a14565b634e487b7160e01b600052602160045260246000fd5b60028110611a2957634e487b7160e01b600052602160045260246000fd5b60208101611d8a83611d5f565b91905290565b604081526000611da360408301856119d5565b90508260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805162ffffff8116811461040b57600080fd5b6000610100808385031215611e2457600080fd5b6040519081019067ffffffffffffffff82118183101715611e4757611e47611ad7565b81604052611e5484611d21565b8152611e6260208501611dfd565b6020820152611e7360408501611d21565b6040820152611e8460608501611d21565b6060820152611e9560808501611d21565b6080820152611ea660a08501611d21565b60a0820152611eb760c08501611d21565b60c0820152611ec860e08501611d21565b60e0820152949350505050565b601f8211156110c557600081815260208120601f850160051c81016020861015611efc5750805b601f850160051c820191505b818110156106b057828155600101611f08565b815167ffffffffffffffff811115611f3557611f35611ad7565b611f4981611f438454611c92565b84611ed5565b602080601f831160018114611f7e5760008415611f665750858301515b600019600386901b1c1916600185901b1785556106b0565b600085815260208120601f198616915b82811015611fad57888601518255948401946001909101908401611f8e565b5085821015611fcb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611fed8184602087016119b1565b9190910192915050565b8051801515811461040b57600080fd5b60008060006060848603121561201c57600080fd5b61202584611ff7565b925060208401519150604084015190509250925092565b600060033d11156105275760046000803e5060005160e01c90565b600060443d10156120655790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561209557505050505090565b82850191508151818111156120ad5750505050505090565b843d87010160208285010111156120c75750505050505090565b6120d660208286010187611aed565b509095945050505050565b80518252600060208201516120f581611d5f565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a085015261134560c08501826119d5565b60a08152600061215460a08301856120e1565b905061034b602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e0815260006121a660e08301876120e1565b90506121e5602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c0015292915050565b60006020828403121561220957600080fd5b61034b82611ff756fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a26469706673582212206bd92abad5c98f38605877414ba287662d3be12941885ee3c3c00696c2c95aed64736f6c63430008150033",
    "sourceMap": "831:6024:4:-:0;;;1228:53;;;;;;;;;-1:-1:-1;1252:22:4;:20;:22::i;:::-;831:6024;;5388:279:57;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:57;;216:2:111;5447:66:57;;;198:21:111;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:111;;;338:37;392:19;;5447:66:57;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:57;5588:15;5573:30;;;;;;5622:28;;564:36:111;;;5622:28:57;;552:2:111;537:18;5622:28:57;;;;;;;5523:138;5388:279::o;422:184:111:-;831:6024:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d71461022c578063a9059cbb1461023f578063be78b2ba14610252578063dd62ed3e14610265578063e6aa216c1461027857600080fd5b806370a08231146101de57806374823132146102075780639358928b1461021c57806395d89b411461022457600080fd5b806325caa262116100e957806325caa26214610181578063313ce5671461018957806339509351146101985780634d02a3f7146101ab57806359c64e12146101be57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b610123610280565b6040516101309190611a01565b60405180910390f35b61014c610147366004611a2c565b610312565b6040519015158152602001610130565b6035545b604051908152602001610130565b61014c61017c366004611a58565b61032c565b610160610352565b60405160128152602001610130565b61014c6101a6366004611a2c565b610410565b6101606101b9366004611a99565b610432565b6101c66104f7565b6040516001600160a01b039091168152602001610130565b6101606101ec366004611aba565b6001600160a01b031660009081526033602052604090205490565b61021a610215366004611b8e565b610539565b005b6101606106b8565b610123610728565b61014c61023a366004611a2c565b610737565b61014c61024d366004611a2c565b6107bd565b61021a610260366004611c16565b6107cb565b610160610273366004611c59565b6108e3565b61016061090e565b60606036805461028f90611c92565b80601f01602080910402602001604051908101604052809291908181526020018280546102bb90611c92565b80156103085780601f106102dd57610100808354040283529160200191610308565b820191906000526020600020905b8154815290600101906020018083116102eb57829003601f168201915b5050505050905090565b600033610320818585610951565b60019150505b92915050565b60003361033a858285610a75565b610345858585610aef565b60019150505b9392505050565b6040516370a0823160e01b8152306004820152600090819073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190611ccc565b905061040b6040518060400160405280601a81526020017f724554482062616c202866726f6d206665657329202a2a2a3a2000000000000081525082610cbd565b919050565b60003361032081858561042383836108e3565b61042d9190611cfb565b610951565b6040516370a0823160e01b8152306004820152600090670de0b6b3a764000090829073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611ccc565b905060006104c28583610d06565b905060006104ce6106b8565b9050806000036104e2575091949350505050565b6104ed848383610e32565b9695505050505050565b600061052a61052760017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611d0e565b90565b546001600160a01b0316919050565b600054610100900460ff16158080156105595750600054600160ff909116105b806105735750303b158015610573575060005460ff166001145b6105db5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156105fe576000805461ff0019166101001790555b6106088686610e50565b8361063761052760017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611d0e565b80546001600160a01b0319166001600160a01b039290921691909117905561065f3084610e81565b61066a308584610aef565b80156106b0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006106c26104f7565b6001600160a01b0316631e4d84c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190611ccc565b905090565b60606037805461028f90611c92565b6000338161074582866108e3565b9050838110156107a55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105d2565b6107b28286868403610951565b506001949350505050565b600033610320818585610aef565b60006107d56104f7565b60405163423f0b9160e01b81526001600160a01b038681166004830152919091169063423f0b9190602401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190611d2c565b6001600160a01b031614801561087457506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14155b801561089d57506001600160a01b03831673ae78736cd615f374d3085123a210448e74fc639314155b156108bb5760405163f67dc7cd60e01b815260040160405180910390fd5b336001600160a01b038616146108d6576108d6853384610a75565b6106b08585858585610f60565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610934908490600401611d7d565b602060405180830381865afa1580156106ff573d6000803e3d6000fd5b6001600160a01b0383166109b35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d2565b6001600160a01b038216610a145760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d2565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610a8184846108e3565b90506000198114610ae95781811015610adc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d2565b610ae98484848403610951565b50505050565b6001600160a01b038316610b535760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d2565b6001600160a01b038216610bb55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d2565b6001600160a01b03831660009081526033602052604090205481811015610c2d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105d2565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610c64908490611cfb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cb091815260200190565b60405180910390a3610ae9565b610d028282604051602401610cd3929190611d90565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526110ca565b5050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b179052600090610d43610d3d6104f7565b826110eb565b9050600081806020019051810190610d5b9190611ccc565b9050600080866001811115610d7257610d72611d49565b03610dfa57610df3610d826104f7565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611ccc565b8690670de0b6b3a7640000610e32565b9050610e29565b6001866001811115610e0e57610e0e611d49565b03610e2957610e268583670de0b6b3a7640000610e32565b90505b95945050505050565b6000826000190484118302158202610e4957600080fd5b5091020490565b600054610100900460ff16610e775760405162461bcd60e51b81526004016105d290611db2565b610d028282611110565b6001600160a01b038216610ed75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d2565b8060356000828254610ee99190611cfb565b90915550506001600160a01b03821660009081526033602052604081208054839290610f16908490611cfb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610f73610f6d6104f7565b846107bd565b506000610f93610f836000610432565b8590670de0b6b3a7640000610e32565b90506000611014670de0b6b3a7640000610fab6104f7565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190611ccc565b849190610e32565b905073ae78736cd615f374d3085123a210448e74fc6392196001600160a01b03871601611044579150610e299050565b6110ba61104f6104f7565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa15801561108d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b19190611e10565b87898488611150565b505095945050505050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606061034b83836040518060600160405280602581526020016122136025913961115f565b600054610100900460ff166111375760405162461bcd60e51b81526004016105d290611db2565b60366111438382611f1b565b5060376110c58282611f1b565b6106b0858585858560006111cd565b6060600080856001600160a01b03168560405161117c9190611fdb565b600060405180830381855afa9150503d80600081146111b7576040519150601f19603f3d011682016040523d82523d6000602084013e6111bc565b606091505b50915091506104ed868383876112cc565b60008080808460028111156111e4576111e4611d49565b036111f657505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e9190612007565b5050905080156112855761127f8383308d600001518e602001518c8c61134d565b506112a3565b6112a083838c604001518d606001518e608001518c8c6114b1565b93505b6112be8a60e001518a8a8d600001518e60200151898c61134d565b9a9950505050505050505050565b6060831561133b578251600003611334576001600160a01b0385163b6113345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105d2565b5081611345565b6113458383611718565b949350505050565b600061135a888685611742565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b8152600060c0890181815260e08a01918252995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a4830152935160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af192505050801561144b575060408051601f3d908101601f1916820190925261144891810190611ccc565b60015b61149d5761145761203c565b806308c379a003611491575061146b612057565b806114765750611493565b8060405163633abab960e01b81526004016105d29190611a01565b505b3d6000803e3d6000fd5b91506114a69050565b979650505050505050565b6000806040518060c00160405280886001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115219190611ccc565b8152602001600081526001600160a01b03808c1660208301528a1660408201526060810186905260800160006040519080825280601f01601f191660200182016040528015611577576020820181803683370190505b5090526040805160808101825230808252600060208301819052828401919091526060820152905163e969f6b360e01b8152919250906001600160a01b0388169063e969f6b3906115ce9085908590600401612141565b6020604051808303816000875af1925050508015611609575060408051601f3d908101601f1916820190925261160691810190611ccc565b60015b61164f5761161561203c565b806308c379a0036114915750611629612057565b806116345750611493565b8060405163dafe91cd60e01b81526004016105d29190611a01565b600081861161165e5781611660565b855b90506116718c898660800151611742565b6040516352bbbe2960e01b81526001600160a01b038916906352bbbe29906116a3908790879086904290600401612193565b6020604051808303816000875af11580156116c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e69190611ccc565b945050508260000361170b57604051635eeb40ff60e11b815260040160405180910390fd5b5050979650505050505050565b8151156117285781518083602001fd5b8060405162461bcd60e51b81526004016105d29190611a01565b8015806117bc5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba9190611ccc565b155b6118275760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016105d2565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663095ea7b360e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526110c5928692916000916118b7918516908490611937565b90508051600014806118d85750808060200190518101906118d891906121f7565b6110c55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105d2565b6060611345848460008585600080866001600160a01b0316858760405161195e9190611fdb565b60006040518083038185875af1925050503d806000811461199b576040519150601f19603f3d011682016040523d82523d6000602084013e6119a0565b606091505b50915091506114a6878383876112cc565b60005b838110156119cc5781810151838201526020016119b4565b50506000910152565b600081518084526119ed8160208601602086016119b1565b601f01601f19169290920160200192915050565b60208152600061034b60208301846119d5565b6001600160a01b0381168114611a2957600080fd5b50565b60008060408385031215611a3f57600080fd5b8235611a4a81611a14565b946020939093013593505050565b600080600060608486031215611a6d57600080fd5b8335611a7881611a14565b92506020840135611a8881611a14565b929592945050506040919091013590565b600060208284031215611aab57600080fd5b81356002811061034b57600080fd5b600060208284031215611acc57600080fd5b813561034b81611a14565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611b1357611b13611ad7565b6040525050565b600082601f830112611b2b57600080fd5b813567ffffffffffffffff811115611b4557611b45611ad7565b604051611b5c601f8301601f191660200182611aed565b818152846020838601011115611b7157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611ba657600080fd5b853567ffffffffffffffff80821115611bbe57600080fd5b611bca89838a01611b1a565b96506020880135915080821115611be057600080fd5b50611bed88828901611b1a565b9450506040860135611bfe81611a14565b94979396509394606081013594506080013592915050565b600080600080600060a08688031215611c2e57600080fd5b8535611c3981611a14565b94506020860135611c4981611a14565b93506040860135611bfe81611a14565b60008060408385031215611c6c57600080fd5b8235611c7781611a14565b91506020830135611c8781611a14565b809150509250929050565b600181811c90821680611ca657607f821691505b602082108103611cc657634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611cde57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561032657610326611ce5565b8181038181111561032657610326611ce5565b805161040b81611a14565b600060208284031215611d3e57600080fd5b815161034b81611a14565b634e487b7160e01b600052602160045260246000fd5b60028110611a2957634e487b7160e01b600052602160045260246000fd5b60208101611d8a83611d5f565b91905290565b604081526000611da360408301856119d5565b90508260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805162ffffff8116811461040b57600080fd5b6000610100808385031215611e2457600080fd5b6040519081019067ffffffffffffffff82118183101715611e4757611e47611ad7565b81604052611e5484611d21565b8152611e6260208501611dfd565b6020820152611e7360408501611d21565b6040820152611e8460608501611d21565b6060820152611e9560808501611d21565b6080820152611ea660a08501611d21565b60a0820152611eb760c08501611d21565b60c0820152611ec860e08501611d21565b60e0820152949350505050565b601f8211156110c557600081815260208120601f850160051c81016020861015611efc5750805b601f850160051c820191505b818110156106b057828155600101611f08565b815167ffffffffffffffff811115611f3557611f35611ad7565b611f4981611f438454611c92565b84611ed5565b602080601f831160018114611f7e5760008415611f665750858301515b600019600386901b1c1916600185901b1785556106b0565b600085815260208120601f198616915b82811015611fad57888601518255948401946001909101908401611f8e565b5085821015611fcb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611fed8184602087016119b1565b9190910192915050565b8051801515811461040b57600080fd5b60008060006060848603121561201c57600080fd5b61202584611ff7565b925060208401519150604084015190509250925092565b600060033d11156105275760046000803e5060005160e01c90565b600060443d10156120655790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561209557505050505090565b82850191508151818111156120ad5750505050505090565b843d87010160208285010111156120c75750505050505090565b6120d660208286010187611aed565b509095945050505050565b80518252600060208201516120f581611d5f565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a085015261134560c08501826119d5565b60a08152600061215460a08301856120e1565b905061034b602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e0815260006121a660e08301876120e1565b90506121e5602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c0015292915050565b60006020828403121561220957600080fd5b61034b82611ff756fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a26469706673582212206bd92abad5c98f38605877414ba287662d3be12941885ee3c3c00696c2c95aed64736f6c63430008150033",
    "sourceMap": "831:6024:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2494:98:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4779:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:111;;1384:22;1366:41;;1354:2;1339:18;4779:197:58;1226:187:111;3582:106:58;3669:12;;3582:106;;;1564:25:111;;;1552:2;1537:18;3582:106:58;1418:177:111;5538:286:58;;;;;;:::i;:::-;;:::i;2025:196:4:-;;;:::i;3431:91:58:-;;;3513:2;2203:36:111;;2191:2;2176:18;3431:91:58;2061:184:111;6219:234:58;;;;;;:::i;:::-;;:::i;2349:397:4:-;;;;;;:::i;:::-;;:::i;6708:135::-;;;:::i;:::-;;;-1:-1:-1;;;;;2709:32:111;;;2691:51;;2679:2;2664:18;6708:135:4;2526:222:111;3746:125:58;;;;;;:::i;:::-;-1:-1:-1;;;;;3846:18:58;3820:7;3846:18;;;:9;:18;;;;;;;3746:125;1288:729:4;;;;;;:::i;:::-;;:::i;:::-;;6590:112;;;:::i;2705:102:58:-;;;:::i;6940:427::-;;;;;;:::i;:::-;;:::i;4067:189::-;;;;;;:::i;:::-;;:::i;4542:780:4:-;;;;;;:::i;:::-;;:::i;4314:157:58:-;;;;;;:::i;:::-;;:::i;2227:115:4:-;;;:::i;2494:98:58:-;2548:13;2580:5;2573:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2494:98;:::o;4779:197::-;4862:4;929:10:65;4916:32:58;929:10:65;4932:7:58;4941:6;4916:8;:32::i;:::-;4965:4;4958:11;;;4779:197;;;;;:::o;5538:286::-;5665:4;929:10:65;5721:38:58;5737:4;929:10:65;5752:6:58;5721:15;:38::i;:::-;5769:27;5779:4;5785:2;5789:6;5769:9;:27::i;:::-;5813:4;5806:11;;;5538:286;;;;;;:::o;2025:196:4:-;2090:47;;-1:-1:-1;;;2090:47:4;;2131:4;2090:47;;;2691:51:111;2063:4:4;;;;938:42;;2090:32;;2664:18:111;;2090:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2079:58;;2147:46;;;;;;;;;;;;;;;;;;2189:3;2147:11;:46::i;:::-;2211:3;2025:196;-1:-1:-1;2025:196:4:o;6219:234:58:-;6307:4;929:10:65;6361:64:58;929:10:65;6377:7:58;6414:10;6386:25;929:10:65;6377:7:58;6386:9;:25::i;:::-;:38;;;;:::i;:::-;6361:8;:64::i;2349:397:4:-;2478:47;;-1:-1:-1;;;2478:47:4;;2519:4;2478:47;;;2691:51:111;2413:4:4;;2440:7;;2413:4;;938:42;;2478:32;;2664:18:111;;2478:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2457:68;;2535:19;2557:38;2573:6;2581:13;2557:15;:38::i;:::-;2535:60;;2606:13;2622:19;:17;:19::i;:::-;2606:35;;2656:8;2668:1;2656:13;2652:29;;-1:-1:-1;2678:3:4;;2349:397;-1:-1:-1;;;;2349:397:4:o;2652:29::-;2699:40;:3;2714:14;2730:8;2699:14;:40::i;:::-;2692:47;2349:397;-1:-1:-1;;;;;;2349:397:4:o;6708:135::-;6745:10;6785:44;1109:45;1153:1;1114:35;1109:45;:::i;:::-;2029:4:86;1859:190;6785:44:4;:50;-1:-1:-1;;;;;6785:50:4;;6708:135;-1:-1:-1;6708:135:4:o;1288:729::-;3111:19:57;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:57;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:57;1476:19:64;:23;;;3219:66:57;;-1:-1:-1;3268:12:57;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:57;;7217:2:111;3157:201:57;;;7199:21:111;7256:2;7236:18;;;7229:30;7295:34;7275:18;;;7268:62;-1:-1:-1;;;7346:18:111;;;7339:44;7400:19;;3157:201:57;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:57;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:57;;;;;3394:65;1492:28:4::1;1505:5;1512:7;1492:12;:28::i;:::-;1583:10:::0;1530:44:::1;1109:45;1153:1;1114:35;1109:45;:::i;1530:44::-;:63:::0;;-1:-1:-1;;;;;;1530:63:4::1;-1:-1:-1::0;;;;;1530:63:4;;;::::1;::::0;;;::::1;::::0;;1911:34:::1;1925:4;1932:12:::0;1911:5:::1;:34::i;:::-;1956:54;1974:4;1981:10;1993:16;1956:9;:54::i;:::-;3483:14:57::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:57;;;3553:14;;-1:-1:-1;2203:36:111;;3553:14:57;;2191:2:111;2176:18;3553:14:57;;;;;;;3479:99;3101:483;1288:729:4;;;;;:::o;6590:112::-;6639:4;6662:7;:5;:7::i;:::-;-1:-1:-1;;;;;6662:31:4;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6655:40;;6590:112;:::o;2705:102:58:-;2761:13;2793:7;2786:14;;;;;:::i;6940:427::-;7033:4;929:10:65;7033:4:58;7114:25;929:10:65;7131:7:58;7114:9;:25::i;:::-;7087:52;;7177:15;7157:16;:35;;7149:85;;;;-1:-1:-1;;;7149:85:58;;7831:2:111;7149:85:58;;;7813:21:111;7870:2;7850:18;;;7843:30;7909:34;7889:18;;;7882:62;-1:-1:-1;;;7960:18:111;;;7953:35;8005:19;;7149:85:58;7629:401:111;7149:85:58;7268:60;7277:5;7284:7;7312:15;7293:16;:34;7268:8;:60::i;:::-;-1:-1:-1;7356:4:58;;6940:427;-1:-1:-1;;;;6940:427:58:o;4067:189::-;4146:4;929:10:65;4200:28:58;929:10:65;4217:2:58;4221:6;4200:9;:28::i;4542:780:4:-;4775:1;4736:7;:5;:7::i;:::-;:27;;-1:-1:-1;;;4736:27:4;;-1:-1:-1;;;;;2709:32:111;;;4736:27:4;;;2691:51:111;4736:16:4;;;;;;;2664:18:111;;4736:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4736:41:4;;:73;;;;-1:-1:-1;;;;;;4793:16:4;;1009:42;4793:16;;4736:73;:110;;;;-1:-1:-1;;;;;;4825:21:4;;938:42;4825:21;;4736:110;4719:162;;;4864:17;;-1:-1:-1;;;4864:17:4;;;;;;;;;;;4719:162;4896:10;-1:-1:-1;;;;;4896:20:4;;;4892:100;;4932:49;4948:6;4956:10;4968:12;4932:15;:49::i;:::-;5040:64;5046:6;5054:9;5065;5076:12;5090:13;5040:5;:64::i;4314:157:58:-;-1:-1:-1;;;;;4437:18:58;;;4403:7;4437:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4314:157::o;2227:115:4:-;2299:36;;-1:-1:-1;;;2299:36:4;;2276:4;;2299;;:20;;:36;;2276:4;;2299:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10456:370:58;-1:-1:-1;;;;;10587:19:58;;10579:68;;;;-1:-1:-1;;;10579:68:58;;9229:2:111;10579:68:58;;;9211:21:111;9268:2;9248:18;;;9241:30;9307:34;9287:18;;;9280:62;-1:-1:-1;;;9358:18:111;;;9351:34;9402:19;;10579:68:58;9027:400:111;10579:68:58;-1:-1:-1;;;;;10665:21:58;;10657:68;;;;-1:-1:-1;;;10657:68:58;;9634:2:111;10657:68:58;;;9616:21:111;9673:2;9653:18;;;9646:30;9712:34;9692:18;;;9685:62;-1:-1:-1;;;9763:18:111;;;9756:32;9805:19;;10657:68:58;9432:398:111;10657:68:58;-1:-1:-1;;;;;10736:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10787:32;;1564:25:111;;;10787:32:58;;1537:18:111;10787:32:58;;;;;;;10456:370;;;:::o;11107:441::-;11237:24;11264:25;11274:5;11281:7;11264:9;:25::i;:::-;11237:52;;-1:-1:-1;;11303:16:58;:37;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:58;;10037:2:111;11356:68:58;;;10019:21:111;10076:2;10056:18;;;10049:30;10115:31;10095:18;;;10088:59;10164:18;;11356:68:58;9835:353:111;11356:68:58;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7821:651::-;-1:-1:-1;;;;;7947:18:58;;7939:68;;;;-1:-1:-1;;;7939:68:58;;10395:2:111;7939:68:58;;;10377:21:111;10434:2;10414:18;;;10407:30;10473:34;10453:18;;;10446:62;-1:-1:-1;;;10524:18:111;;;10517:35;10569:19;;7939:68:58;10193:401:111;7939:68:58;-1:-1:-1;;;;;8025:16:58;;8017:64;;;;-1:-1:-1;;;8017:64:58;;10801:2:111;8017:64:58;;;10783:21:111;10840:2;10820:18;;;10813:30;10879:34;10859:18;;;10852:62;-1:-1:-1;;;10930:18:111;;;10923:33;10973:19;;8017:64:58;10599:399:111;8017:64:58;-1:-1:-1;;;;;8163:15:58;;8141:19;8163:15;;;:9;:15;;;;;;8196:21;;;;8188:72;;;;-1:-1:-1;;;8188:72:58;;11205:2:111;8188:72:58;;;11187:21:111;11244:2;11224:18;;;11217:30;11283:34;11263:18;;;11256:62;-1:-1:-1;;;11334:18:111;;;11327:36;11380:19;;8188:72:58;11003:402:111;8188:72:58;-1:-1:-1;;;;;8294:15:58;;;;;;;:9;:15;;;;;;8312:20;;;8294:38;;8352:13;;;;;;;;:23;;8326:6;;8294:15;8352:23;;8326:6;;8352:23;:::i;:::-;;;;;;;;8406:2;-1:-1:-1;;;;;8391:26:58;8400:4;-1:-1:-1;;;;;8391:26:58;;8410:6;8391:26;;;;1564:25:111;;1552:2;1537:18;;1418:177;8391:26:58;;;;;;;;8428:37;12132:121;6548:139:52;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:52;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:52;-1:-1:-1;;;6628:51:52;;;6612:15;:68::i;:::-;6548:139;;:::o;2752:558:4:-;2871:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2871:37:4;-1:-1:-1;;;2871:37:4;;;2835:4;;2925:50;2960:7;:5;:7::i;:::-;2970:4;2925:26;:50::i;:::-;2918:57;;2986:13;3013:4;3002:24;;;;;;;;;;;;:::i;:::-;2986:40;-1:-1:-1;3037:10:4;;3062:3;:21;;;;;;;;:::i;:::-;;3058:223;;3107:54;3133:7;:5;:7::i;:::-;-1:-1:-1;;;;;3133:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3107:14;;3153:7;3107:25;:54::i;:::-;3099:62;;3058:223;;;3188:14;3181:3;:21;;;;;;;;:::i;:::-;;3178:103;;3226:44;:14;3252:8;3262:7;3226:25;:44::i;:::-;3218:52;;3178:103;3298:5;2752:558;-1:-1:-1;;;;;2752:558:4:o;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;2117:147:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2219:38:58::1;2242:5;2249:7;2219:22;:38::i;8748:389::-:0;-1:-1:-1;;;;;8831:21:58;;8823:65;;;;-1:-1:-1;;;8823:65:58;;12320:2:111;8823:65:58;;;12302:21:111;12359:2;12339:18;;;12332:30;12398:33;12378:18;;;12371:61;12449:18;;8823:65:58;12118:355:111;8823:65:58;8975:6;8959:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8991:18:58;;;;;;:9;:18;;;;;:28;;9013:6;;8991:18;:28;;9013:6;;8991:28;:::i;:::-;;;;-1:-1:-1;;9034:37:58;;1564:25:111;;;-1:-1:-1;;;;;9034:37:58;;;9051:1;;9034:37;;1552:2:111;1537:18;9034:37:58;;;;;;;6548:139:52;;:::o;5329:1238:4:-;5502:4;5610:40;5627:7;:5;:7::i;:::-;5637:12;5610:8;:40::i;:::-;;5921:13;5937:65;5961:31;5977:14;5961:15;:31::i;:::-;5937:12;;5994:7;5937:23;:65::i;:::-;5921:81;;6012:17;6032:48;6052:7;6061;:5;:7::i;:::-;-1:-1:-1;;;;;6061:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6032:8;;:48;:19;:48::i;:::-;6012:68;-1:-1:-1;;;;;;;;6095:21:4;;;6091:46;;6125:12;-1:-1:-1;6118:19:4;;-1:-1:-1;6118:19:4;6091:46;6252:279;6368:7;:5;:7::i;:::-;-1:-1:-1;;;;;6368:22:4;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6406:9;6429;6482:12;6508:13;6252:17;:279::i;:::-;5508:1059;;5329:1238;;;;;;;:::o;12132:121:58:-;;;;:::o;181:376:52:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;5788:197:84:-;5874:12;5905:73;5924:6;5932:4;5905:73;;;;;;;;;;;;;;;;;:18;:73::i;2270:159:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2382:5:58::1;:13;2390:5:::0;2382;:13:::1;:::i;:::-;-1:-1:-1::0;2405:7:58::1;:17;2415:7:::0;2405;:17:::1;:::i;1892:382:34:-:0;2100:167;2132:1;2147:9;2170;2193;2216:13;2243:14;2100:18;:167::i;6169:326:84:-;6313:12;6338;6352:23;6379:6;-1:-1:-1;;;;;6379:17:84;6397:4;6379:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:65;;;;6419:69;6446:6;6454:7;6463:10;6475:12;6419:26;:69::i;519:1367:34:-;791:14;;;;900:5;:23;;;;;;;;:::i;:::-;;896:101;;-1:-1:-1;;949:6:34;;;;980;;;;896:101;1009:11;1032:1;:22;;;-1:-1:-1;;;;;1026:44:34;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1008:64;;;;1088:6;1084:545;;;1110:221;1136:7;1161:8;1195:4;1218:1;:15;;;1251:1;:8;;;1277:9;1304:13;1110:8;:221::i;:::-;;1084:545;;;1374:244;1405:7;1430:8;1456:1;:22;;;1496:1;:17;;;1531:1;:15;;;1564:9;1591:13;1374;:244::i;:::-;1362:256;;1084:545;1651:228;1673:1;:6;;;1693:9;1716;1739:1;:15;;;1768:1;:8;;;1790:9;1813:13;1651:8;:228::i;:::-;1639:240;519:1367;-1:-1:-1;;;;;;;;;;519:1367:34:o;7671:628:84:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1476:19:64;;;8113:60:84;;;;-1:-1:-1;;;8113:60:84;;16930:2:111;8113:60:84;;;16912:21:111;16969:2;16949:18;;;16942:30;17008:31;16988:18;;;16981:59;17057:18;;8113:60:84;16728:353:111;8113:60:84;-1:-1:-1;8208:10:84;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;2281:978:34:-;2504:4;2520:59;2549:8;2560:7;2569:9;2520:21;:59::i;:::-;2653:389;;;;;;;;-1:-1:-1;;;;;2653:389:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:15;2653:389;;;;;;;;;;;;-1:-1:-1;2653:389:34;;;;;;;;;;;;3057:45;;-1:-1:-1;;;3057:45:34;;17375:13:111;;17371:22;;3057:45:34;;;17353:41:111;17436:24;;17432:33;;17410:20;;;17403:63;17508:24;;17504:39;;;17482:20;;;17475:69;17586:24;;17582:33;;17560:20;;;17553:63;17654:24;17632:20;;;17625:54;17717:24;;17695:20;;;17688:54;17780:24;;17758:20;;;17751:54;17847:24;;17843:33;;17821:20;;;17814:63;2653:389:34;;3057:37;;;;;;17287:19:111;;3057:45:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;3057:45:34;;;;;;;;-1:-1:-1;;3057:45:34;;;;;;;;;;;;:::i;:::-;;;3053:200;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3235:6;3225:17;;-1:-1:-1;;;3225:17:34;;;;;;;;:::i;3053:200::-;;;;;;;;;;;3149:9;-1:-1:-1;3142:16:34;;-1:-1:-1;3142:16:34;2281:978;;;;;;;;;;:::o;3266:1373::-;3499:14;3561:35;3599:266;;;;;;;;3645:5;-1:-1:-1;;;;;3639:22:34;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3599:266;;;;3683:24;3599:266;;-1:-1:-1;;;;;3599:266:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3842:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3842:12:34;-1:-1:-1;3599:266:34;;3913:194;;;;;;;;3965:4;3913:194;;;3876:34;3913:194;;;;;;;;;;;;;;;;;4130:47;;-1:-1:-1;;;4130:47:34;;3561:304;;-1:-1:-1;3913:194:34;-1:-1:-1;;;;;4130:28:34;;;;;:47;;3561:304;;3913:194;;4130:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4130:47:34;;;;;;;;-1:-1:-1;;4130:47:34;;;;;;;;;;;;:::i;:::-;;;4126:450;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4558:6;4548:17;;-1:-1:-1;;;4548:17:34;;;;;;;;:::i;4126:450::-;4220:11;4258:13;4234:21;:37;:77;;4298:13;4234:77;;;4274:21;4234:77;4220:91;;4326:66;4355:8;4366:6;4374:10;:17;;;4326:21;:66::i;:::-;4418:63;;-1:-1:-1;;;4418:63:34;;-1:-1:-1;;;;;4418:19:34;;;;;:63;;4438:10;;4450:5;;4457:6;;4465:15;;4418:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4406:75;;4206:286;4178:314;4598:9;4611:1;4598:14;4594:38;;4621:11;;-1:-1:-1;;;4621:11:34;;;;;;;;;;;4594:38;3515:1124;;3266:1373;;;;;;;;;:::o;8821:540:84:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:84;;;;;;;;:::i;1818:573:83:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:83;;-1:-1:-1;;;2159:39:83;;2183:4;2159:39;;;21207:34:111;-1:-1:-1;;;;;21277:15:111;;;21257:18;;;21250:43;2159:15:83;;;;;21142:18:111;;2159:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:83;;21506:2:111;2121:163:83;;;21488:21:111;21545:2;21525:18;;;21518:30;21584:34;21564:18;;;21557:62;-1:-1:-1;;;21635:18:111;;;21628:52;21697:19;;2121:163:83;21304:418:111;2121:163:83;2321:62;;;-1:-1:-1;;;;;21919:32:111;;;2321:62:83;;;21901:51:111;21968:18;;;;21961:34;;;2321:62:83;;;;;;;;;;21874:18:111;;;;2321:62:83;;;;;;;;-1:-1:-1;;;;;2321:62:83;-1:-1:-1;;;2321:62:83;;;5641:69;;;;;;;;;;;;;;;;2294:90;;2314:5;;2321:62;-1:-1:-1;;5641:69:83;;:27;;;2321:62;;5641:27;:69::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:83;;22415:2:111;5720:111:83;;;22397:21:111;22454:2;22434:18;;;22427:30;22493:34;22473:18;;;22466:62;-1:-1:-1;;;22544:18:111;;;22537:40;22594:19;;5720:111:83;22213:406:111;4108:223:84;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:84;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;14:250:111:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:111;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:111;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:111:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:111;;835:42;;825:70;;891:1;888;881:12;825:70;770:131;:::o;906:315::-;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:111:o;1600:456::-;1677:6;1685;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:111;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1600:456;;1992:7;;-1:-1:-1;;;2046:2:111;2031:18;;;;2018:32;;1600:456::o;2250:271::-;2324:6;2377:2;2365:9;2356:7;2352:23;2348:32;2345:52;;;2393:1;2390;2383:12;2345:52;2432:9;2419:23;2471:1;2464:5;2461:12;2451:40;;2487:1;2484;2477:12;2753:247;2812:6;2865:2;2853:9;2844:7;2840:23;2836:32;2833:52;;;2881:1;2878;2871:12;2833:52;2920:9;2907:23;2939:31;2964:5;2939:31;:::i;3005:127::-;3066:10;3061:3;3057:20;3054:1;3047:31;3097:4;3094:1;3087:15;3121:4;3118:1;3111:15;3137:249;3247:2;3228:13;;-1:-1:-1;;3224:27:111;3212:40;;3282:18;3267:34;;3303:22;;;3264:62;3261:88;;;3329:18;;:::i;:::-;3365:2;3358:22;-1:-1:-1;;3137:249:111:o;3391:556::-;3434:5;3487:3;3480:4;3472:6;3468:17;3464:27;3454:55;;3505:1;3502;3495:12;3454:55;3541:6;3528:20;3567:18;3563:2;3560:26;3557:52;;;3589:18;;:::i;:::-;3638:2;3632:9;3650:67;3705:2;3686:13;;-1:-1:-1;;3682:27:111;3711:4;3678:38;3632:9;3650:67;:::i;:::-;3741:2;3733:6;3726:18;3787:3;3780:4;3775:2;3767:6;3763:15;3759:26;3756:35;3753:55;;;3804:1;3801;3794:12;3753:55;3868:2;3861:4;3853:6;3849:17;3842:4;3834:6;3830:17;3817:54;3915:1;3891:15;;;3908:4;3887:26;3880:37;;;;3895:6;3391:556;-1:-1:-1;;;3391:556:111:o;3952:816::-;4067:6;4075;4083;4091;4099;4152:3;4140:9;4131:7;4127:23;4123:33;4120:53;;;4169:1;4166;4159:12;4120:53;4209:9;4196:23;4238:18;4279:2;4271:6;4268:14;4265:34;;;4295:1;4292;4285:12;4265:34;4318:50;4360:7;4351:6;4340:9;4336:22;4318:50;:::i;:::-;4308:60;;4421:2;4410:9;4406:18;4393:32;4377:48;;4450:2;4440:8;4437:16;4434:36;;;4466:1;4463;4456:12;4434:36;;4489:52;4533:7;4522:8;4511:9;4507:24;4489:52;:::i;:::-;4479:62;;;4591:2;4580:9;4576:18;4563:32;4604:31;4629:5;4604:31;:::i;:::-;3952:816;;;;-1:-1:-1;4654:5:111;;4706:2;4691:18;;4678:32;;-1:-1:-1;4757:3:111;4742:19;4729:33;;3952:816;-1:-1:-1;;3952:816:111:o;4773:667::-;4868:6;4876;4884;4892;4900;4953:3;4941:9;4932:7;4928:23;4924:33;4921:53;;;4970:1;4967;4960:12;4921:53;5009:9;4996:23;5028:31;5053:5;5028:31;:::i;:::-;5078:5;-1:-1:-1;5135:2:111;5120:18;;5107:32;5148:33;5107:32;5148:33;:::i;:::-;5200:7;-1:-1:-1;5259:2:111;5244:18;;5231:32;5272:33;5231:32;5272:33;:::i;5445:388::-;5513:6;5521;5574:2;5562:9;5553:7;5549:23;5545:32;5542:52;;;5590:1;5587;5580:12;5542:52;5629:9;5616:23;5648:31;5673:5;5648:31;:::i;:::-;5698:5;-1:-1:-1;5755:2:111;5740:18;;5727:32;5768:33;5727:32;5768:33;:::i;:::-;5820:7;5810:17;;;5445:388;;;;;:::o;5838:380::-;5917:1;5913:12;;;;5960;;;5981:61;;6035:4;6027:6;6023:17;6013:27;;5981:61;6088:2;6080:6;6077:14;6057:18;6054:38;6051:161;;6134:10;6129:3;6125:20;6122:1;6115:31;6169:4;6166:1;6159:15;6197:4;6194:1;6187:15;6051:161;;5838:380;;;:::o;6431:184::-;6501:6;6554:2;6542:9;6533:7;6529:23;6525:32;6522:52;;;6570:1;6567;6560:12;6522:52;-1:-1:-1;6593:16:111;;6431:184;-1:-1:-1;6431:184:111:o;6620:127::-;6681:10;6676:3;6672:20;6669:1;6662:31;6712:4;6709:1;6702:15;6736:4;6733:1;6726:15;6752:125;6817:9;;;6838:10;;;6835:36;;;6851:18;;:::i;6882:128::-;6949:9;;;6970:11;;;6967:37;;;6984:18;;:::i;8035:138::-;8114:13;;8136:31;8114:13;8136:31;:::i;8178:251::-;8248:6;8301:2;8289:9;8280:7;8276:23;8272:32;8269:52;;;8317:1;8314;8307:12;8269:52;8349:9;8343:16;8368:31;8393:5;8368:31;:::i;8434:127::-;8495:10;8490:3;8486:20;8483:1;8476:31;8526:4;8523:1;8516:15;8550:4;8547:1;8540:15;8566:212;8649:1;8642:5;8639:12;8629:143;;8694:10;8689:3;8685:20;8682:1;8675:31;8729:4;8726:1;8719:15;8757:4;8754:1;8747:15;8783:239;8930:2;8915:18;;8942:40;8975:6;8942:40;:::i;:::-;8991:25;;;8783:239;:::o;11410:291::-;11587:2;11576:9;11569:21;11550:4;11607:45;11648:2;11637:9;11633:18;11625:6;11607:45;:::i;:::-;11599:53;;11688:6;11683:2;11672:9;11668:18;11661:34;11410:291;;;;;:::o;11706:407::-;11908:2;11890:21;;;11947:2;11927:18;;;11920:30;11986:34;11981:2;11966:18;;11959:62;-1:-1:-1;;;12052:2:111;12037:18;;12030:41;12103:3;12088:19;;11706:407::o;12478:165::-;12556:13;;12609:8;12598:20;;12588:31;;12578:59;;12633:1;12630;12623:12;12648:1081;12748:6;12779:3;12823:2;12811:9;12802:7;12798:23;12794:32;12791:52;;;12839:1;12836;12829:12;12791:52;12872:2;12866:9;12902:15;;;;12947:18;12932:34;;12968:22;;;12929:62;12926:88;;;12994:18;;:::i;:::-;13034:10;13030:2;13023:22;13069:40;13099:9;13069:40;:::i;:::-;13061:6;13054:56;13143:48;13187:2;13176:9;13172:18;13143:48;:::i;:::-;13138:2;13130:6;13126:15;13119:73;13225:49;13270:2;13259:9;13255:18;13225:49;:::i;:::-;13220:2;13212:6;13208:15;13201:74;13308:49;13353:2;13342:9;13338:18;13308:49;:::i;:::-;13303:2;13295:6;13291:15;13284:74;13392:50;13437:3;13426:9;13422:19;13392:50;:::i;:::-;13386:3;13378:6;13374:16;13367:76;13477:50;13522:3;13511:9;13507:19;13477:50;:::i;:::-;13471:3;13463:6;13459:16;13452:76;13562:50;13607:3;13596:9;13592:19;13562:50;:::i;:::-;13556:3;13548:6;13544:16;13537:76;13647:50;13692:3;13681:9;13677:19;13647:50;:::i;:::-;13641:3;13629:16;;13622:76;13633:6;12648:1081;-1:-1:-1;;;;12648:1081:111:o;13860:545::-;13962:2;13957:3;13954:11;13951:448;;;13998:1;14023:5;14019:2;14012:17;14068:4;14064:2;14054:19;14138:2;14126:10;14122:19;14119:1;14115:27;14109:4;14105:38;14174:4;14162:10;14159:20;14156:47;;;-1:-1:-1;14197:4:111;14156:47;14252:2;14247:3;14243:12;14240:1;14236:20;14230:4;14226:31;14216:41;;14307:82;14325:2;14318:5;14315:13;14307:82;;;14370:17;;;14351:1;14340:13;14307:82;;14581:1352;14707:3;14701:10;14734:18;14726:6;14723:30;14720:56;;;14756:18;;:::i;:::-;14785:97;14875:6;14835:38;14867:4;14861:11;14835:38;:::i;:::-;14829:4;14785:97;:::i;:::-;14937:4;;15001:2;14990:14;;15018:1;15013:663;;;;15720:1;15737:6;15734:89;;;-1:-1:-1;15789:19:111;;;15783:26;15734:89;-1:-1:-1;;14538:1:111;14534:11;;;14530:24;14526:29;14516:40;14562:1;14558:11;;;14513:57;15836:81;;14983:944;;15013:663;13807:1;13800:14;;;13844:4;13831:18;;-1:-1:-1;;15049:20:111;;;15167:236;15181:7;15178:1;15175:14;15167:236;;;15270:19;;;15264:26;15249:42;;15362:27;;;;15330:1;15318:14;;;;15197:19;;15167:236;;;15171:3;15431:6;15422:7;15419:19;15416:201;;;15492:19;;;15486:26;-1:-1:-1;;15575:1:111;15571:14;;;15587:3;15567:24;15563:37;15559:42;15544:58;15529:74;;15416:201;-1:-1:-1;;;;;15663:1:111;15647:14;;;15643:22;15630:36;;-1:-1:-1;14581:1352:111:o;15938:287::-;16067:3;16105:6;16099:13;16121:66;16180:6;16175:3;16168:4;16160:6;16156:17;16121:66;:::i;:::-;16203:16;;;;;15938:287;-1:-1:-1;;15938:287:111:o;16230:164::-;16306:13;;16355;;16348:21;16338:32;;16328:60;;16384:1;16381;16374:12;16399:324;16484:6;16492;16500;16553:2;16541:9;16532:7;16528:23;16524:32;16521:52;;;16569:1;16566;16559:12;16521:52;16592:37;16619:9;16592:37;:::i;:::-;16582:47;;16669:2;16658:9;16654:18;16648:25;16638:35;;16713:2;16702:9;16698:18;16692:25;16682:35;;16399:324;;;;;:::o;17888:179::-;17923:3;17965:1;17947:16;17944:23;17941:120;;;18011:1;18008;18005;17990:23;-1:-1:-1;18048:1:111;18042:8;18037:3;18033:18;17888:179;:::o;18072:671::-;18111:3;18153:4;18135:16;18132:26;18129:39;;;18072:671;:::o;18129:39::-;18195:2;18189:9;-1:-1:-1;;18260:16:111;18256:25;;18253:1;18189:9;18232:50;18311:4;18305:11;18335:16;18370:18;18441:2;18434:4;18426:6;18422:17;18419:25;18414:2;18406:6;18403:14;18400:45;18397:58;;;18448:5;;;;;18072:671;:::o;18397:58::-;18485:6;18479:4;18475:17;18464:28;;18521:3;18515:10;18548:2;18540:6;18537:14;18534:27;;;18554:5;;;;;;18072:671;:::o;18534:27::-;18638:2;18619:16;18613:4;18609:27;18605:36;18598:4;18589:6;18584:3;18580:16;18576:27;18573:69;18570:82;;;18645:5;;;;;;18072:671;:::o;18570:82::-;18661:57;18712:4;18703:6;18695;18691:19;18687:30;18681:4;18661:57;:::i;:::-;-1:-1:-1;18734:3:111;;18072:671;-1:-1:-1;;;;;18072:671:111:o;18937:679::-;19026:5;19020:12;19015:3;19008:25;18990:3;19079:4;19072:5;19068:16;19062:23;19094:46;19127:12;19094:46;:::i;:::-;19172:12;19165:4;19160:3;19156:14;19149:36;;19233:4;19226:5;19222:16;19216:23;19275:1;19271;19266:3;19262:11;19258:19;19329:2;19313:14;19309:23;19302:4;19297:3;19293:14;19286:47;19394:2;19386:4;19379:5;19375:16;19369:23;19365:32;19358:4;19353:3;19349:14;19342:56;;;19447:4;19440:5;19436:16;19430:23;19423:4;19418:3;19414:14;19407:47;19502:4;19495:5;19491:16;19485:23;19540:4;19533;19528:3;19524:14;19517:28;19561:49;19604:4;19599:3;19595:14;19579;19561:49;:::i;19981:430::-;20258:3;20247:9;20240:22;20221:4;20279:57;20331:3;20320:9;20316:19;20308:6;20279:57;:::i;:::-;20271:65;;20345:60;20401:2;20390:9;20386:18;20378:6;19743:12;;-1:-1:-1;;;;;19739:21:111;;;19727:34;;19824:4;19813:16;;;19807:23;19800:31;19793:39;19777:14;;;19770:63;19886:4;19875:16;;;19869:23;19865:32;;;19849:14;;;19842:56;19961:4;19950:16;;;19944:23;19937:31;19930:39;19914:14;;19907:63;19621:355;20416:574;20749:3;20738:9;20731:22;20712:4;20770:57;20822:3;20811:9;20807:19;20799:6;20770:57;:::i;:::-;20762:65;;20836:60;20892:2;20881:9;20877:18;20869:6;19743:12;;-1:-1:-1;;;;;19739:21:111;;;19727:34;;19824:4;19813:16;;;19807:23;19800:31;19793:39;19777:14;;;19770:63;19886:4;19875:16;;;19869:23;19865:32;;;19849:14;;;19842:56;19961:4;19950:16;;;19944:23;19937:31;19930:39;19914:14;;19907:63;19621:355;20836:60;20927:3;20912:19;;20905:35;;;;20971:3;20956:19;20949:35;20416:574;;-1:-1:-1;;20416:574:111:o;22006:202::-;22073:6;22126:2;22114:9;22105:7;22101:23;22097:32;22094:52;;;22142:1;22139;22132:12;22094:52;22165:37;22192:9;22165:37;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "circulatingSupply()": "9358928b",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getBal()": "25caa262",
    "getExchangeRate()": "e6aa216c",
    "getExchangeRate(uint8)": "4d02a3f7",
    "getOZ()": "59c64e12",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,uint256,uint256)": "74823132",
    "name()": "06fdde03",
    "redeem(address,address,address,uint256,uint256)": "be78b2ba",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AssetOutNoExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"OZError01\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError02\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorCode\",\"type\":\"string\"}],\"name\":\"OZError10\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum QuoteAsset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZ\",\"outputs\":[{\"internalType\":\"contract ozIDiamond\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ozDiamond_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"communityAmount_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ozlAmountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut_\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OZError01(string)\":[{\"details\":\"See https://eips.ethereum.org/EIPS/eip-6093\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"OZError01(string)\":[{\"notice\":\"Standard ERC20 Errors\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0xcae7135fa452c7128ffb920533f05460c6f6af8570455d588d331523a3f0e0c5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a64f1eda9b1baf9f31b94cb176ddd8ce805256c3aaefe752600d89668e5549e7\",\"dweb:/ipfs/QmQuKEPoaVomK3hjN9B2KyA6j8pEhJAoPCZz77vbge8SuJ\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x79f91b839b8dabbda5a12d834b083dd118b4081d5d31b900ea6da683cf66ca98\",\"urls\":[\"bzz-raw://b843062835dfeedab254bc8acfa1e68ad32ad770ffcc1bd95cef563cd84dc4d6\",\"dweb:/ipfs/QmNytSZWYKT3bbbQz6wsFiTvS4GSG1iCTCqZfKMmJVWhmr\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0xbeeb930e4df9daf948d0b19391744bc4c6385f2acc9be65cf594b2d2ba6754b2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5f4fb8b550bb939a941d54ac85d211fabdb0810126a39f823ecbcd6beb481db\",\"dweb:/ipfs/QmZoexpknNaRypwYrkvRji1QzTFk4yuGkZSd8H5jyntvxR\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0xf86b9223e71d561686756329a222613122072a1bb0b3ff3c0e82151bd63ff8ba\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1046436d0c3a5553a77ff616dbcc47fcb6ed8ab833c059769e2d7c45840bc6dd\",\"dweb:/ipfs/Qmazn41m27ouvhbGbHNrf4c3672bU16TykYgDfKeMQ4o1j\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x382569a72697c0a7d466929c013b063b74515b1380e35e12077168b8aa27dcaa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ea6c0f8f1d1407a1e4422653648784dac3e93cfdf5218b6f60a3979ed87a250\",\"dweb:/ipfs/QmcAoKzZEA25UzvsAf2z4Gu6Wo6uW95WY3SmQja5R2aWg2\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/TradingLib.sol\":{\"keccak256\":\"0xde6e62259231a191be4a30e4328b0955642d93f90edd0607d02182a70f9e8db3\",\"urls\":[\"bzz-raw://1d524447632d409a9ae8856b9647a757992f154d8450f4df57fc1913ece61d95\",\"dweb:/ipfs/QmX5aR4S1EwyMCvHdEo6JCHE6EsxCGwsi8W5GdrbWtU6Lj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x43fd031235db6816101eeb4cab615c245bfb76962e9f4c7496feebd388250c75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa47e2563a8aee521cd776d86372f62324e0fd163dbca316ff4131fc709aba23\",\"dweb:/ipfs/QmQE1jWQBNUzVzzVZ6E7eGgptGe1R7V2nGD1NPrypSMZdp\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AssetOutNoExist"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorMsg",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError01"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError02"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorCode",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError10"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "circulatingSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum QuoteAsset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZ",
          "outputs": [
            {
              "internalType": "contract ozIDiamond",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ozDiamond_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "communityAmount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ozlAmountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAmountOut_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0xcae7135fa452c7128ffb920533f05460c6f6af8570455d588d331523a3f0e0c5",
        "urls": [
          "bzz-raw://a64f1eda9b1baf9f31b94cb176ddd8ce805256c3aaefe752600d89668e5549e7",
          "dweb:/ipfs/QmQuKEPoaVomK3hjN9B2KyA6j8pEhJAoPCZz77vbge8SuJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x79f91b839b8dabbda5a12d834b083dd118b4081d5d31b900ea6da683cf66ca98",
        "urls": [
          "bzz-raw://b843062835dfeedab254bc8acfa1e68ad32ad770ffcc1bd95cef563cd84dc4d6",
          "dweb:/ipfs/QmNytSZWYKT3bbbQz6wsFiTvS4GSG1iCTCqZfKMmJVWhmr"
        ],
        "license": null
      },
      "contracts/OZL.sol": {
        "keccak256": "0xbeeb930e4df9daf948d0b19391744bc4c6385f2acc9be65cf594b2d2ba6754b2",
        "urls": [
          "bzz-raw://b5f4fb8b550bb939a941d54ac85d211fabdb0810126a39f823ecbcd6beb481db",
          "dweb:/ipfs/QmZoexpknNaRypwYrkvRji1QzTFk4yuGkZSd8H5jyntvxR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0xf86b9223e71d561686756329a222613122072a1bb0b3ff3c0e82151bd63ff8ba",
        "urls": [
          "bzz-raw://1046436d0c3a5553a77ff616dbcc47fcb6ed8ab833c059769e2d7c45840bc6dd",
          "dweb:/ipfs/Qmazn41m27ouvhbGbHNrf4c3672bU16TykYgDfKeMQ4o1j"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0x382569a72697c0a7d466929c013b063b74515b1380e35e12077168b8aa27dcaa",
        "urls": [
          "bzz-raw://5ea6c0f8f1d1407a1e4422653648784dac3e93cfdf5218b6f60a3979ed87a250",
          "dweb:/ipfs/QmcAoKzZEA25UzvsAf2z4Gu6Wo6uW95WY3SmQja5R2aWg2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/TradingLib.sol": {
        "keccak256": "0xde6e62259231a191be4a30e4328b0955642d93f90edd0607d02182a70f9e8db3",
        "urls": [
          "bzz-raw://1d524447632d409a9ae8856b9647a757992f154d8450f4df57fc1913ece61d95",
          "dweb:/ipfs/QmX5aR4S1EwyMCvHdEo6JCHE6EsxCGwsi8W5GdrbWtU6Lj"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x43fd031235db6816101eeb4cab615c245bfb76962e9f4c7496feebd388250c75",
        "urls": [
          "bzz-raw://aa47e2563a8aee521cd776d86372f62324e0fd163dbca316ff4131fc709aba23",
          "dweb:/ipfs/QmQE1jWQBNUzVzzVZ6E7eGgptGe1R7V2nGD1NPrypSMZdp"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 866,
    "exportedSymbols": {
      "Address": [
        41671
      ],
      "ERC20Upgradeable": [
        37195
      ],
      "FixedPointMathLib": [
        4818
      ],
      "IERC20": [
        40929
      ],
      "IERC20Permit": [
        3734
      ],
      "OZL": [
        865
      ],
      "QuoteAsset": [
        3739
      ],
      "SafeERC20": [
        41341
      ],
      "StorageSlot": [
        41803
      ],
      "TradingLib": [
        6449
      ],
      "console": [
        27960
      ],
      "ozIDiamond": [
        4452
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:6810:4",
    "nodes": [
      {
        "id": 450,
        "nodeType": "PragmaDirective",
        "src": "45:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 452,
        "nodeType": "ImportDirective",
        "src": "71:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 37196,
        "symbolAliases": [
          {
            "foreign": {
              "id": 451,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37195,
              "src": "79:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 454,
        "nodeType": "ImportDirective",
        "src": "180:59:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "./interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 3735,
        "symbolAliases": [
          {
            "foreign": {
              "id": 453,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3734,
              "src": "188:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 456,
        "nodeType": "ImportDirective",
        "src": "240:68:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 4819,
        "symbolAliases": [
          {
            "foreign": {
              "id": 455,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4818,
              "src": "248:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 458,
        "nodeType": "ImportDirective",
        "src": "309:74:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "file": "@openzeppelin/contracts/utils/StorageSlot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 41804,
        "symbolAliases": [
          {
            "foreign": {
              "id": 457,
              "name": "StorageSlot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41803,
              "src": "317:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 460,
        "nodeType": "ImportDirective",
        "src": "384:55:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIDiamond.sol",
        "file": "./interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 4453,
        "symbolAliases": [
          {
            "foreign": {
              "id": 459,
              "name": "ozIDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4452,
              "src": "392:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 462,
        "nodeType": "ImportDirective",
        "src": "440:49:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "./interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 3917,
        "symbolAliases": [
          {
            "foreign": {
              "id": 461,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3739,
              "src": "448:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 464,
        "nodeType": "ImportDirective",
        "src": "490:66:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 41672,
        "symbolAliases": [
          {
            "foreign": {
              "id": 463,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41671,
              "src": "498:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 466,
        "nodeType": "ImportDirective",
        "src": "557:82:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 41342,
        "symbolAliases": [
          {
            "foreign": {
              "id": 465,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41341,
              "src": "565:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 468,
        "nodeType": "ImportDirective",
        "src": "640:70:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 40930,
        "symbolAliases": [
          {
            "foreign": {
              "id": 467,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40929,
              "src": "648:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 470,
        "nodeType": "ImportDirective",
        "src": "711:54:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/TradingLib.sol",
        "file": "./libraries/TradingLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 6450,
        "symbolAliases": [
          {
            "foreign": {
              "id": 469,
              "name": "TradingLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6449,
              "src": "719:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 471,
        "nodeType": "ImportDirective",
        "src": "767:31:4",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 866,
        "sourceUnit": 27961,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 865,
        "nodeType": "ContractDefinition",
        "src": "831:6024:4",
        "nodes": [
          {
            "id": 476,
            "nodeType": "UsingForDirective",
            "src": "871:33:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 474,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "877:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4818,
              "src": "877:17:4"
            },
            "typeName": {
              "id": 475,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "899:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 479,
            "nodeType": "VariableDeclaration",
            "src": "910:70:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "rEthAddr",
            "nameLocation": "927:8:4",
            "scope": 865,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 477,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "910:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307861653738373336436436313566333734443330383531323341323130343438453734466336333933",
              "id": 478,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "938:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xae78736Cd615f374D3085123A210448E74Fc6393"
            },
            "visibility": "internal"
          },
          {
            "id": 482,
            "nodeType": "VariableDeclaration",
            "src": "986:65:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ETH",
            "nameLocation": "1003:3:4",
            "scope": 865,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 480,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "986:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
              "id": 481,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1009:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
            },
            "visibility": "internal"
          },
          {
            "id": 495,
            "nodeType": "VariableDeclaration",
            "src": "1057:98:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_OZ_DIAMOND_SLOT",
            "nameLocation": "1082:16:4",
            "scope": 865,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 483,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1057:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 493,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7a4469616d6f6e642e73746f726167652e736c6f74",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1124:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            },
                            "value": "ozDiamond.storage.slot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            }
                          ],
                          "id": 488,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1114:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1109:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 486,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1109:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1153:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "1109:45:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 485,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1101:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 484,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1101:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1101:54:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 502,
            "nodeType": "FunctionDefinition",
            "src": "1228:53:4",
            "nodes": [],
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "1242:39:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 498,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36583,
                      "src": "1252:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:22:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:4"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:4"
            },
            "scope": 865,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 549,
            "nodeType": "FunctionDefinition",
            "src": "1288:729:4",
            "nodes": [],
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "1482:535:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 518,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1505:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 519,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "1512:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 517,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36631,
                      "src": "1492:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:28:4"
                },
                {
                  "expression": {
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 525,
                            "name": "_OZ_DIAMOND_SLOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 495,
                            "src": "1557:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 522,
                            "name": "StorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41803,
                            "src": "1530:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StorageSlot_$41803_$",
                              "typeString": "type(library StorageSlot)"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1542:14:4",
                          "memberName": "getAddressSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41725,
                          "src": "1530:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41699_storage_ptr_$",
                            "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1530:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$41699_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot storage pointer"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1575:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41698,
                      "src": "1530:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 528,
                      "name": "ozDiamond_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "1583:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1530:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:63:4"
                },
                {
                  "documentation": " Add here later the vesting strategy using\n OP's VestingWallet.sol / https://medium.com/cardstack/building-a-token-vesting-contract-b368a954f99\n Use linear distribution, not all unlocked at once.\n When they vest, add it to circulating supply.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 534,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1925:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1917:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 532,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1917:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1917:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 536,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "1932:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 531,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37007,
                      "src": "1911:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 542,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1974:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1966:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 540,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1966:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1966:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 544,
                        "name": "ozDiamond_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "1981:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 545,
                        "name": "communityAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "1993:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 539,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36951,
                      "src": "1956:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:54:4"
                }
              ]
            },
            "functionSelector": "74823132",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 514,
                  "name": "initializer",
                  "nameLocations": [
                    "1470:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36504,
                  "src": "1470:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1470:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "1297:10:4",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1331:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1317:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1361:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1347:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "ozDiamond_",
                  "nameLocation": "1386:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1378:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1411:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1406:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "communityAmount_",
                  "nameLocation": "1438:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1433:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1307:153:4"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:4"
            },
            "scope": 865,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 576,
            "nodeType": "FunctionDefinition",
            "src": "2025:196:4",
            "nodes": [],
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "2069:152:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "2084:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "2079:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2079:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 562,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2131:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2123:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2123:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2123:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 557,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "2103:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 556,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3734,
                          "src": "2090:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$3734_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2090:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$3734",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2113:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3620,
                      "src": "2090:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2079:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "724554482062616c202866726f6d206665657329202a2a2a3a20",
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2159:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71b79db2b13ac502d2a21f50d35ca154dedb8f0af4b57aac1e100fc4e63699d2",
                          "typeString": "literal_string \"rETH bal (from fees) ***: \""
                        },
                        "value": "rETH bal (from fees) ***: "
                      },
                      {
                        "id": 570,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "2189:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_71b79db2b13ac502d2a21f50d35ca154dedb8f0af4b57aac1e100fc4e63699d2",
                          "typeString": "literal_string \"rETH bal (from fees) ***: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 566,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27960,
                        "src": "2147:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$27960_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2155:3:4",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20604,
                      "src": "2147:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2147:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:46:4"
                },
                {
                  "expression": {
                    "id": 573,
                    "name": "bal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 555,
                    "src": "2211:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 553,
                  "id": 574,
                  "nodeType": "Return",
                  "src": "2204:10:4"
                }
              ]
            },
            "functionSelector": "25caa262",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBal",
            "nameLocation": "2034:6:4",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2040:2:4"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "2063:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:6:4"
            },
            "scope": 865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 588,
            "nodeType": "FunctionDefinition",
            "src": "2227:115:4",
            "nodes": [],
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "2282:60:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 583,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3739,
                          "src": "2320:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3739_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2331:3:4",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3737,
                        "src": "2320:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 581,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2299:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OZL_$865",
                          "typeString": "contract OZL"
                        }
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2304:15:4",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 637,
                      "src": "2299:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$3739_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 580,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "2292:43:4"
                }
              ]
            },
            "functionSelector": "e6aa216c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2236:15:4",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2251:2:4"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "2276:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2275:6:4"
            },
            "scope": 865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 637,
            "nodeType": "FunctionDefinition",
            "src": "2349:397:4",
            "nodes": [],
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "2419:327:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 597,
                      "mutability": "mutable",
                      "name": "ONE",
                      "nameLocation": "2434:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "2429:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 596,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2429:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2440:7:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2429:18:4"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "totalFeesRETH",
                      "nameLocation": "2462:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "2457:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2457:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 611,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 608,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2519:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$865",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2511:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2511:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2511:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 603,
                            "name": "rEthAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "2491:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 602,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3734,
                          "src": "2478:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$3734_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2478:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$3734",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2501:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3620,
                      "src": "2478:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2457:68:4"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "totalFeesQuote",
                      "nameLocation": "2540:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "2535:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2535:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 618,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 615,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2573:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      {
                        "id": 616,
                        "name": "totalFeesRETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "2581:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                          "typeString": "enum QuoteAsset"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 614,
                      "name": "_convertToQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "2557:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3739_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset,uint256) view returns (uint256)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2535:60:4"
                },
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "c_Supply",
                      "nameLocation": "2611:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 636,
                      "src": "2606:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 619,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 623,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 621,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "2622:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2606:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 624,
                      "name": "c_Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "2656:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2668:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2656:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 629,
                  "nodeType": "IfStatement",
                  "src": "2652:29:4",
                  "trueBody": {
                    "expression": {
                      "id": 627,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "2678:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 595,
                    "id": 628,
                    "nodeType": "Return",
                    "src": "2671:10:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 632,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "2714:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 633,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "2730:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 630,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "2699:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2703:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4749,
                      "src": "2699:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2699:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 595,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "2692:47:4"
                }
              ]
            },
            "functionSelector": "4d02a3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2358:15:4",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2385:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "2374:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 589,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2374:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3739,
                      "src": "2374:10:4"
                    },
                    "referencedDeclaration": 3739,
                    "src": "2374:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2373:19:4"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "2413:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2412:6:4"
            },
            "scope": 865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 713,
            "nodeType": "FunctionDefinition",
            "src": "2752:558:4",
            "nodes": [],
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "2841:469:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2864:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 712,
                      "src": "2851:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2851:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 653,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "724554485f4554482829",
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2895:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        },
                        "value": "rETH_ETH()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        }
                      ],
                      "expression": {
                        "id": 649,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2871:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2875:19:4",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "2871:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2871:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2851:57:4"
                },
                {
                  "expression": {
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 654,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "2918:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 659,
                                "name": "getOZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 864,
                                "src": "2960:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                                  "typeString": "function () view returns (contract ozIDiamond)"
                                }
                              },
                              "id": 660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2960:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                                "typeString": "contract ozIDiamond"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                                "typeString": "contract ozIDiamond"
                              }
                            ],
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2952:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 657,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2952:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2952:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 662,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "2970:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 655,
                          "name": "Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41671,
                          "src": "2925:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Address_$41671_$",
                            "typeString": "type(library Address)"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2933:18:4",
                        "memberName": "functionStaticCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41512,
                        "src": "2925:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (address,bytes memory) view returns (bytes memory)"
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2925:50:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2918:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "2918:57:4"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "reth_eth",
                      "nameLocation": "2991:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 712,
                      "src": "2986:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2986:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 670,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "3013:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3020:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 671,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3020:4:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 673,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3019:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 668,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3002:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3006:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3002:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2986:40:4"
                },
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "3042:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 712,
                      "src": "3037:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 676,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3037:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 678,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:10:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                      "typeString": "enum QuoteAsset"
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 679,
                      "name": "qt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 640,
                      "src": "3062:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 680,
                        "name": "QuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3739,
                        "src": "3069:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3739_$",
                          "typeString": "type(enum QuoteAsset)"
                        }
                      },
                      "id": 681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3080:3:4",
                      "memberName": "USD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3737,
                      "src": "3069:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "src": "3062:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 695,
                        "name": "qt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "3181:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 696,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3739,
                          "src": "3188:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3739_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3199:3:4",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3738,
                        "src": "3188:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "3181:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 708,
                    "nodeType": "IfStatement",
                    "src": "3178:103:4",
                    "trueBody": {
                      "id": 707,
                      "nodeType": "Block",
                      "src": "3204:77:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 699,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "3218:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 702,
                                  "name": "reth_eth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 667,
                                  "src": "3252:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3262:7:4",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 700,
                                  "name": "totalFeesRETH_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 642,
                                  "src": "3226:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3241:10:4",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4749,
                                "src": "3226:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3226:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3218:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 706,
                          "nodeType": "ExpressionStatement",
                          "src": "3218:52:4"
                        }
                      ]
                    }
                  },
                  "id": 709,
                  "nodeType": "IfStatement",
                  "src": "3058:223:4",
                  "trueBody": {
                    "id": 694,
                    "nodeType": "Block",
                    "src": "3085:87:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 683,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "3099:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 686,
                                      "name": "getOZ",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 864,
                                      "src": "3133:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                                        "typeString": "function () view returns (contract ozIDiamond)"
                                      }
                                    },
                                    "id": 687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3133:7:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                                      "typeString": "contract ozIDiamond"
                                    }
                                  },
                                  "id": 688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3141:8:4",
                                  "memberName": "rETH_USD",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4339,
                                  "src": "3133:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3133:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3153:7:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "id": 684,
                                "name": "totalFeesRETH_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 642,
                                "src": "3107:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3122:10:4",
                              "memberName": "mulDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4749,
                              "src": "3107:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3107:54:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3099:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 693,
                        "nodeType": "ExpressionStatement",
                        "src": "3099:62:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 710,
                    "name": "quote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 677,
                    "src": "3298:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 711,
                  "nodeType": "Return",
                  "src": "3291:12:4"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToQuote",
            "nameLocation": "2761:15:4",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "qt_",
                  "nameLocation": "2788:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2777:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 639,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 638,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2777:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3739,
                      "src": "2777:10:4"
                    },
                    "referencedDeclaration": 3739,
                    "src": "2777:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "totalFeesRETH_",
                  "nameLocation": "2798:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2793:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2776:37:4"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2835:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:6:4"
            },
            "scope": 865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 715,
            "nodeType": "ErrorDefinition",
            "src": "3978:24:4",
            "nodes": [],
            "errorSelector": "f67dc7cd",
            "name": "AssetOutNoExist",
            "nameLocation": "3984:15:4",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3999:2:4"
            }
          },
          {
            "id": 772,
            "nodeType": "FunctionDefinition",
            "src": "4542:780:4",
            "nodes": [],
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "4709:613:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 731,
                              "name": "tokenOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "4753:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 728,
                                "name": "getOZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 864,
                                "src": "4736:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                                  "typeString": "function () view returns (contract ozIDiamond)"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4736:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4744:8:4",
                            "memberName": "ozTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4430,
                            "src": "4736:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4736:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4775:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4767:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 733,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4767:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4767:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4736:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 738,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "4793:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 739,
                          "name": "ETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 482,
                          "src": "4806:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4793:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4736:73:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 742,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "4825:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 743,
                        "name": "rEthAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "4838:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4825:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4736:110:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 749,
                  "nodeType": "IfStatement",
                  "src": "4719:162:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 746,
                        "name": "AssetOutNoExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "4864:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4864:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 748,
                    "nodeType": "RevertStatement",
                    "src": "4857:24:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 750,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4896:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4900:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4896:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 752,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "4910:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4896:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 762,
                  "nodeType": "IfStatement",
                  "src": "4892:100:4",
                  "trueBody": {
                    "id": 761,
                    "nodeType": "Block",
                    "src": "4918:74:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 755,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "4948:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 756,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4956:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4960:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4956:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 758,
                              "name": "ozlAmountIn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "4968:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 754,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37167,
                            "src": "4932:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4932:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "4932:49:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 764,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "5046:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 765,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "5054:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 766,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "5065:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 767,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "5076:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 768,
                        "name": "minAmountOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "5090:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 763,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        838,
                        37079
                      ],
                      "referencedDeclaration": 838,
                      "src": "5040:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5040:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "5040:64:4"
                }
              ]
            },
            "functionSelector": "be78b2ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "4551:6:4",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "4575:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "4567:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "4599:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "4591:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "4626:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "4618:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4618:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "4653:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "4645:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "minAmountOut_",
                  "nameLocation": "4680:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "4675:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4675:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:142:4"
            },
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4709:0:4"
            },
            "scope": 865,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 838,
            "nodeType": "FunctionDefinition",
            "src": "5329:1238:4",
            "nodes": [],
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "5508:1059:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 790,
                              "name": "getOZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "5627:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                                "typeString": "function () view returns (contract ozIDiamond)"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5627:7:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5619:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 788,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5619:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5619:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 793,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "5637:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 787,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36728,
                      "src": "5610:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "5610:40:4"
                },
                {
                  "assignments": [
                    797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "mutability": "mutable",
                      "name": "usdValue",
                      "nameLocation": "5926:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 837,
                      "src": "5921:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5921:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 801,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3739,
                              "src": "5977:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3739_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5988:3:4",
                            "memberName": "USD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3737,
                            "src": "5977:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3739",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 800,
                          "name": "getExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 637,
                          "src": "5961:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3739_$returns$_t_uint256_$",
                            "typeString": "function (enum QuoteAsset) view returns (uint256)"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5961:31:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5994:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 798,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "5937:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5950:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4749,
                      "src": "5937:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5921:81:4"
                },
                {
                  "assignments": [
                    808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 808,
                      "mutability": "mutable",
                      "name": "rETHtoRedeem",
                      "nameLocation": "6017:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 837,
                      "src": "6012:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 807,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6012:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6052:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 812,
                              "name": "getOZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "6061:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                                "typeString": "function () view returns (contract ozIDiamond)"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6061:7:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6069:8:4",
                          "memberName": "rETH_USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4339,
                          "src": "6061:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6061:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 809,
                        "name": "usdValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "6032:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6041:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4749,
                      "src": "6032:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6032:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6012:68:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 818,
                      "name": "tokenOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "6095:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 819,
                      "name": "rEthAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "6108:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6095:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 823,
                  "nodeType": "IfStatement",
                  "src": "6091:46:4",
                  "trueBody": {
                    "expression": {
                      "id": 821,
                      "name": "rETHtoRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "6125:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 786,
                    "id": 822,
                    "nodeType": "Return",
                    "src": "6118:19:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 827,
                              "name": "getOZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "6368:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                                "typeString": "function () view returns (contract ozIDiamond)"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6368:7:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6376:14:4",
                          "memberName": "tradingPackage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4451,
                          "src": "6368:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$96_memory_ptr_$",
                            "typeString": "function () view external returns (struct TradingPackage memory)"
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6368:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$96_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      {
                        "id": 831,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "6406:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 832,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "6429:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 833,
                        "name": "rETHtoRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "6482:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 834,
                        "name": "minAmountOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "6508:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradingPackage_$96_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 824,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6449,
                        "src": "6252:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6449_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6263:6:4",
                      "memberName": "useOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6245,
                      "src": "6252:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TradingPackage_$96_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (struct TradingPackage memory,address,address,uint256,uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:279:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "6252:279:4"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "5338:5:4",
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "5361:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "5353:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5353:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "5386:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "5378:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5378:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "5413:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "5405:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "5438:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "5433:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5433:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "minAmountOut_",
                  "nameLocation": "5466:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "5461:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5461:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5343:142:4"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "5502:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5502:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5501:6:4"
            },
            "scope": 865,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 849,
            "nodeType": "FunctionDefinition",
            "src": "6590:112:4",
            "nodes": [],
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "6645:57:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 843,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "6662:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4452_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6662:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6670:23:4",
                      "memberName": "getOZLCirculatingSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4423,
                      "src": "6662:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6662:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 842,
                  "id": 847,
                  "nodeType": "Return",
                  "src": "6655:40:4"
                }
              ]
            },
            "functionSelector": "9358928b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "circulatingSupply",
            "nameLocation": "6599:17:4",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6616:2:4"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 849,
                  "src": "6639:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6638:6:4"
            },
            "scope": 865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 864,
            "nodeType": "FunctionDefinition",
            "src": "6708:135:4",
            "nodes": [],
            "body": {
              "id": 863,
              "nodeType": "Block",
              "src": "6757:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 858,
                              "name": "_OZ_DIAMOND_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 495,
                              "src": "6812:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 856,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41803,
                              "src": "6785:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$41803_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6797:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41725,
                            "src": "6785:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41699_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6785:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$41699_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6830:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41698,
                        "src": "6785:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 855,
                      "name": "ozIDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4452,
                      "src": "6774:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$4452_$",
                        "typeString": "type(contract ozIDiamond)"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6774:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "functionReturnParameters": 854,
                  "id": 862,
                  "nodeType": "Return",
                  "src": "6767:69:4"
                }
              ]
            },
            "functionSelector": "59c64e12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZ",
            "nameLocation": "6717:5:4",
            "parameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6722:2:4"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 864,
                  "src": "6745:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                    "typeString": "contract ozIDiamond"
                  },
                  "typeName": {
                    "id": 852,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 851,
                      "name": "ozIDiamond",
                      "nameLocations": [
                        "6745:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4452,
                      "src": "6745:10:4"
                    },
                    "referencedDeclaration": 4452,
                    "src": "6745:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4452",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6744:12:4"
            },
            "scope": 865,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 472,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "847:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37195,
              "src": "847:16:4"
            },
            "id": 473,
            "nodeType": "InheritanceSpecifier",
            "src": "847:16:4"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          865,
          37195,
          37896,
          37273,
          38498,
          36584
        ],
        "name": "OZL",
        "nameLocation": "840:3:4",
        "scope": 866,
        "usedErrors": [
          295,
          297,
          301,
          715
        ],
        "usedEvents": [
          36448,
          37207,
          37216
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 4
}