{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "OZError08",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "OZError09",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "OZError18",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OZError19",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum QuoteAsset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZ",
      "outputs": [
        {
          "internalType": "contract ozIDiamond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ozDiamond_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "communityAmount_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recicledSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ozlAmountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmountsOut_",
          "type": "uint256[]"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61223180620000ee6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b6040516101519190611a98565b60405180910390f35b61016d610168366004611ac0565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d366004611aec565b61037b565b60405160128152602001610151565b61018161039f565b61016d6101c7366004611ac0565b6103ae565b6101816101da366004611b2d565b6103d0565b6101e76105a3565b6040516001600160a01b039091168152602001610151565b61018161020d366004611bb9565b6105e5565b610181610220366004611c93565b6001600160a01b031660009081526033602052604090205490565b61024e610249366004611d20565b610904565b005b61018161025e366004611c93565b610aa1565b610181610abf565b610181610b2a565b610144610b71565b61016d610289366004611ac0565b610b80565b61016d61029c366004611ac0565b610bfb565b61024e6102af366004611da8565b610c09565b6101816102c2366004611e1f565b610d2b565b610181610d56565b6060603680546102de90611e58565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611e58565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610d62565b60019150505b92915050565b600033610389858285610e86565b610394858585610f00565b506001949350505050565b60006103a96110ce565b905090565b60003361036f8185856103c18383610d2b565b6103cb9190611ea2565b610d62565b6040516370a0823160e01b8152306004820152600090670de0b6b3a764000090829073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190611eb5565b90506000600285600281111561046a5761046a611ece565b1461047e576104798583611149565b610480565b815b9050600061048c610b2a565b9050806000036104a0575091949350505050565b6104da60405180604001604052806007815260200166030b9b9b2ba1d160cd1b8152508760028111156104d5576104d5611ece565b611266565b61050b6040518060400160405280600f81526020016e03a37ba30b62332b2b9a922aa241d1608d1b81525084611266565b61053d6040518060400160405280601081526020016f03a37ba30b62332b2b9a8bab7ba329d160851b81525083611266565b6105696040518060400160405280600a815260200169031afa9bab838363c9d160b51b81525082611266565b61058e604051806040016040528060048152602001632d2d2d2d60e01b8152506112af565b6105998483836112f5565b9695505050505050565b60006105d66105d360017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611ee4565b90565b546001600160a01b0316919050565b6000806105f06105a3565b905060006105fc611313565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190611ef7565b6001600160a01b031614801561068b575060006106898288611382565b125b156106b95760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146106d4576106d4883387610e86565b60006106f36106e360026103d0565b8790670de0b6b3a76400006112f5565b604051631567339f60e31b81526001600160a01b038b81166004830152306024830152604482018990529192509084169063ab399cf890606401600060405180830381600087803b15801561074757600080fd5b505af115801561075b573d6000803e3d6000fd5b505050508160008151811061077257610772611f14565b60200260200101516001600160a01b0316876001600160a01b03160361088057846000815181106107a5576107a5611f14565b60200260200101518110156107d057604051631aa1e78f60e31b8152600481018290526024016106b0565b826001600160a01b031663dde5543b836000815181106107f2576107f2611f14565b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908b166024820152604481018490526064016020604051808303816000875af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190611eb5565b93505050506108fb565b60405163094463e760e01b81526001600160a01b0384169063094463e7906108b2908a908c9086908b90600401611f2a565b6020604051808303816000875af11580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611eb5565b93505050505b95945050505050565b600054610100900460ff16158080156109245750600054600160ff909116105b8061093e5750303b15801561093e575060005460ff166001145b6109a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b0565b6000805460ff1916600117905580156109c4576000805461ff0019166101001790555b6109ce86866113ea565b6109f186604051806040016040528060018152602001603160f81b81525061141b565b83610a206105d360017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611ee4565b80546001600160a01b0319166001600160a01b0392909216919091179055610a48308461144c565b610a53308584610f00565b8015610a99576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b6000610ac96105a3565b6001600160a01b0316636a533a4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a99190611eb5565b6000610b346105a3565b6001600160a01b0316632b112e496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b6060603780546102de90611e58565b60003381610b8e8286610d2b565b905083811015610bee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b0565b6103948286868403610d62565b60003361036f818585610f00565b83421115610c335760405163184f1e0160e11b8152600481018590524260248201526044016106b0565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c628c61152b565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cbd82611553565b90506000610ccd828787876115a1565b9050896001600160a01b0316816001600160a01b031614610d1457604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016106b0565b610d1f8a8a8a610d62565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006103a960006103d0565b6001600160a01b038316610dc45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b0565b6001600160a01b038216610e255760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b0565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610e928484610d2b565b90506000198114610efa5781811015610eed5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b0565b610efa8484848403610d62565b50505050565b6001600160a01b038316610f645760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b0565b6001600160a01b038216610fc65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b0565b6001600160a01b0383166000908152603360205260409020548181101561103e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b0565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611075908490611ea2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110c191815260200190565b60405180910390a3610efa565b60006103a97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6110fd60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008083600281111561115e5761115e611ece565b036111e6576111df61116e6105a3565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf9190611eb5565b8390670de0b6b3a76400006112f5565b9050610375565b60018360028111156111fa576111fa611ece565b03610375576040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b1790526112396112336105a3565b826115d0565b90506000818060200190518101906112519190611eb5565b90506108fb8482670de0b6b3a76400006112f5565b6112ab828260405160240161127c929190611f94565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526115fc565b5050565b6112f2816040516024016112c39190611a98565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526115fc565b50565b600082600019048411830215820261130c57600080fd5b5091020490565b606061131d6105a3565b6001600160a01b03166338ab35d46040518163ffffffff1660e01b8152600401600060405180830381865afa15801561135a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a99190810190611fb6565b8151600090815b818110156113de57836001600160a01b03168582815181106113ad576113ad611f14565b60200260200101516001600160a01b0316036113cc5791506103759050565b806113d681612050565b915050611389565b50600019949350505050565b600054610100900460ff166114115760405162461bcd60e51b81526004016106b090612069565b6112ab828261161d565b600054610100900460ff166114425760405162461bcd60e51b81526004016106b090612069565b6112ab828261165d565b6001600160a01b0382166114a25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b0565b80603560008282546114b49190611ea2565b90915550506001600160a01b038216600090815260336020526040812080548392906114e1908490611ea2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006103756115606110ce565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006115b28787878761169e565b915091506115bf8161178b565b5090505b949350505050565b505050565b60606115f583836040518060600160405280602581526020016121d760259139611941565b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff166116445760405162461bcd60e51b81526004016106b090612069565b603661165083826120fa565b5060376115cb82826120fa565b600054610100900460ff166116845760405162461bcd60e51b81526004016106b090612069565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116d55750600090506003611782565b8460ff16601b141580156116ed57508460ff16601c14155b156116fe5750600090506004611782565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611752573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661177b57600060019250925050611782565b9150600090505b94509492505050565b600081600481111561179f5761179f611ece565b036117a75750565b60018160048111156117bb576117bb611ece565b036118085760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b0565b600281600481111561181c5761181c611ece565b036118695760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106b0565b600381600481111561187d5761187d611ece565b036118d55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106b0565b60048160048111156118e9576118e9611ece565b036112f25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106b0565b6060600080856001600160a01b03168560405161195e91906121ba565b600060405180830381855afa9150503d8060008114611999576040519150601f19603f3d011682016040523d82523d6000602084013e61199e565b606091505b50915091506105998683838760608315611a19578251600003611a12576001600160a01b0385163b611a125760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b0565b50816115c3565b6115c38383815115611a2e5781518083602001fd5b8060405162461bcd60e51b81526004016106b09190611a98565b60005b83811015611a63578181015183820152602001611a4b565b50506000910152565b60008151808452611a84816020860160208601611a48565b601f01601f19169290920160200192915050565b6020815260006115f56020830184611a6c565b6001600160a01b03811681146112f257600080fd5b60008060408385031215611ad357600080fd5b8235611ade81611aab565b946020939093013593505050565b600080600060608486031215611b0157600080fd5b8335611b0c81611aab565b92506020840135611b1c81611aab565b929592945050506040919091013590565b600060208284031215611b3f57600080fd5b8135600381106115f557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b8d57611b8d611b4e565b604052919050565b600067ffffffffffffffff821115611baf57611baf611b4e565b5060051b60200190565b600080600080600060a08688031215611bd157600080fd5b8535611bdc81611aab565b9450602086810135611bed81611aab565b94506040870135611bfd81611aab565b935060608701359250608087013567ffffffffffffffff811115611c2057600080fd5b8701601f81018913611c3157600080fd5b8035611c44611c3f82611b95565b611b64565b81815260059190911b8201830190838101908b831115611c6357600080fd5b928401925b82841015611c8157833582529284019290840190611c68565b80955050505050509295509295909350565b600060208284031215611ca557600080fd5b81356115f581611aab565b600082601f830112611cc157600080fd5b813567ffffffffffffffff811115611cdb57611cdb611b4e565b611cee601f8201601f1916602001611b64565b818152846020838601011115611d0357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d3857600080fd5b853567ffffffffffffffff80821115611d5057600080fd5b611d5c89838a01611cb0565b96506020880135915080821115611d7257600080fd5b50611d7f88828901611cb0565b9450506040860135611d9081611aab565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a031215611dc357600080fd5b8735611dce81611aab565b96506020880135611dde81611aab565b95506040880135945060608801359350608088013560ff81168114611e0257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e3257600080fd5b8235611e3d81611aab565b91506020830135611e4d81611aab565b809150509250929050565b600181811c90821680611e6c57607f821691505b60208210810361154d57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037557610375611e8c565b600060208284031215611ec757600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561037557610375611e8c565b600060208284031215611f0957600080fd5b81516115f581611aab565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020808301919091526040820184905260806060830181905283519083018190526000918481019160a085019190845b81811015611f8557845184529382019392820192600101611f69565b50919998505050505050505050565b604081526000611fa76040830185611a6c565b90508260208301529392505050565b60006020808385031215611fc957600080fd5b825167ffffffffffffffff811115611fe057600080fd5b8301601f81018513611ff157600080fd5b8051611fff611c3f82611b95565b81815260059190911b8201830190838101908783111561201e57600080fd5b928401925b8284101561204557835161203681611aab565b82529284019290840190612023565b979650505050505050565b60006001820161206257612062611e8c565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f8211156115cb57600081815260208120601f850160051c810160208610156120db5750805b601f850160051c820191505b81811015610a99578281556001016120e7565b815167ffffffffffffffff81111561211457612114611b4e565b612128816121228454611e58565b846120b4565b602080601f83116001811461215d57600084156121455750858301515b600019600386901b1c1916600185901b178555610a99565b600085815260208120601f198616915b8281101561218c5788860151825594840194600190910190840161216d565b50858210156121aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516121cc818460208701611a48565b919091019291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a26469706673582212202b70df22134892c12d86c56f5736c151748b661cfef4aa5002314b9256a25a8764736f6c63430008150033",
    "sourceMap": "1242:6958:4:-:0;;;1797:53;;;;;;;;;-1:-1:-1;1821:22:4;:20;:22::i;:::-;1242:6958;;5388:279:56;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:56;;216:2:109;5447:66:56;;;198:21:109;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:109;;;338:37;392:19;;5447:66:56;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:56;5588:15;5573:30;;;;;;5622:28;;564:36:109;;;5622:28:56;;552:2:109;537:18;5622:28:56;;;;;;;5523:138;5388:279::o;422:184:109:-;1242:6958:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b6040516101519190611a98565b60405180910390f35b61016d610168366004611ac0565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d366004611aec565b61037b565b60405160128152602001610151565b61018161039f565b61016d6101c7366004611ac0565b6103ae565b6101816101da366004611b2d565b6103d0565b6101e76105a3565b6040516001600160a01b039091168152602001610151565b61018161020d366004611bb9565b6105e5565b610181610220366004611c93565b6001600160a01b031660009081526033602052604090205490565b61024e610249366004611d20565b610904565b005b61018161025e366004611c93565b610aa1565b610181610abf565b610181610b2a565b610144610b71565b61016d610289366004611ac0565b610b80565b61016d61029c366004611ac0565b610bfb565b61024e6102af366004611da8565b610c09565b6101816102c2366004611e1f565b610d2b565b610181610d56565b6060603680546102de90611e58565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611e58565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610d62565b60019150505b92915050565b600033610389858285610e86565b610394858585610f00565b506001949350505050565b60006103a96110ce565b905090565b60003361036f8185856103c18383610d2b565b6103cb9190611ea2565b610d62565b6040516370a0823160e01b8152306004820152600090670de0b6b3a764000090829073ae78736cd615f374d3085123a210448e74fc6393906370a0823190602401602060405180830381865afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190611eb5565b90506000600285600281111561046a5761046a611ece565b1461047e576104798583611149565b610480565b815b9050600061048c610b2a565b9050806000036104a0575091949350505050565b6104da60405180604001604052806007815260200166030b9b9b2ba1d160cd1b8152508760028111156104d5576104d5611ece565b611266565b61050b6040518060400160405280600f81526020016e03a37ba30b62332b2b9a922aa241d1608d1b81525084611266565b61053d6040518060400160405280601081526020016f03a37ba30b62332b2b9a8bab7ba329d160851b81525083611266565b6105696040518060400160405280600a815260200169031afa9bab838363c9d160b51b81525082611266565b61058e604051806040016040528060048152602001632d2d2d2d60e01b8152506112af565b6105998483836112f5565b9695505050505050565b60006105d66105d360017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611ee4565b90565b546001600160a01b0316919050565b6000806105f06105a3565b905060006105fc611313565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190611ef7565b6001600160a01b031614801561068b575060006106898288611382565b125b156106b95760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146106d4576106d4883387610e86565b60006106f36106e360026103d0565b8790670de0b6b3a76400006112f5565b604051631567339f60e31b81526001600160a01b038b81166004830152306024830152604482018990529192509084169063ab399cf890606401600060405180830381600087803b15801561074757600080fd5b505af115801561075b573d6000803e3d6000fd5b505050508160008151811061077257610772611f14565b60200260200101516001600160a01b0316876001600160a01b03160361088057846000815181106107a5576107a5611f14565b60200260200101518110156107d057604051631aa1e78f60e31b8152600481018290526024016106b0565b826001600160a01b031663dde5543b836000815181106107f2576107f2611f14565b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908b166024820152604481018490526064016020604051808303816000875af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190611eb5565b93505050506108fb565b60405163094463e760e01b81526001600160a01b0384169063094463e7906108b2908a908c9086908b90600401611f2a565b6020604051808303816000875af11580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190611eb5565b93505050505b95945050505050565b600054610100900460ff16158080156109245750600054600160ff909116105b8061093e5750303b15801561093e575060005460ff166001145b6109a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b0565b6000805460ff1916600117905580156109c4576000805461ff0019166101001790555b6109ce86866113ea565b6109f186604051806040016040528060018152602001603160f81b81525061141b565b83610a206105d360017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57611ee4565b80546001600160a01b0319166001600160a01b0392909216919091179055610a48308461144c565b610a53308584610f00565b8015610a99576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b6000610ac96105a3565b6001600160a01b0316636a533a4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a99190611eb5565b6000610b346105a3565b6001600160a01b0316632b112e496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b6060603780546102de90611e58565b60003381610b8e8286610d2b565b905083811015610bee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b0565b6103948286868403610d62565b60003361036f818585610f00565b83421115610c335760405163184f1e0160e11b8152600481018590524260248201526044016106b0565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c628c61152b565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cbd82611553565b90506000610ccd828787876115a1565b9050896001600160a01b0316816001600160a01b031614610d1457604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016106b0565b610d1f8a8a8a610d62565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006103a960006103d0565b6001600160a01b038316610dc45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b0565b6001600160a01b038216610e255760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b0565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610e928484610d2b565b90506000198114610efa5781811015610eed5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b0565b610efa8484848403610d62565b50505050565b6001600160a01b038316610f645760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b0565b6001600160a01b038216610fc65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b0565b6001600160a01b0383166000908152603360205260409020548181101561103e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b0565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611075908490611ea2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110c191815260200190565b60405180910390a3610efa565b60006103a97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6110fd60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60008083600281111561115e5761115e611ece565b036111e6576111df61116e6105a3565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf9190611eb5565b8390670de0b6b3a76400006112f5565b9050610375565b60018360028111156111fa576111fa611ece565b03610375576040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b1790526112396112336105a3565b826115d0565b90506000818060200190518101906112519190611eb5565b90506108fb8482670de0b6b3a76400006112f5565b6112ab828260405160240161127c929190611f94565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526115fc565b5050565b6112f2816040516024016112c39190611a98565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526115fc565b50565b600082600019048411830215820261130c57600080fd5b5091020490565b606061131d6105a3565b6001600160a01b03166338ab35d46040518163ffffffff1660e01b8152600401600060405180830381865afa15801561135a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103a99190810190611fb6565b8151600090815b818110156113de57836001600160a01b03168582815181106113ad576113ad611f14565b60200260200101516001600160a01b0316036113cc5791506103759050565b806113d681612050565b915050611389565b50600019949350505050565b600054610100900460ff166114115760405162461bcd60e51b81526004016106b090612069565b6112ab828261161d565b600054610100900460ff166114425760405162461bcd60e51b81526004016106b090612069565b6112ab828261165d565b6001600160a01b0382166114a25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b0565b80603560008282546114b49190611ea2565b90915550506001600160a01b038216600090815260336020526040812080548392906114e1908490611ea2565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60006103756115606110ce565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006115b28787878761169e565b915091506115bf8161178b565b5090505b949350505050565b505050565b60606115f583836040518060600160405280602581526020016121d760259139611941565b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff166116445760405162461bcd60e51b81526004016106b090612069565b603661165083826120fa565b5060376115cb82826120fa565b600054610100900460ff166116845760405162461bcd60e51b81526004016106b090612069565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116d55750600090506003611782565b8460ff16601b141580156116ed57508460ff16601c14155b156116fe5750600090506004611782565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611752573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661177b57600060019250925050611782565b9150600090505b94509492505050565b600081600481111561179f5761179f611ece565b036117a75750565b60018160048111156117bb576117bb611ece565b036118085760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b0565b600281600481111561181c5761181c611ece565b036118695760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106b0565b600381600481111561187d5761187d611ece565b036118d55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106b0565b60048160048111156118e9576118e9611ece565b036112f25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106b0565b6060600080856001600160a01b03168560405161195e91906121ba565b600060405180830381855afa9150503d8060008114611999576040519150601f19603f3d011682016040523d82523d6000602084013e61199e565b606091505b50915091506105998683838760608315611a19578251600003611a12576001600160a01b0385163b611a125760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b0565b50816115c3565b6115c38383815115611a2e5781518083602001fd5b8060405162461bcd60e51b81526004016106b09190611a98565b60005b83811015611a63578181015183820152602001611a4b565b50506000910152565b60008151808452611a84816020860160208601611a48565b601f01601f19169290920160200192915050565b6020815260006115f56020830184611a6c565b6001600160a01b03811681146112f257600080fd5b60008060408385031215611ad357600080fd5b8235611ade81611aab565b946020939093013593505050565b600080600060608486031215611b0157600080fd5b8335611b0c81611aab565b92506020840135611b1c81611aab565b929592945050506040919091013590565b600060208284031215611b3f57600080fd5b8135600381106115f557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b8d57611b8d611b4e565b604052919050565b600067ffffffffffffffff821115611baf57611baf611b4e565b5060051b60200190565b600080600080600060a08688031215611bd157600080fd5b8535611bdc81611aab565b9450602086810135611bed81611aab565b94506040870135611bfd81611aab565b935060608701359250608087013567ffffffffffffffff811115611c2057600080fd5b8701601f81018913611c3157600080fd5b8035611c44611c3f82611b95565b611b64565b81815260059190911b8201830190838101908b831115611c6357600080fd5b928401925b82841015611c8157833582529284019290840190611c68565b80955050505050509295509295909350565b600060208284031215611ca557600080fd5b81356115f581611aab565b600082601f830112611cc157600080fd5b813567ffffffffffffffff811115611cdb57611cdb611b4e565b611cee601f8201601f1916602001611b64565b818152846020838601011115611d0357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d3857600080fd5b853567ffffffffffffffff80821115611d5057600080fd5b611d5c89838a01611cb0565b96506020880135915080821115611d7257600080fd5b50611d7f88828901611cb0565b9450506040860135611d9081611aab565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a031215611dc357600080fd5b8735611dce81611aab565b96506020880135611dde81611aab565b95506040880135945060608801359350608088013560ff81168114611e0257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e3257600080fd5b8235611e3d81611aab565b91506020830135611e4d81611aab565b809150509250929050565b600181811c90821680611e6c57607f821691505b60208210810361154d57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037557610375611e8c565b600060208284031215611ec757600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561037557610375611e8c565b600060208284031215611f0957600080fd5b81516115f581611aab565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020808301919091526040820184905260806060830181905283519083018190526000918481019160a085019190845b81811015611f8557845184529382019392820192600101611f69565b50919998505050505050505050565b604081526000611fa76040830185611a6c565b90508260208301529392505050565b60006020808385031215611fc957600080fd5b825167ffffffffffffffff811115611fe057600080fd5b8301601f81018513611ff157600080fd5b8051611fff611c3f82611b95565b81815260059190911b8201830190838101908783111561201e57600080fd5b928401925b8284101561204557835161203681611aab565b82529284019290840190612023565b979650505050505050565b60006001820161206257612062611e8c565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f8211156115cb57600081815260208120601f850160051c810160208610156120db5750805b601f850160051c820191505b81811015610a99578281556001016120e7565b815167ffffffffffffffff81111561211457612114611b4e565b612128816121228454611e58565b846120b4565b602080601f83116001811461215d57600084156121455750858301515b600019600386901b1c1916600185901b178555610a99565b600085815260208120601f198616915b8281101561218c5788860151825594840194600190910190840161216d565b50858210156121aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516121cc818460208701611a48565b919091019291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a26469706673582212202b70df22134892c12d86c56f5736c151748b661cfef4aa5002314b9256a25a8764736f6c63430008150033",
    "sourceMap": "1242:6958:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:57;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:109;;1384:22;1366:41;;1354:2;1339:18;4770:197:57;1226:187:109;3581:106:57;3668:12;;3581:106;;;1564:25:109;;;1552:2;1537:18;3581:106:57;1418:177:109;5529:286:57;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;2203:36:109;;2191:2;2176:18;3430:91:57;2061:184:109;5867:104:4;;;:::i;6210:234:57:-;;;;;;:::i;:::-;;:::i;2746:787:4:-;;;;;;:::i;:::-;;:::i;5462:135::-;;;:::i;:::-;;;-1:-1:-1;;;;;2891:32:109;;;2873:51;;2861:2;2846:18;5462:135:4;2708:222:109;4099:1132:4;;;;;;:::i;:::-;;:::i;3745:125:57:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:57;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1857:764:4;;;;;;:::i;:::-;;:::i;:::-;;6180:111;;;;;;:::i;:::-;;:::i;5353:103::-;;;:::i;5238:109::-;;;:::i;2704:102:57:-;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;7277:623:4:-;;;;;;:::i;:::-;;:::i;4313:149:57:-;;;;;;:::i;:::-;;:::i;2629:110:4:-;;;:::i;2493:98:57:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:64;4907:32:57;929:10:64;4923:7:57;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:64;5712:38:57;5728:4;929:10:64;5743:6:57;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:57;;5529:286;-1:-1:-1;;;;5529:286:57:o;5867:104:4:-;5918:7;5944:20;:18;:20::i;:::-;5937:27;;5867:104;:::o;6210:234:57:-;6298:4;929:10:64;6352:64:57;929:10:64;6368:7:57;6405:10;6377:25;929:10:64;6368:7:57;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2746:787:4:-;2876:139;;-1:-1:-1;;;2876:139:4;;3009:4;2876:139;;;2873:51:109;2810:4:4;;2837:7;;2810:4;;2902:42;;2876:124;;2846:18:109;;2876:139:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2855:160;-1:-1:-1;3026:19:4;3058:15;3048:6;:25;;;;;;;;:::i;:::-;;:101;;3111:38;3127:6;3135:13;3111:15;:38::i;:::-;3048:101;;;3085:13;3048:101;3026:123;;3160:13;3176:19;:17;:19::i;:::-;3160:35;;3210:8;3222:1;3210:13;3206:29;;-1:-1:-1;3232:3:4;;2746:787;-1:-1:-1;;;;2746:787:4:o;3206:29::-;3246:36;;;;;;;;;;;;;;-1:-1:-1;;;3246:36:4;;;3274:6;3269:12;;;;;;;;:::i;:::-;3246:11;:36::i;:::-;3292:45;;;;;;;;;;;;;;-1:-1:-1;;;3292:45:4;;;3323:13;3292:11;:45::i;:::-;3347:47;;;;;;;;;;;;;;-1:-1:-1;;;3347:47:4;;;3379:14;3347:11;:47::i;:::-;3404:35;;;;;;;;;;;;;;-1:-1:-1;;;3404:35:4;;;3430:8;3404:11;:35::i;:::-;3449:19;;;;;;;;;;;;;;-1:-1:-1;;;3449:19:4;;;:11;:19::i;:::-;3486:40;:3;3501:14;3517:8;3486:14;:40::i;:::-;3479:47;2746:787;-1:-1:-1;;;;;;2746:787:4:o;5462:135::-;5499:10;5539:44;1519:45;1563:1;1524:35;1519:45;:::i;:::-;2029:4:85;1859:190;5539:44:4;:50;-1:-1:-1;;;;;5539:50:4;;5462:135;-1:-1:-1;5462:135:4:o;4099:1132::-;4284:14;4310:13;4326:7;:5;:7::i;:::-;4310:23;;4344:21;4368:7;:5;:7::i;:::-;4403:22;;-1:-1:-1;;;4403:22:4;;-1:-1:-1;;;;;2891:32:109;;;4403:22:4;;;2873:51:109;4344:31:4;;-1:-1:-1;4437:1:4;;4403:11;;;;;2846:18:109;;4403:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4403:36:4;;:79;;;;-1:-1:-1;4481:1:4;4455:23;:4;4468:9;4455:12;:23::i;:::-;:27;4403:79;4386:134;;;4500:20;;-1:-1:-1;;;4500:20:4;;-1:-1:-1;;;;;2891:32:109;;4500:20:4;;;2873:51:109;2846:18;;4500:20:4;;;;;;;;4386:134;4535:10;-1:-1:-1;;;;;4535:20:4;;;4531:100;;4571:49;4587:6;4595:10;4607:12;4571:15;:49::i;:::-;4641:17;4661:66;4685:32;4701:15;4685;:32::i;:::-;4661:12;;4719:7;4661:23;:66::i;:::-;4738:50;;-1:-1:-1;;;4738:50:4;;-1:-1:-1;;;;;9577:15:109;;;4738:50:4;;;9559:34:109;4768:4:4;9609:18:109;;;9602:43;9661:18;;;9654:34;;;4641:86:4;;-1:-1:-1;4738:13:4;;;;;;9494:18:109;;4738:50:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:4;4851:1;4846:7;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4833:20:4;:9;-1:-1:-1;;;;;4833:20:4;;4829:184;;4888:14;4903:1;4888:17;;;;;;;;:::i;:::-;;;;;;;4873:12;:32;4869:68;;;4914:23;;-1:-1:-1;;;4914:23:4;;;;;1564:25:109;;;1537:18;;4914:23:4;1418:177:109;4869:68:4;4958:2;-1:-1:-1;;;;;4958:10:4;;4969:4;4974:1;4969:7;;;;;;;;:::i;:::-;;;;;;;;;;;4958:44;;-1:-1:-1;;;;;;4958:44:4;;;;;;;-1:-1:-1;;;;;9577:15:109;;;4958:44:4;;;9559:34:109;9629:15;;;9609:18;;;9602:43;9661:18;;;9654:34;;;9494:18;;4958:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4951:51;;;;;;;4829:184;5030:120;;-1:-1:-1;;;5030:120:4;;-1:-1:-1;;;;;5030:9:4;;;;;:120;;5054:9;;5077;;5100:12;;5126:14;;5030:120;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5023:127;;;;;4099:1132;;;;;;;;:::o;1857:764::-;3111:19:56;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:56;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:56;1476:19:63;:23;;;3219:66:56;;-1:-1:-1;3268:12:56;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:56;;10942:2:109;3157:201:56;;;10924:21:109;10981:2;10961:18;;;10954:30;11020:34;11000:18;;;10993:62;-1:-1:-1;;;11071:18:109;;;11064:44;11125:19;;3157:201:56;10740:410:109;3157:201:56;3368:12;:16;;-1:-1:-1;;3368:16:56;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:56;;;;;3394:65;2061:28:4::1;2074:5;2081:7;2061:12;:28::i;:::-;2099:25;2113:5;2099:25;;;;;;;;;;;;;-1:-1:-1::0;;;2099:25:4::1;;::::0;:13:::1;:25::i;:::-;2187:10:::0;2134:44:::1;1519:45;1563:1;1524:35;1519:45;:::i;2134:44::-;:63:::0;;-1:-1:-1;;;;;;2134:63:4::1;-1:-1:-1::0;;;;;2134:63:4;;;::::1;::::0;;;::::1;::::0;;2515:34:::1;2529:4;2536:12:::0;2515:5:::1;:34::i;:::-;2560:54;2578:4;2585:10;2597:16;2560:9;:54::i;:::-;3483:14:56::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:56;;;3553:14;;-1:-1:-1;2203:36:109;;3553:14:56;;2191:2:109;2176:18;3553:14:56;;;;;;;3479:99;3101:483;1857:764:4;;;;;:::o;6180:111::-;-1:-1:-1;;;;;6260:14:4;;6234:7;6260:14;;;:7;:14;;;;;929::65;6260:24:4;838:112:65;5353:103:4;5399:4;5422:7;:5;:7::i;:::-;-1:-1:-1;;;;;5422:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5238:109::-;5287:4;5310:7;:5;:7::i;:::-;-1:-1:-1;;;;;5310:28:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102:57;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:64;7024:4:57;7105:25;929:10:64;7122:7:57;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:57;;11556:2:109;7140:85:57;;;11538:21:109;11595:2;11575:18;;;11568:30;11634:34;11614:18;;;11607:62;-1:-1:-1;;;11685:18:109;;;11678:35;11730:19;;7140:85:57;11354:401:109;7140:85:57;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;4066:189::-;4145:4;929:10:64;4199:28:57;929:10:64;4216:2:57;4220:6;4199:9;:28::i;7277:623:4:-;7493:8;7475:15;:26;7471:75;;;7510:36;;-1:-1:-1;;;7510:36:4;;;;;11934:25:109;;;7530:15:4;11975:18:109;;;11968:34;11907:18;;7510:36:4;11760:248:109;7471:75:4;7557:18;1624:95;7617:5;7624:7;7633:5;7640:16;7650:5;7640:9;:16::i;:::-;7588:79;;;;;;12300:25:109;;;;-1:-1:-1;;;;;12399:15:109;;;12379:18;;;12372:43;12451:15;;;;12431:18;;;12424:43;12483:18;;;12476:34;12526:19;;;12519:35;12570:19;;;12563:35;;;12272:19;;7588:79:4;;;;;;;;;;;;7578:90;;;;;;7557:111;;7678:12;7693:28;7710:10;7693:16;:28::i;:::-;7678:43;;7731:14;7748:40;7773:4;7779:1;7782;7785:2;7748:24;:40::i;:::-;7731:57;;7813:5;-1:-1:-1;;;;;7803:15:4;:6;-1:-1:-1;;;;;7803:15:4;;7799:52;;7827:24;;-1:-1:-1;;;7827:24:4;;-1:-1:-1;;;;;12839:15:109;;;7827:24:4;;;12821:34:109;12891:15;;12871:18;;;12864:43;12756:18;;7827:24:4;12609:304:109;7799:52:4;7862:31;7871:5;7878:7;7887:5;7862:8;:31::i;:::-;7461:439;;;7277:623;;;;;;;:::o;4313:149:57:-;-1:-1:-1;;;;;4428:18:57;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;2629:110:4:-;2678:4;2701:31;2717:14;2701:15;:31::i;10447:370:57:-;-1:-1:-1;;;;;10578:19:57;;10570:68;;;;-1:-1:-1;;;10570:68:57;;13120:2:109;10570:68:57;;;13102:21:109;13159:2;13139:18;;;13132:30;13198:34;13178:18;;;13171:62;-1:-1:-1;;;13249:18:109;;;13242:34;13293:19;;10570:68:57;12918:400:109;10570:68:57;-1:-1:-1;;;;;10656:21:57;;10648:68;;;;-1:-1:-1;;;10648:68:57;;13525:2:109;10648:68:57;;;13507:21:109;13564:2;13544:18;;;13537:30;13603:34;13583:18;;;13576:62;-1:-1:-1;;;13654:18:109;;;13647:32;13696:19;;10648:68:57;13323:398:109;10648:68:57;-1:-1:-1;;;;;10727:18:57;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1564:25:109;;;10778:32:57;;1537:18:109;10778:32:57;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:57;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:57;;13928:2:109;11347:68:57;;;13910:21:109;13967:2;13947:18;;;13940:30;14006:31;13986:18;;;13979:59;14055:18;;11347:68:57;13726:353:109;11347:68:57;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:57;;7930:68;;;;-1:-1:-1;;;7930:68:57;;14286:2:109;7930:68:57;;;14268:21:109;14325:2;14305:18;;;14298:30;14364:34;14344:18;;;14337:62;-1:-1:-1;;;14415:18:109;;;14408:35;14460:19;;7930:68:57;14084:401:109;7930:68:57;-1:-1:-1;;;;;8016:16:57;;8008:64;;;;-1:-1:-1;;;8008:64:57;;14692:2:109;8008:64:57;;;14674:21:109;14731:2;14711:18;;;14704:30;14770:34;14750:18;;;14743:62;-1:-1:-1;;;14821:18:109;;;14814:33;14864:19;;8008:64:57;14490:399:109;8008:64:57;-1:-1:-1;;;;;8154:15:57;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:57;;15096:2:109;8179:72:57;;;15078:21:109;15135:2;15115:18;;;15108:30;15174:34;15154:18;;;15147:62;-1:-1:-1;;;15225:18:109;;;15218:36;15271:19;;8179:72:57;14894:402:109;8179:72:57;-1:-1:-1;;;;;8285:15:57;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:57;8391:4;-1:-1:-1;;;;;8382:26:57;;8401:6;8382:26;;;;1564:25:109;;1552:2;1537:18;;1418:177;8382:26:57;;;;;;;;8419:37;12123:121;2842:160:68;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;17729:25:109;;;17770:18;;;17763:34;;;17813:18;;;17806:34;;;3228:13:68;17856:18:109;;;17849:34;3251:4:68;17899:19:109;;;17892:61;3148:7:68;;17701:19:109;;3184:73:68;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;3540:552:4;3623:10;;3649:3;:21;;;;;;;;:::i;:::-;;3645:441;;3694:54;3720:7;:5;:7::i;:::-;-1:-1:-1;;;;;3720:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3694:14;;3740:7;3694:25;:54::i;:::-;3686:62;;3645:441;;;3775:14;3768:3;:21;;;;;;;;:::i;:::-;;3765:321;;3834:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3834:37:4;-1:-1:-1;;;3834:37:4;;;3892:50;3927:7;:5;:7::i;:::-;3937:4;3892:26;:50::i;:::-;3885:57;;3969:13;3996:4;3985:24;;;;;;;;;;;;:::i;:::-;3969:40;-1:-1:-1;4031:44:4;:14;3969:40;4067:7;4031:25;:44::i;6548:139:51:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:51;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:51;-1:-1:-1;;;6628:51:51;;;6612:15;:68::i;:::-;6548:139;;:::o;5630:121::-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:51;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:51;-1:-1:-1;;;5701:42:51;;;5685:15;:59::i;:::-;5630:121;:::o;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;5603:97:4:-;5641:16;5676:7;:5;:7::i;:::-;-1:-1:-1;;;;;5676:15:4;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5676:17:4;;;;;;;;;;;;:::i;749:289:32:-;886:13;;852:3;;;909:104;928:6;924:1;:10;909:104;;;981:6;-1:-1:-1;;;;;959:28:32;967:6;974:1;967:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;959:28:32;;955:47;;1000:1;-1:-1:-1;989:13:32;;-1:-1:-1;989:13:32;955:47;936:3;;;;:::i;:::-;;;;909:104;;;-1:-1:-1;;;1029:2:32;749:289;-1:-1:-1;;;;749:289:32:o;2116:147:57:-;4910:13:56;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:56;;;;;;;:::i;:::-;2218:38:57::1;2241:5;2248:7;2218:22;:38::i;2306:147:68:-:0;4910:13:56;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:56;;;;;;;:::i;:::-;2408:38:68::1;2432:4;2438:7;2408:23;:38::i;8739:389:57:-:0;-1:-1:-1;;;;;8822:21:57;;8814:65;;;;-1:-1:-1;;;8814:65:57;;17312:2:109;8814:65:57;;;17294:21:109;17351:2;17331:18;;;17324:30;17390:33;17370:18;;;17363:61;17441:18;;8814:65:57;17110:355:109;8814:65:57;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:57;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:57;;1564:25:109;;;-1:-1:-1;;;;;9025:37:57;;;9042:1;;9025:37;;1552:2:109;1537:18;9025:37:57;;;;;;;6548:139:51;;:::o;6481:206:4:-;-1:-1:-1;;;;;6603:14:4;;6532:15;6603:14;;;:7;:14;;;;;929::65;;1061:1;1043:19;;;;929:14;6663:17:4;6549:138;6481:206;;;:::o;3890:176:68:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:67;;-1:-1:-1;;;8710:57:67;;;20426:27:109;20469:11;;;20462:27;;;20505:12;;;20498:28;;;8674:7:67;;20542:12:109;;8710:57:67;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;6925:270;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;-1:-1:-1;7179:9:67;-1:-1:-1;6925:270:67;;;;;;;:::o;12123:121:57:-;;;;:::o;5788:197:83:-;5874:12;5905:73;5924:6;5932:4;5905:73;;;;;;;;;;;;;;;;;:18;:73::i;:::-;5898:80;5788:197;-1:-1:-1;;;5788:197:83:o;181:376:51:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2269:159:57:-;4910:13:56;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:56;;;;;;;:::i;:::-;2381:5:57::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:57::1;:17;2414:7:::0;2404;:17:::1;:::i;2459:297:68:-:0;4910:13:56;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:56;;;;;;;:::i;:::-;2592:22:68;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:67:-;5315:7;;6239:66;6226:79;;6222:161;;;-1:-1:-1;6337:1:67;;-1:-1:-1;6341:30:67;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:67;;-1:-1:-1;6450:30:67;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;20792:25:109;;;20865:4;20853:17;;20833:18;;;20826:45;;;;20887:18;;;20880:34;;;20930:18;;;20923:34;;;6603:24:67;;20764:19:109;;6603:24:67;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:67;;-1:-1:-1;;6603:24:67;;;-1:-1:-1;;;;;;;6641:20:67;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:67;;-1:-1:-1;5189:1603:67;;;;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;788:34;;-1:-1:-1;;;788:34:67;;21170:2:109;788:34:67;;;21152:21:109;21209:2;21189:18;;;21182:30;21248:26;21228:18;;;21221:54;21292:18;;788:34:67;20968:348:109;730:465:67;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;903:41;;-1:-1:-1;;;903:41:67;;21523:2:109;903:41:67;;;21505:21:109;21562:2;21542:18;;;21535:30;21601:33;21581:18;;;21574:61;21652:18;;903:41:67;21321:355:109;839:356:67;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;1020:44;;-1:-1:-1;;;1020:44:67;;21883:2:109;1020:44:67;;;21865:21:109;21922:2;21902:18;;;21895:30;21961:34;21941:18;;;21934:62;-1:-1:-1;;;22012:18:109;;;22005:32;22054:19;;1020:44:67;21681:398:109;961:234:67;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;1140:44;;-1:-1:-1;;;1140:44:67;;22286:2:109;1140:44:67;;;22268:21:109;22325:2;22305:18;;;22298:30;22364:34;22344:18;;;22337:62;-1:-1:-1;;;22415:18:109;;;22408:32;22457:19;;1140:44:67;22084:398:109;6169:326:83;6313:12;6338;6352:23;6379:6;-1:-1:-1;;;;;6379:17:83;6397:4;6379:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:65;;;;6419:69;6446:6;6454:7;6463:10;6475:12;7851;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1476:19:63;;;8113:60:83;;;;-1:-1:-1;;;8113:60:83;;22981:2:109;8113:60:83;;;22963:21:109;23020:2;23000:18;;;22993:30;23059:31;23039:18;;;23032:59;23108:18;;8113:60:83;22779:353:109;8113:60:83;-1:-1:-1;8208:10:83;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:83;;;;;;;;:::i;14:250:109:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:109;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:109;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:109:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:109;;835:42;;825:70;;891:1;888;881:12;906:315;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:109:o;1600:456::-;1677:6;1685;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:109;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1600:456;;1992:7;;-1:-1:-1;;;2046:2:109;2031:18;;;;2018:32;;1600:456::o;2432:271::-;2506:6;2559:2;2547:9;2538:7;2534:23;2530:32;2527:52;;;2575:1;2572;2565:12;2527:52;2614:9;2601:23;2653:1;2646:5;2643:12;2633:40;;2669:1;2666;2659:12;2935:127;2996:10;2991:3;2987:20;2984:1;2977:31;3027:4;3024:1;3017:15;3051:4;3048:1;3041:15;3067:275;3138:2;3132:9;3203:2;3184:13;;-1:-1:-1;;3180:27:109;3168:40;;3238:18;3223:34;;3259:22;;;3220:62;3217:88;;;3285:18;;:::i;:::-;3321:2;3314:22;3067:275;;-1:-1:-1;3067:275:109:o;3347:183::-;3407:4;3440:18;3432:6;3429:30;3426:56;;;3462:18;;:::i;:::-;-1:-1:-1;3507:1:109;3503:14;3519:4;3499:25;;3347:183::o;3535:1378::-;3655:6;3663;3671;3679;3687;3740:3;3728:9;3719:7;3715:23;3711:33;3708:53;;;3757:1;3754;3747:12;3708:53;3796:9;3783:23;3815:31;3840:5;3815:31;:::i;:::-;3865:5;-1:-1:-1;3889:2:109;3928:18;;;3915:32;3956:33;3915:32;3956:33;:::i;:::-;4008:7;-1:-1:-1;4067:2:109;4052:18;;4039:32;4080:33;4039:32;4080:33;:::i;:::-;4132:7;-1:-1:-1;4186:2:109;4171:18;;4158:32;;-1:-1:-1;4241:3:109;4226:19;;4213:33;4269:18;4258:30;;4255:50;;;4301:1;4298;4291:12;4255:50;4324:22;;4377:4;4369:13;;4365:27;-1:-1:-1;4355:55:109;;4406:1;4403;4396:12;4355:55;4442:2;4429:16;4465:60;4481:43;4521:2;4481:43;:::i;:::-;4465:60;:::i;:::-;4559:15;;;4641:1;4637:10;;;;4629:19;;4625:28;;;4590:12;;;;4665:19;;;4662:39;;;4697:1;4694;4687:12;4662:39;4721:11;;;;4741:142;4757:6;4752:3;4749:15;4741:142;;;4823:17;;4811:30;;4774:12;;;;4861;;;;4741:142;;;4902:5;4892:15;;;;;;;3535:1378;;;;;;;;:::o;4918:247::-;4977:6;5030:2;5018:9;5009:7;5005:23;5001:32;4998:52;;;5046:1;5043;5036:12;4998:52;5085:9;5072:23;5104:31;5129:5;5104:31;:::i;5170:531::-;5213:5;5266:3;5259:4;5251:6;5247:17;5243:27;5233:55;;5284:1;5281;5274:12;5233:55;5320:6;5307:20;5346:18;5342:2;5339:26;5336:52;;;5368:18;;:::i;:::-;5412:55;5455:2;5436:13;;-1:-1:-1;;5432:27:109;5461:4;5428:38;5412:55;:::i;:::-;5492:2;5483:7;5476:19;5538:3;5531:4;5526:2;5518:6;5514:15;5510:26;5507:35;5504:55;;;5555:1;5552;5545:12;5504:55;5620:2;5613:4;5605:6;5601:17;5594:4;5585:7;5581:18;5568:55;5668:1;5643:16;;;5661:4;5639:27;5632:38;;;;5647:7;5170:531;-1:-1:-1;;;5170:531:109:o;5706:816::-;5821:6;5829;5837;5845;5853;5906:3;5894:9;5885:7;5881:23;5877:33;5874:53;;;5923:1;5920;5913:12;5874:53;5963:9;5950:23;5992:18;6033:2;6025:6;6022:14;6019:34;;;6049:1;6046;6039:12;6019:34;6072:50;6114:7;6105:6;6094:9;6090:22;6072:50;:::i;:::-;6062:60;;6175:2;6164:9;6160:18;6147:32;6131:48;;6204:2;6194:8;6191:16;6188:36;;;6220:1;6217;6210:12;6188:36;;6243:52;6287:7;6276:8;6265:9;6261:24;6243:52;:::i;:::-;6233:62;;;6345:2;6334:9;6330:18;6317:32;6358:31;6383:5;6358:31;:::i;:::-;5706:816;;;;-1:-1:-1;6408:5:109;;6460:2;6445:18;;6432:32;;-1:-1:-1;6511:3:109;6496:19;6483:33;;5706:816;-1:-1:-1;;5706:816:109:o;6527:829::-;6638:6;6646;6654;6662;6670;6678;6686;6739:3;6727:9;6718:7;6714:23;6710:33;6707:53;;;6756:1;6753;6746:12;6707:53;6795:9;6782:23;6814:31;6839:5;6814:31;:::i;:::-;6864:5;-1:-1:-1;6921:2:109;6906:18;;6893:32;6934:33;6893:32;6934:33;:::i;:::-;6986:7;-1:-1:-1;7040:2:109;7025:18;;7012:32;;-1:-1:-1;7091:2:109;7076:18;;7063:32;;-1:-1:-1;7147:3:109;7132:19;;7119:33;7196:4;7183:18;;7171:31;;7161:59;;7216:1;7213;7206:12;7161:59;6527:829;;;;-1:-1:-1;6527:829:109;;;;7239:7;7293:3;7278:19;;7265:33;;-1:-1:-1;7345:3:109;7330:19;;;7317:33;;6527:829;-1:-1:-1;;6527:829:109:o;7361:388::-;7429:6;7437;7490:2;7478:9;7469:7;7465:23;7461:32;7458:52;;;7506:1;7503;7496:12;7458:52;7545:9;7532:23;7564:31;7589:5;7564:31;:::i;:::-;7614:5;-1:-1:-1;7671:2:109;7656:18;;7643:32;7684:33;7643:32;7684:33;:::i;:::-;7736:7;7726:17;;;7361:388;;;;;:::o;7754:380::-;7833:1;7829:12;;;;7876;;;7897:61;;7951:4;7943:6;7939:17;7929:27;;7897:61;8004:2;7996:6;7993:14;7973:18;7970:38;7967:161;;8050:10;8045:3;8041:20;8038:1;8031:31;8085:4;8082:1;8075:15;8113:4;8110:1;8103:15;8139:127;8200:10;8195:3;8191:20;8188:1;8181:31;8231:4;8228:1;8221:15;8255:4;8252:1;8245:15;8271:125;8336:9;;;8357:10;;;8354:36;;;8370:18;;:::i;8609:184::-;8679:6;8732:2;8720:9;8711:7;8707:23;8703:32;8700:52;;;8748:1;8745;8738:12;8700:52;-1:-1:-1;8771:16:109;;8609:184;-1:-1:-1;8609:184:109:o;8798:127::-;8859:10;8854:3;8850:20;8847:1;8840:31;8890:4;8887:1;8880:15;8914:4;8911:1;8904:15;8930:128;8997:9;;;9018:11;;;9015:37;;;9032:18;;:::i;9063:251::-;9133:6;9186:2;9174:9;9165:7;9161:23;9157:32;9154:52;;;9202:1;9199;9192:12;9154:52;9234:9;9228:16;9253:31;9278:5;9253:31;:::i;9699:127::-;9760:10;9755:3;9751:20;9748:1;9741:31;9791:4;9788:1;9781:15;9815:4;9812:1;9805:15;9831:904;-1:-1:-1;;;;;10174:15:109;;;10156:34;;10247:15;;10209:2;10227:18;;;10220:43;;;;10294:2;10279:18;;10272:34;;;10105:3;10337:2;10322:18;;10315:31;;;10395:13;;10090:19;;;10417:22;;;10057:4;;10497:15;;;;10136:3;10455:19;;;10209:2;10057:4;10540:169;10554:6;10551:1;10548:13;10540:169;;;10615:13;;10603:26;;10684:15;;;;10649:12;;;;10576:1;10569:9;10540:169;;;-1:-1:-1;10726:3:109;;9831:904;-1:-1:-1;;;;;;;;;9831:904:109:o;15301:291::-;15478:2;15467:9;15460:21;15441:4;15498:45;15539:2;15528:9;15524:18;15516:6;15498:45;:::i;:::-;15490:53;;15579:6;15574:2;15563:9;15559:18;15552:34;15301:291;;;;;:::o;15597:956::-;15692:6;15723:2;15766;15754:9;15745:7;15741:23;15737:32;15734:52;;;15782:1;15779;15772:12;15734:52;15815:9;15809:16;15848:18;15840:6;15837:30;15834:50;;;15880:1;15877;15870:12;15834:50;15903:22;;15956:4;15948:13;;15944:27;-1:-1:-1;15934:55:109;;15985:1;15982;15975:12;15934:55;16014:2;16008:9;16037:60;16053:43;16093:2;16053:43;:::i;16037:60::-;16131:15;;;16213:1;16209:10;;;;16201:19;;16197:28;;;16162:12;;;;16237:19;;;16234:39;;;16269:1;16266;16259:12;16234:39;16293:11;;;;16313:210;16329:6;16324:3;16321:15;16313:210;;;16402:3;16396:10;16419:31;16444:5;16419:31;:::i;:::-;16463:18;;16346:12;;;;16501;;;;16313:210;;;16542:5;15597:956;-1:-1:-1;;;;;;;15597:956:109:o;16558:135::-;16597:3;16618:17;;;16615:43;;16638:18;;:::i;:::-;-1:-1:-1;16685:1:109;16674:13;;16558:135::o;16698:407::-;16900:2;16882:21;;;16939:2;16919:18;;;16912:30;16978:34;16973:2;16958:18;;16951:62;-1:-1:-1;;;17044:2:109;17029:18;;17022:41;17095:3;17080:19;;16698:407::o;18090:545::-;18192:2;18187:3;18184:11;18181:448;;;18228:1;18253:5;18249:2;18242:17;18298:4;18294:2;18284:19;18368:2;18356:10;18352:19;18349:1;18345:27;18339:4;18335:38;18404:4;18392:10;18389:20;18386:47;;;-1:-1:-1;18427:4:109;18386:47;18482:2;18477:3;18473:12;18470:1;18466:20;18460:4;18456:31;18446:41;;18537:82;18555:2;18548:5;18545:13;18537:82;;;18600:17;;;18581:1;18570:13;18537:82;;18811:1352;18937:3;18931:10;18964:18;18956:6;18953:30;18950:56;;;18986:18;;:::i;:::-;19015:97;19105:6;19065:38;19097:4;19091:11;19065:38;:::i;:::-;19059:4;19015:97;:::i;:::-;19167:4;;19231:2;19220:14;;19248:1;19243:663;;;;19950:1;19967:6;19964:89;;;-1:-1:-1;20019:19:109;;;20013:26;19964:89;-1:-1:-1;;18768:1:109;18764:11;;;18760:24;18756:29;18746:40;18792:1;18788:11;;;18743:57;20066:81;;19213:944;;19243:663;18037:1;18030:14;;;18074:4;18061:18;;-1:-1:-1;;19279:20:109;;;19397:236;19411:7;19408:1;19405:14;19397:236;;;19500:19;;;19494:26;19479:42;;19592:27;;;;19560:1;19548:14;;;;19427:19;;19397:236;;;19401:3;19661:6;19652:7;19649:19;19646:201;;;19722:19;;;19716:26;-1:-1:-1;;19805:1:109;19801:14;;;19817:3;19797:24;19793:37;19789:42;19774:58;19759:74;;19646:201;-1:-1:-1;;;;;19893:1:109;19877:14;;;19873:22;19860:36;;-1:-1:-1;18811:1352:109:o;22487:287::-;22616:3;22654:6;22648:13;22670:66;22729:6;22724:3;22717:4;22709:6;22705:17;22670:66;:::i;:::-;22752:16;;;;;22487:287;-1:-1:-1;;22487:287:109:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "circulatingSupply()": "9358928b",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getExchangeRate()": "e6aa216c",
    "getExchangeRate(uint8)": "4d02a3f7",
    "getOZ()": "59c64e12",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,uint256,uint256)": "74823132",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "recicledSupply()": "8b5f1a6b",
    "redeem(address,address,address,uint256,uint256[])": "6afa0287",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"OZError08\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"OZError09\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"OZError18\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OZError19\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum QuoteAsset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZ\",\"outputs\":[{\"internalType\":\"contract ozIDiamond\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ozDiamond_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"communityAmount_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recicledSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ozlAmountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut_\",\"type\":\"uint256[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"params\":{\"owner\":\"The address whose nonce is to be retrieved.\"},\"returns\":{\"_0\":\"The current nonce as a uint256 value.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Uses the EIP-2612 standard.\",\"params\":{\"deadline\":\"The expiration time of the signature, specified as a Unix timestamp.\",\"owner\":\"The address of the token owner.\",\"r\":\"The first 32 bytes of the signature.\",\"s_\":\"The second 32 bytes of the signature.\",\"spender\":\"The address of the spender.\",\"v\":\"The recovery byte of the signature.\",\"value\":\"The amount of tokens to be approved.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the EIP-712 DOMAIN_SEPARATOR.\"},\"nonces(address)\":{\"notice\":\"Returns the current nonce for the given owner address.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0xea2a5a2fa7ee1e7555e3b4bf1e603cfb5158a66ef54a170cafa9bbf4b4db81fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://45fc055d50ecf1c4692c1d6e2b02bad0a61d499377ea84c3fa19d210fb1699e4\",\"dweb:/ipfs/Qmdf9J3vM6YV2YztHL4U9pjuXEFpkLrLT3XC7QzyBRj2YS\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b\",\"urls\":[\"bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe\",\"dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0x990de972af616098af2801910c52d42276f8bdbda4b3dddcc4f7dc32868452ce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d90c82bf7d5967389c22c74e5e8be799e1a7ef50edd2e72ff2d457e4b32299cf\",\"dweb:/ipfs/QmaReQ52qXGc6edR5c46jGT8pXmRmFpbdqvTY3hBoUfpEr\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851\",\"dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0xfcaf738c0326f0484b3582c9b57e07395dbeace6d5a1842edda5aed765798a91\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e8f11f5626e58458a4d4d352cde9284e32394fb0f1ca970cc4277021f059a11\",\"dweb:/ipfs/QmQYEi4gTr4VuPNbdVyndFpUhpCEf2gJQVp1MRALAjUa4W\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0xf9973213cc4ef6349a6d03ffacffe103cbbdd3e836830fcc75e2af8d81565def\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a26b3a6814fd57ad203a2888888088d2aff2e0e39bcb8458555886ffefdcaf23\",\"dweb:/ipfs/QmQ9bcuwWc15RpKWiQ6uLy6scssPjtMJuBiFP4CKFYWsrD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError08"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError09"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError18"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError19"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "circulatingSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum QuoteAsset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZ",
          "outputs": [
            {
              "internalType": "contract ozIDiamond",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ozDiamond_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "communityAmount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s_",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "recicledSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ozlAmountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "_0": "A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "params": {
              "owner": "The address whose nonce is to be retrieved."
            },
            "returns": {
              "_0": "The current nonce as a uint256 value."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Uses the EIP-2612 standard.",
            "params": {
              "deadline": "The expiration time of the signature, specified as a Unix timestamp.",
              "owner": "The address of the token owner.",
              "r": "The first 32 bytes of the signature.",
              "s_": "The second 32 bytes of the signature.",
              "spender": "The address of the spender.",
              "v": "The recovery byte of the signature.",
              "value": "The amount of tokens to be approved."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "Returns the EIP-712 DOMAIN_SEPARATOR."
          },
          "nonces(address)": {
            "notice": "Returns the current nonce for the given owner address."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0xea2a5a2fa7ee1e7555e3b4bf1e603cfb5158a66ef54a170cafa9bbf4b4db81fb",
        "urls": [
          "bzz-raw://45fc055d50ecf1c4692c1d6e2b02bad0a61d499377ea84c3fa19d210fb1699e4",
          "dweb:/ipfs/Qmdf9J3vM6YV2YztHL4U9pjuXEFpkLrLT3XC7QzyBRj2YS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b",
        "urls": [
          "bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe",
          "dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv"
        ],
        "license": null
      },
      "contracts/OZL.sol": {
        "keccak256": "0x990de972af616098af2801910c52d42276f8bdbda4b3dddcc4f7dc32868452ce",
        "urls": [
          "bzz-raw://d90c82bf7d5967389c22c74e5e8be799e1a7ef50edd2e72ff2d457e4b32299cf",
          "dweb:/ipfs/QmaReQ52qXGc6edR5c46jGT8pXmRmFpbdqvTY3hBoUfpEr"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456",
        "urls": [
          "bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851",
          "dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0xfcaf738c0326f0484b3582c9b57e07395dbeace6d5a1842edda5aed765798a91",
        "urls": [
          "bzz-raw://2e8f11f5626e58458a4d4d352cde9284e32394fb0f1ca970cc4277021f059a11",
          "dweb:/ipfs/QmQYEi4gTr4VuPNbdVyndFpUhpCEf2gJQVp1MRALAjUa4W"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0xf9973213cc4ef6349a6d03ffacffe103cbbdd3e836830fcc75e2af8d81565def",
        "urls": [
          "bzz-raw://a26b3a6814fd57ad203a2888888088d2aff2e0e39bcb8458555886ffefdcaf23",
          "dweb:/ipfs/QmQ9bcuwWc15RpKWiQ6uLy6scssPjtMJuBiFP4CKFYWsrD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 1065,
    "exportedSymbols": {
      "Address": [
        41952
      ],
      "CountersUpgradeable": [
        38853
      ],
      "ECDSAUpgradeable": [
        39467
      ],
      "EIP712Upgradeable": [
        39617
      ],
      "ERC20Upgradeable": [
        37476
      ],
      "FixedPointMathLib": [
        5424
      ],
      "Helpers": [
        5924
      ],
      "IERC20": [
        41210
      ],
      "IERC20Permit": [
        4286
      ],
      "OZError01": [
        284
      ],
      "OZError02": [
        286
      ],
      "OZError03": [
        308
      ],
      "OZError04": [
        314
      ],
      "OZError05": [
        318
      ],
      "OZError06": [
        326
      ],
      "OZError07": [
        334
      ],
      "OZError08": [
        340
      ],
      "OZError09": [
        346
      ],
      "OZError10": [
        290
      ],
      "OZError11": [
        294
      ],
      "OZError12": [
        298
      ],
      "OZError13": [
        302
      ],
      "OZError14": [
        306
      ],
      "OZError15": [
        348
      ],
      "OZError16": [
        350
      ],
      "OZError17": [
        352
      ],
      "OZError18": [
        356
      ],
      "OZError19": [
        360
      ],
      "OZError20": [
        362
      ],
      "OZError21": [
        366
      ],
      "OZL": [
        1064
      ],
      "OZLrewards": [
        160
      ],
      "QuoteAsset": [
        4292
      ],
      "SafeERC20": [
        41622
      ],
      "StorageSlot": [
        42084
      ],
      "console": [
        28241
      ],
      "ozIDiamond": [
        5058
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:8155:4",
    "nodes": [
      {
        "id": 453,
        "nodeType": "PragmaDirective",
        "src": "45:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 455,
        "nodeType": "ImportDirective",
        "src": "71:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 37477,
        "symbolAliases": [
          {
            "foreign": {
              "id": 454,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37476,
              "src": "79:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 457,
        "nodeType": "ImportDirective",
        "src": "180:59:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "./interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 4287,
        "symbolAliases": [
          {
            "foreign": {
              "id": 456,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4286,
              "src": "188:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 459,
        "nodeType": "ImportDirective",
        "src": "240:68:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 5425,
        "symbolAliases": [
          {
            "foreign": {
              "id": 458,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5424,
              "src": "248:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 461,
        "nodeType": "ImportDirective",
        "src": "309:74:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "file": "@openzeppelin/contracts/utils/StorageSlot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 42085,
        "symbolAliases": [
          {
            "foreign": {
              "id": 460,
              "name": "StorageSlot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42084,
              "src": "317:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 463,
        "nodeType": "ImportDirective",
        "src": "384:55:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIDiamond.sol",
        "file": "./interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 5059,
        "symbolAliases": [
          {
            "foreign": {
              "id": 462,
              "name": "ozIDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5058,
              "src": "392:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 465,
        "nodeType": "ImportDirective",
        "src": "440:49:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "./interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 4469,
        "symbolAliases": [
          {
            "foreign": {
              "id": 464,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4292,
              "src": "448:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 467,
        "nodeType": "ImportDirective",
        "src": "490:66:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 41953,
        "symbolAliases": [
          {
            "foreign": {
              "id": 466,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41952,
              "src": "498:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 469,
        "nodeType": "ImportDirective",
        "src": "557:82:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 41623,
        "symbolAliases": [
          {
            "foreign": {
              "id": 468,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41622,
              "src": "565:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 471,
        "nodeType": "ImportDirective",
        "src": "640:70:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 41211,
        "symbolAliases": [
          {
            "foreign": {
              "id": 470,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41210,
              "src": "648:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 473,
        "nodeType": "ImportDirective",
        "src": "711:44:4",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "./AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 161,
        "symbolAliases": [
          {
            "foreign": {
              "id": 472,
              "name": "OZLrewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 160,
              "src": "719:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 475,
        "nodeType": "ImportDirective",
        "src": "756:123:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 39618,
        "symbolAliases": [
          {
            "foreign": {
              "id": 474,
              "name": "EIP712Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39617,
              "src": "764:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 477,
        "nodeType": "ImportDirective",
        "src": "880:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 38854,
        "symbolAliases": [
          {
            "foreign": {
              "id": 476,
              "name": "CountersUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38853,
              "src": "888:19:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 479,
        "nodeType": "ImportDirective",
        "src": "989:115:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 39468,
        "symbolAliases": [
          {
            "foreign": {
              "id": 478,
              "name": "ECDSAUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39467,
              "src": "997:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 481,
        "nodeType": "ImportDirective",
        "src": "1105:48:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/Helpers.sol",
        "file": "./libraries/Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 5925,
        "symbolAliases": [
          {
            "foreign": {
              "id": 480,
              "name": "Helpers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5924,
              "src": "1113:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 482,
        "nodeType": "ImportDirective",
        "src": "1154:22:4",
        "nodes": [],
        "absolutePath": "contracts/Errors.sol",
        "file": "./Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 367,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 483,
        "nodeType": "ImportDirective",
        "src": "1178:31:4",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1065,
        "sourceUnit": 28242,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1064,
        "nodeType": "ContractDefinition",
        "src": "1242:6958:4",
        "nodes": [
          {
            "id": 491,
            "nodeType": "UsingForDirective",
            "src": "1301:58:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 488,
              "name": "CountersUpgradeable",
              "nameLocations": [
                "1307:19:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38853,
              "src": "1307:19:4"
            },
            "typeName": {
              "id": 490,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 489,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "1331:19:4",
                  "1351:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 38785,
                "src": "1331:27:4"
              },
              "referencedDeclaration": 38785,
              "src": "1331:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$38785_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 494,
            "nodeType": "UsingForDirective",
            "src": "1364:33:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 492,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1370:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5424,
              "src": "1370:17:4"
            },
            "typeName": {
              "id": 493,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1392:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 497,
            "nodeType": "UsingForDirective",
            "src": "1402:26:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 495,
              "name": "Helpers",
              "nameLocations": [
                "1408:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5924,
              "src": "1408:7:4"
            },
            "typeName": {
              "id": 496,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1420:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 501,
            "nodeType": "UsingForDirective",
            "src": "1433:28:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 498,
              "name": "Helpers",
              "nameLocations": [
                "1439:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5924,
              "src": "1439:7:4"
            },
            "typeName": {
              "baseType": {
                "id": 499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1451:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 500,
              "nodeType": "ArrayTypeName",
              "src": "1451:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            }
          },
          {
            "id": 514,
            "nodeType": "VariableDeclaration",
            "src": "1467:98:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_OZ_DIAMOND_SLOT",
            "nameLocation": "1492:16:4",
            "scope": 1064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 502,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1467:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 512,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7a4469616d6f6e642e73746f726167652e736c6f74",
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1534:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            },
                            "value": "ozDiamond.storage.slot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            }
                          ],
                          "id": 507,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1524:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1524:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1519:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 505,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1519:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1563:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "1519:45:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 504,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1511:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 503,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1511:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 513,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1511:54:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 519,
            "nodeType": "VariableDeclaration",
            "src": "1572:147:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_PERMIT_TYPEHASH",
            "nameLocation": "1597:16:4",
            "scope": 1064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 515,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1572:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 517,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1634:84:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 516,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1624:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 518,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1624:95:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 524,
            "nodeType": "VariableDeclaration",
            "src": "1726:63:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "1782:7:4",
            "scope": 1064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38785_storage_$",
              "typeString": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "typeName": {
              "id": 523,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 520,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1734:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1726:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38785_storage_$",
                "typeString": "mapping(address => struct CountersUpgradeable.Counter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 522,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 521,
                  "name": "CountersUpgradeable.Counter",
                  "nameLocations": [
                    "1745:19:4",
                    "1765:7:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38785,
                  "src": "1745:27:4"
                },
                "referencedDeclaration": 38785,
                "src": "1745:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$38785_storage_ptr",
                  "typeString": "struct CountersUpgradeable.Counter"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 531,
            "nodeType": "FunctionDefinition",
            "src": "1797:53:4",
            "nodes": [],
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "1811:39:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 527,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36864,
                      "src": "1821:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:22:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1808:2:4"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:4"
            },
            "scope": 1064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 583,
            "nodeType": "FunctionDefinition",
            "src": "1857:764:4",
            "nodes": [],
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "2051:570:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "2074:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 548,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "2081:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 546,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36912,
                      "src": "2061:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 552,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "2113:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2120:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        }
                      ],
                      "id": 551,
                      "name": "__EIP712_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39499,
                      "src": "2099:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:25:4"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 559,
                            "name": "_OZ_DIAMOND_SLOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "2161:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 556,
                            "name": "StorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42084,
                            "src": "2134:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42084_$",
                              "typeString": "type(library StorageSlot)"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2146:14:4",
                          "memberName": "getAddressSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42006,
                          "src": "2134:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41980_storage_ptr_$",
                            "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$41980_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot storage pointer"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2179:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41979,
                      "src": "2134:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 562,
                      "name": "ozDiamond_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "2187:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2134:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:63:4"
                },
                {
                  "documentation": " Add here later the vesting strategy using\n OP's VestingWallet.sol / https://medium.com/cardstack/building-a-token-vesting-contract-b368a954f99\n Use linear distribution, not all unlocked at once.\n When they vest, add it to circulating supply.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 568,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2529:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2521:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2521:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 570,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "2536:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 565,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37288,
                      "src": "2515:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2515:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 576,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2578:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2570:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 574,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2570:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2570:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 578,
                        "name": "ozDiamond_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "2585:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 579,
                        "name": "communityAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "2597:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 573,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37232,
                      "src": "2560:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2560:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "2560:54:4"
                }
              ]
            },
            "functionSelector": "74823132",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 544,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 543,
                  "name": "initializer",
                  "nameLocations": [
                    "2039:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36785,
                  "src": "2039:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2039:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "1866:10:4",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1900:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "1886:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1930:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "1916:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "ozDiamond_",
                  "nameLocation": "1955:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "1947:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1980:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "1975:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "communityAmount_",
                  "nameLocation": "2007:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2002:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1876:153:4"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:0:4"
            },
            "scope": 1064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 594,
            "nodeType": "FunctionDefinition",
            "src": "2629:110:4",
            "nodes": [],
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "2684:55:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 589,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "2717:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4292_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2728:3:4",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4289,
                        "src": "2717:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "id": 588,
                      "name": "getExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "2701:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$4292_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view returns (uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2701:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 587,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "2694:38:4"
                }
              ]
            },
            "functionSelector": "e6aa216c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2638:15:4",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2653:2:4"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "2678:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2677:6:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 686,
            "nodeType": "FunctionDefinition",
            "src": "2746:787:4",
            "nodes": [],
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "2816:717:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 603,
                      "mutability": "mutable",
                      "name": "ONE",
                      "nameLocation": "2831:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "2826:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 602,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2826:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2837:7:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2826:18:4"
                },
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "totalFeesRETH",
                      "nameLocation": "2860:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "2855:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2855:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 617,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 614,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3009:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3001:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3001:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3001:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307861653738373336436436313566333734443330383531323341323130343438453734466336333933",
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2902:42:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xae78736Cd615f374D3085123A210448E74Fc6393"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 608,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4286,
                          "src": "2876:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$4286_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2876:114:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$4286",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2991:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4172,
                      "src": "2876:124:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:139:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2855:160:4"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "totalFeesQuote",
                      "nameLocation": "3031:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "3026:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3026:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 620,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "3048:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 621,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "3058:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4292_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3069:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4291,
                        "src": "3058:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "3048:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 626,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "3127:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                            "typeString": "enum QuoteAsset"
                          }
                        },
                        {
                          "id": 627,
                          "name": "totalFeesRETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "3135:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                            "typeString": "enum QuoteAsset"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 625,
                        "name": "_convertToQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3111:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$4292_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (enum QuoteAsset,uint256) view returns (uint256)"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3111:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3048:101:4",
                    "trueExpression": {
                      "id": 624,
                      "name": "totalFeesRETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "3085:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3026:123:4"
                },
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "c_Supply",
                      "nameLocation": "3165:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "3160:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 631,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3160:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 635,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 633,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "3176:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3160:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 636,
                      "name": "c_Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "3210:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3222:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3210:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 641,
                  "nodeType": "IfStatement",
                  "src": "3206:29:4",
                  "trueBody": {
                    "expression": {
                      "id": 639,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "3232:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 601,
                    "id": 640,
                    "nodeType": "Return",
                    "src": "3225:10:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "61737365743a20",
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3258:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b59d02222350ac0769f2da1a738fc3e98dd9c08df71a1c77e3aa76f5ab219d4",
                          "typeString": "literal_string \"asset: \""
                        },
                        "value": "asset: "
                      },
                      {
                        "arguments": [
                          {
                            "id": 648,
                            "name": "asset_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "3274:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3269:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 646,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3269:4:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3269:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0b59d02222350ac0769f2da1a738fc3e98dd9c08df71a1c77e3aa76f5ab219d4",
                          "typeString": "literal_string \"asset: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 642,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28241,
                        "src": "3246:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28241_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3254:3:4",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20885,
                      "src": "3246:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:36:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f74616c46656573524554483a20",
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3304:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b44acf6d47422f4ff5352199d72f534d13911e8535386f2dcd98fc14722cc6a",
                          "typeString": "literal_string \"totalFeesRETH: \""
                        },
                        "value": "totalFeesRETH: "
                      },
                      {
                        "id": 656,
                        "name": "totalFeesRETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "3323:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5b44acf6d47422f4ff5352199d72f534d13911e8535386f2dcd98fc14722cc6a",
                          "typeString": "literal_string \"totalFeesRETH: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 652,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28241,
                        "src": "3292:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28241_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3300:3:4",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20885,
                      "src": "3292:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3292:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "3292:45:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f74616c4665657351756f74653a20",
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3359:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e67a5a759f287b9fd5091088193ef1dc78c554fcd81e16c1306ba64ebe4157d1",
                          "typeString": "literal_string \"totalFeesQuote: \""
                        },
                        "value": "totalFeesQuote: "
                      },
                      {
                        "id": 663,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "3379:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e67a5a759f287b9fd5091088193ef1dc78c554fcd81e16c1306ba64ebe4157d1",
                          "typeString": "literal_string \"totalFeesQuote: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 659,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28241,
                        "src": "3347:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28241_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3355:3:4",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20885,
                      "src": "3347:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "635f537570706c793a20",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3416:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fda74d8333c93c7b13dea7a1b51fbe4c53c1eb13d9fde4b9918e6b9dadc755da",
                          "typeString": "literal_string \"c_Supply: \""
                        },
                        "value": "c_Supply: "
                      },
                      {
                        "id": 670,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "3430:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fda74d8333c93c7b13dea7a1b51fbe4c53c1eb13d9fde4b9918e6b9dadc755da",
                          "typeString": "literal_string \"c_Supply: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 666,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28241,
                        "src": "3404:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28241_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3412:3:4",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20885,
                      "src": "3404:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:35:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "2d2d2d2d",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3461:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2534ceca59702dc035857d1f32987e97b906c6b899ea8aad189e5482fcf06385",
                          "typeString": "literal_string \"----\""
                        },
                        "value": "----"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2534ceca59702dc035857d1f32987e97b906c6b899ea8aad189e5482fcf06385",
                          "typeString": "literal_string \"----\""
                        }
                      ],
                      "expression": {
                        "id": 673,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28241,
                        "src": "3449:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28241_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3457:3:4",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20772,
                      "src": "3449:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:19:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "3501:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 682,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "3517:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 679,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "3486:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3490:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5355,
                      "src": "3486:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3486:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 601,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "3479:47:4"
                }
              ]
            },
            "functionSelector": "4d02a3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2755:15:4",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2782:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "2771:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 596,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 595,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2771:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4292,
                      "src": "2771:10:4"
                    },
                    "referencedDeclaration": 4292,
                    "src": "2771:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:19:4"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "2810:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2809:6:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 757,
            "nodeType": "FunctionDefinition",
            "src": "3540:552:4",
            "nodes": [],
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "3635:457:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                      "typeString": "enum QuoteAsset"
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 696,
                      "name": "qt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "3649:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 697,
                        "name": "QuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4292,
                        "src": "3656:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4292_$",
                          "typeString": "type(enum QuoteAsset)"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3667:3:4",
                      "memberName": "USD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4289,
                      "src": "3656:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "src": "3649:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 712,
                        "name": "qt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "3768:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 713,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "3775:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4292_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3786:3:4",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4290,
                        "src": "3775:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "3768:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 754,
                    "nodeType": "IfStatement",
                    "src": "3765:321:4",
                    "trueBody": {
                      "id": 753,
                      "nodeType": "Block",
                      "src": "3800:286:4",
                      "statements": [
                        {
                          "assignments": [
                            717
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 717,
                              "mutability": "mutable",
                              "name": "data",
                              "nameLocation": "3827:4:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 753,
                              "src": "3814:17:4",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes"
                              },
                              "typeName": {
                                "id": 716,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3814:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 722,
                          "initialValue": {
                            "arguments": [
                              {
                                "hexValue": "724554485f4554482829",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3858:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                                  "typeString": "literal_string \"rETH_ETH()\""
                                },
                                "value": "rETH_ETH()"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                                  "typeString": "literal_string \"rETH_ETH()\""
                                }
                              ],
                              "expression": {
                                "id": 718,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3834:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3838:19:4",
                              "memberName": "encodeWithSignature",
                              "nodeType": "MemberAccess",
                              "src": "3834:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory) pure returns (bytes memory)"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3834:37:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3814:57:4"
                        },
                        {
                          "expression": {
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 723,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "3885:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 728,
                                        "name": "getOZ",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 915,
                                        "src": "3927:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$5058_$",
                                          "typeString": "function () view returns (contract ozIDiamond)"
                                        }
                                      },
                                      "id": 729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3927:7:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                                        "typeString": "contract ozIDiamond"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                                        "typeString": "contract ozIDiamond"
                                      }
                                    ],
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3919:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 726,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3919:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3919:16:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 731,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 717,
                                  "src": "3937:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 724,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41952,
                                  "src": "3892:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Address_$41952_$",
                                    "typeString": "type(library Address)"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3900:18:4",
                                "memberName": "functionStaticCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41793,
                                "src": "3892:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bytes memory) view returns (bytes memory)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3892:50:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "src": "3885:57:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 734,
                          "nodeType": "ExpressionStatement",
                          "src": "3885:57:4"
                        },
                        {
                          "assignments": [
                            736
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 736,
                              "mutability": "mutable",
                              "name": "reth_eth",
                              "nameLocation": "3974:8:4",
                              "nodeType": "VariableDeclaration",
                              "scope": 753,
                              "src": "3969:13:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 735,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3969:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 744,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 739,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 717,
                                "src": "3996:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4003:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 740,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4003:4:4",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 742,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4002:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "expression": {
                                "id": 737,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3985:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3989:6:4",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "3985:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3985:24:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3969:40:4"
                        },
                        {
                          "expression": {
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 745,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4023:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 748,
                                  "name": "reth_eth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 736,
                                  "src": "4057:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4067:7:4",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 746,
                                  "name": "totalFeesRETH_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 691,
                                  "src": "4031:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4046:10:4",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5355,
                                "src": "4031:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4031:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4023:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 752,
                          "nodeType": "ExpressionStatement",
                          "src": "4023:52:4"
                        }
                      ]
                    }
                  },
                  "id": 755,
                  "nodeType": "IfStatement",
                  "src": "3645:441:4",
                  "trueBody": {
                    "id": 711,
                    "nodeType": "Block",
                    "src": "3672:87:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 700,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "3686:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 703,
                                      "name": "getOZ",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "3720:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$5058_$",
                                        "typeString": "function () view returns (contract ozIDiamond)"
                                      }
                                    },
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3720:7:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                                      "typeString": "contract ozIDiamond"
                                    }
                                  },
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3728:8:4",
                                  "memberName": "rETH_USD",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4899,
                                  "src": "3720:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3720:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3740:7:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "id": 701,
                                "name": "totalFeesRETH_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "3694:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3709:10:4",
                              "memberName": "mulDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5355,
                              "src": "3694:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3694:54:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3686:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "3686:62:4"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToQuote",
            "nameLocation": "3549:15:4",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "qt_",
                  "nameLocation": "3576:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3565:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 688,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 687,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "3565:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4292,
                      "src": "3565:10:4"
                    },
                    "referencedDeclaration": 4292,
                    "src": "3565:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "totalFeesRETH_",
                  "nameLocation": "3586:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3581:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3564:37:4"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "3628:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3623:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:12:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 878,
            "nodeType": "FunctionDefinition",
            "src": "4099:1132:4",
            "nodes": [],
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "4300:931:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 775,
                      "mutability": "mutable",
                      "name": "OZ",
                      "nameLocation": "4321:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "4310:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                        "typeString": "contract ozIDiamond"
                      },
                      "typeName": {
                        "id": 774,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 773,
                          "name": "ozIDiamond",
                          "nameLocations": [
                            "4310:10:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5058,
                          "src": "4310:10:4"
                        },
                        "referencedDeclaration": 5058,
                        "src": "4310:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 778,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 776,
                      "name": "getOZ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "4326:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$5058_$",
                        "typeString": "function () view returns (contract ozIDiamond)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4310:23:4"
                },
                {
                  "assignments": [
                    783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "LSDs",
                      "nameLocation": "4361:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "4344:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 781,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4344:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 782,
                        "nodeType": "ArrayTypeName",
                        "src": "4344:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 786,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 784,
                      "name": "_LSDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "4368:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4368:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4344:31:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 789,
                            "name": "tokenOut_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "4415:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 787,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "4403:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4406:8:4",
                          "memberName": "ozTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4992,
                          "src": "4403:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4403:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4437:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4429:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4429:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4429:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4403:36:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 798,
                            "name": "tokenOut_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "4468:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 796,
                            "name": "LSDs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "4455:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4460:7:4",
                          "memberName": "indexOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5529,
                          "src": "4455:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_int256_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (address[] memory,address) pure returns (int256)"
                          }
                        },
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4455:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4481:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4455:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4403:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 807,
                  "nodeType": "IfStatement",
                  "src": "4386:134:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 804,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "4510:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 803,
                        "name": "OZError18",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4500:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4500:20:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 806,
                    "nodeType": "RevertStatement",
                    "src": "4493:27:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 808,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4535:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4539:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4535:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 810,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "4549:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4535:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 820,
                  "nodeType": "IfStatement",
                  "src": "4531:100:4",
                  "trueBody": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "4557:74:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 813,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "4587:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 814,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4595:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4599:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4595:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 816,
                              "name": "ozlAmountIn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "4607:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 812,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37448,
                            "src": "4571:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4571:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 818,
                        "nodeType": "ExpressionStatement",
                        "src": "4571:49:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 822,
                      "mutability": "mutable",
                      "name": "rETHtoRedeem",
                      "nameLocation": "4646:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "4641:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 821,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4641:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 831,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 826,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4292,
                              "src": "4701:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$4292_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4712:4:4",
                            "memberName": "rETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4291,
                            "src": "4701:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$4292",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 825,
                          "name": "getExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "4685:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$4292_$returns$_t_uint256_$",
                            "typeString": "function (enum QuoteAsset) view returns (uint256)"
                          }
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4685:32:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 823,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "4661:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4674:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5355,
                      "src": "4661:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4661:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4641:86:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 835,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "4752:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 838,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4768:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1064",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4760:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4760:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4760:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 840,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "4775:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 832,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "4738:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4741:10:4",
                      "memberName": "recicleOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5051,
                      "src": "4738:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:50:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 843,
                      "name": "tokenOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "4833:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 844,
                        "name": "LSDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "4846:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 846,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4851:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4846:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4833:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "nodeType": "IfStatement",
                  "src": "4829:184:4",
                  "trueBody": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "4855:158:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 848,
                            "name": "rETHtoRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "4873:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 849,
                              "name": "minAmountsOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 768,
                              "src": "4888:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4903:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4888:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4873:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 857,
                        "nodeType": "IfStatement",
                        "src": "4869:68:4",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 854,
                                "name": "rETHtoRedeem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "4924:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 853,
                              "name": "OZError19",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "4914:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4914:23:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 856,
                          "nodeType": "RevertStatement",
                          "src": "4907:30:4"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 860,
                                "name": "LSDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "4969:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 862,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4974:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4969:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 863,
                              "name": "receiver_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "4978:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 864,
                              "name": "rETHtoRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "4989:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 858,
                              "name": "OZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "4958:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4961:7:4",
                            "memberName": "sendLSD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5042,
                            "src": "4958:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) external returns (uint256)"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4958:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 772,
                        "id": 866,
                        "nodeType": "Return",
                        "src": "4951:51:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 871,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "5054:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 872,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "5077:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 873,
                        "name": "rETHtoRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "5100:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 874,
                        "name": "minAmountsOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "5126:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 869,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "5030:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5033:6:4",
                      "memberName": "useOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5006,
                      "src": "5030:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256[] memory) external returns (uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5030:120:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 772,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "5023:127:4"
                }
              ]
            },
            "functionSelector": "6afa0287",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "4108:6:4",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "4132:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4124:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4124:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "4156:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4148:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "4183:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4175:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4175:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "4210:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4202:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4202:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "minAmountsOut_",
                  "nameLocation": "4246:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4232:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 766,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4232:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 767,
                    "nodeType": "ArrayTypeName",
                    "src": "4232:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4114:152:4"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "4289:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4284:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4283:16:4"
            },
            "scope": 1064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 889,
            "nodeType": "FunctionDefinition",
            "src": "5238:109:4",
            "nodes": [],
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "5293:54:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 883,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "5310:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$5058_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5310:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5318:20:4",
                      "memberName": "getCirculatingSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4985,
                      "src": "5310:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5310:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 882,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "5303:37:4"
                }
              ]
            },
            "functionSelector": "9358928b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "circulatingSupply",
            "nameLocation": "5247:17:4",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5264:2:4"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "5287:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5286:6:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 900,
            "nodeType": "FunctionDefinition",
            "src": "5353:103:4",
            "nodes": [],
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "5405:51:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 894,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "5422:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$5058_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5422:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5430:17:4",
                      "memberName": "getRecicledSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5021,
                      "src": "5422:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5422:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 898,
                  "nodeType": "Return",
                  "src": "5415:34:4"
                }
              ]
            },
            "functionSelector": "8b5f1a6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recicledSupply",
            "nameLocation": "5362:14:4",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5376:2:4"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "5399:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5399:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5398:6:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 915,
            "nodeType": "FunctionDefinition",
            "src": "5462:135:4",
            "nodes": [],
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "5511:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 909,
                              "name": "_OZ_DIAMOND_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "5566:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 907,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42084,
                              "src": "5539:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42084_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5551:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42006,
                            "src": "5539:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41980_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5539:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$41980_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5584:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41979,
                        "src": "5539:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 906,
                      "name": "ozIDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5058,
                      "src": "5528:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$5058_$",
                        "typeString": "type(contract ozIDiamond)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5528:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "functionReturnParameters": 905,
                  "id": 913,
                  "nodeType": "Return",
                  "src": "5521:69:4"
                }
              ]
            },
            "functionSelector": "59c64e12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZ",
            "nameLocation": "5471:5:4",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5476:2:4"
            },
            "returnParameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "5499:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                    "typeString": "contract ozIDiamond"
                  },
                  "typeName": {
                    "id": 903,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 902,
                      "name": "ozIDiamond",
                      "nameLocations": [
                        "5499:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5058,
                      "src": "5499:10:4"
                    },
                    "referencedDeclaration": 5058,
                    "src": "5499:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5498:12:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 927,
            "nodeType": "FunctionDefinition",
            "src": "5603:97:4",
            "nodes": [],
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "5659:41:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 921,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "5676:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$5058_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5676:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$5058",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5684:7:4",
                      "memberName": "getLSDs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5676:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5676:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 920,
                  "id": 925,
                  "nodeType": "Return",
                  "src": "5669:24:4"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_LSDs",
            "nameLocation": "5612:5:4",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5617:2:4"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "5641:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 917,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5641:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 918,
                    "nodeType": "ArrayTypeName",
                    "src": "5641:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5640:18:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 937,
            "nodeType": "FunctionDefinition",
            "src": "5867:104:4",
            "nodes": [],
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "5927:44:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 933,
                      "name": "_domainSeparatorV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39550,
                      "src": "5944:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5944:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 932,
                  "id": 935,
                  "nodeType": "Return",
                  "src": "5937:27:4"
                }
              ]
            },
            "documentation": {
              "id": 928,
              "nodeType": "StructuredDocumentation",
              "src": "5724:138:4",
              "text": " @notice Returns the EIP-712 DOMAIN_SEPARATOR.\n @return A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR."
            },
            "functionSelector": "3644e515",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "5876:16:4",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5892:2:4"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "5918:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5918:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5917:9:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 952,
            "nodeType": "FunctionDefinition",
            "src": "6180:111:4",
            "nodes": [],
            "body": {
              "id": 951,
              "nodeType": "Block",
              "src": "6243:48:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 945,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "6260:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38785_storage_$",
                            "typeString": "mapping(address => struct CountersUpgradeable.Counter storage ref)"
                          }
                        },
                        "id": 947,
                        "indexExpression": {
                          "id": 946,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "6268:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6260:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$38785_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6275:7:4",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38797,
                      "src": "6260:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$38785_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$38785_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6260:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 944,
                  "id": 950,
                  "nodeType": "Return",
                  "src": "6253:31:4"
                }
              ]
            },
            "documentation": {
              "id": 938,
              "nodeType": "StructuredDocumentation",
              "src": "5977:198:4",
              "text": " @notice Returns the current nonce for the given owner address.\n @param owner The address whose nonce is to be retrieved.\n @return The current nonce as a uint256 value."
            },
            "functionSelector": "7ecebe00",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "6189:6:4",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6204:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "6196:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6196:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6195:15:4"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "6234:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6234:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6233:9:4"
            },
            "scope": 1064,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 981,
            "nodeType": "FunctionDefinition",
            "src": "6481:206:4",
            "nodes": [],
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "6549:138:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "6595:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 980,
                      "src": "6559:41:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$38785_storage_ptr",
                        "typeString": "struct CountersUpgradeable.Counter"
                      },
                      "typeName": {
                        "id": 963,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 962,
                          "name": "CountersUpgradeable.Counter",
                          "nameLocations": [
                            "6559:19:4",
                            "6579:7:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38785,
                          "src": "6559:27:4"
                        },
                        "referencedDeclaration": 38785,
                        "src": "6559:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$38785_storage_ptr",
                          "typeString": "struct CountersUpgradeable.Counter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 968,
                  "initialValue": {
                    "baseExpression": {
                      "id": 965,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "6603:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$38785_storage_$",
                        "typeString": "mapping(address => struct CountersUpgradeable.Counter storage ref)"
                      }
                    },
                    "id": 967,
                    "indexExpression": {
                      "id": 966,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "6611:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6603:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$38785_storage",
                      "typeString": "struct CountersUpgradeable.Counter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6559:58:4"
                },
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 969,
                      "name": "current",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "6627:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 970,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 964,
                          "src": "6637:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$38785_storage_ptr",
                            "typeString": "struct CountersUpgradeable.Counter storage pointer"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6643:7:4",
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38797,
                        "src": "6637:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$38785_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$38785_storage_ptr_$",
                          "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6637:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6627:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "6627:25:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 975,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "6663:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$38785_storage_ptr",
                          "typeString": "struct CountersUpgradeable.Counter storage pointer"
                        }
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6669:9:4",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38811,
                      "src": "6663:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$38785_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$38785_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6663:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "6663:17:4"
                }
              ]
            },
            "documentation": {
              "id": 953,
              "nodeType": "StructuredDocumentation",
              "src": "6297:179:4",
              "text": " @dev Private function that increments and returns the current nonce for a given owner address.\n @param owner The address whose nonce is to be incremented."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_useNonce",
            "nameLocation": "6490:9:4",
            "parameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6508:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "6500:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6499:15:4"
            },
            "returnParameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "current",
                  "nameLocation": "6540:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "6532:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6532:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6531:17:4"
            },
            "scope": 1064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1058,
            "nodeType": "FunctionDefinition",
            "src": "7277:623:4",
            "nodes": [],
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "7461:439:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 999,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7475:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7481:9:4",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7475:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1001,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "7493:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7475:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1009,
                  "nodeType": "IfStatement",
                  "src": "7471:75:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 1004,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "7520:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1005,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7530:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7536:9:4",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7530:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1003,
                        "name": "OZError08",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "7510:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7510:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1008,
                    "nodeType": "RevertStatement",
                    "src": "7503:43:4"
                  }
                },
                {
                  "assignments": [
                    1011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1011,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "7565:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "7557:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1010,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7557:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1025,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1015,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "7599:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1016,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "7617:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1017,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "7624:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1018,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "7633:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1020,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 984,
                                "src": "7650:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1019,
                              "name": "_useNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "7640:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) returns (uint256)"
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7640:16:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1022,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "7658:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1013,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7588:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7592:6:4",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7588:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7588:79:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1012,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7578:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7578:90:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7557:111:4"
                },
                {
                  "assignments": [
                    1027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "7686:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "7678:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1026,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7678:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1031,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1029,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "7710:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1028,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39593,
                      "src": "7693:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7693:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7678:43:4"
                },
                {
                  "assignments": [
                    1033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1033,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "7739:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "7731:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1032,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7731:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1041,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1036,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "7773:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1037,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "7779:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "7782:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1039,
                        "name": "s_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "7785:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1034,
                        "name": "ECDSAUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39467,
                        "src": "7748:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSAUpgradeable_$39467_$",
                          "typeString": "type(library ECDSAUpgradeable)"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7765:7:4",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39407,
                      "src": "7748:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7731:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1042,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "7803:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1043,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "7813:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7803:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1050,
                  "nodeType": "IfStatement",
                  "src": "7799:52:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 1046,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "7837:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1047,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "7845:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1045,
                        "name": "OZError09",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "7827:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address) pure"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7827:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1049,
                    "nodeType": "RevertStatement",
                    "src": "7820:31:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1052,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "7871:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1053,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "7878:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1054,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "7887:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1051,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37405,
                      "src": "7862:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7862:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "7862:31:4"
                }
              ]
            },
            "documentation": {
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "6693:579:4",
              "text": " @notice Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction.\n @dev Uses the EIP-2612 standard.\n @param owner The address of the token owner.\n @param spender The address of the spender.\n @param value The amount of tokens to be approved.\n @param deadline The expiration time of the signature, specified as a Unix timestamp.\n @param v The recovery byte of the signature.\n @param r The first 32 bytes of the signature.\n @param s_ The second 32 bytes of the signature."
            },
            "functionSelector": "d505accf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "7286:6:4",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7310:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7302:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7302:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 986,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7333:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7325:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7325:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7358:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7350:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7350:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7381:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7373:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7373:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "7405:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7399:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7399:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "7424:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7416:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7416:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "7443:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "7435:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7435:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7292:159:4"
            },
            "returnParameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7461:0:4"
            },
            "scope": 1064,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1063,
            "nodeType": "VariableDeclaration",
            "src": "8165:25:4",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1059,
              "nodeType": "StructuredDocumentation",
              "src": "7906:254:4",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "8185:5:4",
            "scope": 1064,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$42_storage",
              "typeString": "uint256[42]"
            },
            "typeName": {
              "baseType": {
                "id": 1060,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "8165:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1062,
              "length": {
                "hexValue": "3432",
                "id": 1061,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "8173:2:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_42_by_1",
                  "typeString": "int_const 42"
                },
                "value": "42"
              },
              "nodeType": "ArrayTypeName",
              "src": "8165:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$42_storage_ptr",
                "typeString": "uint256[42]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 484,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "1258:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37476,
              "src": "1258:16:4"
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "1258:16:4"
          },
          {
            "baseName": {
              "id": 486,
              "name": "EIP712Upgradeable",
              "nameLocations": [
                "1276:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39617,
              "src": "1276:17:4"
            },
            "id": 487,
            "nodeType": "InheritanceSpecifier",
            "src": "1276:17:4"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1064,
          39617,
          37476,
          38177,
          37554,
          38779,
          36865
        ],
        "name": "OZL",
        "nameLocation": "1251:3:4",
        "scope": 1065,
        "usedErrors": [
          340,
          346,
          356,
          360
        ],
        "usedEvents": [
          36729,
          37488,
          37497
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 4
}