{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "OZError01",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError02",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "OZError08",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "OZError09",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorCode",
          "type": "string"
        }
      ],
      "name": "OZError10",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "OZError18",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OZError19",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError20",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "OZError21",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum QuoteAsset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZ",
      "outputs": [
        {
          "internalType": "contract ozIDiamond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ozDiamond_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "communityAmount_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s_",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recicledSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ozlAmountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmountsOut_",
          "type": "uint256[]"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612f0380620000f46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b6040516101519190612576565b60405180910390f35b61016d61016836600461259e565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d3660046125ca565b61037b565b60405160128152602001610151565b6101816103a1565b61016d6101c736600461259e565b6103b0565b6101816101da36600461260b565b6103d2565b6101e761051f565b6040516001600160a01b039091168152602001610151565b61018161020d36600461266f565b610561565b61018161022036600461275a565b6001600160a01b031660009081526033602052604090205490565b61024e6102493660046127eb565b610815565b005b61018161025e36600461275a565b6109b2565b6101816109d0565b610181610a3b565b610144610a82565b61016d61028936600461259e565b610a91565b61016d61029c36600461259e565b610b17565b61024e6102af366004612873565b610b25565b6101816102c23660046128ea565b610c47565b610181610c72565b6060603680546102de90612923565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90612923565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610cb5565b60019150505b92915050565b600033610389858285610dd9565b610394858585610e53565b60019150505b9392505050565b60006103ab611021565b905090565b60003361036f8185856103c38383610c47565b6103cd919061296d565b610cb5565b6000670de0b6b3a7640000816103e661051f565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044891906129a3565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190612a68565b9050600060028660028111156104d2576104d2612a81565b146104e6576104e1868361109c565b6104e8565b815b905060006104f4610a3b565b90508060000361050957509295945050505050565b6105148583836111c6565b979650505050505050565b600061055261054f60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612a97565b90565b546001600160a01b0316919050565b60008061056c61051f565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d391906129a3565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190612aaa565b6001600160a01b031614801561066f57508060e001516001600160a01b0316866001600160a01b031614155b801561069157508060c001516001600160a01b0316866001600160a01b031614155b156106bf5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146106da576106da883387610dd9565b60006106f96106e960006103d2565b8790670de0b6b3a76400006111c6565b90506000610773670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190612a68565b8491906111c6565b90506107808a85896111e4565b8260c001516001600160a01b0316886001600160a01b0316036107f557856000815181106107b0576107b0612ac7565b60200260200101518110156107db57604051631aa1e78f60e31b8152600481018290526024016106b6565b6107ea8360c001518a8361124f565b94505050505061080c565b610805838b8a8c888c878d611263565b9450505050505b95945050505050565b600054610100900460ff16158080156108355750600054600160ff909116105b8061084f5750303b15801561084f575060005460ff166001145b6108b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b6565b6000805460ff1916600117905580156108d5576000805461ff0019166101001790555b6108df86866113da565b61090286604051806040016040528060018152602001603160f81b81525061140f565b8361093161054f60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612a97565b80546001600160a01b0319166001600160a01b03929092169190911790556109593084611440565b610964308584610e53565b80156109aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b60006109da61051f565b6001600160a01b0316636a533a4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190612a68565b6000610a4561051f565b6001600160a01b0316632b112e496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a17573d6000803e3d6000fd5b6060603780546102de90612923565b60003381610a9f8286610c47565b905083811015610aff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b6565b610b0c8286868403610cb5565b506001949350505050565b60003361036f818585610e53565b83421115610b4f5760405163184f1e0160e11b8152600481018590524260248201526044016106b6565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b7e8c61151f565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bd982611547565b90506000610be982878787611595565b9050896001600160a01b0316816001600160a01b031614610c3057604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016106b6565b610c3b8a8a8a610cb5565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610c98908490600401612add565b602060405180830381865afa158015610a17573d6000803e3d6000fd5b6001600160a01b038316610d175760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b6565b6001600160a01b038216610d785760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b6565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610de58484610c47565b90506000198114610e4d5781811015610e405760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b6565b610e4d8484848403610cb5565b50505050565b6001600160a01b038316610eb75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b6565b6001600160a01b038216610f195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b6565b6001600160a01b03831660009081526033602052604090205481811015610f915760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b6565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610fc890849061296d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101491815260200190565b60405180910390a3610e4d565b60006103ab7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61105060655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b1790526000906110d96110d361051f565b826115c4565b90506000818060200190518101906110f19190612a68565b9050600085600281111561110757611107612a81565b0361118f5761118861111761051f565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111789190612a68565b8590670de0b6b3a76400006111c6565b92506111be565b60018560028111156111a3576111a3612a81565b036111be576111bb8482670de0b6b3a76400006111c6565b92505b505092915050565b60008260001904841183021582026111dd57600080fd5b5091020490565b6111f0308484846115e9565b60405163c3ae3a0960e01b8152600481018290526001600160a01b0383169063c3ae3a0990602401600060405180830381600087803b15801561123257600080fd5b505af1158015611246573d6000803e3d6000fd5b50505050505050565b600061125c848484611654565b5092915050565b6040516370a0823160e01b81526001600160a01b0388166004820152600090819030906370a0823190602401602060405180830381865afa1580156112ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d09190612a68565b905061130a6040518060400160405280601681526020017503130b61030b634b1b2903839329034b7103634b11d160551b81525082611684565b61131460026116c9565b6040516370a0823160e01b81526001600160a01b038a16600482015230906370a0823190602401602060405180830381865afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612a68565b90506113bd6040518060400160405280601781526020017f62616c20616c69636520706f737420696e206c69623a2000000000000000000081525082611684565b6113cc8a898987876000611711565b9a9950505050505050505050565b600054610100900460ff166114015760405162461bcd60e51b81526004016106b690612af7565b61140b82826118d8565b5050565b600054610100900460ff166114365760405162461bcd60e51b81526004016106b690612af7565b61140b8282611918565b6001600160a01b0382166114965760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b6565b80603560008282546114a8919061296d565b90915550506001600160a01b038216600090815260336020526040812080548392906114d590849061296d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610375611554611021565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006115a687878787611959565b915091506115b381611a46565b5090505b949350505050565b505050565b606061039a8383604051806060016040528060258152602001612ea960259139611bfc565b6040516001600160a01b0380851660248301528316604482015260648101829052610e4d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c74565b6040516001600160a01b0383166024820152604481018290526115bf90849063a9059cbb60e01b9060640161161d565b61140b828260405160240161169a929190612b42565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611d49565b61170e816040516024016116df91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611d49565b50565b600080808084600281111561172857611728612a81565b0361173a57505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561177e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a29190612b74565b5050905080156117e4576117dd8383308d600001518e602001518c8c6000815181106117d0576117d0612ac7565b6020026020010151611d6a565b9350611804565b61180183838c604001518d606001518e608001518c8c6000611ec2565b93505b8960e001516001600160a01b0316896001600160a01b0316036118a05760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189a9190612ba9565b506118cb565b6118c88a60e001518a8a8d600001518e60200151898c6001815181106117d0576117d0612ac7565b93505b5050509695505050505050565b600054610100900460ff166118ff5760405162461bcd60e51b81526004016106b690612af7565b603661190b8382612c0a565b5060376115bf8282612c0a565b600054610100900460ff1661193f5760405162461bcd60e51b81526004016106b690612af7565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119905750600090506003611a3d565b8460ff16601b141580156119a857508460ff16601c14155b156119b95750600090506004611a3d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a0d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a3657600060019250925050611a3d565b9150600090505b94509492505050565b6000816004811115611a5a57611a5a612a81565b03611a625750565b6001816004811115611a7657611a76612a81565b03611ac35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b6565b6002816004811115611ad757611ad7612a81565b03611b245760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106b6565b6003816004811115611b3857611b38612a81565b03611b905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106b6565b6004816004811115611ba457611ba4612a81565b0361170e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106b6565b6060600080856001600160a01b031685604051611c199190612cca565b600060405180830381855afa9150503d8060008114611c54576040519150601f19603f3d011682016040523d82523d6000602084013e611c59565b606091505b5091509150611c6a86838387612111565b9695505050505050565b6000611cc9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661218a9092919063ffffffff16565b9050805160001480611cea575080806020019051810190611cea9190612ba9565b6115bf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b6565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000611d77888685612199565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af1925050508015611e67575060408051601f3d908101601f19168201909252611e6491810190612a68565b60015b611eb957611e73612ce6565b806308c379a003611ead5750611e87612d01565b80611e925750611eaf565b8060405163633abab960e01b81526004016106b69190612576565b505b3d6000803e3d6000fd5b91506105149050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f329190612a68565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f191660200182016040528015611f88576020820181803683370190505b5090526040805160808101825230808252600060208301819052928201526060810182905291925080856002811115611fc357611fc3612a81565b03611fea5785600081518110611fdb57611fdb612ac7565b602002602001015190506120e5565b6000856002811115611ffe57611ffe612a81565b146120e55760405163e969f6b360e01b81526001600160a01b038a169063e969f6b3906120319086908690600401612df2565b6020604051808303816000875af192505050801561206c575060408051601f3d908101601f1916820190925261206991810190612a68565b60015b6120b257612078612ce6565b806308c379a003611ead575061208c612d01565b806120975750611eaf565b8060405163dafe91cd60e01b81526004016106b69190612576565b6000876000815181106120c7576120c7612ac7565b602002602001015190508181116120de57816120e0565b805b925050505b6120f48c898560800151612199565b61210188848484426122ae565b9c9b505050505050505050505050565b60608315612180578251600003612179576001600160a01b0385163b6121795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b6565b50816115b7565b6115b783836123d3565b60606115b784846000856123fd565b8015806122135750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156121ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122119190612a68565b155b61227e5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016106b6565b6040516001600160a01b0383166024820152604481018290526115bf90849063095ea7b360e01b9060640161161d565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe29906122e3908890889088908890600401612e44565b6020604051808303816000875af192505050801561231e575060408051601f3d908101601f1916820190925261231b91810190612a68565b60015b6123ab5761232a612ce6565b806308c379a003611ead575061233e612d01565b806123495750611eaf565b612372816040518060400160405280600781526020016642414c2335303760c81b8152506124cd565b1561239057604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106b69190612576565b806000036123cc57604051635eeb40ff60e11b815260040160405180910390fd5b905061080c565b8151156123e35781518083602001fd5b8060405162461bcd60e51b81526004016106b69190612576565b60608247101561245e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106b6565b600080866001600160a01b0316858760405161247a9190612cca565b60006040518083038185875af1925050503d80600081146124b7576040519150601f19603f3d011682016040523d82523d6000602084013e6124bc565b606091505b509150915061051487838387612111565b6000816040516020016124e09190612cca565b60405160208183030381529060405280519060200120836040516020016125079190612cca565b6040516020818303038152906040528051906020012014905092915050565b60005b83811015612541578181015183820152602001612529565b50506000910152565b60008151808452612562816020860160208601612526565b601f01601f19169290920160200192915050565b60208152600061039a602083018461254a565b6001600160a01b038116811461170e57600080fd5b600080604083850312156125b157600080fd5b82356125bc81612589565b946020939093013593505050565b6000806000606084860312156125df57600080fd5b83356125ea81612589565b925060208401356125fa81612589565b929592945050506040919091013590565b60006020828403121561261d57600080fd5b81356003811061039a57600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156126685761266861262c565b6040525050565b600080600080600060a0868803121561268757600080fd5b853561269281612589565b94506020868101356126a381612589565b945060408701356126b381612589565b935060608701359250608087013567ffffffffffffffff808211156126d757600080fd5b818901915089601f8301126126eb57600080fd5b8135818111156126fd576126fd61262c565b8060051b915060405161271285840182612642565b8181529183018401918481018c84111561272b57600080fd5b938501935b838510156127475784358152938501938501612730565b5080955050505050509295509295909350565b60006020828403121561276c57600080fd5b813561039a81612589565b600082601f83011261278857600080fd5b813567ffffffffffffffff8111156127a2576127a261262c565b6040516127b9601f8301601f191660200182612642565b8181528460208386010111156127ce57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561280357600080fd5b853567ffffffffffffffff8082111561281b57600080fd5b61282789838a01612777565b9650602088013591508082111561283d57600080fd5b5061284a88828901612777565b945050604086013561285b81612589565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a03121561288e57600080fd5b873561289981612589565b965060208801356128a981612589565b95506040880135945060608801359350608088013560ff811681146128cd57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156128fd57600080fd5b823561290881612589565b9150602083013561291881612589565b809150509250929050565b600181811c9082168061293757607f821691505b60208210810361154157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037557610375612957565b805161298b81612589565b919050565b805162ffffff8116811461298b57600080fd5b60006101008083850312156129b757600080fd5b6040519081019067ffffffffffffffff821181831017156129da576129da61262c565b816040526129e784612980565b81526129f560208501612990565b6020820152612a0660408501612980565b6040820152612a1760608501612980565b6060820152612a2860808501612980565b6080820152612a3960a08501612980565b60a0820152612a4a60c08501612980565b60c0820152612a5b60e08501612980565b60e0820152949350505050565b600060208284031215612a7a57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561037557610375612957565b600060208284031215612abc57600080fd5b815161039a81612589565b634e487b7160e01b600052603260045260246000fd5b6020810160038310612af157612af1612a81565b91905290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000612b55604083018561254a565b90508260208301529392505050565b8051801515811461298b57600080fd5b600080600060608486031215612b8957600080fd5b612b9284612b64565b925060208401519150604084015190509250925092565b600060208284031215612bbb57600080fd5b61039a82612b64565b601f8211156115bf57600081815260208120601f850160051c81016020861015612beb5750805b601f850160051c820191505b818110156109aa57828155600101612bf7565b815167ffffffffffffffff811115612c2457612c2461262c565b612c3881612c328454612923565b84612bc4565b602080601f831160018114612c6d5760008415612c555750858301515b600019600386901b1c1916600185901b1785556109aa565b600085815260208120601f198616915b82811015612c9c57888601518255948401946001909101908401612c7d565b5085821015612cba5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612cdc818460208701612526565b9190910192915050565b600060033d111561054f5760046000803e5060005160e01c90565b600060443d1015612d0f5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612d3f57505050505090565b8285019150815181811115612d575750505050505090565b843d8701016020828501011115612d715750505050505090565b612d8060208286010187612642565b509095945050505050565b805182526000602082015160028110612da657612da6612a81565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a08501526115b760c085018261254a565b60a081526000612e0560a0830185612d8b565b905061039a602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e081526000612e5760e0830187612d8b565b9050612e96602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a26469706673582212203c41298659cfbc9b56463d4b996d9bca730fcec659e0c8aeb96e4b3828e80ce464736f6c63430008150033",
    "sourceMap": "1264:6681:4:-:0;;;1755:53;;;;;;;;;-1:-1:-1;1779:22:4;:20;:22::i;:::-;1264:6681;;5388:279:57;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:57;;216:2:110;5447:66:57;;;198:21:110;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:110;;;338:37;392:19;;5447:66:57;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:57;5588:15;5573:30;;;;;;5622:28;;564:36:110;;;5622:28:57;;552:2:110;537:18;5622:28:57;;;;;;;5523:138;5388:279::o;422:184:110:-;1264:6681:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610273578063a457c2d71461027b578063a9059cbb1461028e578063d505accf146102a1578063dd62ed3e146102b4578063e6aa216c146102c757600080fd5b806370a0823114610212578063748231321461023b5780637ecebe00146102505780638b5f1a6b146102635780639358928b1461026b57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b95780634d02a3f7146101cc57806359c64e12146101df5780636afa0287146101ff57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102cf565b6040516101519190612576565b60405180910390f35b61016d61016836600461259e565b610361565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d3660046125ca565b61037b565b60405160128152602001610151565b6101816103a1565b61016d6101c736600461259e565b6103b0565b6101816101da36600461260b565b6103d2565b6101e761051f565b6040516001600160a01b039091168152602001610151565b61018161020d36600461266f565b610561565b61018161022036600461275a565b6001600160a01b031660009081526033602052604090205490565b61024e6102493660046127eb565b610815565b005b61018161025e36600461275a565b6109b2565b6101816109d0565b610181610a3b565b610144610a82565b61016d61028936600461259e565b610a91565b61016d61029c36600461259e565b610b17565b61024e6102af366004612873565b610b25565b6101816102c23660046128ea565b610c47565b610181610c72565b6060603680546102de90612923565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90612923565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b60003361036f818585610cb5565b60019150505b92915050565b600033610389858285610dd9565b610394858585610e53565b60019150505b9392505050565b60006103ab611021565b905090565b60003361036f8185856103c38383610c47565b6103cd919061296d565b610cb5565b6000670de0b6b3a7640000816103e661051f565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044891906129a3565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190612a68565b9050600060028660028111156104d2576104d2612a81565b146104e6576104e1868361109c565b6104e8565b815b905060006104f4610a3b565b90508060000361050957509295945050505050565b6105148583836111c6565b979650505050505050565b600061055261054f60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612a97565b90565b546001600160a01b0316919050565b60008061056c61051f565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d391906129a3565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190612aaa565b6001600160a01b031614801561066f57508060e001516001600160a01b0316866001600160a01b031614155b801561069157508060c001516001600160a01b0316866001600160a01b031614155b156106bf5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b038916146106da576106da883387610dd9565b60006106f96106e960006103d2565b8790670de0b6b3a76400006111c6565b90506000610773670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190612a68565b8491906111c6565b90506107808a85896111e4565b8260c001516001600160a01b0316886001600160a01b0316036107f557856000815181106107b0576107b0612ac7565b60200260200101518110156107db57604051631aa1e78f60e31b8152600481018290526024016106b6565b6107ea8360c001518a8361124f565b94505050505061080c565b610805838b8a8c888c878d611263565b9450505050505b95945050505050565b600054610100900460ff16158080156108355750600054600160ff909116105b8061084f5750303b15801561084f575060005460ff166001145b6108b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106b6565b6000805460ff1916600117905580156108d5576000805461ff0019166101001790555b6108df86866113da565b61090286604051806040016040528060018152602001603160f81b81525061140f565b8361093161054f60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612a97565b80546001600160a01b0319166001600160a01b03929092169190911790556109593084611440565b610964308584610e53565b80156109aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038116600090815260996020526040812054610375565b60006109da61051f565b6001600160a01b0316636a533a4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190612a68565b6000610a4561051f565b6001600160a01b0316632b112e496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a17573d6000803e3d6000fd5b6060603780546102de90612923565b60003381610a9f8286610c47565b905083811015610aff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106b6565b610b0c8286868403610cb5565b506001949350505050565b60003361036f818585610e53565b83421115610b4f5760405163184f1e0160e11b8152600481018590524260248201526044016106b6565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b7e8c61151f565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bd982611547565b90506000610be982878787611595565b9050896001600160a01b0316816001600160a01b031614610c3057604051635091bef560e01b81526001600160a01b0380831660048301528b1660248201526044016106b6565b610c3b8a8a8a610cb5565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610c98908490600401612add565b602060405180830381865afa158015610a17573d6000803e3d6000fd5b6001600160a01b038316610d175760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b6565b6001600160a01b038216610d785760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b6565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610de58484610c47565b90506000198114610e4d5781811015610e405760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b6565b610e4d8484848403610cb5565b50505050565b6001600160a01b038316610eb75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106b6565b6001600160a01b038216610f195760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b6565b6001600160a01b03831660009081526033602052604090205481811015610f915760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106b6565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610fc890849061296d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161101491815260200190565b60405180910390a3610e4d565b60006103ab7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61105060655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b1790526000906110d96110d361051f565b826115c4565b90506000818060200190518101906110f19190612a68565b9050600085600281111561110757611107612a81565b0361118f5761118861111761051f565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111789190612a68565b8590670de0b6b3a76400006111c6565b92506111be565b60018560028111156111a3576111a3612a81565b036111be576111bb8482670de0b6b3a76400006111c6565b92505b505092915050565b60008260001904841183021582026111dd57600080fd5b5091020490565b6111f0308484846115e9565b60405163c3ae3a0960e01b8152600481018290526001600160a01b0383169063c3ae3a0990602401600060405180830381600087803b15801561123257600080fd5b505af1158015611246573d6000803e3d6000fd5b50505050505050565b600061125c848484611654565b5092915050565b6040516370a0823160e01b81526001600160a01b0388166004820152600090819030906370a0823190602401602060405180830381865afa1580156112ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d09190612a68565b905061130a6040518060400160405280601681526020017503130b61030b634b1b2903839329034b7103634b11d160551b81525082611684565b61131460026116c9565b6040516370a0823160e01b81526001600160a01b038a16600482015230906370a0823190602401602060405180830381865afa158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c9190612a68565b90506113bd6040518060400160405280601781526020017f62616c20616c69636520706f737420696e206c69623a2000000000000000000081525082611684565b6113cc8a898987876000611711565b9a9950505050505050505050565b600054610100900460ff166114015760405162461bcd60e51b81526004016106b690612af7565b61140b82826118d8565b5050565b600054610100900460ff166114365760405162461bcd60e51b81526004016106b690612af7565b61140b8282611918565b6001600160a01b0382166114965760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b6565b80603560008282546114a8919061296d565b90915550506001600160a01b038216600090815260336020526040812080548392906114d590849061296d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610375611554611021565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006115a687878787611959565b915091506115b381611a46565b5090505b949350505050565b505050565b606061039a8383604051806060016040528060258152602001612ea960259139611bfc565b6040516001600160a01b0380851660248301528316604482015260648101829052610e4d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c74565b6040516001600160a01b0383166024820152604481018290526115bf90849063a9059cbb60e01b9060640161161d565b61140b828260405160240161169a929190612b42565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611d49565b61170e816040516024016116df91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611d49565b50565b600080808084600281111561172857611728612a81565b0361173a57505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa15801561177e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a29190612b74565b5050905080156117e4576117dd8383308d600001518e602001518c8c6000815181106117d0576117d0612ac7565b6020026020010151611d6a565b9350611804565b61180183838c604001518d606001518e608001518c8c6000611ec2565b93505b8960e001516001600160a01b0316896001600160a01b0316036118a05760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189a9190612ba9565b506118cb565b6118c88a60e001518a8a8d600001518e60200151898c6001815181106117d0576117d0612ac7565b93505b5050509695505050505050565b600054610100900460ff166118ff5760405162461bcd60e51b81526004016106b690612af7565b603661190b8382612c0a565b5060376115bf8282612c0a565b600054610100900460ff1661193f5760405162461bcd60e51b81526004016106b690612af7565b815160209283012081519190920120606591909155606655565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119905750600090506003611a3d565b8460ff16601b141580156119a857508460ff16601c14155b156119b95750600090506004611a3d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a0d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a3657600060019250925050611a3d565b9150600090505b94509492505050565b6000816004811115611a5a57611a5a612a81565b03611a625750565b6001816004811115611a7657611a76612a81565b03611ac35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b6565b6002816004811115611ad757611ad7612a81565b03611b245760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106b6565b6003816004811115611b3857611b38612a81565b03611b905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106b6565b6004816004811115611ba457611ba4612a81565b0361170e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106b6565b6060600080856001600160a01b031685604051611c199190612cca565b600060405180830381855afa9150503d8060008114611c54576040519150601f19603f3d011682016040523d82523d6000602084013e611c59565b606091505b5091509150611c6a86838387612111565b9695505050505050565b6000611cc9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661218a9092919063ffffffff16565b9050805160001480611cea575080806020019051810190611cea9190612ba9565b6115bf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106b6565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000611d77888685612199565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af1925050508015611e67575060408051601f3d908101601f19168201909252611e6491810190612a68565b60015b611eb957611e73612ce6565b806308c379a003611ead5750611e87612d01565b80611e925750611eaf565b8060405163633abab960e01b81526004016106b69190612576565b505b3d6000803e3d6000fd5b91506105149050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f329190612a68565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f191660200182016040528015611f88576020820181803683370190505b5090526040805160808101825230808252600060208301819052928201526060810182905291925080856002811115611fc357611fc3612a81565b03611fea5785600081518110611fdb57611fdb612ac7565b602002602001015190506120e5565b6000856002811115611ffe57611ffe612a81565b146120e55760405163e969f6b360e01b81526001600160a01b038a169063e969f6b3906120319086908690600401612df2565b6020604051808303816000875af192505050801561206c575060408051601f3d908101601f1916820190925261206991810190612a68565b60015b6120b257612078612ce6565b806308c379a003611ead575061208c612d01565b806120975750611eaf565b8060405163dafe91cd60e01b81526004016106b69190612576565b6000876000815181106120c7576120c7612ac7565b602002602001015190508181116120de57816120e0565b805b925050505b6120f48c898560800151612199565b61210188848484426122ae565b9c9b505050505050505050505050565b60608315612180578251600003612179576001600160a01b0385163b6121795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b6565b50816115b7565b6115b783836123d3565b60606115b784846000856123fd565b8015806122135750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156121ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122119190612a68565b155b61227e5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016106b6565b6040516001600160a01b0383166024820152604481018290526115bf90849063095ea7b360e01b9060640161161d565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe29906122e3908890889088908890600401612e44565b6020604051808303816000875af192505050801561231e575060408051601f3d908101601f1916820190925261231b91810190612a68565b60015b6123ab5761232a612ce6565b806308c379a003611ead575061233e612d01565b806123495750611eaf565b612372816040518060400160405280600781526020016642414c2335303760c81b8152506124cd565b1561239057604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106b69190612576565b806000036123cc57604051635eeb40ff60e11b815260040160405180910390fd5b905061080c565b8151156123e35781518083602001fd5b8060405162461bcd60e51b81526004016106b69190612576565b60608247101561245e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106b6565b600080866001600160a01b0316858760405161247a9190612cca565b60006040518083038185875af1925050503d80600081146124b7576040519150601f19603f3d011682016040523d82523d6000602084013e6124bc565b606091505b509150915061051487838387612111565b6000816040516020016124e09190612cca565b60405160208183030381529060405280519060200120836040516020016125079190612cca565b6040516020818303038152906040528051906020012014905092915050565b60005b83811015612541578181015183820152602001612529565b50506000910152565b60008151808452612562816020860160208601612526565b601f01601f19169290920160200192915050565b60208152600061039a602083018461254a565b6001600160a01b038116811461170e57600080fd5b600080604083850312156125b157600080fd5b82356125bc81612589565b946020939093013593505050565b6000806000606084860312156125df57600080fd5b83356125ea81612589565b925060208401356125fa81612589565b929592945050506040919091013590565b60006020828403121561261d57600080fd5b81356003811061039a57600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156126685761266861262c565b6040525050565b600080600080600060a0868803121561268757600080fd5b853561269281612589565b94506020868101356126a381612589565b945060408701356126b381612589565b935060608701359250608087013567ffffffffffffffff808211156126d757600080fd5b818901915089601f8301126126eb57600080fd5b8135818111156126fd576126fd61262c565b8060051b915060405161271285840182612642565b8181529183018401918481018c84111561272b57600080fd5b938501935b838510156127475784358152938501938501612730565b5080955050505050509295509295909350565b60006020828403121561276c57600080fd5b813561039a81612589565b600082601f83011261278857600080fd5b813567ffffffffffffffff8111156127a2576127a261262c565b6040516127b9601f8301601f191660200182612642565b8181528460208386010111156127ce57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561280357600080fd5b853567ffffffffffffffff8082111561281b57600080fd5b61282789838a01612777565b9650602088013591508082111561283d57600080fd5b5061284a88828901612777565b945050604086013561285b81612589565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a03121561288e57600080fd5b873561289981612589565b965060208801356128a981612589565b95506040880135945060608801359350608088013560ff811681146128cd57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156128fd57600080fd5b823561290881612589565b9150602083013561291881612589565b809150509250929050565b600181811c9082168061293757607f821691505b60208210810361154157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561037557610375612957565b805161298b81612589565b919050565b805162ffffff8116811461298b57600080fd5b60006101008083850312156129b757600080fd5b6040519081019067ffffffffffffffff821181831017156129da576129da61262c565b816040526129e784612980565b81526129f560208501612990565b6020820152612a0660408501612980565b6040820152612a1760608501612980565b6060820152612a2860808501612980565b6080820152612a3960a08501612980565b60a0820152612a4a60c08501612980565b60c0820152612a5b60e08501612980565b60e0820152949350505050565b600060208284031215612a7a57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561037557610375612957565b600060208284031215612abc57600080fd5b815161039a81612589565b634e487b7160e01b600052603260045260246000fd5b6020810160038310612af157612af1612a81565b91905290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000612b55604083018561254a565b90508260208301529392505050565b8051801515811461298b57600080fd5b600080600060608486031215612b8957600080fd5b612b9284612b64565b925060208401519150604084015190509250925092565b600060208284031215612bbb57600080fd5b61039a82612b64565b601f8211156115bf57600081815260208120601f850160051c81016020861015612beb5750805b601f850160051c820191505b818110156109aa57828155600101612bf7565b815167ffffffffffffffff811115612c2457612c2461262c565b612c3881612c328454612923565b84612bc4565b602080601f831160018114612c6d5760008415612c555750858301515b600019600386901b1c1916600185901b1785556109aa565b600085815260208120601f198616915b82811015612c9c57888601518255948401946001909101908401612c7d565b5085821015612cba5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612cdc818460208701612526565b9190910192915050565b600060033d111561054f5760046000803e5060005160e01c90565b600060443d1015612d0f5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612d3f57505050505090565b8285019150815181811115612d575750505050505090565b843d8701016020828501011115612d715750505050505090565b612d8060208286010187612642565b509095945050505050565b805182526000602082015160028110612da657612da6612a81565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a08501526115b760c085018261254a565b60a081526000612e0560a0830185612d8b565b905061039a602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e081526000612e5760e0830187612d8b565b9050612e96602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a26469706673582212203c41298659cfbc9b56463d4b996d9bca730fcec659e0c8aeb96e4b3828e80ce464736f6c63430008150033",
    "sourceMap": "1264:6681:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:110;;1384:22;1366:41;;1354:2;1339:18;4770:197:58;1226:187:110;3581:106:58;3668:12;;3581:106;;;1564:25:110;;;1552:2;1537:18;3581:106:58;1418:177:110;5529:286:58;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;2203:36:110;;2191:2;2176:18;3430:91:58;2061:184:110;5612:104:4;;;:::i;6210:234:58:-;;;;;;:::i;:::-;;:::i;2709:511:4:-;;;;;;:::i;:::-;;:::i;5310:135::-;;;:::i;:::-;;;-1:-1:-1;;;;;2891:32:110;;;2873:51;;2861:2;2846:18;5310:135:4;2708:222:110;3754:1325:4;;;;;;:::i;:::-;;:::i;3745:125:58:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:58;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1815:764:4;;;;;;:::i;:::-;;:::i;:::-;;5925:111;;;;;;:::i;:::-;;:::i;5201:103::-;;;:::i;5086:109::-;;;:::i;2704:102:58:-;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;7022:623:4:-;;;;;;:::i;:::-;;:::i;4313:149:58:-;;;;;;:::i;:::-;;:::i;2587:115:4:-;;;:::i;2493:98:58:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:65;4907:32:58;929:10:65;4923:7:58;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:65;5712:38:58;5728:4;929:10:65;5743:6:58;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;5612:104:4:-;5663:7;5689:20;:18;:20::i;:::-;5682:27;;5612:104;:::o;6210:234:58:-;6298:4;929:10:65;6352:64:58;929:10:65;6368:7:58;6405:10;6377:25;929:10:65;6368:7:58;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2709:511:4:-;2773:4;2800:7;2773:4;2832:7;:5;:7::i;:::-;-1:-1:-1;;;;;2832:22:4;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;2892:43;;-1:-1:-1;;;2892:43:4;;2929:4;2892:43;;;2873:51:110;2832:29:4;;-1:-1:-1;2871:18:4;;-1:-1:-1;;;;;2892:28:4;;;;;2846:18:110;;2892:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2871:64;-1:-1:-1;2946:19:4;2978:15;2968:6;:25;;;;;;;;:::i;:::-;;:101;;3031:38;3047:6;3055:13;3031:15;:38::i;:::-;2968:101;;;3005:13;2968:101;2946:123;;3080:13;3096:19;:17;:19::i;:::-;3080:35;;3130:8;3142:1;3130:13;3126:29;;-1:-1:-1;3152:3:4;;2709:511;-1:-1:-1;;;;;2709:511:4:o;3126:29::-;3173:40;:3;3188:14;3204:8;3173:14;:40::i;:::-;3166:47;2709:511;-1:-1:-1;;;;;;;2709:511:4:o;5310:135::-;5347:10;5387:44;1477:45;1521:1;1482:35;1477:45;:::i;:::-;2029:4:86;1859:190;5387:44:4;:50;-1:-1:-1;;;;;5387:50:4;;5310:135;-1:-1:-1;5310:135:4:o;3754:1325::-;3939:14;3965:13;3981:7;:5;:7::i;:::-;3965:23;;3998;4024:2;-1:-1:-1;;;;;4024:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4071:22;;-1:-1:-1;;;4071:22:4;;-1:-1:-1;;;;;2891:32:110;;;4071:22:4;;;2873:51:110;3998:45:4;;-1:-1:-1;4105:1:4;;4071:11;;;;;2846:18:110;;4071:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4071:36:4;;:71;;;;;4136:1;:6;;;-1:-1:-1;;;;;4123:19:4;:9;-1:-1:-1;;;;;4123:19:4;;;4071:71;:106;;;;;4171:1;:6;;;-1:-1:-1;;;;;4158:19:4;:9;-1:-1:-1;;;;;4158:19:4;;;4071:106;4054:161;;;4195:20;;-1:-1:-1;;;4195:20:4;;-1:-1:-1;;;;;2891:32:110;;4195:20:4;;;2873:51:110;2846:18;;4195:20:4;;;;;;;;4054:161;4230:10;-1:-1:-1;;;;;4230:20:4;;;4226:100;;4266:49;4282:6;4290:10;4302:12;4266:15;:49::i;:::-;4337:13;4353:65;4377:31;4393:14;4377:15;:31::i;:::-;4353:12;;4410:7;4353:23;:65::i;:::-;4337:81;;4428:17;4448:43;4468:7;4477:2;-1:-1:-1;;;;;4477:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4448:8;;:43;:19;:43::i;:::-;4428:63;;4502:56;4524:6;4540:2;4545:12;4502:21;:56::i;:::-;4594:1;:6;;;-1:-1:-1;;;;;4581:19:4;:9;-1:-1:-1;;;;;4581:19:4;;4577:190;;4635:14;4650:1;4635:17;;;;;;;;:::i;:::-;;;;;;;4620:12;:32;4616:68;;;4661:23;;-1:-1:-1;;;4661:23:4;;;;;1564:25:110;;;1537:18;;4661:23:4;1418:177:110;4616:68:4;4705:51;4724:1;:6;;;4732:9;4743:12;4705:18;:51::i;:::-;4698:58;;;;;;;;4577:190;4784:214;4816:1;4831:6;4851:9;4874;4905:2;4922:12;4948;4974:14;4784:17;:214::i;:::-;4777:221;;;;;;3754:1325;;;;;;;;:::o;1815:764::-;3111:19:57;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:57;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:57;1476:19:64;:23;;;3219:66:57;;-1:-1:-1;3268:12:57;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:57;;10960:2:110;3157:201:57;;;10942:21:110;10999:2;10979:18;;;10972:30;11038:34;11018:18;;;11011:62;-1:-1:-1;;;11089:18:110;;;11082:44;11143:19;;3157:201:57;10758:410:110;3157:201:57;3368:12;:16;;-1:-1:-1;;3368:16:57;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:57;;;;;3394:65;2019:28:4::1;2032:5;2039:7;2019:12;:28::i;:::-;2057:25;2071:5;2057:25;;;;;;;;;;;;;-1:-1:-1::0;;;2057:25:4::1;;::::0;:13:::1;:25::i;:::-;2145:10:::0;2092:44:::1;1477:45;1521:1;1482:35;1477:45;:::i;2092:44::-;:63:::0;;-1:-1:-1;;;;;;2092:63:4::1;-1:-1:-1::0;;;;;2092:63:4;;;::::1;::::0;;;::::1;::::0;;2473:34:::1;2487:4;2494:12:::0;2473:5:::1;:34::i;:::-;2518:54;2536:4;2543:10;2555:16;2518:9;:54::i;:::-;3483:14:57::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:57;;;3553:14;;-1:-1:-1;2203:36:110;;3553:14:57;;2191:2:110;2176:18;3553:14:57;;;;;;;3479:99;3101:483;1815:764:4;;;;;:::o;5925:111::-;-1:-1:-1;;;;;6005:14:4;;5979:7;6005:14;;;:7;:14;;;;;929::66;6005:24:4;838:112:66;5201:103:4;5247:4;5270:7;:5;:7::i;:::-;-1:-1:-1;;;;;5270:25:4;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5086:109::-;5135:4;5158:7;:5;:7::i;:::-;-1:-1:-1;;;;;5158:28:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102:58;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:65;7024:4:58;7105:25;929:10:65;7122:7:58;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:58;;11574:2:110;7140:85:58;;;11556:21:110;11613:2;11593:18;;;11586:30;11652:34;11632:18;;;11625:62;-1:-1:-1;;;11703:18:110;;;11696:35;11748:19;;7140:85:58;11372:401:110;7140:85:58;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:58;;6931:427;-1:-1:-1;;;;6931:427:58:o;4066:189::-;4145:4;929:10:65;4199:28:58;929:10:65;4216:2:58;4220:6;4199:9;:28::i;7022:623:4:-;7238:8;7220:15;:26;7216:75;;;7255:36;;-1:-1:-1;;;7255:36:4;;;;;11952:25:110;;;7275:15:4;11993:18:110;;;11986:34;11925:18;;7255:36:4;11778:248:110;7216:75:4;7302:18;1582:95;7362:5;7369:7;7378:5;7385:16;7395:5;7385:9;:16::i;:::-;7333:79;;;;;;12318:25:110;;;;-1:-1:-1;;;;;12417:15:110;;;12397:18;;;12390:43;12469:15;;;;12449:18;;;12442:43;12501:18;;;12494:34;12544:19;;;12537:35;12588:19;;;12581:35;;;12290:19;;7333:79:4;;;;;;;;;;;;7323:90;;;;;;7302:111;;7423:12;7438:28;7455:10;7438:16;:28::i;:::-;7423:43;;7476:14;7493:40;7518:4;7524:1;7527;7530:2;7493:24;:40::i;:::-;7476:57;;7558:5;-1:-1:-1;;;;;7548:15:4;:6;-1:-1:-1;;;;;7548:15:4;;7544:52;;7572:24;;-1:-1:-1;;;7572:24:4;;-1:-1:-1;;;;;12857:15:110;;;7572:24:4;;;12839:34:110;12909:15;;12889:18;;;12882:43;12774:18;;7572:24:4;12627:304:110;7544:52:4;7607:31;7616:5;7623:7;7632:5;7607:8;:31::i;:::-;7206:439;;;7022:623;;;;;;;:::o;4313:149:58:-;-1:-1:-1;;;;;4428:18:58;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;2587:115:4:-;2659:36;;-1:-1:-1;;;2659:36:4;;2636:4;;2659;;:20;;:36;;2636:4;;2659:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10447:370:58;-1:-1:-1;;;;;10578:19:58;;10570:68;;;;-1:-1:-1;;;10570:68:58;;13389:2:110;10570:68:58;;;13371:21:110;13428:2;13408:18;;;13401:30;13467:34;13447:18;;;13440:62;-1:-1:-1;;;13518:18:110;;;13511:34;13562:19;;10570:68:58;13187:400:110;10570:68:58;-1:-1:-1;;;;;10656:21:58;;10648:68;;;;-1:-1:-1;;;10648:68:58;;13794:2:110;10648:68:58;;;13776:21:110;13833:2;13813:18;;;13806:30;13872:34;13852:18;;;13845:62;-1:-1:-1;;;13923:18:110;;;13916:32;13965:19;;10648:68:58;13592:398:110;10648:68:58;-1:-1:-1;;;;;10727:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1564:25:110;;;10778:32:58;;1537:18:110;10778:32:58;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:58;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:58;;14197:2:110;11347:68:58;;;14179:21:110;14236:2;14216:18;;;14209:30;14275:31;14255:18;;;14248:59;14324:18;;11347:68:58;13995:353:110;11347:68:58;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:58;;7930:68;;;;-1:-1:-1;;;7930:68:58;;14555:2:110;7930:68:58;;;14537:21:110;14594:2;14574:18;;;14567:30;14633:34;14613:18;;;14606:62;-1:-1:-1;;;14684:18:110;;;14677:35;14729:19;;7930:68:58;14353:401:110;7930:68:58;-1:-1:-1;;;;;8016:16:58;;8008:64;;;;-1:-1:-1;;;8008:64:58;;14961:2:110;8008:64:58;;;14943:21:110;15000:2;14980:18;;;14973:30;15039:34;15019:18;;;15012:62;-1:-1:-1;;;15090:18:110;;;15083:33;15133:19;;8008:64:58;14759:399:110;8008:64:58;-1:-1:-1;;;;;8154:15:58;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:58;;15365:2:110;8179:72:58;;;15347:21:110;15404:2;15384:18;;;15377:30;15443:34;15423:18;;;15416:62;-1:-1:-1;;;15494:18:110;;;15487:36;15540:19;;8179:72:58;15163:402:110;8179:72:58;-1:-1:-1;;;;;8285:15:58;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:58;8391:4;-1:-1:-1;;;;;8382:26:58;;8401:6;8382:26;;;;1564:25:110;;1552:2;1537:18;;1418:177;8382:26:58;;;;;;;;8419:37;12123:121;2842:160:69;2895:7;2921:74;1595:95;2955:17;4386:12;;;4302:103;2955:17;4731:15;;3184:73;;;;;;16601:25:110;;;16642:18;;;16635:34;;;16685:18;;;16678:34;;;3228:13:69;16728:18:110;;;16721:34;3251:4:69;16771:19:110;;;16764:61;3148:7:69;;16573:19:110;;3184:73:69;;;;;;;;;;;;3174:84;;;;;;3167:91;;3008:257;;;;;;3227:520:4;3352:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3352:37:4;-1:-1:-1;;;3352:37:4;;;3310:10;;3406:50;3441:7;:5;:7::i;:::-;3451:4;3406:26;:50::i;:::-;3399:57;;3467:13;3494:4;3483:24;;;;;;;;;;;;:::i;:::-;3467:40;-1:-1:-1;3529:14:4;3522:3;:21;;;;;;;;:::i;:::-;;3518:223;;3567:54;3593:7;:5;:7::i;:::-;-1:-1:-1;;;;;3593:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3567:14;;3613:7;3567:25;:54::i;:::-;3559:62;;3518:223;;;3648:14;3641:3;:21;;;;;;;;:::i;:::-;;3638:103;;3686:44;:14;3712:8;3722:7;3686:25;:44::i;:::-;3678:52;;3638:103;3322:425;;3227:520;;;;:::o;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;687:264:34:-;808:80;850:4;858:6;866:10;878:9;808:26;:80::i;:::-;898:46;;-1:-1:-1;;;898:46:34;;;;;1564:25:110;;;-1:-1:-1;;;;;898:35:34;;;;;1537:18:110;;898:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:264;;;:::o;6087:216::-;6200:4;6216:56;6246:4;6253:9;6264:7;6216:22;:56::i;:::-;-1:-1:-1;6289:7:34;6087:216;-1:-1:-1;;6087:216:34:o;957:868::-;1252:39;;-1:-1:-1;;;1252:39:34;;-1:-1:-1;;;;;2891:32:110;;1252:39:34;;;2873:51:110;1227:4:34;;;;1267;;1252:31;;2846:18:110;;1252:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1243:48;;1301:40;;;;;;;;;;;;;;-1:-1:-1;;;1301:40:34;;;1339:1;1301:11;:40::i;:::-;1448:14;1460:1;1448:11;:14::i;:::-;1539:39;;-1:-1:-1;;;1539:39:34;;-1:-1:-1;;;;;2891:32:110;;1539:39:34;;;2873:51:110;1554:4:34;;1539:31;;2846:18:110;;1539:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1535:43;;1588:41;;;;;;;;;;;;;;;;;;1627:1;1588:11;:41::i;:::-;1648:170;1680:1;1695:9;1718;1741:12;1767:14;1795:13;1648:18;:170::i;:::-;1641:177;957:868;-1:-1:-1;;;;;;;;;;957:868:34:o;2116:147:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2218:38:58::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;2306::69:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2408:38:69::1;2432:4;2438:7;2408:23;:38::i;8739:389:58:-:0;-1:-1:-1;;;;;8822:21:58;;8814:65;;;;-1:-1:-1;;;8814:65:58;;16184:2:110;8814:65:58;;;16166:21:110;16223:2;16203:18;;;16196:30;16262:33;16242:18;;;16235:61;16313:18;;8814:65:58;15982:355:110;8814:65:58;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:58;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:58;;1564:25:110;;;-1:-1:-1;;;;;9025:37:58;;;9042:1;;9025:37;;1552:2:110;1537:18;9025:37:58;;;;;;;2116:147;;:::o;6226:206:4:-;-1:-1:-1;;;;;6348:14:4;;6277:15;6348:14;;;:7;:14;;;;;929::66;;1061:1;1043:19;;;;929:14;6408:17:4;6294:138;6226:206;;;:::o;3890:176:69:-;3967:7;3993:66;4026:20;:18;:20::i;:::-;4048:10;8710:57:68;;-1:-1:-1;;;8710:57:68;;;20958:27:110;21001:11;;;20994:27;;;21037:12;;;21030:28;;;8674:7:68;;21074:12:110;;8710:57:68;;;;;;;;;;;;8700:68;;;;;;8693:75;;8581:194;;;;;6925:270;7048:7;7068:17;7087:18;7109:25;7120:4;7126:1;7129;7132;7109:10;:25::i;:::-;7067:67;;;;7144:18;7156:5;7144:11;:18::i;:::-;-1:-1:-1;7179:9:68;-1:-1:-1;6925:270:68;;;;;;;:::o;12123:121:58:-;;;;:::o;5788:197:84:-;5874:12;5905:73;5924:6;5932:4;5905:73;;;;;;;;;;;;;;;;;:18;:73::i;1355:203:83:-;1482:68;;-1:-1:-1;;;;;17094:15:110;;;1482:68:83;;;17076:34:110;17146:15;;17126:18;;;17119:43;17178:18;;;17171:34;;;1455:96:83;;1475:5;;-1:-1:-1;;;1505:27:83;17011:18:110;;1482:68:83;;;;-1:-1:-1;;1482:68:83;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:83;-1:-1:-1;;;;;;1482:68:83;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;-1:-1:-1;;;;;17408:32:110;;1050:58:83;;;17390:51:110;17457:18;;;17450:34;;;1023:86:83;;1043:5;;-1:-1:-1;;;1073:23:83;17363:18:110;;1050:58:83;17216:274:110;6548:139:52;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:52;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:52;-1:-1:-1;;;6628:51:52;;;6612:15;:68::i;5514:110::-;5560:57;5613:2;5576:40;;;;;;1564:25:110;;1552:2;1537:18;;1418:177;5576:40:52;;;;-1:-1:-1;;5576:40:52;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:52;-1:-1:-1;;;5576:40:52;;;5560:15;:57::i;:::-;5514:110;:::o;1832:1479:34:-;2053:14;;;;2135:5;:22;;;;;;;;:::i;:::-;;2131:100;;-1:-1:-1;;2183:6:34;;;;2214;;;;2131:100;2243:11;2266:1;:22;;;-1:-1:-1;;;;;2260:44:34;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2242:64;;;;2322:6;2318:593;;;2356:225;2382:7;2407:8;2441:4;2464:1;:15;;;2497:1;:8;;;2523:9;2550:14;2565:1;2550:17;;;;;;;;:::i;:::-;;;;;;;2356:8;:225::i;:::-;2344:237;;2318:593;;;2624:276;2655:7;2680:8;2706:1;:22;;;2746:1;:17;;;2781:1;:15;;;2814:9;2841:14;2873:13;2624;:276::i;:::-;2612:288;;2318:593;2938:1;:6;;;-1:-1:-1;;;;;2925:19:34;:9;-1:-1:-1;;;;;2925:19:34;;2921:384;;2992:6;;;;2986:44;;-1:-1:-1;;;2986:44:34;;-1:-1:-1;;;;;17408:32:110;;;2986:44:34;;;17390:51:110;17457:18;;;17450:34;;;2986:22:34;;;;;;17363:18:110;;2986:44:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2921:384;;;3073:221;3099:1;:6;;;3123:9;3150;3177:1;:15;;;3210:1;:8;;;3236:9;3263:14;3278:1;3263:17;;;;;;;;:::i;3073:221::-;3061:233;;2921:384;2069:1242;;;1832:1479;;;;;;;;:::o;2269:159:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2381:5:58::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:58::1;:17;2414:7:::0;2404;:17:::1;:::i;2459:297:69:-:0;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2592:22:69;;::::1;::::0;;::::1;::::0;2648:25;;;;;::::1;::::0;2683:12:::1;:25:::0;;;;2718:15:::1;:31:::0;2459:297::o;5189:1603:68:-;5315:7;;6239:66;6226:79;;6222:161;;;-1:-1:-1;6337:1:68;;-1:-1:-1;6341:30:68;6321:51;;6222:161;6396:1;:7;;6401:2;6396:7;;:18;;;;;6407:1;:7;;6412:2;6407:7;;6396:18;6392:100;;;-1:-1:-1;6446:1:68;;-1:-1:-1;6450:30:68;6430:51;;6392:100;6603:24;;;6586:14;6603:24;;;;;;;;;21324:25:110;;;21397:4;21385:17;;21365:18;;;21358:45;;;;21419:18;;;21412:34;;;21462:18;;;21455:34;;;6603:24:68;;21296:19:110;;6603:24:68;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6603:24:68;;-1:-1:-1;;6603:24:68;;;-1:-1:-1;;;;;;;6641:20:68;;6637:101;;6693:1;6697:29;6677:50;;;;;;;6637:101;6756:6;-1:-1:-1;6764:20:68;;-1:-1:-1;5189:1603:68;;;;;;;;:::o;570:631::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:561;;570:631;:::o;634:561::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:465;;788:34;;-1:-1:-1;;;788:34:68;;21702:2:110;788:34:68;;;21684:21:110;21741:2;21721:18;;;21714:30;21780:26;21760:18;;;21753:54;21824:18;;788:34:68;21500:348:110;730:465:68;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:356;;903:41;;-1:-1:-1;;;903:41:68;;22055:2:110;903:41:68;;;22037:21:110;22094:2;22074:18;;;22067:30;22133:33;22113:18;;;22106:61;22184:18;;903:41:68;21853:355:110;839:356:68;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:234;;1020:44;;-1:-1:-1;;;1020:44:68;;22415:2:110;1020:44:68;;;22397:21:110;22454:2;22434:18;;;22427:30;22493:34;22473:18;;;22466:62;-1:-1:-1;;;22544:18:110;;;22537:32;22586:19;;1020:44:68;22213:398:110;961:234:68;1094:30;1085:5;:39;;;;;;;;:::i;:::-;;1081:114;;1140:44;;-1:-1:-1;;;1140:44:68;;22818:2:110;1140:44:68;;;22800:21:110;22857:2;22837:18;;;22830:30;22896:34;22876:18;;;22869:62;-1:-1:-1;;;22947:18:110;;;22940:32;22989:19;;1140:44:68;22616:398:110;6169:326:84;6313:12;6338;6352:23;6379:6;-1:-1:-1;;;;;6379:17:84;6397:4;6379:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:65;;;;6419:69;6446:6;6454:7;6463:10;6475:12;6419:26;:69::i;:::-;6412:76;6169:326;-1:-1:-1;;;;;;6169:326:84:o;5196:642:83:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:83;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:83;;23513:2:110;5720:111:83;;;23495:21:110;23552:2;23532:18;;;23525:30;23591:34;23571:18;;;23564:62;-1:-1:-1;;;23642:18:110;;;23635:40;23692:19;;5720:111:83;23311:406:110;181:376:52;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;3318:1009:34:-;3541:4;3557:59;3586:8;3597:7;3606:9;3557:21;:59::i;:::-;3690:420;;;;;;;;-1:-1:-1;;;;;3690:420:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3897:15;3690:420;;;;;;;;;;;;;;;;;;-1:-1:-1;3690:420:34;;;;;;4125:45;;-1:-1:-1;;;4125:45:34;;24011:13:110;;24007:22;;4125:45:34;;;23989:41:110;24072:24;;24068:33;;24046:20;;;24039:63;24144:24;;24140:39;;;24118:20;;;24111:69;24222:24;;24218:33;;24196:20;;;24189:63;24290:24;24268:20;;;24261:54;24353:24;;24331:20;;;24324:54;24416:24;24394:20;;;24387:54;24483:24;;24479:33;;24457:20;;;24450:63;3690:420:34;;4125:37;;;;;;23923:19:110;;4125:45:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;4125:45:34;;;;;;;;-1:-1:-1;;4125:45:34;;;;;;;;;;;;:::i;:::-;;;4121:200;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4303:6;4293:17;;-1:-1:-1;;;4293:17:34;;;;;;;;:::i;4121:200::-;;;;;;;;;;;4217:9;-1:-1:-1;4210:16:34;;-1:-1:-1;4210:16:34;4334:1746;4591:14;4626:35;4664:266;;;;;;;;4710:5;-1:-1:-1;;;;;4704:22:34;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4664:266;;;;4748:24;4664:266;;-1:-1:-1;;;;;4664:266:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4907:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4907:12:34;-1:-1:-1;4664:266:34;;4978:194;;;;;;;;5030:4;4978:194;;;4941:34;4978:194;;;;;;;;;;;;;;;;4626:304;;-1:-1:-1;4941:34:34;5217:5;:22;;;;;;;;:::i;:::-;;5213:697;;5264:14;5279:1;5264:17;;;;;;;;:::i;:::-;;;;;;;5255:26;;5213:697;;;5335:13;5326:5;:22;;;;;;;;:::i;:::-;;5322:588;;5368:47;;-1:-1:-1;;;5368:47:34;;-1:-1:-1;;;;;5368:28:34;;;;;:47;;5397:10;;5409:5;;5368:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5368:47:34;;;;;;;;-1:-1:-1;;5368:47:34;;;;;;;;;;;;:::i;:::-;;;5364:536;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5878:6;5868:17;;-1:-1:-1;;;5868:17:34;;;;;;;;:::i;5364:536::-;5462:25;5490:14;5505:1;5490:17;;;;;;;;:::i;:::-;;;;;;;5462:45;;5557:13;5534:20;:36;:75;;5596:13;5534:75;;;5573:20;5534:75;5525:84;;5444:364;5416:392;5364:536;5920:66;5949:8;5960:6;5968:10;:17;;;5920:21;:66::i;:::-;6009:64;6022:6;6030:10;6042:5;6049:6;6057:15;6009:12;:64::i;:::-;5997:76;4334:1746;-1:-1:-1;;;;;;;;;;;;4334:1746:34:o;7671:628:84:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1476:19:64;;;8113:60:84;;;;-1:-1:-1;;;8113:60:84;;27261:2:110;8113:60:84;;;27243:21:110;27300:2;27280:18;;;27273:30;27339:31;27319:18;;;27312:59;27388:18;;8113:60:84;27059:353:110;8113:60:84;-1:-1:-1;8208:10:84;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;4108:223::-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;1818:573:83:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:83;;-1:-1:-1;;;2159:39:83;;2183:4;2159:39;;;12839:34:110;-1:-1:-1;;;;;12909:15:110;;;12889:18;;;12882:43;2159:15:83;;;;;12774:18:110;;2159:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:83;;27619:2:110;2121:163:83;;;27601:21:110;27658:2;27638:18;;;27631:30;27697:34;27677:18;;;27670:62;-1:-1:-1;;;27748:18:110;;;27741:52;27810:19;;2121:163:83;27417:418:110;2121:163:83;2321:62;;-1:-1:-1;;;;;17408:32:110;;2321:62:83;;;17390:51:110;17457:18;;;17450:34;;;2294:90:83;;2314:5;;-1:-1:-1;;;2344:22:83;17363:18:110;;2321:62:83;17216:274:110;6342:650:34;6580:68;;-1:-1:-1;;;6580:68:34;;6555:4;;-1:-1:-1;;;;;6580:19:34;;;;;:68;;6600:11;;6613:6;;6621:13;;6636:11;;6580:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6580:68:34;;;;;;;;-1:-1:-1;;6580:68:34;;;;;;;;;;;;:::i;:::-;;;6576:410;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6819:41;6842:6;6819:41;;;;;;;;;;;;;-1:-1:-1;;;6819:41:34;;;:22;:41::i;:::-;6815:161;;;6887:11;;-1:-1:-1;;;6887:11:34;;;;;;;;;;;6815:161;6954:6;6944:17;;-1:-1:-1;;;6944:17:34;;;;;;;;:::i;6576:410::-;6691:9;6704:1;6691:14;6687:38;;6714:11;;-1:-1:-1;;;6714:11:34;;;;;;;;;;;6687:38;6746:9;-1:-1:-1;6739:16:34;;8821:540:84;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:84;;;;;;;;:::i;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:84;;28621:2:110;5354:81:84;;;28603:21:110;28660:2;28640:18;;;28633:30;28699:34;28679:18;;;28672:62;-1:-1:-1;;;28750:18:110;;;28743:36;28796:19;;5354:81:84;28419:402:110;5354:81:84;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:84;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;4369:212:32:-;4479:4;4567:5;4550:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4540:34;;;;;;4529:5;4512:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4502:34;;;;;;:72;4495:79;;4369:212;;;;:::o;14:250:110:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:110;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:110;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:110:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:110;;835:42;;825:70;;891:1;888;881:12;906:315;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:110:o;1600:456::-;1677:6;1685;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:110;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1600:456;;1992:7;;-1:-1:-1;;;2046:2:110;2031:18;;;;2018:32;;1600:456::o;2432:271::-;2506:6;2559:2;2547:9;2538:7;2534:23;2530:32;2527:52;;;2575:1;2572;2565:12;2527:52;2614:9;2601:23;2653:1;2646:5;2643:12;2633:40;;2669:1;2666;2659:12;2935:127;2996:10;2991:3;2987:20;2984:1;2977:31;3027:4;3024:1;3017:15;3051:4;3048:1;3041:15;3067:249;3177:2;3158:13;;-1:-1:-1;;3154:27:110;3142:40;;3212:18;3197:34;;3233:22;;;3194:62;3191:88;;;3259:18;;:::i;:::-;3295:2;3288:22;-1:-1:-1;;3067:249:110:o;3321:1474::-;3441:6;3449;3457;3465;3473;3526:3;3514:9;3505:7;3501:23;3497:33;3494:53;;;3543:1;3540;3533:12;3494:53;3582:9;3569:23;3601:31;3626:5;3601:31;:::i;:::-;3651:5;-1:-1:-1;3675:2:110;3714:18;;;3701:32;3742:33;3701:32;3742:33;:::i;:::-;3794:7;-1:-1:-1;3853:2:110;3838:18;;3825:32;3866:33;3825:32;3866:33;:::i;:::-;3918:7;-1:-1:-1;3972:2:110;3957:18;;3944:32;;-1:-1:-1;4027:3:110;4012:19;;3999:33;4051:18;4081:14;;;4078:34;;;4108:1;4105;4098:12;4078:34;4146:6;4135:9;4131:22;4121:32;;4191:7;4184:4;4180:2;4176:13;4172:27;4162:55;;4213:1;4210;4203:12;4162:55;4249:2;4236:16;4271:2;4267;4264:10;4261:36;;;4277:18;;:::i;:::-;4323:2;4320:1;4316:10;4306:20;;4355:2;4349:9;4367:40;4403:2;4399;4395:11;4387:6;4367:40;:::i;:::-;4442:18;;;4518:11;;;4514:20;;;4476:15;;;4546:19;;;4543:39;;;4578:1;4575;4568:12;4543:39;4602:11;;;;4622:142;4638:6;4633:3;4630:15;4622:142;;;4704:17;;4692:30;;4655:12;;;;4742;;4622:142;;;4626:3;4783:6;4773:16;;;;;;;3321:1474;;;;;;;;:::o;4800:247::-;4859:6;4912:2;4900:9;4891:7;4887:23;4883:32;4880:52;;;4928:1;4925;4918:12;4880:52;4967:9;4954:23;4986:31;5011:5;4986:31;:::i;5052:556::-;5095:5;5148:3;5141:4;5133:6;5129:17;5125:27;5115:55;;5166:1;5163;5156:12;5115:55;5202:6;5189:20;5228:18;5224:2;5221:26;5218:52;;;5250:18;;:::i;:::-;5299:2;5293:9;5311:67;5366:2;5347:13;;-1:-1:-1;;5343:27:110;5372:4;5339:38;5293:9;5311:67;:::i;:::-;5402:2;5394:6;5387:18;5448:3;5441:4;5436:2;5428:6;5424:15;5420:26;5417:35;5414:55;;;5465:1;5462;5455:12;5414:55;5529:2;5522:4;5514:6;5510:17;5503:4;5495:6;5491:17;5478:54;5576:1;5552:15;;;5569:4;5548:26;5541:37;;;;5556:6;5052:556;-1:-1:-1;;;5052:556:110:o;5613:816::-;5728:6;5736;5744;5752;5760;5813:3;5801:9;5792:7;5788:23;5784:33;5781:53;;;5830:1;5827;5820:12;5781:53;5870:9;5857:23;5899:18;5940:2;5932:6;5929:14;5926:34;;;5956:1;5953;5946:12;5926:34;5979:50;6021:7;6012:6;6001:9;5997:22;5979:50;:::i;:::-;5969:60;;6082:2;6071:9;6067:18;6054:32;6038:48;;6111:2;6101:8;6098:16;6095:36;;;6127:1;6124;6117:12;6095:36;;6150:52;6194:7;6183:8;6172:9;6168:24;6150:52;:::i;:::-;6140:62;;;6252:2;6241:9;6237:18;6224:32;6265:31;6290:5;6265:31;:::i;:::-;5613:816;;;;-1:-1:-1;6315:5:110;;6367:2;6352:18;;6339:32;;-1:-1:-1;6418:3:110;6403:19;6390:33;;5613:816;-1:-1:-1;;5613:816:110:o;6434:829::-;6545:6;6553;6561;6569;6577;6585;6593;6646:3;6634:9;6625:7;6621:23;6617:33;6614:53;;;6663:1;6660;6653:12;6614:53;6702:9;6689:23;6721:31;6746:5;6721:31;:::i;:::-;6771:5;-1:-1:-1;6828:2:110;6813:18;;6800:32;6841:33;6800:32;6841:33;:::i;:::-;6893:7;-1:-1:-1;6947:2:110;6932:18;;6919:32;;-1:-1:-1;6998:2:110;6983:18;;6970:32;;-1:-1:-1;7054:3:110;7039:19;;7026:33;7103:4;7090:18;;7078:31;;7068:59;;7123:1;7120;7113:12;7068:59;6434:829;;;;-1:-1:-1;6434:829:110;;;;7146:7;7200:3;7185:19;;7172:33;;-1:-1:-1;7252:3:110;7237:19;;;7224:33;;6434:829;-1:-1:-1;;6434:829:110:o;7268:388::-;7336:6;7344;7397:2;7385:9;7376:7;7372:23;7368:32;7365:52;;;7413:1;7410;7403:12;7365:52;7452:9;7439:23;7471:31;7496:5;7471:31;:::i;:::-;7521:5;-1:-1:-1;7578:2:110;7563:18;;7550:32;7591:33;7550:32;7591:33;:::i;:::-;7643:7;7633:17;;;7268:388;;;;;:::o;7661:380::-;7740:1;7736:12;;;;7783;;;7804:61;;7858:4;7850:6;7846:17;7836:27;;7804:61;7911:2;7903:6;7900:14;7880:18;7877:38;7874:161;;7957:10;7952:3;7948:20;7945:1;7938:31;7992:4;7989:1;7982:15;8020:4;8017:1;8010:15;8046:127;8107:10;8102:3;8098:20;8095:1;8088:31;8138:4;8135:1;8128:15;8162:4;8159:1;8152:15;8178:125;8243:9;;;8264:10;;;8261:36;;;8277:18;;:::i;8308:138::-;8387:13;;8409:31;8387:13;8409:31;:::i;:::-;8308:138;;;:::o;8451:165::-;8529:13;;8582:8;8571:20;;8561:31;;8551:59;;8606:1;8603;8596:12;8621:1082;8722:6;8753:3;8797:2;8785:9;8776:7;8772:23;8768:32;8765:52;;;8813:1;8810;8803:12;8765:52;8846:2;8840:9;8876:15;;;;8921:18;8906:34;;8942:22;;;8903:62;8900:88;;;8968:18;;:::i;:::-;9008:10;9004:2;8997:22;9043:40;9073:9;9043:40;:::i;:::-;9035:6;9028:56;9117:48;9161:2;9150:9;9146:18;9117:48;:::i;:::-;9112:2;9104:6;9100:15;9093:73;9199:49;9244:2;9233:9;9229:18;9199:49;:::i;:::-;9194:2;9186:6;9182:15;9175:74;9282:49;9327:2;9316:9;9312:18;9282:49;:::i;:::-;9277:2;9269:6;9265:15;9258:74;9366:50;9411:3;9400:9;9396:19;9366:50;:::i;:::-;9360:3;9352:6;9348:16;9341:76;9451:50;9496:3;9485:9;9481:19;9451:50;:::i;:::-;9445:3;9437:6;9433:16;9426:76;9536:50;9581:3;9570:9;9566:19;9536:50;:::i;:::-;9530:3;9522:6;9518:16;9511:76;9621:50;9666:3;9655:9;9651:19;9621:50;:::i;:::-;9615:3;9603:16;;9596:76;9607:6;8621:1082;-1:-1:-1;;;;8621:1082:110:o;9916:184::-;9986:6;10039:2;10027:9;10018:7;10014:23;10010:32;10007:52;;;10055:1;10052;10045:12;10007:52;-1:-1:-1;10078:16:110;;9916:184;-1:-1:-1;9916:184:110:o;10105:127::-;10166:10;10161:3;10157:20;10154:1;10147:31;10197:4;10194:1;10187:15;10221:4;10218:1;10211:15;10237:128;10304:9;;;10325:11;;;10322:37;;;10339:18;;:::i;10370:251::-;10440:6;10493:2;10481:9;10472:7;10468:23;10464:32;10461:52;;;10509:1;10506;10499:12;10461:52;10541:9;10535:16;10560:31;10585:5;10560:31;:::i;10626:127::-;10687:10;10682:3;10678:20;10675:1;10668:31;10718:4;10715:1;10708:15;10742:4;10739:1;10732:15;12936:246;13083:2;13068:18;;13116:1;13105:13;;13095:47;;13122:18;;:::i;:::-;13151:25;;;12936:246;:::o;15570:407::-;15772:2;15754:21;;;15811:2;15791:18;;;15784:30;15850:34;15845:2;15830:18;;15823:62;-1:-1:-1;;;15916:2:110;15901:18;;15894:41;15967:3;15952:19;;15570:407::o;17495:291::-;17672:2;17661:9;17654:21;17635:4;17692:45;17733:2;17722:9;17718:18;17710:6;17692:45;:::i;:::-;17684:53;;17773:6;17768:2;17757:9;17753:18;17746:34;17495:291;;;;;:::o;17791:164::-;17867:13;;17916;;17909:21;17899:32;;17889:60;;17945:1;17942;17935:12;17960:324;18045:6;18053;18061;18114:2;18102:9;18093:7;18089:23;18085:32;18082:52;;;18130:1;18127;18120:12;18082:52;18153:37;18180:9;18153:37;:::i;:::-;18143:47;;18230:2;18219:9;18215:18;18209:25;18199:35;;18274:2;18263:9;18259:18;18253:25;18243:35;;17960:324;;;;;:::o;18289:202::-;18356:6;18409:2;18397:9;18388:7;18384:23;18380:32;18377:52;;;18425:1;18422;18415:12;18377:52;18448:37;18475:9;18448:37;:::i;18622:545::-;18724:2;18719:3;18716:11;18713:448;;;18760:1;18785:5;18781:2;18774:17;18830:4;18826:2;18816:19;18900:2;18888:10;18884:19;18881:1;18877:27;18871:4;18867:38;18936:4;18924:10;18921:20;18918:47;;;-1:-1:-1;18959:4:110;18918:47;19014:2;19009:3;19005:12;19002:1;18998:20;18992:4;18988:31;18978:41;;19069:82;19087:2;19080:5;19077:13;19069:82;;;19132:17;;;19113:1;19102:13;19069:82;;19343:1352;19469:3;19463:10;19496:18;19488:6;19485:30;19482:56;;;19518:18;;:::i;:::-;19547:97;19637:6;19597:38;19629:4;19623:11;19597:38;:::i;:::-;19591:4;19547:97;:::i;:::-;19699:4;;19763:2;19752:14;;19780:1;19775:663;;;;20482:1;20499:6;20496:89;;;-1:-1:-1;20551:19:110;;;20545:26;20496:89;-1:-1:-1;;19300:1:110;19296:11;;;19292:24;19288:29;19278:40;19324:1;19320:11;;;19275:57;20598:81;;19745:944;;19775:663;18569:1;18562:14;;;18606:4;18593:18;;-1:-1:-1;;19811:20:110;;;19929:236;19943:7;19940:1;19937:14;19929:236;;;20032:19;;;20026:26;20011:42;;20124:27;;;;20092:1;20080:14;;;;19959:19;;19929:236;;;19933:3;20193:6;20184:7;20181:19;20178:201;;;20254:19;;;20248:26;-1:-1:-1;;20337:1:110;20333:14;;;20349:3;20329:24;20325:37;20321:42;20306:58;20291:74;;20178:201;-1:-1:-1;;;;;20425:1:110;20409:14;;;20405:22;20392:36;;-1:-1:-1;19343:1352:110:o;23019:287::-;23148:3;23186:6;23180:13;23202:66;23261:6;23256:3;23249:4;23241:6;23237:17;23202:66;:::i;:::-;23284:16;;;;;23019:287;-1:-1:-1;;23019:287:110:o;24524:179::-;24559:3;24601:1;24583:16;24580:23;24577:120;;;24647:1;24644;24641;24626:23;-1:-1:-1;24684:1:110;24678:8;24673:3;24669:18;24524:179;:::o;24708:671::-;24747:3;24789:4;24771:16;24768:26;24765:39;;;24708:671;:::o;24765:39::-;24831:2;24825:9;-1:-1:-1;;24896:16:110;24892:25;;24889:1;24825:9;24868:50;24947:4;24941:11;24971:16;25006:18;25077:2;25070:4;25062:6;25058:17;25055:25;25050:2;25042:6;25039:14;25036:45;25033:58;;;25084:5;;;;;24708:671;:::o;25033:58::-;25121:6;25115:4;25111:17;25100:28;;25157:3;25151:10;25184:2;25176:6;25173:14;25170:27;;;25190:5;;;;;;24708:671;:::o;25170:27::-;25274:2;25255:16;25249:4;25245:27;25241:36;25234:4;25225:6;25220:3;25216:16;25212:27;25209:69;25206:82;;;25281:5;;;;;;24708:671;:::o;25206:82::-;25297:57;25348:4;25339:6;25331;25327:19;25323:30;25317:4;25297:57;:::i;:::-;-1:-1:-1;25370:3:110;;24708:671;-1:-1:-1;;;;;24708:671:110:o;25573:686::-;25662:5;25656:12;25651:3;25644:25;25626:3;25715:4;25708:5;25704:16;25698:23;25757:1;25743:12;25740:19;25730:53;;25763:18;;:::i;:::-;25815:12;25808:4;25803:3;25799:14;25792:36;;25876:4;25869:5;25865:16;25859:23;25918:1;25914;25909:3;25905:11;25901:19;25972:2;25956:14;25952:23;25945:4;25940:3;25936:14;25929:47;26037:2;26029:4;26022:5;26018:16;26012:23;26008:32;26001:4;25996:3;25992:14;25985:56;;;26090:4;26083:5;26079:16;26073:23;26066:4;26061:3;26057:14;26050:47;26145:4;26138:5;26134:16;26128:23;26183:4;26176;26171:3;26167:14;26160:28;26204:49;26247:4;26242:3;26238:14;26222;26204:49;:::i;26624:430::-;26901:3;26890:9;26883:22;26864:4;26922:57;26974:3;26963:9;26959:19;26951:6;26922:57;:::i;:::-;26914:65;;26988:60;27044:2;27033:9;27029:18;27021:6;26386:12;;-1:-1:-1;;;;;26382:21:110;;;26370:34;;26467:4;26456:16;;;26450:23;26443:31;26436:39;26420:14;;;26413:63;26529:4;26518:16;;;26512:23;26508:32;;;26492:14;;;26485:56;26604:4;26593:16;;;26587:23;26580:31;26573:39;26557:14;;26550:63;26264:355;27840:574;28173:3;28162:9;28155:22;28136:4;28194:57;28246:3;28235:9;28231:19;28223:6;28194:57;:::i;:::-;28186:65;;28260:60;28316:2;28305:9;28301:18;28293:6;26386:12;;-1:-1:-1;;;;;26382:21:110;;;26370:34;;26467:4;26456:16;;;26450:23;26443:31;26436:39;26420:14;;;26413:63;26529:4;26518:16;;;26512:23;26508:32;;;26492:14;;;26485:56;26604:4;26593:16;;;26587:23;26580:31;26573:39;26557:14;;26550:63;26264:355;28260:60;28351:3;28336:19;;28329:35;;;;28395:3;28380:19;28373:35;27840:574;;-1:-1:-1;;27840:574:110:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "circulatingSupply()": "9358928b",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getExchangeRate()": "e6aa216c",
    "getExchangeRate(uint8)": "4d02a3f7",
    "getOZ()": "59c64e12",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,uint256,uint256)": "74823132",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "recicledSupply()": "8b5f1a6b",
    "redeem(address,address,address,uint256,uint256[])": "6afa0287",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"OZError01\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError02\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"OZError08\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"OZError09\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorCode\",\"type\":\"string\"}],\"name\":\"OZError10\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"OZError18\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OZError19\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError20\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OZError21\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum QuoteAsset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZ\",\"outputs\":[{\"internalType\":\"contract ozIDiamond\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ozDiamond_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"communityAmount_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s_\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recicledSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ozlAmountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut_\",\"type\":\"uint256[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OZError01(string)\":[{\"details\":\"See https://eips.ethereum.org/EIPS/eip-6093\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"params\":{\"owner\":\"The address whose nonce is to be retrieved.\"},\"returns\":{\"_0\":\"The current nonce as a uint256 value.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Uses the EIP-2612 standard.\",\"params\":{\"deadline\":\"The expiration time of the signature, specified as a Unix timestamp.\",\"owner\":\"The address of the token owner.\",\"r\":\"The first 32 bytes of the signature.\",\"s_\":\"The second 32 bytes of the signature.\",\"spender\":\"The address of the spender.\",\"v\":\"The recovery byte of the signature.\",\"value\":\"The amount of tokens to be approved.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"errors\":{\"OZError01(string)\":[{\"notice\":\"Standard ERC20 Errors\"}]},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the EIP-712 DOMAIN_SEPARATOR.\"},\"nonces(address)\":{\"notice\":\"Returns the current nonce for the given owner address.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x5f37269de4985bc8c76617a7cf3f019a54859a7c6d019425876f66fd5fcdacef\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9a56fbe82e6491b26a90af7887ffa3ca95b78c64497ed5d230357e1a1edd1da3\",\"dweb:/ipfs/QmSKPgKW7yct4BZ5YRvJ9akxY9YLZBPcUuG11FwcgwUo36\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b\",\"urls\":[\"bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe\",\"dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0xd1674e581049103c4cc8291635945fcff3e46c22b1e02be27b3f95f0febcbd5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b6df7c2f3a07a73446db6a058dd57e25f89f7206f9a904357990f6842958047f\",\"dweb:/ipfs/QmYk4FqLSGTNnQCw1nPw7ivVtDbEczZyNoLBx2xbpCFy1t\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851\",\"dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387\",\"dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x869edad65d3f87dbd01a8b60463c47d6fb120ab8505702518a7454bb39467c21\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4836e64993d2e6fec5972442776da4f11aa2e9b5900f195b791886825129d8e1\",\"dweb:/ipfs/QmQ5WKZeyF9SfEoYKZFPzn6jRCAJ7FmN9m3ZDvFkwmvXay\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845\",\"dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv\"]},\"contracts/libraries/TradingLib.sol\":{\"keccak256\":\"0x6c8232da33fb83d890c816bb9dc398e61f9ee7f7813e02595307e6272b64f85d\",\"urls\":[\"bzz-raw://5c845a64d6d08367898b719a8a0477be54836f524aae63c0f469deeb66f0e4ef\",\"dweb:/ipfs/QmaHFdbd2f8Qzrzo4mWwybLJ7gaStrKPRraLPPvqWzgdra\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorMsg",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError01"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError02"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockTimestamp",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError08"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError09"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorCode",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError10"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError18"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError19"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError20"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError21"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "circulatingSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum QuoteAsset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZ",
          "outputs": [
            {
              "internalType": "contract ozIDiamond",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ozDiamond_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "communityAmount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s_",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "recicledSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ozlAmountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "_0": "A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "params": {
              "owner": "The address whose nonce is to be retrieved."
            },
            "returns": {
              "_0": "The current nonce as a uint256 value."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Uses the EIP-2612 standard.",
            "params": {
              "deadline": "The expiration time of the signature, specified as a Unix timestamp.",
              "owner": "The address of the token owner.",
              "r": "The first 32 bytes of the signature.",
              "s_": "The second 32 bytes of the signature.",
              "spender": "The address of the spender.",
              "v": "The recovery byte of the signature.",
              "value": "The amount of tokens to be approved."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "Returns the EIP-712 DOMAIN_SEPARATOR."
          },
          "nonces(address)": {
            "notice": "Returns the current nonce for the given owner address."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x5f37269de4985bc8c76617a7cf3f019a54859a7c6d019425876f66fd5fcdacef",
        "urls": [
          "bzz-raw://9a56fbe82e6491b26a90af7887ffa3ca95b78c64497ed5d230357e1a1edd1da3",
          "dweb:/ipfs/QmSKPgKW7yct4BZ5YRvJ9akxY9YLZBPcUuG11FwcgwUo36"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b",
        "urls": [
          "bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe",
          "dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv"
        ],
        "license": null
      },
      "contracts/OZL.sol": {
        "keccak256": "0xd1674e581049103c4cc8291635945fcff3e46c22b1e02be27b3f95f0febcbd5b",
        "urls": [
          "bzz-raw://b6df7c2f3a07a73446db6a058dd57e25f89f7206f9a904357990f6842958047f",
          "dweb:/ipfs/QmYk4FqLSGTNnQCw1nPw7ivVtDbEczZyNoLBx2xbpCFy1t"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0x3f309c7f958965eae8932804992b7b761dc9e76fb4c2fccd8d2a69711113a456",
        "urls": [
          "bzz-raw://061c302f645d35871e0512eddfcaa407a26ffc26b6353eab3842cfcd609d4851",
          "dweb:/ipfs/QmW8UUQo5gsfnTg5VvYoNPzLkRy4L6pgtrGaMnHXeVTY8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d",
        "urls": [
          "bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387",
          "dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0x869edad65d3f87dbd01a8b60463c47d6fb120ab8505702518a7454bb39467c21",
        "urls": [
          "bzz-raw://4836e64993d2e6fec5972442776da4f11aa2e9b5900f195b791886825129d8e1",
          "dweb:/ipfs/QmQ5WKZeyF9SfEoYKZFPzn6jRCAJ7FmN9m3ZDvFkwmvXay"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f",
        "urls": [
          "bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845",
          "dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TradingLib.sol": {
        "keccak256": "0x6c8232da33fb83d890c816bb9dc398e61f9ee7f7813e02595307e6272b64f85d",
        "urls": [
          "bzz-raw://5c845a64d6d08367898b719a8a0477be54836f524aae63c0f469deeb66f0e4ef",
          "dweb:/ipfs/QmaHFdbd2f8Qzrzo4mWwybLJ7gaStrKPRraLPPvqWzgdra"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 1053,
    "exportedSymbols": {
      "Address": [
        42203
      ],
      "CountersUpgradeable": [
        39104
      ],
      "ECDSAUpgradeable": [
        39718
      ],
      "EIP712Upgradeable": [
        39868
      ],
      "ERC20Upgradeable": [
        37727
      ],
      "FixedPointMathLib": [
        5102
      ],
      "IERC20": [
        41461
      ],
      "IERC20Permit": [
        3987
      ],
      "OZError01": [
        301
      ],
      "OZError02": [
        303
      ],
      "OZError03": [
        325
      ],
      "OZError04": [
        331
      ],
      "OZError05": [
        335
      ],
      "OZError06": [
        343
      ],
      "OZError07": [
        351
      ],
      "OZError08": [
        357
      ],
      "OZError09": [
        363
      ],
      "OZError10": [
        307
      ],
      "OZError11": [
        311
      ],
      "OZError12": [
        315
      ],
      "OZError13": [
        319
      ],
      "OZError14": [
        323
      ],
      "OZError15": [
        365
      ],
      "OZError16": [
        367
      ],
      "OZError17": [
        369
      ],
      "OZError18": [
        373
      ],
      "OZError19": [
        377
      ],
      "OZError20": [
        379
      ],
      "OZError21": [
        383
      ],
      "OZL": [
        1052
      ],
      "OZLrewards": [
        177
      ],
      "QuoteAsset": [
        3993
      ],
      "SafeERC20": [
        41873
      ],
      "StorageSlot": [
        42335
      ],
      "TradingLib": [
        6981
      ],
      "TradingPackage": [
        100
      ],
      "console": [
        28492
      ],
      "ozIDiamond": [
        4736
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:7900:4",
    "nodes": [
      {
        "id": 470,
        "nodeType": "PragmaDirective",
        "src": "45:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 472,
        "nodeType": "ImportDirective",
        "src": "71:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 37728,
        "symbolAliases": [
          {
            "foreign": {
              "id": 471,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37727,
              "src": "79:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 474,
        "nodeType": "ImportDirective",
        "src": "180:59:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "./interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 3988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 473,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3987,
              "src": "188:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 476,
        "nodeType": "ImportDirective",
        "src": "240:68:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 5103,
        "symbolAliases": [
          {
            "foreign": {
              "id": 475,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5102,
              "src": "248:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 478,
        "nodeType": "ImportDirective",
        "src": "309:74:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "file": "@openzeppelin/contracts/utils/StorageSlot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 42336,
        "symbolAliases": [
          {
            "foreign": {
              "id": 477,
              "name": "StorageSlot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42335,
              "src": "317:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 480,
        "nodeType": "ImportDirective",
        "src": "384:55:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIDiamond.sol",
        "file": "./interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 4737,
        "symbolAliases": [
          {
            "foreign": {
              "id": 479,
              "name": "ozIDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4736,
              "src": "392:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 482,
        "nodeType": "ImportDirective",
        "src": "440:49:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "./interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 4170,
        "symbolAliases": [
          {
            "foreign": {
              "id": 481,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3993,
              "src": "448:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 484,
        "nodeType": "ImportDirective",
        "src": "490:66:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 42204,
        "symbolAliases": [
          {
            "foreign": {
              "id": 483,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42203,
              "src": "498:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 486,
        "nodeType": "ImportDirective",
        "src": "557:82:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 41874,
        "symbolAliases": [
          {
            "foreign": {
              "id": 485,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41873,
              "src": "565:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 488,
        "nodeType": "ImportDirective",
        "src": "640:70:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 41462,
        "symbolAliases": [
          {
            "foreign": {
              "id": 487,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41461,
              "src": "648:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 490,
        "nodeType": "ImportDirective",
        "src": "711:54:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/TradingLib.sol",
        "file": "./libraries/TradingLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 6982,
        "symbolAliases": [
          {
            "foreign": {
              "id": 489,
              "name": "TradingLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6981,
              "src": "719:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 493,
        "nodeType": "ImportDirective",
        "src": "766:60:4",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "./AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 178,
        "symbolAliases": [
          {
            "foreign": {
              "id": 491,
              "name": "TradingPackage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 100,
              "src": "774:14:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 492,
              "name": "OZLrewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 177,
              "src": "790:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 495,
        "nodeType": "ImportDirective",
        "src": "827:123:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/draft-EIP712Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 39869,
        "symbolAliases": [
          {
            "foreign": {
              "id": 494,
              "name": "EIP712Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39868,
              "src": "835:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 497,
        "nodeType": "ImportDirective",
        "src": "951:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 39105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 496,
              "name": "CountersUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39104,
              "src": "959:19:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 499,
        "nodeType": "ImportDirective",
        "src": "1060:115:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/utils/cryptography/ECDSAUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 39719,
        "symbolAliases": [
          {
            "foreign": {
              "id": 498,
              "name": "ECDSAUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39718,
              "src": "1068:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 500,
        "nodeType": "ImportDirective",
        "src": "1176:22:4",
        "nodes": [],
        "absolutePath": "contracts/Errors.sol",
        "file": "./Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 501,
        "nodeType": "ImportDirective",
        "src": "1200:31:4",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1053,
        "sourceUnit": 28493,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1052,
        "nodeType": "ContractDefinition",
        "src": "1264:6681:4",
        "nodes": [
          {
            "id": 509,
            "nodeType": "UsingForDirective",
            "src": "1323:58:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 506,
              "name": "CountersUpgradeable",
              "nameLocations": [
                "1329:19:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39104,
              "src": "1329:19:4"
            },
            "typeName": {
              "id": 508,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 507,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "1353:19:4",
                  "1373:7:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39036,
                "src": "1353:27:4"
              },
              "referencedDeclaration": 39036,
              "src": "1353:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$39036_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 512,
            "nodeType": "UsingForDirective",
            "src": "1386:33:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 510,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1392:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5102,
              "src": "1392:17:4"
            },
            "typeName": {
              "id": 511,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1414:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 525,
            "nodeType": "VariableDeclaration",
            "src": "1425:98:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_OZ_DIAMOND_SLOT",
            "nameLocation": "1450:16:4",
            "scope": 1052,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 513,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1425:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 523,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7a4469616d6f6e642e73746f726167652e736c6f74",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1492:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            },
                            "value": "ozDiamond.storage.slot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            }
                          ],
                          "id": 518,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1482:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1482:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1477:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 516,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1477:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1521:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "1477:45:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 515,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1469:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 514,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1469:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 524,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1469:54:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 530,
            "nodeType": "VariableDeclaration",
            "src": "1530:147:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_PERMIT_TYPEHASH",
            "nameLocation": "1555:16:4",
            "scope": 1052,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 526,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1530:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 528,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1592:84:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 527,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1582:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 529,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1582:95:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 535,
            "nodeType": "VariableDeclaration",
            "src": "1684:63:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "1740:7:4",
            "scope": 1052,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$39036_storage_$",
              "typeString": "mapping(address => struct CountersUpgradeable.Counter)"
            },
            "typeName": {
              "id": 534,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 531,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1692:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1684:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$39036_storage_$",
                "typeString": "mapping(address => struct CountersUpgradeable.Counter)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 533,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 532,
                  "name": "CountersUpgradeable.Counter",
                  "nameLocations": [
                    "1703:19:4",
                    "1723:7:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39036,
                  "src": "1703:27:4"
                },
                "referencedDeclaration": 39036,
                "src": "1703:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$39036_storage_ptr",
                  "typeString": "struct CountersUpgradeable.Counter"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 542,
            "nodeType": "FunctionDefinition",
            "src": "1755:53:4",
            "nodes": [],
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "1769:39:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 538,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37115,
                      "src": "1779:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:22:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:2:4"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:4"
            },
            "scope": 1052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 594,
            "nodeType": "FunctionDefinition",
            "src": "1815:764:4",
            "nodes": [],
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "2009:570:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 558,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "2032:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 559,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "2039:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 557,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37163,
                      "src": "2019:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:28:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 563,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "2071:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        }
                      ],
                      "id": 562,
                      "name": "__EIP712_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39750,
                      "src": "2057:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2057:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:25:4"
                },
                {
                  "expression": {
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 570,
                            "name": "_OZ_DIAMOND_SLOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2119:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 567,
                            "name": "StorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42335,
                            "src": "2092:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42335_$",
                              "typeString": "type(library StorageSlot)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2104:14:4",
                          "memberName": "getAddressSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42257,
                          "src": "2092:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$42231_storage_ptr_$",
                            "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2092:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$42231_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot storage pointer"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2137:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42230,
                      "src": "2092:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 573,
                      "name": "ozDiamond_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "2145:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2092:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:63:4"
                },
                {
                  "documentation": " Add here later the vesting strategy using\n OP's VestingWallet.sol / https://medium.com/cardstack/building-a-token-vesting-contract-b368a954f99\n Use linear distribution, not all unlocked at once.\n When they vest, add it to circulating supply.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 579,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2487:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1052",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1052",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2479:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 577,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2479:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2479:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 581,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "2494:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 576,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37539,
                      "src": "2473:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 587,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2536:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1052",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1052",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2528:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2528:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 589,
                        "name": "ozDiamond_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "2543:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 590,
                        "name": "communityAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "2555:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37483,
                      "src": "2518:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:54:4"
                }
              ]
            },
            "functionSelector": "74823132",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 555,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 554,
                  "name": "initializer",
                  "nameLocations": [
                    "1997:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37036,
                  "src": "1997:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1997:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "1824:10:4",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1858:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1844:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1888:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1874:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "ozDiamond_",
                  "nameLocation": "1913:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1905:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1938:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1933:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "communityAmount_",
                  "nameLocation": "1965:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "1960:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:153:4"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:4"
            },
            "scope": 1052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 606,
            "nodeType": "FunctionDefinition",
            "src": "2587:115:4",
            "nodes": [],
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "2642:60:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 601,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3993,
                          "src": "2680:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3993_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2691:3:4",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3990,
                        "src": "2680:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 599,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2659:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OZL_$1052",
                          "typeString": "contract OZL"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2664:15:4",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 669,
                      "src": "2659:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$3993_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 604,
                  "nodeType": "Return",
                  "src": "2652:43:4"
                }
              ]
            },
            "functionSelector": "e6aa216c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2596:15:4",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2611:2:4"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 606,
                  "src": "2636:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:6:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 669,
            "nodeType": "FunctionDefinition",
            "src": "2709:511:4",
            "nodes": [],
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "2779:441:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "ONE",
                      "nameLocation": "2794:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "2789:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2789:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 617,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2800:7:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2789:18:4"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "rETH",
                      "nameLocation": "2825:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "2817:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2817:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 625,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 620,
                            "name": "getOZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "2832:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4736_$",
                              "typeString": "function () view returns (contract ozIDiamond)"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2832:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2840:14:4",
                        "memberName": "tradingPackage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4715,
                        "src": "2832:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                          "typeString": "function () view external returns (struct TradingPackage memory)"
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2832:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage memory"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2857:4:4",
                    "memberName": "rETH",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 97,
                    "src": "2832:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2817:44:4"
                },
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "totalFeesRETH",
                      "nameLocation": "2876:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "2871:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2871:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 637,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 634,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2929:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$1052",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$1052",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2921:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2921:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2921:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 629,
                            "name": "rETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "2905:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 628,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3987,
                          "src": "2892:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$3987_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2892:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$3987",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2911:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3873,
                      "src": "2892:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2871:64:4"
                },
                {
                  "assignments": [
                    639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "totalFeesQuote",
                      "nameLocation": "2951:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "2946:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2946:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 650,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 640,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2968:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 641,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3993,
                          "src": "2978:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3993_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2989:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3992,
                        "src": "2978:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "2968:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 646,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "3047:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                            "typeString": "enum QuoteAsset"
                          }
                        },
                        {
                          "id": 647,
                          "name": "totalFeesRETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "3055:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                            "typeString": "enum QuoteAsset"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 645,
                        "name": "_convertToQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "3031:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3993_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (enum QuoteAsset,uint256) view returns (uint256)"
                        }
                      },
                      "id": 648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3031:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2968:101:4",
                    "trueExpression": {
                      "id": 644,
                      "name": "totalFeesRETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "3005:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2946:123:4"
                },
                {
                  "assignments": [
                    652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 652,
                      "mutability": "mutable",
                      "name": "c_Supply",
                      "nameLocation": "3085:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 668,
                      "src": "3080:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 651,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3080:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 655,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 653,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "3096:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3080:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 656,
                      "name": "c_Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "3130:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3142:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3130:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 661,
                  "nodeType": "IfStatement",
                  "src": "3126:29:4",
                  "trueBody": {
                    "expression": {
                      "id": 659,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "3152:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 613,
                    "id": 660,
                    "nodeType": "Return",
                    "src": "3145:10:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 664,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "3188:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 665,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "3204:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 662,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "3173:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3177:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5033,
                      "src": "3173:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 613,
                  "id": 667,
                  "nodeType": "Return",
                  "src": "3166:47:4"
                }
              ]
            },
            "functionSelector": "4d02a3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2718:15:4",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2745:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "2734:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 608,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 607,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2734:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3993,
                      "src": "2734:10:4"
                    },
                    "referencedDeclaration": 3993,
                    "src": "2734:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:19:4"
            },
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "2773:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2772:6:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 740,
            "nodeType": "FunctionDefinition",
            "src": "3227:520:4",
            "nodes": [],
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "3322:425:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3345:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "3332:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3332:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "724554485f4554482829",
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3376:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        },
                        "value": "rETH_ETH()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        }
                      ],
                      "expression": {
                        "id": 681,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3352:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3356:19:4",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "3352:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3332:57:4"
                },
                {
                  "expression": {
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 686,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "3399:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 691,
                                "name": "getOZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "3441:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4736_$",
                                  "typeString": "function () view returns (contract ozIDiamond)"
                                }
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3441:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                                "typeString": "contract ozIDiamond"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                                "typeString": "contract ozIDiamond"
                              }
                            ],
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3433:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 689,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3433:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3433:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 694,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "3451:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 687,
                          "name": "Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42203,
                          "src": "3406:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Address_$42203_$",
                            "typeString": "type(library Address)"
                          }
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3414:18:4",
                        "memberName": "functionStaticCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42044,
                        "src": "3406:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (address,bytes memory) view returns (bytes memory)"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3406:50:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3399:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "3399:57:4"
                },
                {
                  "assignments": [
                    699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 699,
                      "mutability": "mutable",
                      "name": "reth_eth",
                      "nameLocation": "3472:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "3467:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 698,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3467:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "3494:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3501:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 703,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3501:4:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 705,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3500:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 700,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3483:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3487:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3483:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3467:40:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                      "typeString": "enum QuoteAsset"
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 708,
                      "name": "qt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "3522:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 709,
                        "name": "QuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "3529:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3993_$",
                          "typeString": "type(enum QuoteAsset)"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3540:3:4",
                      "memberName": "USD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3990,
                      "src": "3529:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "src": "3522:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 724,
                        "name": "qt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 672,
                        "src": "3641:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 725,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3993,
                          "src": "3648:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3993_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3659:3:4",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3991,
                        "src": "3648:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "3641:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 737,
                    "nodeType": "IfStatement",
                    "src": "3638:103:4",
                    "trueBody": {
                      "id": 736,
                      "nodeType": "Block",
                      "src": "3664:77:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 728,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "3678:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 731,
                                  "name": "reth_eth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "3712:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3722:7:4",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 729,
                                  "name": "totalFeesRETH_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 674,
                                  "src": "3686:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3701:10:4",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5033,
                                "src": "3686:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3686:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3678:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 735,
                          "nodeType": "ExpressionStatement",
                          "src": "3678:52:4"
                        }
                      ]
                    }
                  },
                  "id": 738,
                  "nodeType": "IfStatement",
                  "src": "3518:223:4",
                  "trueBody": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "3545:87:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 712,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "3559:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 715,
                                      "name": "getOZ",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "3593:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4736_$",
                                        "typeString": "function () view returns (contract ozIDiamond)"
                                      }
                                    },
                                    "id": 716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3593:7:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                                      "typeString": "contract ozIDiamond"
                                    }
                                  },
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3601:8:4",
                                  "memberName": "rETH_USD",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4601,
                                  "src": "3593:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3593:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3613:7:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "id": 713,
                                "name": "totalFeesRETH_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "3567:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3582:10:4",
                              "memberName": "mulDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5033,
                              "src": "3567:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3567:54:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3559:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 722,
                        "nodeType": "ExpressionStatement",
                        "src": "3559:62:4"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToQuote",
            "nameLocation": "3236:15:4",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "qt_",
                  "nameLocation": "3263:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "3252:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 670,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "3252:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3993,
                      "src": "3252:10:4"
                    },
                    "referencedDeclaration": 3993,
                    "src": "3252:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "totalFeesRETH_",
                  "nameLocation": "3273:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "3268:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3251:37:4"
            },
            "returnParameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "3315:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "3310:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3309:12:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 878,
            "nodeType": "FunctionDefinition",
            "src": "3754:1325:4",
            "nodes": [],
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "3955:1124:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 758,
                      "mutability": "mutable",
                      "name": "OZ",
                      "nameLocation": "3976:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "3965:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                        "typeString": "contract ozIDiamond"
                      },
                      "typeName": {
                        "id": 757,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 756,
                          "name": "ozIDiamond",
                          "nameLocations": [
                            "3965:10:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4736,
                          "src": "3965:10:4"
                        },
                        "referencedDeclaration": 4736,
                        "src": "3965:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 761,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 759,
                      "name": "getOZ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "3981:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4736_$",
                        "typeString": "function () view returns (contract ozIDiamond)"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3965:23:4"
                },
                {
                  "assignments": [
                    764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 764,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "4020:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "3998:23:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage"
                      },
                      "typeName": {
                        "id": 763,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 762,
                          "name": "TradingPackage",
                          "nameLocations": [
                            "3998:14:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100,
                          "src": "3998:14:4"
                        },
                        "referencedDeclaration": 100,
                        "src": "3998:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_storage_ptr",
                          "typeString": "struct TradingPackage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 768,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 765,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "4024:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4027:14:4",
                      "memberName": "tradingPackage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4715,
                      "src": "4024:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                        "typeString": "function () view external returns (struct TradingPackage memory)"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4024:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                      "typeString": "struct TradingPackage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3998:45:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 771,
                              "name": "tokenOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 746,
                              "src": "4083:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 769,
                              "name": "OZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "4071:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4074:8:4",
                            "memberName": "ozTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4694,
                            "src": "4071:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4071:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4105:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4097:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 773,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4097:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4097:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4071:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 778,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "4123:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 779,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "4136:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                              "typeString": "struct TradingPackage memory"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4138:4:4",
                          "memberName": "WETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "4136:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4123:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4071:71:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 783,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "4158:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 784,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "4171:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                            "typeString": "struct TradingPackage memory"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4173:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 97,
                        "src": "4171:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4158:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4071:106:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 792,
                  "nodeType": "IfStatement",
                  "src": "4054:161:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 789,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "4205:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 788,
                        "name": "OZError18",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "4195:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4195:20:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 791,
                    "nodeType": "RevertStatement",
                    "src": "4188:27:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 793,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4230:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4234:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4230:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 795,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "4244:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4230:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 805,
                  "nodeType": "IfStatement",
                  "src": "4226:100:4",
                  "trueBody": {
                    "id": 804,
                    "nodeType": "Block",
                    "src": "4252:74:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 798,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "4282:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 799,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4290:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4294:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4290:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 801,
                              "name": "ozlAmountIn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "4302:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 797,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37699,
                            "src": "4266:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4266:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 803,
                        "nodeType": "ExpressionStatement",
                        "src": "4266:49:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "usdValue",
                      "nameLocation": "4342:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "4337:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4337:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 811,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3993,
                              "src": "4393:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3993_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4404:3:4",
                            "memberName": "USD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3990,
                            "src": "4393:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3993",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 810,
                          "name": "getExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "4377:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3993_$returns$_t_uint256_$",
                            "typeString": "function (enum QuoteAsset) view returns (uint256)"
                          }
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4377:31:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4410:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 808,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4353:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4366:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5033,
                      "src": "4353:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4337:81:4"
                },
                {
                  "assignments": [
                    818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 818,
                      "mutability": "mutable",
                      "name": "rETHtoRedeem",
                      "nameLocation": "4433:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 877,
                      "src": "4428:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 817,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4428:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 826,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4468:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 822,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "4477:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4480:8:4",
                          "memberName": "rETH_USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4601,
                          "src": "4477:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4477:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 819,
                        "name": "usdValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "4448:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4457:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5033,
                      "src": "4448:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4428:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 830,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4524:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 833,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "4540:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4532:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4532:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4532:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 835,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4545:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 827,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6981,
                        "src": "4502:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6981_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4513:10:4",
                      "memberName": "recicleOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6465,
                      "src": "4502:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4502:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "4502:56:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 838,
                      "name": "tokenOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "4581:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 839,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "4594:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      "id": 840,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4596:4:4",
                      "memberName": "rETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "4594:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4581:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 861,
                  "nodeType": "IfStatement",
                  "src": "4577:190:4",
                  "trueBody": {
                    "id": 860,
                    "nodeType": "Block",
                    "src": "4602:165:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 842,
                            "name": "rETHtoRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "4620:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 843,
                              "name": "minAmountsOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 751,
                              "src": "4635:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 845,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4650:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4635:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4620:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 851,
                        "nodeType": "IfStatement",
                        "src": "4616:68:4",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 848,
                                "name": "rETHtoRedeem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 818,
                                "src": "4671:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 847,
                              "name": "OZError19",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "4661:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4661:23:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 850,
                          "nodeType": "RevertStatement",
                          "src": "4654:30:4"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 854,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 764,
                                "src": "4724:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                                  "typeString": "struct TradingPackage memory"
                                }
                              },
                              "id": 855,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4726:4:4",
                              "memberName": "rETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 97,
                              "src": "4724:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 856,
                              "name": "receiver_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 744,
                              "src": "4732:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 857,
                              "name": "rETHtoRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "4743:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 852,
                              "name": "TradingLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6981,
                              "src": "4705:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradingLib_$6981_$",
                                "typeString": "type(library TradingLib)"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4716:7:4",
                            "memberName": "sendLSD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6917,
                            "src": "4705:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) returns (uint256)"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4705:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 755,
                        "id": 859,
                        "nodeType": "Return",
                        "src": "4698:58:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 864,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "4816:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      {
                        "id": 865,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4831:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 866,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "4851:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 867,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "4874:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 870,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "4905:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4897:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4897:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4897:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 872,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4922:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 873,
                        "name": "rETHtoRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "4948:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 874,
                        "name": "minAmountsOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "4974:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 862,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6981,
                        "src": "4784:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6981_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4795:6:4",
                      "memberName": "useOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "4784:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TradingPackage_$100_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct TradingPackage memory,address,address,address,address,uint256,uint256,uint256[] memory) returns (uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4784:214:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "4777:221:4"
                }
              ]
            },
            "functionSelector": "6afa0287",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "3763:6:4",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "3787:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "3779:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3779:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "3811:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "3803:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3803:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "3838:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "3830:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "3865:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "3857:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "minAmountsOut_",
                  "nameLocation": "3901:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "3887:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 749,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3887:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 750,
                    "nodeType": "ArrayTypeName",
                    "src": "3887:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:152:4"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3944:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "3939:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3939:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3938:16:4"
            },
            "scope": 1052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 889,
            "nodeType": "FunctionDefinition",
            "src": "5086:109:4",
            "nodes": [],
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "5141:54:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 883,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "5158:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4736_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5158:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5166:20:4",
                      "memberName": "getCirculatingSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4687,
                      "src": "5158:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 882,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "5151:37:4"
                }
              ]
            },
            "functionSelector": "9358928b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "circulatingSupply",
            "nameLocation": "5095:17:4",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5112:2:4"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "5135:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5134:6:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 900,
            "nodeType": "FunctionDefinition",
            "src": "5201:103:4",
            "nodes": [],
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "5253:51:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 894,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "5270:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4736_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5270:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5278:17:4",
                      "memberName": "getRecicledSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4730,
                      "src": "5270:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 898,
                  "nodeType": "Return",
                  "src": "5263:34:4"
                }
              ]
            },
            "functionSelector": "8b5f1a6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recicledSupply",
            "nameLocation": "5210:14:4",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5224:2:4"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "5247:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5247:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5246:6:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 915,
            "nodeType": "FunctionDefinition",
            "src": "5310:135:4",
            "nodes": [],
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "5359:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 909,
                              "name": "_OZ_DIAMOND_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 525,
                              "src": "5414:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 907,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42335,
                              "src": "5387:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42335_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5399:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42257,
                            "src": "5387:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$42231_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5387:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$42231_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5432:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42230,
                        "src": "5387:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 906,
                      "name": "ozIDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4736,
                      "src": "5376:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$4736_$",
                        "typeString": "type(contract ozIDiamond)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5376:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "functionReturnParameters": 905,
                  "id": 913,
                  "nodeType": "Return",
                  "src": "5369:69:4"
                }
              ]
            },
            "functionSelector": "59c64e12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZ",
            "nameLocation": "5319:5:4",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5324:2:4"
            },
            "returnParameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "5347:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                    "typeString": "contract ozIDiamond"
                  },
                  "typeName": {
                    "id": 903,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 902,
                      "name": "ozIDiamond",
                      "nameLocations": [
                        "5347:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4736,
                      "src": "5347:10:4"
                    },
                    "referencedDeclaration": 4736,
                    "src": "5347:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4736",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5346:12:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 925,
            "nodeType": "FunctionDefinition",
            "src": "5612:104:4",
            "nodes": [],
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "5672:44:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 921,
                      "name": "_domainSeparatorV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39801,
                      "src": "5689:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 920,
                  "id": 923,
                  "nodeType": "Return",
                  "src": "5682:27:4"
                }
              ]
            },
            "documentation": {
              "id": 916,
              "nodeType": "StructuredDocumentation",
              "src": "5469:138:4",
              "text": " @notice Returns the EIP-712 DOMAIN_SEPARATOR.\n @return A bytes32 value representing the EIP-712 DOMAIN_SEPARATOR."
            },
            "functionSelector": "3644e515",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "5621:16:4",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5637:2:4"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "5663:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5662:9:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 940,
            "nodeType": "FunctionDefinition",
            "src": "5925:111:4",
            "nodes": [],
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "5988:48:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 933,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "6005:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$39036_storage_$",
                            "typeString": "mapping(address => struct CountersUpgradeable.Counter storage ref)"
                          }
                        },
                        "id": 935,
                        "indexExpression": {
                          "id": 934,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "6013:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6005:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$39036_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6020:7:4",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39048,
                      "src": "6005:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$39036_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$39036_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 932,
                  "id": 938,
                  "nodeType": "Return",
                  "src": "5998:31:4"
                }
              ]
            },
            "documentation": {
              "id": 926,
              "nodeType": "StructuredDocumentation",
              "src": "5722:198:4",
              "text": " @notice Returns the current nonce for the given owner address.\n @param owner The address whose nonce is to be retrieved.\n @return The current nonce as a uint256 value."
            },
            "functionSelector": "7ecebe00",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "5934:6:4",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5949:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "5941:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5941:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5940:15:4"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "5979:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5979:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5978:9:4"
            },
            "scope": 1052,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 969,
            "nodeType": "FunctionDefinition",
            "src": "6226:206:4",
            "nodes": [],
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "6294:138:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 952,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "6340:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "6304:41:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$39036_storage_ptr",
                        "typeString": "struct CountersUpgradeable.Counter"
                      },
                      "typeName": {
                        "id": 951,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 950,
                          "name": "CountersUpgradeable.Counter",
                          "nameLocations": [
                            "6304:19:4",
                            "6324:7:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39036,
                          "src": "6304:27:4"
                        },
                        "referencedDeclaration": 39036,
                        "src": "6304:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$39036_storage_ptr",
                          "typeString": "struct CountersUpgradeable.Counter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "baseExpression": {
                      "id": 953,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "6348:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$39036_storage_$",
                        "typeString": "mapping(address => struct CountersUpgradeable.Counter storage ref)"
                      }
                    },
                    "id": 955,
                    "indexExpression": {
                      "id": 954,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "6356:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6348:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$39036_storage",
                      "typeString": "struct CountersUpgradeable.Counter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6304:58:4"
                },
                {
                  "expression": {
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 957,
                      "name": "current",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "6372:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 958,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 952,
                          "src": "6382:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$39036_storage_ptr",
                            "typeString": "struct CountersUpgradeable.Counter storage pointer"
                          }
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6388:7:4",
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39048,
                        "src": "6382:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$39036_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$39036_storage_ptr_$",
                          "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6382:15:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6372:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "6372:25:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 963,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "6408:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$39036_storage_ptr",
                          "typeString": "struct CountersUpgradeable.Counter storage pointer"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6414:9:4",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39062,
                      "src": "6408:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$39036_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$39036_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6408:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "6408:17:4"
                }
              ]
            },
            "documentation": {
              "id": 941,
              "nodeType": "StructuredDocumentation",
              "src": "6042:179:4",
              "text": " @dev Private function that increments and returns the current nonce for a given owner address.\n @param owner The address whose nonce is to be incremented."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_useNonce",
            "nameLocation": "6235:9:4",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6253:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "6245:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6245:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6244:15:4"
            },
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "current",
                  "nameLocation": "6285:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "6277:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6276:17:4"
            },
            "scope": 1052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1046,
            "nodeType": "FunctionDefinition",
            "src": "7022:623:4",
            "nodes": [],
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "7206:439:4",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 987,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7220:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7226:9:4",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7220:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 989,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "7238:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7220:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 997,
                  "nodeType": "IfStatement",
                  "src": "7216:75:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 992,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "7265:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 993,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7275:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7281:9:4",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7275:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 991,
                        "name": "OZError08",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "7255:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7255:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 996,
                    "nodeType": "RevertStatement",
                    "src": "7248:43:4"
                  }
                },
                {
                  "assignments": [
                    999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 999,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "7310:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1045,
                      "src": "7302:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 998,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7302:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1013,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1003,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "7344:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1004,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "7362:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1005,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "7369:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1006,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "7378:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1008,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "7395:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1007,
                              "name": "_useNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "7385:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) returns (uint256)"
                              }
                            },
                            "id": 1009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7385:16:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1010,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "7403:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1001,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7333:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7337:6:4",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7333:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7333:79:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1000,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7323:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7323:90:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7302:111:4"
                },
                {
                  "assignments": [
                    1015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1015,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "7431:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1045,
                      "src": "7423:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1014,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7423:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1019,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1017,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "7455:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1016,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39844,
                      "src": "7438:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7438:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7423:43:4"
                },
                {
                  "assignments": [
                    1021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1021,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "7484:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1045,
                      "src": "7476:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7476:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1029,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1024,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1015,
                        "src": "7518:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1025,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "7524:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1026,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "7527:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1027,
                        "name": "s_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "7530:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1022,
                        "name": "ECDSAUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39718,
                        "src": "7493:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSAUpgradeable_$39718_$",
                          "typeString": "type(library ECDSAUpgradeable)"
                        }
                      },
                      "id": 1023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7510:7:4",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39658,
                      "src": "7493:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7493:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7476:57:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1030,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "7548:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1031,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "7558:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7548:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1038,
                  "nodeType": "IfStatement",
                  "src": "7544:52:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 1034,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1021,
                          "src": "7582:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1035,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "7590:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1033,
                        "name": "OZError09",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "7572:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                          "typeString": "function (address,address) pure"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7572:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1037,
                    "nodeType": "RevertStatement",
                    "src": "7565:31:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1040,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "7616:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1041,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "7623:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1042,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "7632:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1039,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37656,
                      "src": "7607:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7607:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "7607:31:4"
                }
              ]
            },
            "documentation": {
              "id": 970,
              "nodeType": "StructuredDocumentation",
              "src": "6438:579:4",
              "text": " @notice Allows an owner to approve a spender with a one-time signature, bypassing the need for a transaction.\n @dev Uses the EIP-2612 standard.\n @param owner The address of the token owner.\n @param spender The address of the spender.\n @param value The amount of tokens to be approved.\n @param deadline The expiration time of the signature, specified as a Unix timestamp.\n @param v The recovery byte of the signature.\n @param r The first 32 bytes of the signature.\n @param s_ The second 32 bytes of the signature."
            },
            "functionSelector": "d505accf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "7031:6:4",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7055:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7047:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7078:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7070:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7070:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7103:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7095:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7095:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7126:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7118:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "7150:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7144:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7144:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "7169:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7161:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7161:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "s_",
                  "nameLocation": "7188:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "7180:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7180:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7037:159:4"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7206:0:4"
            },
            "scope": 1052,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1051,
            "nodeType": "VariableDeclaration",
            "src": "7910:25:4",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1047,
              "nodeType": "StructuredDocumentation",
              "src": "7651:254:4",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "7930:5:4",
            "scope": 1052,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$42_storage",
              "typeString": "uint256[42]"
            },
            "typeName": {
              "baseType": {
                "id": 1048,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7910:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1050,
              "length": {
                "hexValue": "3432",
                "id": 1049,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7918:2:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_42_by_1",
                  "typeString": "int_const 42"
                },
                "value": "42"
              },
              "nodeType": "ArrayTypeName",
              "src": "7910:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$42_storage_ptr",
                "typeString": "uint256[42]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 502,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "1280:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37727,
              "src": "1280:16:4"
            },
            "id": 503,
            "nodeType": "InheritanceSpecifier",
            "src": "1280:16:4"
          },
          {
            "baseName": {
              "id": 504,
              "name": "EIP712Upgradeable",
              "nameLocations": [
                "1298:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39868,
              "src": "1298:17:4"
            },
            "id": 505,
            "nodeType": "InheritanceSpecifier",
            "src": "1298:17:4"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1052,
          39868,
          37727,
          38428,
          37805,
          39030,
          37116
        ],
        "name": "OZL",
        "nameLocation": "1273:3:4",
        "scope": 1053,
        "usedErrors": [
          301,
          303,
          307,
          357,
          363,
          373,
          377,
          379,
          383
        ],
        "usedEvents": [
          36980,
          37739,
          37748
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 4
}