{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "OZError01",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError02",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorCode",
          "type": "string"
        }
      ],
      "name": "OZError10",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "OZError18",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OZError19",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError20",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "OZError21",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum QuoteAsset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZ",
      "outputs": [
        {
          "internalType": "contract ozIDiamond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ozDiamond_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "communityAmount_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ozlAmountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmountsOut_",
          "type": "uint256[]"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61256a80620000f46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636afa0287116100a257806395d89b411161007157806395d89b4114610224578063a457c2d71461022c578063a9059cbb1461023f578063dd62ed3e14610252578063e6aa216c1461026557600080fd5b80636afa0287146101cb57806370a08231146101de57806374823132146102075780639358928b1461021c57600080fd5b8063313ce567116100de578063313ce5671461017657806339509351146101855780634d02a3f71461019857806359c64e12146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861026d565b6040516101259190611c6d565b60405180910390f35b61014161013c366004611c98565b6102ff565b6040519015158152602001610125565b6035545b604051908152602001610125565b610141610171366004611cc4565b610319565b60405160128152602001610125565b610141610193366004611c98565b61033f565b6101556101a6366004611d05565b610361565b6101b36104ae565b6040516001600160a01b039091168152602001610125565b6101556101d9366004611d69565b6104f0565b6101556101ec366004611e54565b6001600160a01b031660009081526033602052604090205490565b61021a610215366004611ee5565b6107a1565b005b61015561091b565b61011861098b565b61014161023a366004611c98565b61099a565b61014161024d366004611c98565b610a20565b610155610260366004611f6d565b610a2e565b610155610a59565b60606036805461027c90611fa6565b80601f01602080910402602001604051908101604052809291908181526020018280546102a890611fa6565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050905090565b60003361030d818585610a9c565b60019150505b92915050565b600033610327858285610bc0565b610332858585610c3a565b60019150505b9392505050565b60003361030d8185856103528383610a2e565b61035c9190611ff6565b610a9c565b6000670de0b6b3a7640000816103756104ae565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d7919061202c565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044991906120f1565b9050600060028660028111156104615761046161210a565b14610475576104708683610e08565b610477565b815b9050600061048361091b565b90508060000361049857509295945050505050565b6104a3858383610f32565b979650505050505050565b60006104e16104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612120565b90565b546001600160a01b0316919050565b6000806104fb6104ae565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610562919061202c565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190612133565b6001600160a01b03161480156105fe57508060e001516001600160a01b0316866001600160a01b031614155b801561062057508060c001516001600160a01b0316866001600160a01b031614155b1561064e5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b0389161461066957610669883387610bc0565b610674308387610f50565b60006106936106836000610361565b8790670de0b6b3a7640000610f32565b9050600061070d670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070591906120f1565b849190610f32565b90508260c001516001600160a01b0316886001600160a01b031603610784578560008151811061073f5761073f612150565b602002602001015181101561076a57604051631aa1e78f60e31b815260048101829052602401610645565b6107798360c001518a83610fb8565b945050505050610798565b61079183898b848a610fcc565b9450505050505b95945050505050565b600054610100900460ff16158080156107c15750600054600160ff909116105b806107db5750303b1580156107db575060005460ff166001145b61083e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610645565b6000805460ff191660011790558015610861576000805461ff0019166101001790555b61086b8686610fdd565b8361089a6104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612120565b80546001600160a01b0319166001600160a01b03929092169190911790556108c23084611012565b6108cd308584610c3a565b8015610913576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006109256104ae565b6001600160a01b0316631e4d84c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906120f1565b905090565b60606037805461027c90611fa6565b600033816109a88286610a2e565b905083811015610a085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610645565b610a158286868403610a9c565b506001949350505050565b60003361030d818585610c3a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610a7f908490600401612166565b602060405180830381865afa158015610962573d6000803e3d6000fd5b6001600160a01b038316610afe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610645565b6001600160a01b038216610b5f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610645565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610bcc8484610a2e565b90506000198114610c345781811015610c275760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610645565b610c348484848403610a9c565b50505050565b6001600160a01b038316610c9e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610645565b6001600160a01b038216610d005760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610645565b6001600160a01b03831660009081526033602052604090205481811015610d785760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610645565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610daf908490611ff6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dfb91815260200190565b60405180910390a3610c34565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b179052600090610e45610e3f6104ae565b826110f1565b9050600081806020019051810190610e5d91906120f1565b9050600080866002811115610e7457610e7461210a565b03610efc57610ef5610e846104ae565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906120f1565b8690670de0b6b3a7640000610f32565b9050610798565b6001866002811115610f1057610f1061210a565b0361079857610f288583670de0b6b3a7640000610f32565b9695505050505050565b6000826000190484118302158202610f4957600080fd5b5091020490565b6040516001600160a01b038316602482015260448101829052610fb390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611116565b505050565b6000610fc5848484610f50565b5092915050565b6000610f28868686868660006111eb565b600054610100900460ff166110045760405162461bcd60e51b815260040161064590612180565b61100e82826113b2565b5050565b6001600160a01b0382166110685760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610645565b806035600082825461107a9190611ff6565b90915550506001600160a01b038216600090815260336020526040812080548392906110a7908490611ff6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60606103388383604051806060016040528060258152602001612510602591396113f2565b600061116b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114609092919063ffffffff16565b905080516000148061118c57508080602001905181019061118c91906121db565b610fb35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610645565b60008080808460028111156112025761120261210a565b0361121457505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c91906121f6565b5050905080156112be576112b78383308d600001518e602001518c8c6000815181106112aa576112aa612150565b6020026020010151611477565b93506112de565b6112db83838c604001518d606001518e608001518c8c60006115cf565b93505b8960e001516001600160a01b0316896001600160a01b03160361137a5760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137491906121db565b506113a5565b6113a28a60e001518a8a8d600001518e60200151898c6001815181106112aa576112aa612150565b93505b5050509695505050505050565b600054610100900460ff166113d95760405162461bcd60e51b815260040161064590612180565b60366113e58382612271565b506037610fb38282612271565b6060600080856001600160a01b03168560405161140f9190612331565b600060405180830381855afa9150503d806000811461144a576040519150601f19603f3d011682016040523d82523d6000602084013e61144f565b606091505b5091509150610f288683838761181e565b606061146f8484600085611897565b949350505050565b6000611484888685611967565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af1925050508015611574575060408051601f3d908101601f19168201909252611571918101906120f1565b60015b6115c65761158061234d565b806308c379a0036115ba5750611594612368565b8061159f57506115bc565b8060405163633abab960e01b81526004016106459190611c6d565b505b3d6000803e3d6000fd5b91506104a39050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906120f1565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f191660200182016040528015611695576020820181803683370190505b50905260408051608081018252308082526000602083018190529282015260608101829052919250808560028111156116d0576116d061210a565b036116f757856000815181106116e8576116e8612150565b602002602001015190506117f2565b600085600281111561170b5761170b61210a565b146117f25760405163e969f6b360e01b81526001600160a01b038a169063e969f6b39061173e9086908690600401612459565b6020604051808303816000875af1925050508015611779575060408051601f3d908101601f19168201909252611776918101906120f1565b60015b6117bf5761178561234d565b806308c379a0036115ba5750611799612368565b806117a457506115bc565b8060405163dafe91cd60e01b81526004016106459190611c6d565b6000876000815181106117d4576117d4612150565b602002602001015190508181116117eb57816117ed565b805b925050505b6118018c898560800151611967565b61180e8884848442611a7c565b9c9b505050505050505050505050565b6060831561188d578251600003611886576001600160a01b0385163b6118865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610645565b508161146f565b61146f8383611b9a565b6060824710156118f85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610645565b600080866001600160a01b031685876040516119149190612331565b60006040518083038185875af1925050503d8060008114611951576040519150601f19603f3d011682016040523d82523d6000602084013e611956565b606091505b50915091506104a38783838761181e565b8015806119e15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156119bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119df91906120f1565b155b611a4c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610645565b6040516001600160a01b038316602482015260448101829052610fb390849063095ea7b360e01b90606401610f7c565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe2990611ab19088908890889088906004016124ab565b6020604051808303816000875af1925050508015611aec575060408051601f3d908101601f19168201909252611ae9918101906120f1565b60015b611b7957611af861234d565b806308c379a0036115ba5750611b0c612368565b80611b1757506115bc565b611b40816040518060400160405280600781526020016642414c2335303760c81b815250611bc4565b15611b5e57604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106459190611c6d565b80600003610ef557604051635eeb40ff60e11b815260040160405180910390fd5b815115611baa5781518083602001fd5b8060405162461bcd60e51b81526004016106459190611c6d565b600081604051602001611bd79190612331565b6040516020818303038152906040528051906020012083604051602001611bfe9190612331565b6040516020818303038152906040528051906020012014905092915050565b60005b83811015611c38578181015183820152602001611c20565b50506000910152565b60008151808452611c59816020860160208601611c1d565b601f01601f19169290920160200192915050565b6020815260006103386020830184611c41565b6001600160a01b0381168114611c9557600080fd5b50565b60008060408385031215611cab57600080fd5b8235611cb681611c80565b946020939093013593505050565b600080600060608486031215611cd957600080fd5b8335611ce481611c80565b92506020840135611cf481611c80565b929592945050506040919091013590565b600060208284031215611d1757600080fd5b81356003811061033857600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611d6257611d62611d26565b6040525050565b600080600080600060a08688031215611d8157600080fd5b8535611d8c81611c80565b9450602086810135611d9d81611c80565b94506040870135611dad81611c80565b935060608701359250608087013567ffffffffffffffff80821115611dd157600080fd5b818901915089601f830112611de557600080fd5b813581811115611df757611df7611d26565b8060051b9150604051611e0c85840182611d3c565b8181529183018401918481018c841115611e2557600080fd5b938501935b83851015611e415784358152938501938501611e2a565b5080955050505050509295509295909350565b600060208284031215611e6657600080fd5b813561033881611c80565b600082601f830112611e8257600080fd5b813567ffffffffffffffff811115611e9c57611e9c611d26565b604051611eb3601f8301601f191660200182611d3c565b818152846020838601011115611ec857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611efd57600080fd5b853567ffffffffffffffff80821115611f1557600080fd5b611f2189838a01611e71565b96506020880135915080821115611f3757600080fd5b50611f4488828901611e71565b9450506040860135611f5581611c80565b94979396509394606081013594506080013592915050565b60008060408385031215611f8057600080fd5b8235611f8b81611c80565b91506020830135611f9b81611c80565b809150509250929050565b600181811c90821680611fba57607f821691505b602082108103611fda57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031357610313611fe0565b805161201481611c80565b919050565b805162ffffff8116811461201457600080fd5b600061010080838503121561204057600080fd5b6040519081019067ffffffffffffffff8211818310171561206357612063611d26565b8160405261207084612009565b815261207e60208501612019565b602082015261208f60408501612009565b60408201526120a060608501612009565b60608201526120b160808501612009565b60808201526120c260a08501612009565b60a08201526120d360c08501612009565b60c08201526120e460e08501612009565b60e0820152949350505050565b60006020828403121561210357600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561031357610313611fe0565b60006020828403121561214557600080fd5b815161033881611c80565b634e487b7160e01b600052603260045260246000fd5b602081016003831061217a5761217a61210a565b91905290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8051801515811461201457600080fd5b6000602082840312156121ed57600080fd5b610338826121cb565b60008060006060848603121561220b57600080fd5b612214846121cb565b925060208401519150604084015190509250925092565b601f821115610fb357600081815260208120601f850160051c810160208610156122525750805b601f850160051c820191505b818110156109135782815560010161225e565b815167ffffffffffffffff81111561228b5761228b611d26565b61229f816122998454611fa6565b8461222b565b602080601f8311600181146122d457600084156122bc5750858301515b600019600386901b1c1916600185901b178555610913565b600085815260208120601f198616915b82811015612303578886015182559484019460019091019084016122e4565b50858210156123215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612343818460208701611c1d565b9190910192915050565b600060033d11156104de5760046000803e5060005160e01c90565b600060443d10156123765790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156123a657505050505090565b82850191508151818111156123be5750505050505090565b843d87010160208285010111156123d85750505050505090565b6123e760208286010187611d3c565b509095945050505050565b80518252600060208201516002811061240d5761240d61210a565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a085015261146f60c0850182611c41565b60a08152600061246c60a08301856123f2565b9050610338602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e0815260006124be60e08301876123f2565b90506124fd602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a264697066735822122094f7f6594c1d3de2762e9f078137560f8939d22754d7fe1646e0adddb773859264736f6c63430008150033",
    "sourceMap": "903:3894:4:-:0;;;1088:53;;;;;;;;;-1:-1:-1;1112:22:4;:20;:22::i;:::-;903:3894;;5388:279:57;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:57;;216:2:110;5447:66:57;;;198:21:110;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:110;;;338:37;392:19;;5447:66:57;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:57;5588:15;5573:30;;;;;;5622:28;;564:36:110;;;5622:28:57;;552:2:110;537:18;5622:28:57;;;;;;;5523:138;5388:279::o;422:184:110:-;903:3894:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80636afa0287116100a257806395d89b411161007157806395d89b4114610224578063a457c2d71461022c578063a9059cbb1461023f578063dd62ed3e14610252578063e6aa216c1461026557600080fd5b80636afa0287146101cb57806370a08231146101de57806374823132146102075780639358928b1461021c57600080fd5b8063313ce567116100de578063313ce5671461017657806339509351146101855780634d02a3f71461019857806359c64e12146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861026d565b6040516101259190611c6d565b60405180910390f35b61014161013c366004611c98565b6102ff565b6040519015158152602001610125565b6035545b604051908152602001610125565b610141610171366004611cc4565b610319565b60405160128152602001610125565b610141610193366004611c98565b61033f565b6101556101a6366004611d05565b610361565b6101b36104ae565b6040516001600160a01b039091168152602001610125565b6101556101d9366004611d69565b6104f0565b6101556101ec366004611e54565b6001600160a01b031660009081526033602052604090205490565b61021a610215366004611ee5565b6107a1565b005b61015561091b565b61011861098b565b61014161023a366004611c98565b61099a565b61014161024d366004611c98565b610a20565b610155610260366004611f6d565b610a2e565b610155610a59565b60606036805461027c90611fa6565b80601f01602080910402602001604051908101604052809291908181526020018280546102a890611fa6565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050905090565b60003361030d818585610a9c565b60019150505b92915050565b600033610327858285610bc0565b610332858585610c3a565b60019150505b9392505050565b60003361030d8185856103528383610a2e565b61035c9190611ff6565b610a9c565b6000670de0b6b3a7640000816103756104ae565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d7919061202c565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044991906120f1565b9050600060028660028111156104615761046161210a565b14610475576104708683610e08565b610477565b815b9050600061048361091b565b90508060000361049857509295945050505050565b6104a3858383610f32565b979650505050505050565b60006104e16104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612120565b90565b546001600160a01b0316919050565b6000806104fb6104ae565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610562919061202c565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190612133565b6001600160a01b03161480156105fe57508060e001516001600160a01b0316866001600160a01b031614155b801561062057508060c001516001600160a01b0316866001600160a01b031614155b1561064e5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b0389161461066957610669883387610bc0565b610674308387610f50565b60006106936106836000610361565b8790670de0b6b3a7640000610f32565b9050600061070d670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070591906120f1565b849190610f32565b90508260c001516001600160a01b0316886001600160a01b031603610784578560008151811061073f5761073f612150565b602002602001015181101561076a57604051631aa1e78f60e31b815260048101829052602401610645565b6107798360c001518a83610fb8565b945050505050610798565b61079183898b848a610fcc565b9450505050505b95945050505050565b600054610100900460ff16158080156107c15750600054600160ff909116105b806107db5750303b1580156107db575060005460ff166001145b61083e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610645565b6000805460ff191660011790558015610861576000805461ff0019166101001790555b61086b8686610fdd565b8361089a6104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612120565b80546001600160a01b0319166001600160a01b03929092169190911790556108c23084611012565b6108cd308584610c3a565b8015610913576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006109256104ae565b6001600160a01b0316631e4d84c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098691906120f1565b905090565b60606037805461027c90611fa6565b600033816109a88286610a2e565b905083811015610a085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610645565b610a158286868403610a9c565b506001949350505050565b60003361030d818585610c3a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610a7f908490600401612166565b602060405180830381865afa158015610962573d6000803e3d6000fd5b6001600160a01b038316610afe5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610645565b6001600160a01b038216610b5f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610645565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610bcc8484610a2e565b90506000198114610c345781811015610c275760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610645565b610c348484848403610a9c565b50505050565b6001600160a01b038316610c9e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610645565b6001600160a01b038216610d005760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610645565b6001600160a01b03831660009081526033602052604090205481811015610d785760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610645565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610daf908490611ff6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dfb91815260200190565b60405180910390a3610c34565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b179052600090610e45610e3f6104ae565b826110f1565b9050600081806020019051810190610e5d91906120f1565b9050600080866002811115610e7457610e7461210a565b03610efc57610ef5610e846104ae565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906120f1565b8690670de0b6b3a7640000610f32565b9050610798565b6001866002811115610f1057610f1061210a565b0361079857610f288583670de0b6b3a7640000610f32565b9695505050505050565b6000826000190484118302158202610f4957600080fd5b5091020490565b6040516001600160a01b038316602482015260448101829052610fb390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611116565b505050565b6000610fc5848484610f50565b5092915050565b6000610f28868686868660006111eb565b600054610100900460ff166110045760405162461bcd60e51b815260040161064590612180565b61100e82826113b2565b5050565b6001600160a01b0382166110685760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610645565b806035600082825461107a9190611ff6565b90915550506001600160a01b038216600090815260336020526040812080548392906110a7908490611ff6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60606103388383604051806060016040528060258152602001612510602591396113f2565b600061116b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114609092919063ffffffff16565b905080516000148061118c57508080602001905181019061118c91906121db565b610fb35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610645565b60008080808460028111156112025761120261210a565b0361121457505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c91906121f6565b5050905080156112be576112b78383308d600001518e602001518c8c6000815181106112aa576112aa612150565b6020026020010151611477565b93506112de565b6112db83838c604001518d606001518e608001518c8c60006115cf565b93505b8960e001516001600160a01b0316896001600160a01b03160361137a5760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137491906121db565b506113a5565b6113a28a60e001518a8a8d600001518e60200151898c6001815181106112aa576112aa612150565b93505b5050509695505050505050565b600054610100900460ff166113d95760405162461bcd60e51b815260040161064590612180565b60366113e58382612271565b506037610fb38282612271565b6060600080856001600160a01b03168560405161140f9190612331565b600060405180830381855afa9150503d806000811461144a576040519150601f19603f3d011682016040523d82523d6000602084013e61144f565b606091505b5091509150610f288683838761181e565b606061146f8484600085611897565b949350505050565b6000611484888685611967565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af1925050508015611574575060408051601f3d908101601f19168201909252611571918101906120f1565b60015b6115c65761158061234d565b806308c379a0036115ba5750611594612368565b8061159f57506115bc565b8060405163633abab960e01b81526004016106459190611c6d565b505b3d6000803e3d6000fd5b91506104a39050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906120f1565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f191660200182016040528015611695576020820181803683370190505b50905260408051608081018252308082526000602083018190529282015260608101829052919250808560028111156116d0576116d061210a565b036116f757856000815181106116e8576116e8612150565b602002602001015190506117f2565b600085600281111561170b5761170b61210a565b146117f25760405163e969f6b360e01b81526001600160a01b038a169063e969f6b39061173e9086908690600401612459565b6020604051808303816000875af1925050508015611779575060408051601f3d908101601f19168201909252611776918101906120f1565b60015b6117bf5761178561234d565b806308c379a0036115ba5750611799612368565b806117a457506115bc565b8060405163dafe91cd60e01b81526004016106459190611c6d565b6000876000815181106117d4576117d4612150565b602002602001015190508181116117eb57816117ed565b805b925050505b6118018c898560800151611967565b61180e8884848442611a7c565b9c9b505050505050505050505050565b6060831561188d578251600003611886576001600160a01b0385163b6118865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610645565b508161146f565b61146f8383611b9a565b6060824710156118f85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610645565b600080866001600160a01b031685876040516119149190612331565b60006040518083038185875af1925050503d8060008114611951576040519150601f19603f3d011682016040523d82523d6000602084013e611956565b606091505b50915091506104a38783838761181e565b8015806119e15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156119bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119df91906120f1565b155b611a4c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610645565b6040516001600160a01b038316602482015260448101829052610fb390849063095ea7b360e01b90606401610f7c565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe2990611ab19088908890889088906004016124ab565b6020604051808303816000875af1925050508015611aec575060408051601f3d908101601f19168201909252611ae9918101906120f1565b60015b611b7957611af861234d565b806308c379a0036115ba5750611b0c612368565b80611b1757506115bc565b611b40816040518060400160405280600781526020016642414c2335303760c81b815250611bc4565b15611b5e57604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106459190611c6d565b80600003610ef557604051635eeb40ff60e11b815260040160405180910390fd5b815115611baa5781518083602001fd5b8060405162461bcd60e51b81526004016106459190611c6d565b600081604051602001611bd79190612331565b6040516020818303038152906040528051906020012083604051602001611bfe9190612331565b6040516020818303038152906040528051906020012014905092915050565b60005b83811015611c38578181015183820152602001611c20565b50506000910152565b60008151808452611c59816020860160208601611c1d565b601f01601f19169290920160200192915050565b6020815260006103386020830184611c41565b6001600160a01b0381168114611c9557600080fd5b50565b60008060408385031215611cab57600080fd5b8235611cb681611c80565b946020939093013593505050565b600080600060608486031215611cd957600080fd5b8335611ce481611c80565b92506020840135611cf481611c80565b929592945050506040919091013590565b600060208284031215611d1757600080fd5b81356003811061033857600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611d6257611d62611d26565b6040525050565b600080600080600060a08688031215611d8157600080fd5b8535611d8c81611c80565b9450602086810135611d9d81611c80565b94506040870135611dad81611c80565b935060608701359250608087013567ffffffffffffffff80821115611dd157600080fd5b818901915089601f830112611de557600080fd5b813581811115611df757611df7611d26565b8060051b9150604051611e0c85840182611d3c565b8181529183018401918481018c841115611e2557600080fd5b938501935b83851015611e415784358152938501938501611e2a565b5080955050505050509295509295909350565b600060208284031215611e6657600080fd5b813561033881611c80565b600082601f830112611e8257600080fd5b813567ffffffffffffffff811115611e9c57611e9c611d26565b604051611eb3601f8301601f191660200182611d3c565b818152846020838601011115611ec857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611efd57600080fd5b853567ffffffffffffffff80821115611f1557600080fd5b611f2189838a01611e71565b96506020880135915080821115611f3757600080fd5b50611f4488828901611e71565b9450506040860135611f5581611c80565b94979396509394606081013594506080013592915050565b60008060408385031215611f8057600080fd5b8235611f8b81611c80565b91506020830135611f9b81611c80565b809150509250929050565b600181811c90821680611fba57607f821691505b602082108103611fda57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031357610313611fe0565b805161201481611c80565b919050565b805162ffffff8116811461201457600080fd5b600061010080838503121561204057600080fd5b6040519081019067ffffffffffffffff8211818310171561206357612063611d26565b8160405261207084612009565b815261207e60208501612019565b602082015261208f60408501612009565b60408201526120a060608501612009565b60608201526120b160808501612009565b60808201526120c260a08501612009565b60a08201526120d360c08501612009565b60c08201526120e460e08501612009565b60e0820152949350505050565b60006020828403121561210357600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561031357610313611fe0565b60006020828403121561214557600080fd5b815161033881611c80565b634e487b7160e01b600052603260045260246000fd5b602081016003831061217a5761217a61210a565b91905290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8051801515811461201457600080fd5b6000602082840312156121ed57600080fd5b610338826121cb565b60008060006060848603121561220b57600080fd5b612214846121cb565b925060208401519150604084015190509250925092565b601f821115610fb357600081815260208120601f850160051c810160208610156122525750805b601f850160051c820191505b818110156109135782815560010161225e565b815167ffffffffffffffff81111561228b5761228b611d26565b61229f816122998454611fa6565b8461222b565b602080601f8311600181146122d457600084156122bc5750858301515b600019600386901b1c1916600185901b178555610913565b600085815260208120601f198616915b82811015612303578886015182559484019460019091019084016122e4565b50858210156123215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612343818460208701611c1d565b9190910192915050565b600060033d11156104de5760046000803e5060005160e01c90565b600060443d10156123765790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156123a657505050505090565b82850191508151818111156123be5750505050505090565b843d87010160208285010111156123d85750505050505090565b6123e760208286010187611d3c565b509095945050505050565b80518252600060208201516002811061240d5761240d61210a565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a085015261146f60c0850182611c41565b60a08152600061246c60a08301856123f2565b9050610338602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e0815260006124be60e08301876123f2565b90506124fd602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a264697066735822122094f7f6594c1d3de2762e9f078137560f8939d22754d7fe1646e0adddb773859264736f6c63430008150033",
    "sourceMap": "903:3894:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:110;;1384:22;1366:41;;1354:2;1339:18;4770:197:58;1226:187:110;3581:106:58;3668:12;;3581:106;;;1564:25:110;;;1552:2;1537:18;3581:106:58;1418:177:110;5529:286:58;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;2203:36:110;;2191:2;2176:18;3430:91:58;2061:184:110;6210:234:58;;;;;;:::i;:::-;;:::i;2007:511:4:-;;;;;;:::i;:::-;;:::i;4650:135::-;;;:::i;:::-;;;-1:-1:-1;;;;;2709:32:110;;;2691:51;;2679:2;2664:18;4650:135:4;2526:222:110;3089:1419:4;;;;;;:::i;:::-;;:::i;3745:125:58:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:58;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1148:729:4;;;;;;:::i;:::-;;:::i;:::-;;4532:112;;;:::i;2704:102:58:-;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;;:::i;1885:115:4:-;;;:::i;2493:98:58:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:65;4907:32:58;929:10:65;4923:7:58;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:65;5712:38:58;5728:4;929:10:65;5743:6:58;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;6210:234::-;6298:4;929:10:65;6352:64:58;929:10:65;6368:7:58;6405:10;6377:25;929:10:65;6368:7:58;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2007:511:4:-;2071:4;2098:7;2071:4;2130:7;:5;:7::i;:::-;-1:-1:-1;;;;;2130:22:4;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;2190:43;;-1:-1:-1;;;2190:43:4;;2227:4;2190:43;;;2691:51:110;2130:29:4;;-1:-1:-1;2169:18:4;;-1:-1:-1;;;;;2190:28:4;;;;;2664:18:110;;2190:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2169:64;-1:-1:-1;2244:19:4;2276:15;2266:6;:25;;;;;;;;:::i;:::-;;:101;;2329:38;2345:6;2353:13;2329:15;:38::i;:::-;2266:101;;;2303:13;2266:101;2244:123;;2378:13;2394:19;:17;:19::i;:::-;2378:35;;2428:8;2440:1;2428:13;2424:29;;-1:-1:-1;2450:3:4;;2007:511;-1:-1:-1;;;;;2007:511:4:o;2424:29::-;2471:40;:3;2486:14;2502:8;2471:14;:40::i;:::-;2464:47;2007:511;-1:-1:-1;;;;;;;2007:511:4:o;4650:135::-;4687:10;4727:44;1034:45;1078:1;1039:35;1034:45;:::i;:::-;2029:4:86;1859:190;4727:44:4;:50;-1:-1:-1;;;;;4727:50:4;;4650:135;-1:-1:-1;4650:135:4:o;3089:1419::-;3274:14;3300:13;3316:7;:5;:7::i;:::-;3300:23;;3333;3359:2;-1:-1:-1;;;;;3359:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3406:22;;-1:-1:-1;;;3406:22:4;;-1:-1:-1;;;;;2709:32:110;;;3406:22:4;;;2691:51:110;3333:45:4;;-1:-1:-1;3440:1:4;;3406:11;;;;;2664:18:110;;3406:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3406:36:4;;:71;;;;;3471:1;:6;;;-1:-1:-1;;;;;3458:19:4;:9;-1:-1:-1;;;;;3458:19:4;;;3406:71;:106;;;;;3506:1;:6;;;-1:-1:-1;;;;;3493:19:4;:9;-1:-1:-1;;;;;3493:19:4;;;3406:106;3389:161;;;3530:20;;-1:-1:-1;;;3530:20:4;;-1:-1:-1;;;;;2709:32:110;;3530:20:4;;;2691:51:110;2664:18;;3530:20:4;;;;;;;;3389:161;3565:10;-1:-1:-1;;;;;3565:20:4;;;3561:100;;3601:49;3617:6;3625:10;3637:12;3601:15;:49::i;:::-;3763:72;3801:4;3817:2;3822:12;3763:22;:72::i;:::-;3912:13;3928:65;3952:31;3968:14;3952:15;:31::i;:::-;3928:12;;3985:7;3928:23;:65::i;:::-;3912:81;;4003:17;4023:43;4043:7;4052:2;-1:-1:-1;;;;;4052:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4023:8;;:43;:19;:43::i;:::-;4003:63;;4094:1;:6;;;-1:-1:-1;;;;;4081:19:4;:9;-1:-1:-1;;;;;4081:19:4;;4077:190;;4135:14;4150:1;4135:17;;;;;;;;:::i;:::-;;;;;;;4120:12;:32;4116:68;;;4161:23;;-1:-1:-1;;;4161:23:4;;;;;1564:25:110;;;1537:18;;4161:23:4;1418:177:110;4116:68:4;4205:51;4224:1;:6;;;4232:9;4243:12;4205:18;:51::i;:::-;4198:58;;;;;;;;4077:190;4284:143;4316:1;4331:9;4354;4377:12;4403:14;4284:17;:143::i;:::-;4277:150;;;;;;3089:1419;;;;;;;;:::o;1148:729::-;3111:19:57;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:57;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:57;1476:19:64;:23;;;3219:66:57;;-1:-1:-1;3268:12:57;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:57;;9944:2:110;3157:201:57;;;9926:21:110;9983:2;9963:18;;;9956:30;10022:34;10002:18;;;9995:62;-1:-1:-1;;;10073:18:110;;;10066:44;10127:19;;3157:201:57;9742:410:110;3157:201:57;3368:12;:16;;-1:-1:-1;;3368:16:57;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:57;;;;;3394:65;1352:28:4::1;1365:5;1372:7;1352:12;:28::i;:::-;1443:10:::0;1390:44:::1;1034:45;1078:1;1039:35;1034:45;:::i;1390:44::-;:63:::0;;-1:-1:-1;;;;;;1390:63:4::1;-1:-1:-1::0;;;;;1390:63:4;;;::::1;::::0;;;::::1;::::0;;1771:34:::1;1785:4;1792:12:::0;1771:5:::1;:34::i;:::-;1816:54;1834:4;1841:10;1853:16;1816:9;:54::i;:::-;3483:14:57::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:57;;;3553:14;;-1:-1:-1;2203:36:110;;3553:14:57;;2191:2:110;2176:18;3553:14:57;;;;;;;3479:99;3101:483;1148:729:4;;;;;:::o;4532:112::-;4581:4;4604:7;:5;:7::i;:::-;-1:-1:-1;;;;;4604:31:4;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4597:40;;4532:112;:::o;2704:102:58:-;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:65;7024:4:58;7105:25;929:10:65;7122:7:58;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:58;;10558:2:110;7140:85:58;;;10540:21:110;10597:2;10577:18;;;10570:30;10636:34;10616:18;;;10609:62;-1:-1:-1;;;10687:18:110;;;10680:35;10732:19;;7140:85:58;10356:401:110;7140:85:58;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:58;;6931:427;-1:-1:-1;;;;6931:427:58:o;4066:189::-;4145:4;929:10:65;4199:28:58;929:10:65;4216:2:58;4220:6;4199:9;:28::i;4313:149::-;-1:-1:-1;;;;;4428:18:58;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;1885:115:4:-;1957:36;;-1:-1:-1;;;1957:36:4;;1934:4;;1957;;:20;;:36;;1934:4;;1957:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10447:370:58;-1:-1:-1;;;;;10578:19:58;;10570:68;;;;-1:-1:-1;;;10570:68:58;;11215:2:110;10570:68:58;;;11197:21:110;11254:2;11234:18;;;11227:30;11293:34;11273:18;;;11266:62;-1:-1:-1;;;11344:18:110;;;11337:34;11388:19;;10570:68:58;11013:400:110;10570:68:58;-1:-1:-1;;;;;10656:21:58;;10648:68;;;;-1:-1:-1;;;10648:68:58;;11620:2:110;10648:68:58;;;11602:21:110;11659:2;11639:18;;;11632:30;11698:34;11678:18;;;11671:62;-1:-1:-1;;;11749:18:110;;;11742:32;11791:19;;10648:68:58;11418:398:110;10648:68:58;-1:-1:-1;;;;;10727:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1564:25:110;;;10778:32:58;;1537:18:110;10778:32:58;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:58;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:58;;12023:2:110;11347:68:58;;;12005:21:110;12062:2;12042:18;;;12035:30;12101:31;12081:18;;;12074:59;12150:18;;11347:68:58;11821:353:110;11347:68:58;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:58;;7930:68;;;;-1:-1:-1;;;7930:68:58;;12381:2:110;7930:68:58;;;12363:21:110;12420:2;12400:18;;;12393:30;12459:34;12439:18;;;12432:62;-1:-1:-1;;;12510:18:110;;;12503:35;12555:19;;7930:68:58;12179:401:110;7930:68:58;-1:-1:-1;;;;;8016:16:58;;8008:64;;;;-1:-1:-1;;;8008:64:58;;12787:2:110;8008:64:58;;;12769:21:110;12826:2;12806:18;;;12799:30;12865:34;12845:18;;;12838:62;-1:-1:-1;;;12916:18:110;;;12909:33;12959:19;;8008:64:58;12585:399:110;8008:64:58;-1:-1:-1;;;;;8154:15:58;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:58;;13191:2:110;8179:72:58;;;13173:21:110;13230:2;13210:18;;;13203:30;13269:34;13249:18;;;13242:62;-1:-1:-1;;;13320:18:110;;;13313:36;13366:19;;8179:72:58;12989:402:110;8179:72:58;-1:-1:-1;;;;;8285:15:58;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:58;8391:4;-1:-1:-1;;;;;8382:26:58;;8401:6;8382:26;;;;1564:25:110;;1552:2;1537:18;;1418:177;8382:26:58;;;;;;;;8419:37;941:175:83;2524:558:4;2643:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2643:37:4;-1:-1:-1;;;2643:37:4;;;2607:4;;2697:50;2732:7;:5;:7::i;:::-;2742:4;2697:26;:50::i;:::-;2690:57;;2758:13;2785:4;2774:24;;;;;;;;;;;;:::i;:::-;2758:40;-1:-1:-1;2809:10:4;;2834:3;:21;;;;;;;;:::i;:::-;;2830:223;;2879:54;2905:7;:5;:7::i;:::-;-1:-1:-1;;;;;2905:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:14;;2925:7;2879:25;:54::i;:::-;2871:62;;2830:223;;;2960:14;2953:3;:21;;;;;;;;:::i;:::-;;2950:103;;2998:44;:14;3024:8;3034:7;2998:25;:44::i;:::-;2990:52;3070:5;-1:-1:-1;;;;;;2524:558:4:o;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;941:175:83:-;1050:58;;-1:-1:-1;;;;;13588:32:110;;1050:58:83;;;13570:51:110;13637:18;;;13630:34;;;1023:86:83;;1043:5;;-1:-1:-1;;;1073:23:83;13543:18:110;;1050:58:83;;;;-1:-1:-1;;1050:58:83;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:83;-1:-1:-1;;;;;;1050:58:83;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;5275:216:34:-;5388:4;5404:56;5434:4;5441:9;5452:7;5404:22;:56::i;:::-;-1:-1:-1;5477:7:34;5275:216;-1:-1:-1;;5275:216:34:o;585:385::-;773:4;796:167;828:1;843:9;866;889;912:14;940:13;796:18;:167::i;2116:147:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2218:38:58::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;8739:389::-;-1:-1:-1;;;;;8822:21:58;;8814:65;;;;-1:-1:-1;;;8814:65:58;;14289:2:110;8814:65:58;;;14271:21:110;14328:2;14308:18;;;14301:30;14367:33;14347:18;;;14340:61;14418:18;;8814:65:58;14087:355:110;8814:65:58;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:58;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:58;;1564:25:110;;;-1:-1:-1;;;;;9025:37:58;;;9042:1;;9025:37;;1552:2:110;1537:18;9025:37:58;;;;;;;2116:147;;:::o;5788:197:84:-;5874:12;5905:73;5924:6;5932:4;5905:73;;;;;;;;;;;;;;;;;:18;:73::i;5196:642:83:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:83;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:83;;15025:2:110;5720:111:83;;;15007:21:110;15064:2;15044:18;;;15037:30;15103:34;15083:18;;;15076:62;-1:-1:-1;;;15154:18:110;;;15147:40;15204:19;;5720:111:83;14823:406:110;977:1522:34;1198:14;;;;1280:5;:22;;;;;;;;:::i;:::-;;1276:100;;-1:-1:-1;;1328:6:34;;;;1359;;;;1276:100;1388:11;1411:1;:22;;;-1:-1:-1;;;;;1405:44:34;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:64;;;;1467:6;1463:593;;;1501:225;1527:7;1552:8;1586:4;1609:1;:15;;;1642:1;:8;;;1668:9;1695:14;1710:1;1695:17;;;;;;;;:::i;:::-;;;;;;;1501:8;:225::i;:::-;1489:237;;1463:593;;;1769:276;1800:7;1825:8;1851:1;:22;;;1891:1;:17;;;1926:1;:15;;;1959:9;1986:14;2018:13;1769;:276::i;:::-;1757:288;;1463:593;2083:1;:6;;;-1:-1:-1;;;;;2070:19:34;:9;-1:-1:-1;;;;;2070:19:34;;2066:427;;2137:6;;;;2131:44;;-1:-1:-1;;;2131:44:34;;-1:-1:-1;;;;;13588:32:110;;;2131:44:34;;;13570:51:110;13637:18;;;13630:34;;;2131:22:34;;;;;;13543:18:110;;2131:44:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2066:427;;;2218:264;2244:1;:6;;;2268:9;2295;2322:1;:15;;;2355:1;:8;;;2381:9;2408:14;2423:1;2408:17;;;;;;;;:::i;2218:264::-;2206:276;;2066:427;1214:1285;;;977:1522;;;;;;;;:::o;2269:159:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2381:5:58::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:58::1;:17;2414:7:::0;2404;:17:::1;:::i;6169:326:84:-:0;6313:12;6338;6352:23;6379:6;-1:-1:-1;;;;;6379:17:84;6397:4;6379:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:65;;;;6419:69;6446:6;6454:7;6463:10;6475:12;6419:26;:69::i;4108:223::-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:84:o;2506:1009:34:-;2729:4;2745:59;2774:8;2785:7;2794:9;2745:21;:59::i;:::-;2878:420;;;;;;;;-1:-1:-1;;;;;2878:420:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3085:15;2878:420;;;;;;;;;;;;;;;;;;-1:-1:-1;2878:420:34;;;;;;3313:45;;-1:-1:-1;;;3313:45:34;;18348:13:110;;18344:22;;3313:45:34;;;18326:41:110;18409:24;;18405:33;;18383:20;;;18376:63;18481:24;;18477:39;;;18455:20;;;18448:69;18559:24;;18555:33;;18533:20;;;18526:63;18627:24;18605:20;;;18598:54;18690:24;;18668:20;;;18661:54;18753:24;18731:20;;;18724:54;18820:24;;18816:33;;18794:20;;;18787:63;2878:420:34;;3313:37;;;;;;18260:19:110;;3313:45:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;3313:45:34;;;;;;;;-1:-1:-1;;3313:45:34;;;;;;;;;;;;:::i;:::-;;;3309:200;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3491:6;3481:17;;-1:-1:-1;;;3481:17:34;;;;;;;;:::i;3309:200::-;;;;;;;;;;;3405:9;-1:-1:-1;3398:16:34;;-1:-1:-1;3398:16:34;3522:1746;3779:14;3814:35;3852:266;;;;;;;;3898:5;-1:-1:-1;;;;;3892:22:34;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3852:266;;;;3936:24;3852:266;;-1:-1:-1;;;;;3852:266:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4095:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4095:12:34;-1:-1:-1;3852:266:34;;4166:194;;;;;;;;4218:4;4166:194;;;4129:34;4166:194;;;;;;;;;;;;;;;;3814:304;;-1:-1:-1;4129:34:34;4405:5;:22;;;;;;;;:::i;:::-;;4401:697;;4452:14;4467:1;4452:17;;;;;;;;:::i;:::-;;;;;;;4443:26;;4401:697;;;4523:13;4514:5;:22;;;;;;;;:::i;:::-;;4510:588;;4556:47;;-1:-1:-1;;;4556:47:34;;-1:-1:-1;;;;;4556:28:34;;;;;:47;;4585:10;;4597:5;;4556:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4556:47:34;;;;;;;;-1:-1:-1;;4556:47:34;;;;;;;;;;;;:::i;:::-;;;4552:536;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5066:6;5056:17;;-1:-1:-1;;;5056:17:34;;;;;;;;:::i;4552:536::-;4650:25;4678:14;4693:1;4678:17;;;;;;;;:::i;:::-;;;;;;;4650:45;;4745:13;4722:20;:36;:75;;4784:13;4722:75;;;4761:20;4722:75;4713:84;;4632:364;4604:392;4552:536;5108:66;5137:8;5148:6;5156:10;:17;;;5108:21;:66::i;:::-;5197:64;5210:6;5218:10;5230:5;5237:6;5245:15;5197:12;:64::i;:::-;5185:76;3522:1746;-1:-1:-1;;;;;;;;;;;;3522:1746:34:o;7671:628:84:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1476:19:64;;;8113:60:84;;;;-1:-1:-1;;;8113:60:84;;21598:2:110;8113:60:84;;;21580:21:110;21637:2;21617:18;;;21610:30;21676:31;21656:18;;;21649:59;21725:18;;8113:60:84;21396:353:110;8113:60:84;-1:-1:-1;8208:10:84;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:84;;21956:2:110;5354:81:84;;;21938:21:110;21995:2;21975:18;;;21968:30;22034:34;22014:18;;;22007:62;-1:-1:-1;;;22085:18:110;;;22078:36;22131:19;;5354:81:84;21754:402:110;5354:81:84;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:84;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;1818:573:83:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:83;;-1:-1:-1;;;2159:39:83;;2183:4;2159:39;;;22373:34:110;-1:-1:-1;;;;;22443:15:110;;;22423:18;;;22416:43;2159:15:83;;;;;22308:18:110;;2159:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:83;;22672:2:110;2121:163:83;;;22654:21:110;22711:2;22691:18;;;22684:30;22750:34;22730:18;;;22723:62;-1:-1:-1;;;22801:18:110;;;22794:52;22863:19;;2121:163:83;22470:418:110;2121:163:83;2321:62;;-1:-1:-1;;;;;13588:32:110;;2321:62:83;;;13570:51:110;13637:18;;;13630:34;;;2294:90:83;;2314:5;;-1:-1:-1;;;2344:22:83;13543:18:110;;2321:62:83;13396:274:110;5530:650:34;5768:68;;-1:-1:-1;;;5768:68:34;;5743:4;;-1:-1:-1;;;;;5768:19:34;;;;;:68;;5788:11;;5801:6;;5809:13;;5824:11;;5768:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5768:68:34;;;;;;;;-1:-1:-1;;5768:68:34;;;;;;;;;;;;:::i;:::-;;;5764:410;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6007:41;6030:6;6007:41;;;;;;;;;;;;;-1:-1:-1;;;6007:41:34;;;:22;:41::i;:::-;6003:161;;;6075:11;;-1:-1:-1;;;6075:11:34;;;;;;;;;;;6003:161;6142:6;6132:17;;-1:-1:-1;;;6132:17:34;;;;;;;;:::i;5764:410::-;5879:9;5892:1;5879:14;5875:38;;5902:11;;-1:-1:-1;;;5902:11:34;;;;;;;;;;;8821:540:84;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:84;;;;;;;;:::i;4369:212:32:-;4479:4;4567:5;4550:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4540:34;;;;;;4529:5;4512:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4502:34;;;;;;:72;4495:79;;4369:212;;;;:::o;14:250:110:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:110;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:110;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:110:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:110;;835:42;;825:70;;891:1;888;881:12;825:70;770:131;:::o;906:315::-;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:110:o;1600:456::-;1677:6;1685;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:110;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1600:456;;1992:7;;-1:-1:-1;;;2046:2:110;2031:18;;;;2018:32;;1600:456::o;2250:271::-;2324:6;2377:2;2365:9;2356:7;2352:23;2348:32;2345:52;;;2393:1;2390;2383:12;2345:52;2432:9;2419:23;2471:1;2464:5;2461:12;2451:40;;2487:1;2484;2477:12;2753:127;2814:10;2809:3;2805:20;2802:1;2795:31;2845:4;2842:1;2835:15;2869:4;2866:1;2859:15;2885:249;2995:2;2976:13;;-1:-1:-1;;2972:27:110;2960:40;;3030:18;3015:34;;3051:22;;;3012:62;3009:88;;;3077:18;;:::i;:::-;3113:2;3106:22;-1:-1:-1;;2885:249:110:o;3139:1474::-;3259:6;3267;3275;3283;3291;3344:3;3332:9;3323:7;3319:23;3315:33;3312:53;;;3361:1;3358;3351:12;3312:53;3400:9;3387:23;3419:31;3444:5;3419:31;:::i;:::-;3469:5;-1:-1:-1;3493:2:110;3532:18;;;3519:32;3560:33;3519:32;3560:33;:::i;:::-;3612:7;-1:-1:-1;3671:2:110;3656:18;;3643:32;3684:33;3643:32;3684:33;:::i;:::-;3736:7;-1:-1:-1;3790:2:110;3775:18;;3762:32;;-1:-1:-1;3845:3:110;3830:19;;3817:33;3869:18;3899:14;;;3896:34;;;3926:1;3923;3916:12;3896:34;3964:6;3953:9;3949:22;3939:32;;4009:7;4002:4;3998:2;3994:13;3990:27;3980:55;;4031:1;4028;4021:12;3980:55;4067:2;4054:16;4089:2;4085;4082:10;4079:36;;;4095:18;;:::i;:::-;4141:2;4138:1;4134:10;4124:20;;4173:2;4167:9;4185:40;4221:2;4217;4213:11;4205:6;4185:40;:::i;:::-;4260:18;;;4336:11;;;4332:20;;;4294:15;;;4364:19;;;4361:39;;;4396:1;4393;4386:12;4361:39;4420:11;;;;4440:142;4456:6;4451:3;4448:15;4440:142;;;4522:17;;4510:30;;4473:12;;;;4560;;4440:142;;;4444:3;4601:6;4591:16;;;;;;;3139:1474;;;;;;;;:::o;4618:247::-;4677:6;4730:2;4718:9;4709:7;4705:23;4701:32;4698:52;;;4746:1;4743;4736:12;4698:52;4785:9;4772:23;4804:31;4829:5;4804:31;:::i;4870:556::-;4913:5;4966:3;4959:4;4951:6;4947:17;4943:27;4933:55;;4984:1;4981;4974:12;4933:55;5020:6;5007:20;5046:18;5042:2;5039:26;5036:52;;;5068:18;;:::i;:::-;5117:2;5111:9;5129:67;5184:2;5165:13;;-1:-1:-1;;5161:27:110;5190:4;5157:38;5111:9;5129:67;:::i;:::-;5220:2;5212:6;5205:18;5266:3;5259:4;5254:2;5246:6;5242:15;5238:26;5235:35;5232:55;;;5283:1;5280;5273:12;5232:55;5347:2;5340:4;5332:6;5328:17;5321:4;5313:6;5309:17;5296:54;5394:1;5370:15;;;5387:4;5366:26;5359:37;;;;5374:6;4870:556;-1:-1:-1;;;4870:556:110:o;5431:816::-;5546:6;5554;5562;5570;5578;5631:3;5619:9;5610:7;5606:23;5602:33;5599:53;;;5648:1;5645;5638:12;5599:53;5688:9;5675:23;5717:18;5758:2;5750:6;5747:14;5744:34;;;5774:1;5771;5764:12;5744:34;5797:50;5839:7;5830:6;5819:9;5815:22;5797:50;:::i;:::-;5787:60;;5900:2;5889:9;5885:18;5872:32;5856:48;;5929:2;5919:8;5916:16;5913:36;;;5945:1;5942;5935:12;5913:36;;5968:52;6012:7;6001:8;5990:9;5986:24;5968:52;:::i;:::-;5958:62;;;6070:2;6059:9;6055:18;6042:32;6083:31;6108:5;6083:31;:::i;:::-;5431:816;;;;-1:-1:-1;6133:5:110;;6185:2;6170:18;;6157:32;;-1:-1:-1;6236:3:110;6221:19;6208:33;;5431:816;-1:-1:-1;;5431:816:110:o;6252:388::-;6320:6;6328;6381:2;6369:9;6360:7;6356:23;6352:32;6349:52;;;6397:1;6394;6387:12;6349:52;6436:9;6423:23;6455:31;6480:5;6455:31;:::i;:::-;6505:5;-1:-1:-1;6562:2:110;6547:18;;6534:32;6575:33;6534:32;6575:33;:::i;:::-;6627:7;6617:17;;;6252:388;;;;;:::o;6645:380::-;6724:1;6720:12;;;;6767;;;6788:61;;6842:4;6834:6;6830:17;6820:27;;6788:61;6895:2;6887:6;6884:14;6864:18;6861:38;6858:161;;6941:10;6936:3;6932:20;6929:1;6922:31;6976:4;6973:1;6966:15;7004:4;7001:1;6994:15;6858:161;;6645:380;;;:::o;7030:127::-;7091:10;7086:3;7082:20;7079:1;7072:31;7122:4;7119:1;7112:15;7146:4;7143:1;7136:15;7162:125;7227:9;;;7248:10;;;7245:36;;;7261:18;;:::i;7292:138::-;7371:13;;7393:31;7371:13;7393:31;:::i;:::-;7292:138;;;:::o;7435:165::-;7513:13;;7566:8;7555:20;;7545:31;;7535:59;;7590:1;7587;7580:12;7605:1082;7706:6;7737:3;7781:2;7769:9;7760:7;7756:23;7752:32;7749:52;;;7797:1;7794;7787:12;7749:52;7830:2;7824:9;7860:15;;;;7905:18;7890:34;;7926:22;;;7887:62;7884:88;;;7952:18;;:::i;:::-;7992:10;7988:2;7981:22;8027:40;8057:9;8027:40;:::i;:::-;8019:6;8012:56;8101:48;8145:2;8134:9;8130:18;8101:48;:::i;:::-;8096:2;8088:6;8084:15;8077:73;8183:49;8228:2;8217:9;8213:18;8183:49;:::i;:::-;8178:2;8170:6;8166:15;8159:74;8266:49;8311:2;8300:9;8296:18;8266:49;:::i;:::-;8261:2;8253:6;8249:15;8242:74;8350:50;8395:3;8384:9;8380:19;8350:50;:::i;:::-;8344:3;8336:6;8332:16;8325:76;8435:50;8480:3;8469:9;8465:19;8435:50;:::i;:::-;8429:3;8421:6;8417:16;8410:76;8520:50;8565:3;8554:9;8550:19;8520:50;:::i;:::-;8514:3;8506:6;8502:16;8495:76;8605:50;8650:3;8639:9;8635:19;8605:50;:::i;:::-;8599:3;8587:16;;8580:76;8591:6;7605:1082;-1:-1:-1;;;;7605:1082:110:o;8900:184::-;8970:6;9023:2;9011:9;9002:7;8998:23;8994:32;8991:52;;;9039:1;9036;9029:12;8991:52;-1:-1:-1;9062:16:110;;8900:184;-1:-1:-1;8900:184:110:o;9089:127::-;9150:10;9145:3;9141:20;9138:1;9131:31;9181:4;9178:1;9171:15;9205:4;9202:1;9195:15;9221:128;9288:9;;;9309:11;;;9306:37;;;9323:18;;:::i;9354:251::-;9424:6;9477:2;9465:9;9456:7;9452:23;9448:32;9445:52;;;9493:1;9490;9483:12;9445:52;9525:9;9519:16;9544:31;9569:5;9544:31;:::i;9610:127::-;9671:10;9666:3;9662:20;9659:1;9652:31;9702:4;9699:1;9692:15;9726:4;9723:1;9716:15;10762:246;10909:2;10894:18;;10942:1;10931:13;;10921:47;;10948:18;;:::i;:::-;10977:25;;;10762:246;:::o;13675:407::-;13877:2;13859:21;;;13916:2;13896:18;;;13889:30;13955:34;13950:2;13935:18;;13928:62;-1:-1:-1;;;14021:2:110;14006:18;;13999:41;14072:3;14057:19;;13675:407::o;14447:164::-;14523:13;;14572;;14565:21;14555:32;;14545:60;;14601:1;14598;14591:12;14616:202;14683:6;14736:2;14724:9;14715:7;14711:23;14707:32;14704:52;;;14752:1;14749;14742:12;14704:52;14775:37;14802:9;14775:37;:::i;15234:324::-;15319:6;15327;15335;15388:2;15376:9;15367:7;15363:23;15359:32;15356:52;;;15404:1;15401;15394:12;15356:52;15427:37;15454:9;15427:37;:::i;:::-;15417:47;;15504:2;15493:9;15489:18;15483:25;15473:35;;15548:2;15537:9;15533:18;15527:25;15517:35;;15234:324;;;;;:::o;15689:545::-;15791:2;15786:3;15783:11;15780:448;;;15827:1;15852:5;15848:2;15841:17;15897:4;15893:2;15883:19;15967:2;15955:10;15951:19;15948:1;15944:27;15938:4;15934:38;16003:4;15991:10;15988:20;15985:47;;;-1:-1:-1;16026:4:110;15985:47;16081:2;16076:3;16072:12;16069:1;16065:20;16059:4;16055:31;16045:41;;16136:82;16154:2;16147:5;16144:13;16136:82;;;16199:17;;;16180:1;16169:13;16136:82;;16410:1352;16536:3;16530:10;16563:18;16555:6;16552:30;16549:56;;;16585:18;;:::i;:::-;16614:97;16704:6;16664:38;16696:4;16690:11;16664:38;:::i;:::-;16658:4;16614:97;:::i;:::-;16766:4;;16830:2;16819:14;;16847:1;16842:663;;;;17549:1;17566:6;17563:89;;;-1:-1:-1;17618:19:110;;;17612:26;17563:89;-1:-1:-1;;16367:1:110;16363:11;;;16359:24;16355:29;16345:40;16391:1;16387:11;;;16342:57;17665:81;;16812:944;;16842:663;15636:1;15629:14;;;15673:4;15660:18;;-1:-1:-1;;16878:20:110;;;16996:236;17010:7;17007:1;17004:14;16996:236;;;17099:19;;;17093:26;17078:42;;17191:27;;;;17159:1;17147:14;;;;17026:19;;16996:236;;;17000:3;17260:6;17251:7;17248:19;17245:201;;;17321:19;;;17315:26;-1:-1:-1;;17404:1:110;17400:14;;;17416:3;17396:24;17392:37;17388:42;17373:58;17358:74;;17245:201;-1:-1:-1;;;;;17492:1:110;17476:14;;;17472:22;17459:36;;-1:-1:-1;16410:1352:110:o;17767:287::-;17896:3;17934:6;17928:13;17950:66;18009:6;18004:3;17997:4;17989:6;17985:17;17950:66;:::i;:::-;18032:16;;;;;17767:287;-1:-1:-1;;17767:287:110:o;18861:179::-;18896:3;18938:1;18920:16;18917:23;18914:120;;;18984:1;18981;18978;18963:23;-1:-1:-1;19021:1:110;19015:8;19010:3;19006:18;18861:179;:::o;19045:671::-;19084:3;19126:4;19108:16;19105:26;19102:39;;;19045:671;:::o;19102:39::-;19168:2;19162:9;-1:-1:-1;;19233:16:110;19229:25;;19226:1;19162:9;19205:50;19284:4;19278:11;19308:16;19343:18;19414:2;19407:4;19399:6;19395:17;19392:25;19387:2;19379:6;19376:14;19373:45;19370:58;;;19421:5;;;;;19045:671;:::o;19370:58::-;19458:6;19452:4;19448:17;19437:28;;19494:3;19488:10;19521:2;19513:6;19510:14;19507:27;;;19527:5;;;;;;19045:671;:::o;19507:27::-;19611:2;19592:16;19586:4;19582:27;19578:36;19571:4;19562:6;19557:3;19553:16;19549:27;19546:69;19543:82;;;19618:5;;;;;;19045:671;:::o;19543:82::-;19634:57;19685:4;19676:6;19668;19664:19;19660:30;19654:4;19634:57;:::i;:::-;-1:-1:-1;19707:3:110;;19045:671;-1:-1:-1;;;;;19045:671:110:o;19910:686::-;19999:5;19993:12;19988:3;19981:25;19963:3;20052:4;20045:5;20041:16;20035:23;20094:1;20080:12;20077:19;20067:53;;20100:18;;:::i;:::-;20152:12;20145:4;20140:3;20136:14;20129:36;;20213:4;20206:5;20202:16;20196:23;20255:1;20251;20246:3;20242:11;20238:19;20309:2;20293:14;20289:23;20282:4;20277:3;20273:14;20266:47;20374:2;20366:4;20359:5;20355:16;20349:23;20345:32;20338:4;20333:3;20329:14;20322:56;;;20427:4;20420:5;20416:16;20410:23;20403:4;20398:3;20394:14;20387:47;20482:4;20475:5;20471:16;20465:23;20520:4;20513;20508:3;20504:14;20497:28;20541:49;20584:4;20579:3;20575:14;20559;20541:49;:::i;20961:430::-;21238:3;21227:9;21220:22;21201:4;21259:57;21311:3;21300:9;21296:19;21288:6;21259:57;:::i;:::-;21251:65;;21325:60;21381:2;21370:9;21366:18;21358:6;20723:12;;-1:-1:-1;;;;;20719:21:110;;;20707:34;;20804:4;20793:16;;;20787:23;20780:31;20773:39;20757:14;;;20750:63;20866:4;20855:16;;;20849:23;20845:32;;;20829:14;;;20822:56;20941:4;20930:16;;;20924:23;20917:31;20910:39;20894:14;;20887:63;20601:355;22893:574;23226:3;23215:9;23208:22;23189:4;23247:57;23299:3;23288:9;23284:19;23276:6;23247:57;:::i;:::-;23239:65;;23313:60;23369:2;23358:9;23354:18;23346:6;20723:12;;-1:-1:-1;;;;;20719:21:110;;;20707:34;;20804:4;20793:16;;;20787:23;20780:31;20773:39;20757:14;;;20750:63;20866:4;20855:16;;;20849:23;20845:32;;;20829:14;;;20822:56;20941:4;20930:16;;;20924:23;20917:31;20910:39;20894:14;;20887:63;20601:355;23313:60;23404:3;23389:19;;23382:35;;;;23448:3;23433:19;23426:35;22893:574;;-1:-1:-1;;22893:574:110:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "circulatingSupply()": "9358928b",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getExchangeRate()": "e6aa216c",
    "getExchangeRate(uint8)": "4d02a3f7",
    "getOZ()": "59c64e12",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,uint256,uint256)": "74823132",
    "name()": "06fdde03",
    "redeem(address,address,address,uint256,uint256[])": "6afa0287",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"OZError01\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError02\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorCode\",\"type\":\"string\"}],\"name\":\"OZError10\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"OZError18\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OZError19\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError20\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OZError21\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum QuoteAsset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZ\",\"outputs\":[{\"internalType\":\"contract ozIDiamond\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ozDiamond_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"communityAmount_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ozlAmountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut_\",\"type\":\"uint256[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OZError01(string)\":[{\"details\":\"See https://eips.ethereum.org/EIPS/eip-6093\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"OZError01(string)\":[{\"notice\":\"Standard ERC20 Errors\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x43d771427b24ea00622386c93e297f880a2e015c56cc3a9ad3b65a67731706c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9256056be4b25dd96c017dc752a84a50aaa133a422b6925d5b56935763ced73c\",\"dweb:/ipfs/QmX1bHX8cK3PBV6JAKtjSTJVkuRhin7BvEsShVueT4GnyV\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b\",\"urls\":[\"bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe\",\"dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0xb8636d0ac218ba4dcb505c1764f4a094be44a17c13683b1d2038224f13eacd07\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e0bdfec6fa292ee710554cc3a8011152c62f4e77dcea561f53b990a3f4c03d3\",\"dweb:/ipfs/QmSRaRkRtG9XKBwYkY1rqjc9b4PLh4bTWmP4DxVCPaaS25\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0x4fa3c8db40e4fb2dcc19b44f9948a6ab85b477ab1cdf85c06a0d7f0418b1e41e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c529762430f4f22756f5095144206da78732c7ec8111726dd0a1f9315a4b616b\",\"dweb:/ipfs/QmRkUBpiXNCPErtVQzM1ByP2ABFgLEuNWQohgeXXM5RLqk\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387\",\"dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x382569a72697c0a7d466929c013b063b74515b1380e35e12077168b8aa27dcaa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ea6c0f8f1d1407a1e4422653648784dac3e93cfdf5218b6f60a3979ed87a250\",\"dweb:/ipfs/QmcAoKzZEA25UzvsAf2z4Gu6Wo6uW95WY3SmQja5R2aWg2\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845\",\"dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv\"]},\"contracts/libraries/TradingLib.sol\":{\"keccak256\":\"0x43c6d144c960db1dd6c64187005b54bee5ec83deb1953fbb1c3b554e8a7f92d2\",\"urls\":[\"bzz-raw://176da482d6c9b82a3a6c5fe9bb12f94f2354ffaa0513d8cd5bdad133ba743483\",\"dweb:/ipfs/QmeSCBEdvshWV1Tzr1jSmXWrkXpHUJiSHQsD8VpnRMb4r7\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorMsg",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError01"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError02"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorCode",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError10"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError18"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError19"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError20"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError21"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "circulatingSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum QuoteAsset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZ",
          "outputs": [
            {
              "internalType": "contract ozIDiamond",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ozDiamond_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "communityAmount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ozlAmountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x43d771427b24ea00622386c93e297f880a2e015c56cc3a9ad3b65a67731706c3",
        "urls": [
          "bzz-raw://9256056be4b25dd96c017dc752a84a50aaa133a422b6925d5b56935763ced73c",
          "dweb:/ipfs/QmX1bHX8cK3PBV6JAKtjSTJVkuRhin7BvEsShVueT4GnyV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b",
        "urls": [
          "bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe",
          "dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv"
        ],
        "license": null
      },
      "contracts/OZL.sol": {
        "keccak256": "0xb8636d0ac218ba4dcb505c1764f4a094be44a17c13683b1d2038224f13eacd07",
        "urls": [
          "bzz-raw://5e0bdfec6fa292ee710554cc3a8011152c62f4e77dcea561f53b990a3f4c03d3",
          "dweb:/ipfs/QmSRaRkRtG9XKBwYkY1rqjc9b4PLh4bTWmP4DxVCPaaS25"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0x4fa3c8db40e4fb2dcc19b44f9948a6ab85b477ab1cdf85c06a0d7f0418b1e41e",
        "urls": [
          "bzz-raw://c529762430f4f22756f5095144206da78732c7ec8111726dd0a1f9315a4b616b",
          "dweb:/ipfs/QmRkUBpiXNCPErtVQzM1ByP2ABFgLEuNWQohgeXXM5RLqk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d",
        "urls": [
          "bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387",
          "dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0x382569a72697c0a7d466929c013b063b74515b1380e35e12077168b8aa27dcaa",
        "urls": [
          "bzz-raw://5ea6c0f8f1d1407a1e4422653648784dac3e93cfdf5218b6f60a3979ed87a250",
          "dweb:/ipfs/QmcAoKzZEA25UzvsAf2z4Gu6Wo6uW95WY3SmQja5R2aWg2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f",
        "urls": [
          "bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845",
          "dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TradingLib.sol": {
        "keccak256": "0x43c6d144c960db1dd6c64187005b54bee5ec83deb1953fbb1c3b554e8a7f92d2",
        "urls": [
          "bzz-raw://176da482d6c9b82a3a6c5fe9bb12f94f2354ffaa0513d8cd5bdad133ba743483",
          "dweb:/ipfs/QmeSCBEdvshWV1Tzr1jSmXWrkXpHUJiSHQsD8VpnRMb4r7"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 880,
    "exportedSymbols": {
      "Address": [
        41851
      ],
      "ERC20Upgradeable": [
        37375
      ],
      "FixedPointMathLib": [
        4835
      ],
      "IERC20": [
        41109
      ],
      "IERC20Permit": [
        3732
      ],
      "OZError01": [
        299
      ],
      "OZError02": [
        301
      ],
      "OZError03": [
        323
      ],
      "OZError04": [
        329
      ],
      "OZError05": [
        333
      ],
      "OZError06": [
        341
      ],
      "OZError07": [
        349
      ],
      "OZError08": [
        355
      ],
      "OZError09": [
        361
      ],
      "OZError10": [
        305
      ],
      "OZError11": [
        309
      ],
      "OZError12": [
        313
      ],
      "OZError13": [
        317
      ],
      "OZError14": [
        321
      ],
      "OZError15": [
        363
      ],
      "OZError16": [
        365
      ],
      "OZError17": [
        367
      ],
      "OZError18": [
        371
      ],
      "OZError19": [
        375
      ],
      "OZError20": [
        377
      ],
      "OZError21": [
        381
      ],
      "OZL": [
        879
      ],
      "QuoteAsset": [
        3738
      ],
      "SafeERC20": [
        41521
      ],
      "StorageSlot": [
        41983
      ],
      "TradingLib": [
        6629
      ],
      "TradingPackage": [
        100
      ],
      "console": [
        28140
      ],
      "ozIDiamond": [
        4469
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:4752:4",
    "nodes": [
      {
        "id": 468,
        "nodeType": "PragmaDirective",
        "src": "45:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 470,
        "nodeType": "ImportDirective",
        "src": "71:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 37376,
        "symbolAliases": [
          {
            "foreign": {
              "id": 469,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37375,
              "src": "79:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 472,
        "nodeType": "ImportDirective",
        "src": "180:59:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "./interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 3733,
        "symbolAliases": [
          {
            "foreign": {
              "id": 471,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3732,
              "src": "188:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 474,
        "nodeType": "ImportDirective",
        "src": "240:68:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 4836,
        "symbolAliases": [
          {
            "foreign": {
              "id": 473,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4835,
              "src": "248:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 476,
        "nodeType": "ImportDirective",
        "src": "309:74:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "file": "@openzeppelin/contracts/utils/StorageSlot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 41984,
        "symbolAliases": [
          {
            "foreign": {
              "id": 475,
              "name": "StorageSlot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41983,
              "src": "317:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 478,
        "nodeType": "ImportDirective",
        "src": "384:55:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIDiamond.sol",
        "file": "./interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 4470,
        "symbolAliases": [
          {
            "foreign": {
              "id": 477,
              "name": "ozIDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4469,
              "src": "392:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 480,
        "nodeType": "ImportDirective",
        "src": "440:49:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "./interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 3934,
        "symbolAliases": [
          {
            "foreign": {
              "id": 479,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3738,
              "src": "448:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 482,
        "nodeType": "ImportDirective",
        "src": "490:66:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 41852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 481,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41851,
              "src": "498:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 484,
        "nodeType": "ImportDirective",
        "src": "557:82:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 41522,
        "symbolAliases": [
          {
            "foreign": {
              "id": 483,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41521,
              "src": "565:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 486,
        "nodeType": "ImportDirective",
        "src": "640:70:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 41110,
        "symbolAliases": [
          {
            "foreign": {
              "id": 485,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41109,
              "src": "648:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 488,
        "nodeType": "ImportDirective",
        "src": "711:54:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/TradingLib.sol",
        "file": "./libraries/TradingLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 6630,
        "symbolAliases": [
          {
            "foreign": {
              "id": 487,
              "name": "TradingLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6629,
              "src": "719:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 490,
        "nodeType": "ImportDirective",
        "src": "766:48:4",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "./AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 489,
              "name": "TradingPackage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 100,
              "src": "774:14:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 491,
        "nodeType": "ImportDirective",
        "src": "815:22:4",
        "nodes": [],
        "absolutePath": "contracts/Errors.sol",
        "file": "./Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 382,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 492,
        "nodeType": "ImportDirective",
        "src": "839:31:4",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 880,
        "sourceUnit": 28141,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 879,
        "nodeType": "ContractDefinition",
        "src": "903:3894:4",
        "nodes": [
          {
            "id": 497,
            "nodeType": "UsingForDirective",
            "src": "943:33:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 495,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "949:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4835,
              "src": "949:17:4"
            },
            "typeName": {
              "id": 496,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "971:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 510,
            "nodeType": "VariableDeclaration",
            "src": "982:98:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_OZ_DIAMOND_SLOT",
            "nameLocation": "1007:16:4",
            "scope": 879,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 498,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "982:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 508,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7a4469616d6f6e642e73746f726167652e736c6f74",
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1049:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            },
                            "value": "ozDiamond.storage.slot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            }
                          ],
                          "id": 503,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1039:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1039:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1034:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1034:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1078:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "1034:45:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 500,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1026:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 499,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 509,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1026:54:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 517,
            "nodeType": "FunctionDefinition",
            "src": "1088:53:4",
            "nodes": [],
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "1102:39:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 513,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36763,
                      "src": "1112:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:22:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:2:4"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:4"
            },
            "scope": 879,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 564,
            "nodeType": "FunctionDefinition",
            "src": "1148:729:4",
            "nodes": [],
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "1342:535:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "1365:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 534,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "1372:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 532,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36811,
                      "src": "1352:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:28:4"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "_OZ_DIAMOND_SLOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "1417:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 537,
                            "name": "StorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41983,
                            "src": "1390:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StorageSlot_$41983_$",
                              "typeString": "type(library StorageSlot)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1402:14:4",
                          "memberName": "getAddressSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41905,
                          "src": "1390:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41879_storage_ptr_$",
                            "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1390:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$41879_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot storage pointer"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1435:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41878,
                      "src": "1390:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 543,
                      "name": "ozDiamond_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "1443:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1390:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:63:4"
                },
                {
                  "documentation": " Add here later the vesting strategy using\n OP's VestingWallet.sol / https://medium.com/cardstack/building-a-token-vesting-contract-b368a954f99\n Use linear distribution, not all unlocked at once.\n When they vest, add it to circulating supply.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 549,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1785:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$879",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$879",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1777:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 547,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1777:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "1792:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 546,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37187,
                      "src": "1771:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 557,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1834:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$879",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$879",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1826:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 555,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1826:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1826:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 559,
                        "name": "ozDiamond_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 523,
                        "src": "1841:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 560,
                        "name": "communityAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1853:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 554,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37131,
                      "src": "1816:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1816:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "1816:54:4"
                }
              ]
            },
            "functionSelector": "74823132",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 529,
                  "name": "initializer",
                  "nameLocations": [
                    "1330:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36684,
                  "src": "1330:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1330:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "1157:10:4",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1191:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1177:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1221:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1207:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "ozDiamond_",
                  "nameLocation": "1246:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1238:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1271:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1266:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "communityAmount_",
                  "nameLocation": "1298:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1293:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1167:153:4"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1342:0:4"
            },
            "scope": 879,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 576,
            "nodeType": "FunctionDefinition",
            "src": "1885:115:4",
            "nodes": [],
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "1940:60:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 571,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3738,
                          "src": "1978:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3738_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1989:3:4",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3735,
                        "src": "1978:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 569,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1957:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OZL_$879",
                          "typeString": "contract OZL"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1962:15:4",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 639,
                      "src": "1957:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$3738_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 568,
                  "id": 574,
                  "nodeType": "Return",
                  "src": "1950:43:4"
                }
              ]
            },
            "functionSelector": "e6aa216c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "1894:15:4",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:2:4"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "1934:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1933:6:4"
            },
            "scope": 879,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 639,
            "nodeType": "FunctionDefinition",
            "src": "2007:511:4",
            "nodes": [],
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "2077:441:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 585,
                      "mutability": "mutable",
                      "name": "ONE",
                      "nameLocation": "2092:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2087:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 584,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2087:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2098:7:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:18:4"
                },
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "mutability": "mutable",
                      "name": "rETH",
                      "nameLocation": "2123:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2115:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 588,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2115:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 595,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 590,
                            "name": "getOZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "2130:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4469_$",
                              "typeString": "function () view returns (contract ozIDiamond)"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2130:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2138:14:4",
                        "memberName": "tradingPackage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4468,
                        "src": "2130:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                          "typeString": "function () view external returns (struct TradingPackage memory)"
                        }
                      },
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2130:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage memory"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2155:4:4",
                    "memberName": "rETH",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 97,
                    "src": "2130:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2115:44:4"
                },
                {
                  "assignments": [
                    597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 597,
                      "mutability": "mutable",
                      "name": "totalFeesRETH",
                      "nameLocation": "2174:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2169:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 596,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2169:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 604,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2227:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$879",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$879",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2219:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 602,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2219:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2219:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 599,
                            "name": "rETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "2203:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 598,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3732,
                          "src": "2190:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$3732_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2190:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$3732",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2209:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3618,
                      "src": "2190:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2169:64:4"
                },
                {
                  "assignments": [
                    609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "totalFeesQuote",
                      "nameLocation": "2249:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2244:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2244:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 610,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "2266:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 611,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3738,
                          "src": "2276:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3738_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2287:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3737,
                        "src": "2276:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "2266:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 616,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "2345:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                            "typeString": "enum QuoteAsset"
                          }
                        },
                        {
                          "id": 617,
                          "name": "totalFeesRETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "2353:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                            "typeString": "enum QuoteAsset"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 615,
                        "name": "_convertToQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "2329:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3738_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (enum QuoteAsset,uint256) view returns (uint256)"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2329:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2266:101:4",
                    "trueExpression": {
                      "id": 614,
                      "name": "totalFeesRETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "2303:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2244:123:4"
                },
                {
                  "assignments": [
                    622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 622,
                      "mutability": "mutable",
                      "name": "c_Supply",
                      "nameLocation": "2383:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2378:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 621,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2378:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 625,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 623,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "2394:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2378:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 626,
                      "name": "c_Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "2428:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2440:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2428:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "nodeType": "IfStatement",
                  "src": "2424:29:4",
                  "trueBody": {
                    "expression": {
                      "id": 629,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2450:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 583,
                    "id": 630,
                    "nodeType": "Return",
                    "src": "2443:10:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 634,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2486:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 635,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "2502:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 632,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "2471:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2475:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "2471:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 637,
                  "nodeType": "Return",
                  "src": "2464:47:4"
                }
              ]
            },
            "functionSelector": "4d02a3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2016:15:4",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2043:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "2032:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 577,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2032:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3738,
                      "src": "2032:10:4"
                    },
                    "referencedDeclaration": 3738,
                    "src": "2032:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:19:4"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "2071:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2070:6:4"
            },
            "scope": 879,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 715,
            "nodeType": "FunctionDefinition",
            "src": "2524:558:4",
            "nodes": [],
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "2613:469:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2636:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "2623:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2623:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 655,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "724554485f4554482829",
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2667:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        },
                        "value": "rETH_ETH()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        }
                      ],
                      "expression": {
                        "id": 651,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2643:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2647:19:4",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "2643:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2623:57:4"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 656,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "2690:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 661,
                                "name": "getOZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "2732:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4469_$",
                                  "typeString": "function () view returns (contract ozIDiamond)"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2732:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                                "typeString": "contract ozIDiamond"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                                "typeString": "contract ozIDiamond"
                              }
                            ],
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2724:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 659,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2724:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2724:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 664,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "2742:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 657,
                          "name": "Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41851,
                          "src": "2697:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Address_$41851_$",
                            "typeString": "type(library Address)"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2705:18:4",
                        "memberName": "functionStaticCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41692,
                        "src": "2697:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (address,bytes memory) view returns (bytes memory)"
                        }
                      },
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2697:50:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2690:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "2690:57:4"
                },
                {
                  "assignments": [
                    669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 669,
                      "mutability": "mutable",
                      "name": "reth_eth",
                      "nameLocation": "2763:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "2758:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 668,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2758:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 677,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 672,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "2785:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2792:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 673,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2792:4:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2791:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 670,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2774:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2778:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2774:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2758:40:4"
                },
                {
                  "assignments": [
                    679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 679,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "2814:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "2809:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 678,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2809:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 680,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2809:10:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                      "typeString": "enum QuoteAsset"
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 681,
                      "name": "qt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "2834:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 682,
                        "name": "QuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3738,
                        "src": "2841:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3738_$",
                          "typeString": "type(enum QuoteAsset)"
                        }
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2852:3:4",
                      "memberName": "USD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "2841:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "src": "2834:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 697,
                        "name": "qt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "2953:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 698,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3738,
                          "src": "2960:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3738_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2971:3:4",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3736,
                        "src": "2960:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "2953:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 710,
                    "nodeType": "IfStatement",
                    "src": "2950:103:4",
                    "trueBody": {
                      "id": 709,
                      "nodeType": "Block",
                      "src": "2976:77:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 701,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "2990:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 704,
                                  "name": "reth_eth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 669,
                                  "src": "3024:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3034:7:4",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 702,
                                  "name": "totalFeesRETH_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 644,
                                  "src": "2998:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3013:10:4",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4766,
                                "src": "2998:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2998:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2990:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 708,
                          "nodeType": "ExpressionStatement",
                          "src": "2990:52:4"
                        }
                      ]
                    }
                  },
                  "id": 711,
                  "nodeType": "IfStatement",
                  "src": "2830:223:4",
                  "trueBody": {
                    "id": 696,
                    "nodeType": "Block",
                    "src": "2857:87:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 685,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "2871:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 688,
                                      "name": "getOZ",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 878,
                                      "src": "2905:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4469_$",
                                        "typeString": "function () view returns (contract ozIDiamond)"
                                      }
                                    },
                                    "id": 689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2905:7:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                                      "typeString": "contract ozIDiamond"
                                    }
                                  },
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2913:8:4",
                                  "memberName": "rETH_USD",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4356,
                                  "src": "2905:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2905:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2925:7:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "id": 686,
                                "name": "totalFeesRETH_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 644,
                                "src": "2879:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2894:10:4",
                              "memberName": "mulDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4766,
                              "src": "2879:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2879:54:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2871:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "2871:62:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 712,
                    "name": "quote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 679,
                    "src": "3070:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 648,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "3063:12:4"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToQuote",
            "nameLocation": "2533:15:4",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "qt_",
                  "nameLocation": "2560:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2549:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 640,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2549:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3738,
                      "src": "2549:10:4"
                    },
                    "referencedDeclaration": 3738,
                    "src": "2549:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "totalFeesRETH_",
                  "nameLocation": "2570:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2565:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:37:4"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2607:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2607:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2606:6:4"
            },
            "scope": 879,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 852,
            "nodeType": "FunctionDefinition",
            "src": "3089:1419:4",
            "nodes": [],
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "3290:1218:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "OZ",
                      "nameLocation": "3311:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "3300:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                        "typeString": "contract ozIDiamond"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "ozIDiamond",
                          "nameLocations": [
                            "3300:10:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4469,
                          "src": "3300:10:4"
                        },
                        "referencedDeclaration": 4469,
                        "src": "3300:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 736,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 734,
                      "name": "getOZ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "3316:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4469_$",
                        "typeString": "function () view returns (contract ozIDiamond)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3300:23:4"
                },
                {
                  "assignments": [
                    739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "3355:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "3333:23:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage"
                      },
                      "typeName": {
                        "id": 738,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 737,
                          "name": "TradingPackage",
                          "nameLocations": [
                            "3333:14:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100,
                          "src": "3333:14:4"
                        },
                        "referencedDeclaration": 100,
                        "src": "3333:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_storage_ptr",
                          "typeString": "struct TradingPackage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 740,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "3359:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3362:14:4",
                      "memberName": "tradingPackage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4468,
                      "src": "3359:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                        "typeString": "function () view external returns (struct TradingPackage memory)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                      "typeString": "struct TradingPackage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:45:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 746,
                              "name": "tokenOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "3418:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 744,
                              "name": "OZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "3406:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3409:8:4",
                            "memberName": "ozTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4447,
                            "src": "3406:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3440:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3432:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 748,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3432:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3432:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3406:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 753,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "3458:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 754,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "3471:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                              "typeString": "struct TradingPackage memory"
                            }
                          },
                          "id": 755,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3473:4:4",
                          "memberName": "WETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "3471:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3458:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3406:71:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 758,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "3493:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 759,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "3506:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                            "typeString": "struct TradingPackage memory"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3508:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 97,
                        "src": "3506:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3493:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3406:106:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 767,
                  "nodeType": "IfStatement",
                  "src": "3389:161:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 764,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "3540:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 763,
                        "name": "OZError18",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "3530:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3530:20:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 766,
                    "nodeType": "RevertStatement",
                    "src": "3523:27:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 768,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3565:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3569:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3565:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 770,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "3579:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3565:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 780,
                  "nodeType": "IfStatement",
                  "src": "3561:100:4",
                  "trueBody": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "3587:74:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 773,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "3617:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 774,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3625:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3629:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3625:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 776,
                              "name": "ozlAmountIn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "3637:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 772,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37347,
                            "src": "3601:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3601:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "3601:49:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 787,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3801:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OZL_$879",
                                  "typeString": "contract OZL"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OZL_$879",
                                  "typeString": "contract OZL"
                                }
                              ],
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3793:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 785,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3793:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3793:13:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 784,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41109,
                          "src": "3786:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$41109_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3786:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41109",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 792,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "3817:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3809:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3809:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3809:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 794,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "3822:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$41109",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 781,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41521,
                        "src": "3763:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$41521_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3773:12:4",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41178,
                      "src": "3763:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41109_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:72:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:72:4"
                },
                {
                  "assignments": [
                    798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "usdValue",
                      "nameLocation": "3917:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "3912:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3912:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 807,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 802,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3738,
                              "src": "3968:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3738_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3979:3:4",
                            "memberName": "USD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3735,
                            "src": "3968:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3738",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 801,
                          "name": "getExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "3952:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3738_$returns$_t_uint256_$",
                            "typeString": "function (enum QuoteAsset) view returns (uint256)"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3952:31:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3985:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 799,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "3928:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3941:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "3928:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3912:81:4"
                },
                {
                  "assignments": [
                    809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 809,
                      "mutability": "mutable",
                      "name": "rETHtoRedeem",
                      "nameLocation": "4008:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "4003:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 808,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4003:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4043:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 813,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "4052:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4055:8:4",
                          "memberName": "rETH_USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4356,
                          "src": "4052:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4052:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 810,
                        "name": "usdValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "4023:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4032:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4766,
                      "src": "4023:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4003:63:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 818,
                      "name": "tokenOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "4081:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 819,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "4094:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4096:4:4",
                      "memberName": "rETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "4094:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4081:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 841,
                  "nodeType": "IfStatement",
                  "src": "4077:190:4",
                  "trueBody": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "4102:165:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 822,
                            "name": "rETHtoRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "4120:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 823,
                              "name": "minAmountsOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 726,
                              "src": "4135:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 825,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4150:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4135:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4120:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 831,
                        "nodeType": "IfStatement",
                        "src": "4116:68:4",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 828,
                                "name": "rETHtoRedeem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 809,
                                "src": "4171:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 827,
                              "name": "OZError19",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "4161:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4161:23:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 830,
                          "nodeType": "RevertStatement",
                          "src": "4154:30:4"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 834,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4224:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                                  "typeString": "struct TradingPackage memory"
                                }
                              },
                              "id": 835,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4226:4:4",
                              "memberName": "rETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 97,
                              "src": "4224:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 836,
                              "name": "receiver_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 719,
                              "src": "4232:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 837,
                              "name": "rETHtoRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "4243:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 832,
                              "name": "TradingLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6629,
                              "src": "4205:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradingLib_$6629_$",
                                "typeString": "type(library TradingLib)"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4216:7:4",
                            "memberName": "sendLSD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6565,
                            "src": "4205:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) returns (uint256)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4205:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 730,
                        "id": 839,
                        "nodeType": "Return",
                        "src": "4198:58:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 844,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "4316:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      {
                        "id": 845,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "4331:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 846,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "4354:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 847,
                        "name": "rETHtoRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "4377:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 848,
                        "name": "minAmountsOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "4403:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 842,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6629,
                        "src": "4284:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6629_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4295:6:4",
                      "memberName": "useOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6191,
                      "src": "4284:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TradingPackage_$100_memory_ptr_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct TradingPackage memory,address,address,uint256,uint256[] memory) returns (uint256)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4284:143:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 730,
                  "id": 850,
                  "nodeType": "Return",
                  "src": "4277:150:4"
                }
              ]
            },
            "functionSelector": "6afa0287",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "3098:6:4",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "3122:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "3114:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3114:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "3146:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "3138:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "3173:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "3165:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "3200:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "3192:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "minAmountsOut_",
                  "nameLocation": "3236:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "3222:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 724,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3222:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 725,
                    "nodeType": "ArrayTypeName",
                    "src": "3222:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3104:152:4"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3279:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "3274:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3273:16:4"
            },
            "scope": 879,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 863,
            "nodeType": "FunctionDefinition",
            "src": "4532:112:4",
            "nodes": [],
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "4587:57:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 857,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 878,
                          "src": "4604:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4469_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4604:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4612:23:4",
                      "memberName": "getOZLCirculatingSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4440,
                      "src": "4604:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4604:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 856,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "4597:40:4"
                }
              ]
            },
            "functionSelector": "9358928b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "circulatingSupply",
            "nameLocation": "4541:17:4",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4558:2:4"
            },
            "returnParameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "4581:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4580:6:4"
            },
            "scope": 879,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 878,
            "nodeType": "FunctionDefinition",
            "src": "4650:135:4",
            "nodes": [],
            "body": {
              "id": 877,
              "nodeType": "Block",
              "src": "4699:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 872,
                              "name": "_OZ_DIAMOND_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "4754:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 870,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41983,
                              "src": "4727:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$41983_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4739:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41905,
                            "src": "4727:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41879_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4727:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$41879_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4772:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41878,
                        "src": "4727:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 869,
                      "name": "ozIDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4469,
                      "src": "4716:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$4469_$",
                        "typeString": "type(contract ozIDiamond)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4716:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "functionReturnParameters": 868,
                  "id": 876,
                  "nodeType": "Return",
                  "src": "4709:69:4"
                }
              ]
            },
            "functionSelector": "59c64e12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZ",
            "nameLocation": "4659:5:4",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4664:2:4"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 878,
                  "src": "4687:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                    "typeString": "contract ozIDiamond"
                  },
                  "typeName": {
                    "id": 866,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 865,
                      "name": "ozIDiamond",
                      "nameLocations": [
                        "4687:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4469,
                      "src": "4687:10:4"
                    },
                    "referencedDeclaration": 4469,
                    "src": "4687:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4469",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:12:4"
            },
            "scope": 879,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 493,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "919:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37375,
              "src": "919:16:4"
            },
            "id": 494,
            "nodeType": "InheritanceSpecifier",
            "src": "919:16:4"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          879,
          37375,
          38076,
          37453,
          38678,
          36764
        ],
        "name": "OZL",
        "nameLocation": "912:3:4",
        "scope": 880,
        "usedErrors": [
          299,
          301,
          305,
          371,
          375,
          377,
          381
        ],
        "usedEvents": [
          36628,
          37387,
          37396
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 4
}