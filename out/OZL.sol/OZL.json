{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "OZError01",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError02",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorCode",
          "type": "string"
        }
      ],
      "name": "OZError10",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "OZError18",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OZError19",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OZError20",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "OZError21",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum QuoteAsset",
          "name": "asset_",
          "type": "uint8"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOZ",
      "outputs": [
        {
          "internalType": "contract ozIDiamond",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ozDiamond_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "communityAmount_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ozlAmountIn_",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "minAmountsOut_",
          "type": "uint256[]"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6128fa80620000f46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636afa0287116100a257806395d89b411161007157806395d89b4114610224578063a457c2d71461022c578063a9059cbb1461023f578063dd62ed3e14610252578063e6aa216c1461026557600080fd5b80636afa0287146101cb57806370a08231146101de57806374823132146102075780639358928b1461021c57600080fd5b8063313ce567116100de578063313ce5671461017657806339509351146101855780634d02a3f71461019857806359c64e12146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861026d565b6040516101259190611fb4565b60405180910390f35b61014161013c366004611fdc565b6102ff565b6040519015158152602001610125565b6035545b604051908152602001610125565b610141610171366004612008565b610319565b60405160128152602001610125565b610141610193366004611fdc565b61033f565b6101556101a6366004612049565b610361565b6101b36104ae565b6040516001600160a01b039091168152602001610125565b6101556101d93660046120ad565b6104f0565b6101556101ec366004612198565b6001600160a01b031660009081526033602052604090205490565b61021a610215366004612229565b610799565b005b610155610913565b610118610983565b61014161023a366004611fdc565b610992565b61014161024d366004611fdc565b610a18565b6101556102603660046122b1565b610a26565b610155610b3c565b60606036805461027c906122ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102a8906122ea565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050905090565b60003361030d818585610b7f565b60019150505b92915050565b600033610327858285610d8e565b610332858585610e08565b60019150505b9392505050565b60003361030d8185856103528383610a26565b61035c919061233a565b610b7f565b6000670de0b6b3a7640000816103756104ae565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190612370565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104499190612435565b9050600060028660028111156104615761046161244e565b14610475576104708683610fd6565b610477565b815b90506000610483610913565b90508060000361049857509295945050505050565b6104a3858383611100565b979650505050505050565b60006104e16104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612464565b90565b546001600160a01b0316919050565b6000806104fb6104ae565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105629190612370565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190612477565b6001600160a01b03161480156105fe57508060e001516001600160a01b0316866001600160a01b031614155b801561062057508060c001516001600160a01b0316866001600160a01b031614155b1561064e5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b0389161461066957610669883387610d8e565b60006106886106786000610361565b8790670de0b6b3a7640000611100565b90506000610702670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190612435565b849190611100565b90508260c001516001600160a01b0316886001600160a01b031603610779578560008151811061073457610734612494565b602002602001015181101561075f57604051631aa1e78f60e31b815260048101829052602401610645565b61076e8360c001518a8361111e565b945050505050610790565b610789838b8a8c888c878d611132565b9450505050505b95945050505050565b600054610100900460ff16158080156107b95750600054600160ff909116105b806107d35750303b1580156107d3575060005460ff166001145b6108365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610645565b6000805460ff191660011790558015610859576000805461ff0019166101001790555b61086386866111cb565b836108926104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612464565b80546001600160a01b0319166001600160a01b03929092169190911790556108ba3084611200565b6108c5308584610e08565b801561090b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b600061091d6104ae565b6001600160a01b0316631e4d84c66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190612435565b905090565b60606037805461027c906122ea565b600033816109a08286610a26565b905083811015610a005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610645565b610a0d8286868403610b7f565b506001949350505050565b60003361030d818585610e08565b6000610a586040518060400160405280600f81526020016e2d2d20696e20616c6c6f77202d2d2d60881b8152506112df565b610a8160405180604001604052806007815260200166037bbb732b91d160cd1b81525084611325565b610aac60405180604001604052806009815260200168039b832b73232b91d160bd1b81525083611325565b604080518082018252601d81527f5f616c6c6f77616e6365735b6f776e65725d5b7370656e6465725d3a200000006020808301919091526001600160a01b03808716600090815260348352848120918716815291529190912054610b10919061136a565b506001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610b629084906004016124aa565b602060405180830381865afa15801561095a573d6000803e3d6000fd5b6001600160a01b038316610be15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610645565b6001600160a01b038216610c425760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610645565b610c75604051806040016040528060128152602001712d2d2d20696e20617070726f7665202d2d2d60701b8152506112df565b610c9e60405180604001604052806007815260200166037bbb732b91d160cd1b81525084611325565b610cc960405180604001604052806009815260200168039b832b73232b91d160bd1b81525083611325565b604080518082018252601d81527f5f616c6c6f77616e6365735b6f776e65725d5b7370656e6465725d3a200000006020808301919091526001600160a01b03808716600090815260348352848120918716815291529190912054610d2d919061136a565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d9a8484610a26565b90506000198114610e025781811015610df55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610645565b610e028484848403610b7f565b50505050565b6001600160a01b038316610e6c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610645565b6001600160a01b038216610ece5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610645565b6001600160a01b03831660009081526033602052604090205481811015610f465760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610645565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610f7d90849061233a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fc991815260200190565b60405180910390a3610e02565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b17905260009061101361100d6104ae565b826113b4565b905060008180602001905181019061102b9190612435565b90506000808660028111156110425761104261244e565b036110ca576110c36110526104ae565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561108f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b39190612435565b8690670de0b6b3a7640000611100565b9050610790565b60018660028111156110de576110de61244e565b03610790576110f68583670de0b6b3a7640000611100565b9695505050505050565b600082600019048411830215820261111757600080fd5b5091020490565b600061112b8484846113d9565b5092915050565b6040516323b872dd60e01b81526001600160a01b038089166004830152851660248201526044810184905260009030906323b872dd906064016020604051808303816000875af115801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae91906124d4565b506111be8988888686600061143c565b9998505050505050505050565b600054610100900460ff166111f25760405162461bcd60e51b8152600401610645906124ef565b6111fc8282611603565b5050565b6001600160a01b0382166112565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610645565b8060356000828254611268919061233a565b90915550506001600160a01b0382166000908152603360205260408120805483929061129590849061233a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b611322816040516024016112f39190611fb4565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611643565b50565b6111fc828260405160240161133b92919061253a565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611643565b6111fc8282604051602401611380929190612564565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611643565b505050565b606061033883836040518060600160405280602581526020016128a060259139611664565b6040516001600160a01b0383166024820152604481018290526113af90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116d2565b60008080808460028111156114535761145361244e565b0361146557505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa1580156114a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cd9190612586565b50509050801561150f576115088383308d600001518e602001518c8c6000815181106114fb576114fb612494565b60200260200101516117a7565b935061152f565b61152c83838c604001518d606001518e608001518c8c60006118ff565b93505b8960e001516001600160a01b0316896001600160a01b0316036115cb5760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af11580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c591906124d4565b506115f6565b6115f38a60e001518a8a8d600001518e60200151898c6001815181106114fb576114fb612494565b93505b5050509695505050505050565b600054610100900460ff1661162a5760405162461bcd60e51b8152600401610645906124ef565b60366116368382612601565b5060376113af8282612601565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060600080856001600160a01b03168560405161168191906126c1565b600060405180830381855afa9150503d80600081146116bc576040519150601f19603f3d011682016040523d82523d6000602084013e6116c1565b606091505b50915091506110f686838387611b4e565b6000611727826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bcf9092919063ffffffff16565b905080516000148061174857508080602001905181019061174891906124d4565b6113af5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610645565b60006117b4888685611bde565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af19250505080156118a4575060408051601f3d908101601f191682019092526118a191810190612435565b60015b6118f6576118b06126dd565b806308c379a0036118ea57506118c46126f8565b806118cf57506118ec565b8060405163633abab960e01b81526004016106459190611fb4565b505b3d6000803e3d6000fd5b91506104a39050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196f9190612435565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f1916602001820160405280156119c5576020820181803683370190505b5090526040805160808101825230808252600060208301819052928201526060810182905291925080856002811115611a0057611a0061244e565b03611a275785600081518110611a1857611a18612494565b60200260200101519050611b22565b6000856002811115611a3b57611a3b61244e565b14611b225760405163e969f6b360e01b81526001600160a01b038a169063e969f6b390611a6e90869086906004016127e9565b6020604051808303816000875af1925050508015611aa9575060408051601f3d908101601f19168201909252611aa691810190612435565b60015b611aef57611ab56126dd565b806308c379a0036118ea5750611ac96126f8565b80611ad457506118ec565b8060405163dafe91cd60e01b81526004016106459190611fb4565b600087600081518110611b0457611b04612494565b60200260200101519050818111611b1b5781611b1d565b805b925050505b611b318c898560800151611bde565b611b3e8884848442611cf3565b9c9b505050505050505050505050565b60608315611bbd578251600003611bb6576001600160a01b0385163b611bb65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610645565b5081611bc7565b611bc78383611e11565b949350505050565b6060611bc78484600085611e3b565b801580611c585750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c569190612435565b155b611cc35760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610645565b6040516001600160a01b0383166024820152604481018290526113af90849063095ea7b360e01b90606401611405565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe2990611d2890889088908890889060040161283b565b6020604051808303816000875af1925050508015611d63575060408051601f3d908101601f19168201909252611d6091810190612435565b60015b611df057611d6f6126dd565b806308c379a0036118ea5750611d836126f8565b80611d8e57506118ec565b611db7816040518060400160405280600781526020016642414c2335303760c81b815250611f0b565b15611dd557604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106459190611fb4565b806000036110c357604051635eeb40ff60e11b815260040160405180910390fd5b815115611e215781518083602001fd5b8060405162461bcd60e51b81526004016106459190611fb4565b606082471015611e9c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610645565b600080866001600160a01b03168587604051611eb891906126c1565b60006040518083038185875af1925050503d8060008114611ef5576040519150601f19603f3d011682016040523d82523d6000602084013e611efa565b606091505b50915091506104a387838387611b4e565b600081604051602001611f1e91906126c1565b6040516020818303038152906040528051906020012083604051602001611f4591906126c1565b6040516020818303038152906040528051906020012014905092915050565b60005b83811015611f7f578181015183820152602001611f67565b50506000910152565b60008151808452611fa0816020860160208601611f64565b601f01601f19169290920160200192915050565b6020815260006103386020830184611f88565b6001600160a01b038116811461132257600080fd5b60008060408385031215611fef57600080fd5b8235611ffa81611fc7565b946020939093013593505050565b60008060006060848603121561201d57600080fd5b833561202881611fc7565b9250602084013561203881611fc7565b929592945050506040919091013590565b60006020828403121561205b57600080fd5b81356003811061033857600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156120a6576120a661206a565b6040525050565b600080600080600060a086880312156120c557600080fd5b85356120d081611fc7565b94506020868101356120e181611fc7565b945060408701356120f181611fc7565b935060608701359250608087013567ffffffffffffffff8082111561211557600080fd5b818901915089601f83011261212957600080fd5b81358181111561213b5761213b61206a565b8060051b915060405161215085840182612080565b8181529183018401918481018c84111561216957600080fd5b938501935b83851015612185578435815293850193850161216e565b5080955050505050509295509295909350565b6000602082840312156121aa57600080fd5b813561033881611fc7565b600082601f8301126121c657600080fd5b813567ffffffffffffffff8111156121e0576121e061206a565b6040516121f7601f8301601f191660200182612080565b81815284602083860101111561220c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561224157600080fd5b853567ffffffffffffffff8082111561225957600080fd5b61226589838a016121b5565b9650602088013591508082111561227b57600080fd5b50612288888289016121b5565b945050604086013561229981611fc7565b94979396509394606081013594506080013592915050565b600080604083850312156122c457600080fd5b82356122cf81611fc7565b915060208301356122df81611fc7565b809150509250929050565b600181811c908216806122fe57607f821691505b60208210810361231e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031357610313612324565b805161235881611fc7565b919050565b805162ffffff8116811461235857600080fd5b600061010080838503121561238457600080fd5b6040519081019067ffffffffffffffff821181831017156123a7576123a761206a565b816040526123b48461234d565b81526123c26020850161235d565b60208201526123d36040850161234d565b60408201526123e46060850161234d565b60608201526123f56080850161234d565b608082015261240660a0850161234d565b60a082015261241760c0850161234d565b60c082015261242860e0850161234d565b60e0820152949350505050565b60006020828403121561244757600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561031357610313612324565b60006020828403121561248957600080fd5b815161033881611fc7565b634e487b7160e01b600052603260045260246000fd5b60208101600383106124be576124be61244e565b91905290565b8051801515811461235857600080fd5b6000602082840312156124e657600080fd5b610338826124c4565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60408152600061254d6040830185611f88565b905060018060a01b03831660208301529392505050565b6040815260006125776040830185611f88565b90508260208301529392505050565b60008060006060848603121561259b57600080fd5b6125a4846124c4565b925060208401519150604084015190509250925092565b601f8211156113af57600081815260208120601f850160051c810160208610156125e25750805b601f850160051c820191505b8181101561090b578281556001016125ee565b815167ffffffffffffffff81111561261b5761261b61206a565b61262f8161262984546122ea565b846125bb565b602080601f831160018114612664576000841561264c5750858301515b600019600386901b1c1916600185901b17855561090b565b600085815260208120601f198616915b8281101561269357888601518255948401946001909101908401612674565b50858210156126b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516126d3818460208701611f64565b9190910192915050565b600060033d11156104de5760046000803e5060005160e01c90565b600060443d10156127065790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561273657505050505090565b828501915081518181111561274e5750505050505090565b843d87010160208285010111156127685750505050505090565b61277760208286010187612080565b509095945050505050565b80518252600060208201516002811061279d5761279d61244e565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a0850152611bc760c0850182611f88565b60a0815260006127fc60a0830185612782565b9050610338602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e08152600061284e60e0830187612782565b905061288d602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220f524f12456f07b4198e50f7f95a8a4e27762a619b3a2a0c63da2e860df4c5ee164736f6c63430008150033",
    "sourceMap": "903:4017:4:-:0;;;1088:53;;;;;;;;;-1:-1:-1;1112:22:4;:20;:22::i;:::-;903:4017;;5388:279:57;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:57;;216:2:110;5447:66:57;;;198:21:110;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:110;;;338:37;392:19;;5447:66:57;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:57;5588:15;5573:30;;;;;;5622:28;;564:36:110;;;5622:28:57;;552:2:110;537:18;5622:28:57;;;;;;;5523:138;5388:279::o;422:184:110:-;903:4017:4;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80636afa0287116100a257806395d89b411161007157806395d89b4114610224578063a457c2d71461022c578063a9059cbb1461023f578063dd62ed3e14610252578063e6aa216c1461026557600080fd5b80636afa0287146101cb57806370a08231146101de57806374823132146102075780639358928b1461021c57600080fd5b8063313ce567116100de578063313ce5671461017657806339509351146101855780634d02a3f71461019857806359c64e12146101ab57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861026d565b6040516101259190611fb4565b60405180910390f35b61014161013c366004611fdc565b6102ff565b6040519015158152602001610125565b6035545b604051908152602001610125565b610141610171366004612008565b610319565b60405160128152602001610125565b610141610193366004611fdc565b61033f565b6101556101a6366004612049565b610361565b6101b36104ae565b6040516001600160a01b039091168152602001610125565b6101556101d93660046120ad565b6104f0565b6101556101ec366004612198565b6001600160a01b031660009081526033602052604090205490565b61021a610215366004612229565b610799565b005b610155610913565b610118610983565b61014161023a366004611fdc565b610992565b61014161024d366004611fdc565b610a18565b6101556102603660046122b1565b610a26565b610155610b3c565b60606036805461027c906122ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102a8906122ea565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050905090565b60003361030d818585610b7f565b60019150505b92915050565b600033610327858285610d8e565b610332858585610e08565b60019150505b9392505050565b60003361030d8185856103528383610a26565b61035c919061233a565b610b7f565b6000670de0b6b3a7640000816103756104ae565b6001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa1580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190612370565b60c001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104499190612435565b9050600060028660028111156104615761046161244e565b14610475576104708683610fd6565b610477565b815b90506000610483610913565b90508060000361049857509295945050505050565b6104a3858383611100565b979650505050505050565b60006104e16104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612464565b90565b546001600160a01b0316919050565b6000806104fb6104ae565b90506000816001600160a01b031663b73a89516040518163ffffffff1660e01b815260040161010060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105629190612370565b60405163423f0b9160e01b81526001600160a01b03888116600483015291925060009184169063423f0b9190602401602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190612477565b6001600160a01b03161480156105fe57508060e001516001600160a01b0316866001600160a01b031614155b801561062057508060c001516001600160a01b0316866001600160a01b031614155b1561064e5760405163d74ef47560e01b81526001600160a01b03871660048201526024015b60405180910390fd5b336001600160a01b0389161461066957610669883387610d8e565b60006106886106786000610361565b8790670de0b6b3a7640000611100565b90506000610702670de0b6b3a7640000856001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190612435565b849190611100565b90508260c001516001600160a01b0316886001600160a01b031603610779578560008151811061073457610734612494565b602002602001015181101561075f57604051631aa1e78f60e31b815260048101829052602401610645565b61076e8360c001518a8361111e565b945050505050610790565b610789838b8a8c888c878d611132565b9450505050505b95945050505050565b600054610100900460ff16158080156107b95750600054600160ff909116105b806107d35750303b1580156107d3575060005460ff166001145b6108365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610645565b6000805460ff191660011790558015610859576000805461ff0019166101001790555b61086386866111cb565b836108926104de60017f86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57612464565b80546001600160a01b0319166001600160a01b03929092169190911790556108ba3084611200565b6108c5308584610e08565b801561090b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b600061091d6104ae565b6001600160a01b0316631e4d84c66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190612435565b905090565b60606037805461027c906122ea565b600033816109a08286610a26565b905083811015610a005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610645565b610a0d8286868403610b7f565b506001949350505050565b60003361030d818585610e08565b6000610a586040518060400160405280600f81526020016e2d2d20696e20616c6c6f77202d2d2d60881b8152506112df565b610a8160405180604001604052806007815260200166037bbb732b91d160cd1b81525084611325565b610aac60405180604001604052806009815260200168039b832b73232b91d160bd1b81525083611325565b604080518082018252601d81527f5f616c6c6f77616e6365735b6f776e65725d5b7370656e6465725d3a200000006020808301919091526001600160a01b03808716600090815260348352848120918716815291529190912054610b10919061136a565b506001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b604051634d02a3f760e01b81526000903090634d02a3f790610b629084906004016124aa565b602060405180830381865afa15801561095a573d6000803e3d6000fd5b6001600160a01b038316610be15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610645565b6001600160a01b038216610c425760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610645565b610c75604051806040016040528060128152602001712d2d2d20696e20617070726f7665202d2d2d60701b8152506112df565b610c9e60405180604001604052806007815260200166037bbb732b91d160cd1b81525084611325565b610cc960405180604001604052806009815260200168039b832b73232b91d160bd1b81525083611325565b604080518082018252601d81527f5f616c6c6f77616e6365735b6f776e65725d5b7370656e6465725d3a200000006020808301919091526001600160a01b03808716600090815260348352848120918716815291529190912054610d2d919061136a565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d9a8484610a26565b90506000198114610e025781811015610df55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610645565b610e028484848403610b7f565b50505050565b6001600160a01b038316610e6c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610645565b6001600160a01b038216610ece5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610645565b6001600160a01b03831660009081526033602052604090205481811015610f465760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610645565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610f7d90849061233a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fc991815260200190565b60405180910390a3610e02565b6040805160048152602481019091526020810180516001600160e01b0316636a57db9d60e11b17905260009061101361100d6104ae565b826113b4565b905060008180602001905181019061102b9190612435565b90506000808660028111156110425761104261244e565b036110ca576110c36110526104ae565b6001600160a01b031663f424c4ba6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561108f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b39190612435565b8690670de0b6b3a7640000611100565b9050610790565b60018660028111156110de576110de61244e565b03610790576110f68583670de0b6b3a7640000611100565b9695505050505050565b600082600019048411830215820261111757600080fd5b5091020490565b600061112b8484846113d9565b5092915050565b6040516323b872dd60e01b81526001600160a01b038089166004830152851660248201526044810184905260009030906323b872dd906064016020604051808303816000875af115801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae91906124d4565b506111be8988888686600061143c565b9998505050505050505050565b600054610100900460ff166111f25760405162461bcd60e51b8152600401610645906124ef565b6111fc8282611603565b5050565b6001600160a01b0382166112565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610645565b8060356000828254611268919061233a565b90915550506001600160a01b0382166000908152603360205260408120805483929061129590849061233a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b611322816040516024016112f39190611fb4565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611643565b50565b6111fc828260405160240161133b92919061253a565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611643565b6111fc8282604051602401611380929190612564565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611643565b505050565b606061033883836040518060600160405280602581526020016128a060259139611664565b6040516001600160a01b0383166024820152604481018290526113af90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116d2565b60008080808460028111156114535761145361244e565b0361146557505060c087015160e08801515b600089604001516001600160a01b0316631c0de0516040518163ffffffff1660e01b8152600401606060405180830381865afa1580156114a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cd9190612586565b50509050801561150f576115088383308d600001518e602001518c8c6000815181106114fb576114fb612494565b60200260200101516117a7565b935061152f565b61152c83838c604001518d606001518e608001518c8c60006118ff565b93505b8960e001516001600160a01b0316896001600160a01b0316036115cb5760e08a015160405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af11580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c591906124d4565b506115f6565b6115f38a60e001518a8a8d600001518e60200151898c6001815181106114fb576114fb612494565b93505b5050509695505050505050565b600054610100900460ff1661162a5760405162461bcd60e51b8152600401610645906124ef565b60366116368382612601565b5060376113af8282612601565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060600080856001600160a01b03168560405161168191906126c1565b600060405180830381855afa9150503d80600081146116bc576040519150601f19603f3d011682016040523d82523d6000602084013e6116c1565b606091505b50915091506110f686838387611b4e565b6000611727826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bcf9092919063ffffffff16565b905080516000148061174857508080602001905181019061174891906124d4565b6113af5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610645565b60006117b4888685611bde565b60408051610100810182526001600160a01b038a811682528981166020830190815262ffffff8881168486019081528b841660608601908152426080870190815260a087018b815260c088018b8152600060e08a01908152995163414bf38960e01b815289518916600482015296518816602488015293519094166044860152905185166064850152516084840152905160a48301525160c48201529251811660e484015290919087169063414bf38990610104016020604051808303816000875af19250505080156118a4575060408051601f3d908101601f191682019092526118a191810190612435565b60015b6118f6576118b06126dd565b806308c379a0036118ea57506118c46126f8565b806118cf57506118ec565b8060405163633abab960e01b81526004016106459190611fb4565b505b3d6000803e3d6000fd5b91506104a39050565b6000806040518060c00160405280896001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561194b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196f9190612435565b8152602001600081526001600160a01b03808d1660208301528b1660408201526060810187905260800160006040519080825280601f01601f1916602001820160405280156119c5576020820181803683370190505b5090526040805160808101825230808252600060208301819052928201526060810182905291925080856002811115611a0057611a0061244e565b03611a275785600081518110611a1857611a18612494565b60200260200101519050611b22565b6000856002811115611a3b57611a3b61244e565b14611b225760405163e969f6b360e01b81526001600160a01b038a169063e969f6b390611a6e90869086906004016127e9565b6020604051808303816000875af1925050508015611aa9575060408051601f3d908101601f19168201909252611aa691810190612435565b60015b611aef57611ab56126dd565b806308c379a0036118ea5750611ac96126f8565b80611ad457506118ec565b8060405163dafe91cd60e01b81526004016106459190611fb4565b600087600081518110611b0457611b04612494565b60200260200101519050818111611b1b5781611b1d565b805b925050505b611b318c898560800151611bde565b611b3e8884848442611cf3565b9c9b505050505050505050505050565b60608315611bbd578251600003611bb6576001600160a01b0385163b611bb65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610645565b5081611bc7565b611bc78383611e11565b949350505050565b6060611bc78484600085611e3b565b801580611c585750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c569190612435565b155b611cc35760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610645565b6040516001600160a01b0383166024820152604481018290526113af90849063095ea7b360e01b90606401611405565b6040516352bbbe2960e01b81526000906001600160a01b038716906352bbbe2990611d2890889088908890889060040161283b565b6020604051808303816000875af1925050508015611d63575060408051601f3d908101601f19168201909252611d6091810190612435565b60015b611df057611d6f6126dd565b806308c379a0036118ea5750611d836126f8565b80611d8e57506118ec565b611db7816040518060400160405280600781526020016642414c2335303760c81b815250611f0b565b15611dd557604051637b19dd3560e11b815260040160405180910390fd5b806040516324af18bb60e21b81526004016106459190611fb4565b806000036110c357604051635eeb40ff60e11b815260040160405180910390fd5b815115611e215781518083602001fd5b8060405162461bcd60e51b81526004016106459190611fb4565b606082471015611e9c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610645565b600080866001600160a01b03168587604051611eb891906126c1565b60006040518083038185875af1925050503d8060008114611ef5576040519150601f19603f3d011682016040523d82523d6000602084013e611efa565b606091505b50915091506104a387838387611b4e565b600081604051602001611f1e91906126c1565b6040516020818303038152906040528051906020012083604051602001611f4591906126c1565b6040516020818303038152906040528051906020012014905092915050565b60005b83811015611f7f578181015183820152602001611f67565b50506000910152565b60008151808452611fa0816020860160208601611f64565b601f01601f19169290920160200192915050565b6020815260006103386020830184611f88565b6001600160a01b038116811461132257600080fd5b60008060408385031215611fef57600080fd5b8235611ffa81611fc7565b946020939093013593505050565b60008060006060848603121561201d57600080fd5b833561202881611fc7565b9250602084013561203881611fc7565b929592945050506040919091013590565b60006020828403121561205b57600080fd5b81356003811061033857600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156120a6576120a661206a565b6040525050565b600080600080600060a086880312156120c557600080fd5b85356120d081611fc7565b94506020868101356120e181611fc7565b945060408701356120f181611fc7565b935060608701359250608087013567ffffffffffffffff8082111561211557600080fd5b818901915089601f83011261212957600080fd5b81358181111561213b5761213b61206a565b8060051b915060405161215085840182612080565b8181529183018401918481018c84111561216957600080fd5b938501935b83851015612185578435815293850193850161216e565b5080955050505050509295509295909350565b6000602082840312156121aa57600080fd5b813561033881611fc7565b600082601f8301126121c657600080fd5b813567ffffffffffffffff8111156121e0576121e061206a565b6040516121f7601f8301601f191660200182612080565b81815284602083860101111561220c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561224157600080fd5b853567ffffffffffffffff8082111561225957600080fd5b61226589838a016121b5565b9650602088013591508082111561227b57600080fd5b50612288888289016121b5565b945050604086013561229981611fc7565b94979396509394606081013594506080013592915050565b600080604083850312156122c457600080fd5b82356122cf81611fc7565b915060208301356122df81611fc7565b809150509250929050565b600181811c908216806122fe57607f821691505b60208210810361231e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561031357610313612324565b805161235881611fc7565b919050565b805162ffffff8116811461235857600080fd5b600061010080838503121561238457600080fd5b6040519081019067ffffffffffffffff821181831017156123a7576123a761206a565b816040526123b48461234d565b81526123c26020850161235d565b60208201526123d36040850161234d565b60408201526123e46060850161234d565b60608201526123f56080850161234d565b608082015261240660a0850161234d565b60a082015261241760c0850161234d565b60c082015261242860e0850161234d565b60e0820152949350505050565b60006020828403121561244757600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561031357610313612324565b60006020828403121561248957600080fd5b815161033881611fc7565b634e487b7160e01b600052603260045260246000fd5b60208101600383106124be576124be61244e565b91905290565b8051801515811461235857600080fd5b6000602082840312156124e657600080fd5b610338826124c4565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60408152600061254d6040830185611f88565b905060018060a01b03831660208301529392505050565b6040815260006125776040830185611f88565b90508260208301529392505050565b60008060006060848603121561259b57600080fd5b6125a4846124c4565b925060208401519150604084015190509250925092565b601f8211156113af57600081815260208120601f850160051c810160208610156125e25750805b601f850160051c820191505b8181101561090b578281556001016125ee565b815167ffffffffffffffff81111561261b5761261b61206a565b61262f8161262984546122ea565b846125bb565b602080601f831160018114612664576000841561264c5750858301515b600019600386901b1c1916600185901b17855561090b565b600085815260208120601f198616915b8281101561269357888601518255948401946001909101908401612674565b50858210156126b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516126d3818460208701611f64565b9190910192915050565b600060033d11156104de5760046000803e5060005160e01c90565b600060443d10156127065790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561273657505050505090565b828501915081518181111561274e5750505050505090565b843d87010160208285010111156127685750505050505090565b61277760208286010187612080565b509095945050505050565b80518252600060208201516002811061279d5761279d61244e565b80602085015250604082015160018060a01b03808216604086015280606085015116606086015250506080820151608084015260a082015160c060a0850152611bc760c0850182611f88565b60a0815260006127fc60a0830185612782565b9050610338602083018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60e08152600061284e60e0830187612782565b905061288d602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c001529291505056fe416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564a2646970667358221220f524f12456f07b4198e50f7f95a8a4e27762a619b3a2a0c63da2e860df4c5ee164736f6c63430008150033",
    "sourceMap": "903:4017:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:98:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5017:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:110;;1384:22;1366:41;;1354:2;1339:18;5017:197:58;1226:187:110;3614:106:58;3701:12;;3614:106;;;1564:25:110;;;1552:2;1537:18;3614:106:58;1418:177:110;5776:286:58;;;;;;:::i;:::-;;:::i;3463:91::-;;;3545:2;2203:36:110;;2191:2;2176:18;3463:91:58;2061:184:110;6457:234:58;;;;;;:::i;:::-;;:::i;2007:511:4:-;;;;;;:::i;:::-;;:::i;4773:135::-;;;:::i;:::-;;;-1:-1:-1;;;;;2709:32:110;;;2691:51;;2679:2;2664:18;4773:135:4;2526:222:110;3090:1541:4;;;;;;:::i;:::-;;:::i;3778:125:58:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3878:18:58;3852:7;3878:18;;;:9;:18;;;;;;;3778:125;1148:729:4;;;;;;:::i;:::-;;:::i;:::-;;4655:112;;;:::i;2737:102:58:-;;;:::i;7178:427::-;;;;;;:::i;:::-;;:::i;4099:189::-;;;;;;:::i;:::-;;:::i;4346:363::-;;;;;;:::i;:::-;;:::i;1885:115:4:-;;;:::i;2526:98:58:-;2580:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:98;:::o;5017:197::-;5100:4;929:10:65;5154:32:58;929:10:65;5170:7:58;5179:6;5154:8;:32::i;:::-;5203:4;5196:11;;;5017:197;;;;;:::o;5776:286::-;5903:4;929:10:65;5959:38:58;5975:4;929:10:65;5990:6:58;5959:15;:38::i;:::-;6007:27;6017:4;6023:2;6027:6;6007:9;:27::i;:::-;6051:4;6044:11;;;5776:286;;;;;;:::o;6457:234::-;6545:4;929:10:65;6599:64:58;929:10:65;6615:7:58;6652:10;6624:25;929:10:65;6615:7:58;6624:9;:25::i;:::-;:38;;;;:::i;:::-;6599:8;:64::i;2007:511:4:-;2071:4;2098:7;2071:4;2130:7;:5;:7::i;:::-;-1:-1:-1;;;;;2130:22:4;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;2190:43;;-1:-1:-1;;;2190:43:4;;2227:4;2190:43;;;2691:51:110;2130:29:4;;-1:-1:-1;2169:18:4;;-1:-1:-1;;;;;2190:28:4;;;;;2664:18:110;;2190:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2169:64;-1:-1:-1;2244:19:4;2276:15;2266:6;:25;;;;;;;;:::i;:::-;;:101;;2329:38;2345:6;2353:13;2329:15;:38::i;:::-;2266:101;;;2303:13;2266:101;2244:123;;2378:13;2394:19;:17;:19::i;:::-;2378:35;;2428:8;2440:1;2428:13;2424:29;;-1:-1:-1;2450:3:4;;2007:511;-1:-1:-1;;;;;2007:511:4:o;2424:29::-;2471:40;:3;2486:14;2502:8;2471:14;:40::i;:::-;2464:47;2007:511;-1:-1:-1;;;;;;;2007:511:4:o;4773:135::-;4810:10;4850:44;1034:45;1078:1;1039:35;1034:45;:::i;:::-;2029:4:86;1859:190;4850:44:4;:50;-1:-1:-1;;;;;4850:50:4;;4773:135;-1:-1:-1;4773:135:4:o;3090:1541::-;3275:14;3301:13;3317:7;:5;:7::i;:::-;3301:23;;3334;3360:2;-1:-1:-1;;;;;3360:17:4;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3407:22;;-1:-1:-1;;;3407:22:4;;-1:-1:-1;;;;;2709:32:110;;;3407:22:4;;;2691:51:110;3334:45:4;;-1:-1:-1;3441:1:4;;3407:11;;;;;2664:18:110;;3407:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3407:36:4;;:71;;;;;3472:1;:6;;;-1:-1:-1;;;;;3459:19:4;:9;-1:-1:-1;;;;;3459:19:4;;;3407:71;:106;;;;;3507:1;:6;;;-1:-1:-1;;;;;3494:19:4;:9;-1:-1:-1;;;;;3494:19:4;;;3407:106;3390:161;;;3531:20;;-1:-1:-1;;;3531:20:4;;-1:-1:-1;;;;;2709:32:110;;3531:20:4;;;2691:51:110;2664:18;;3531:20:4;;;;;;;;3390:161;3566:10;-1:-1:-1;;;;;3566:20:4;;;3562:100;;3602:49;3618:6;3626:10;3638:12;3602:15;:49::i;:::-;3964:13;3980:65;4004:31;4020:14;4004:15;:31::i;:::-;3980:12;;4037:7;3980:23;:65::i;:::-;3964:81;;4055:17;4075:43;4095:7;4104:2;-1:-1:-1;;;;;4104:11:4;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4075:8;;:43;:19;:43::i;:::-;4055:63;;4146:1;:6;;;-1:-1:-1;;;;;4133:19:4;:9;-1:-1:-1;;;;;4133:19:4;;4129:190;;4187:14;4202:1;4187:17;;;;;;;;:::i;:::-;;;;;;;4172:12;:32;4168:68;;;4213:23;;-1:-1:-1;;;4213:23:4;;;;;1564:25:110;;;1537:18;;4213:23:4;1418:177:110;4168:68:4;4257:51;4276:1;:6;;;4284:9;4295:12;4257:18;:51::i;:::-;4250:58;;;;;;;;4129:190;4336:214;4368:1;4383:6;4403:9;4426;4457:2;4474:12;4500;4526:14;4336:17;:214::i;:::-;4329:221;;;;;;3090:1541;;;;;;;;:::o;1148:729::-;3111:19:57;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:57;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:57;1476:19:64;:23;;;3219:66:57;;-1:-1:-1;3268:12:57;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:57;;9944:2:110;3157:201:57;;;9926:21:110;9983:2;9963:18;;;9956:30;10022:34;10002:18;;;9995:62;-1:-1:-1;;;10073:18:110;;;10066:44;10127:19;;3157:201:57;9742:410:110;3157:201:57;3368:12;:16;;-1:-1:-1;;3368:16:57;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:57;;;;;3394:65;1352:28:4::1;1365:5;1372:7;1352:12;:28::i;:::-;1443:10:::0;1390:44:::1;1034:45;1078:1;1039:35;1034:45;:::i;1390:44::-;:63:::0;;-1:-1:-1;;;;;;1390:63:4::1;-1:-1:-1::0;;;;;1390:63:4;;;::::1;::::0;;;::::1;::::0;;1771:34:::1;1785:4;1792:12:::0;1771:5:::1;:34::i;:::-;1816:54;1834:4;1841:10;1853:16;1816:9;:54::i;:::-;3483:14:57::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:57;;;3553:14;;-1:-1:-1;2203:36:110;;3553:14:57;;2191:2:110;2176:18;3553:14:57;;;;;;;3479:99;3101:483;1148:729:4;;;;;:::o;4655:112::-;4704:4;4727:7;:5;:7::i;:::-;-1:-1:-1;;;;;4727:31:4;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4720:40;;4655:112;:::o;2737:102:58:-;2793:13;2825:7;2818:14;;;;;:::i;7178:427::-;7271:4;929:10:65;7271:4:58;7352:25;929:10:65;7369:7:58;7352:9;:25::i;:::-;7325:52;;7415:15;7395:16;:35;;7387:85;;;;-1:-1:-1;;;7387:85:58;;10558:2:110;7387:85:58;;;10540:21:110;10597:2;10577:18;;;10570:30;10636:34;10616:18;;;10609:62;-1:-1:-1;;;10687:18:110;;;10680:35;10732:19;;7387:85:58;10356:401:110;7387:85:58;7506:60;7515:5;7522:7;7550:15;7531:16;:34;7506:8;:60::i;:::-;-1:-1:-1;7594:4:58;;7178:427;-1:-1:-1;;;;7178:427:58:o;4099:189::-;4178:4;929:10:65;4232:28:58;929:10:65;4249:2:58;4253:6;4232:9;:28::i;4346:363::-;4435:7;4454:30;;;;;;;;;;;;;;-1:-1:-1;;;4454:30:58;;;:11;:30::i;:::-;4494:29;;;;;;;;;;;;;;-1:-1:-1;;;4494:29:58;;;4517:5;4494:11;:29::i;:::-;4533:33;;;;;;;;;;;;;;-1:-1:-1;;;4533:33:58;;;4558:7;4533:11;:33::i;:::-;4576:73;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4621:18:58;;;-1:-1:-1;4621:18:58;;;:11;:18;;;;;:27;;;;;;;;;;;;4576:73;;;:11;:73::i;:::-;-1:-1:-1;;;;;;4675:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4346:363::o;1885:115:4:-;1957:36;;-1:-1:-1;;;1957:36:4;;1934:4;;1957;;:20;;:36;;1934:4;;1957:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10694:579:58;-1:-1:-1;;;;;10825:19:58;;10817:68;;;;-1:-1:-1;;;10817:68:58;;11215:2:110;10817:68:58;;;11197:21:110;11254:2;11234:18;;;11227:30;11293:34;11273:18;;;11266:62;-1:-1:-1;;;11344:18:110;;;11337:34;11388:19;;10817:68:58;11013:400:110;10817:68:58;-1:-1:-1;;;;;10903:21:58;;10895:68;;;;-1:-1:-1;;;10895:68:58;;11620:2:110;10895:68:58;;;11602:21:110;11659:2;11639:18;;;11632:30;11698:34;11678:18;;;11671:62;-1:-1:-1;;;11749:18:110;;;11742:32;11791:19;;10895:68:58;11418:398:110;10895:68:58;10974:33;;;;;;;;;;;;;;-1:-1:-1;;;10974:33:58;;;:11;:33::i;:::-;11017:29;;;;;;;;;;;;;;-1:-1:-1;;;11017:29:58;;;11040:5;11017:11;:29::i;:::-;11056:33;;;;;;;;;;;;;;-1:-1:-1;;;11056:33:58;;;11081:7;11056:11;:33::i;:::-;11099:73;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11144:18:58;;;-1:-1:-1;11144:18:58;;;:11;:18;;;;;:27;;;;;;;;;;;;11099:73;;;:11;:73::i;:::-;-1:-1:-1;;;;;11183:18:58;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11234:32;;1564:25:110;;;11234:32:58;;1537:18:110;11234:32:58;;;;;;;10694:579;;;:::o;11554:441::-;11684:24;11711:25;11721:5;11728:7;11711:9;:25::i;:::-;11684:52;;-1:-1:-1;;11750:16:58;:37;11746:243;;11831:6;11811:16;:26;;11803:68;;;;-1:-1:-1;;;11803:68:58;;12023:2:110;11803:68:58;;;12005:21:110;12062:2;12042:18;;;12035:30;12101:31;12081:18;;;12074:59;12150:18;;11803:68:58;11821:353:110;11803:68:58;11913:51;11922:5;11929:7;11957:6;11938:16;:25;11913:8;:51::i;:::-;11674:321;11554:441;;;:::o;8059:651::-;-1:-1:-1;;;;;8185:18:58;;8177:68;;;;-1:-1:-1;;;8177:68:58;;12381:2:110;8177:68:58;;;12363:21:110;12420:2;12400:18;;;12393:30;12459:34;12439:18;;;12432:62;-1:-1:-1;;;12510:18:110;;;12503:35;12555:19;;8177:68:58;12179:401:110;8177:68:58;-1:-1:-1;;;;;8263:16:58;;8255:64;;;;-1:-1:-1;;;8255:64:58;;12787:2:110;8255:64:58;;;12769:21:110;12826:2;12806:18;;;12799:30;12865:34;12845:18;;;12838:62;-1:-1:-1;;;12916:18:110;;;12909:33;12959:19;;8255:64:58;12585:399:110;8255:64:58;-1:-1:-1;;;;;8401:15:58;;8379:19;8401:15;;;:9;:15;;;;;;8434:21;;;;8426:72;;;;-1:-1:-1;;;8426:72:58;;13191:2:110;8426:72:58;;;13173:21:110;13230:2;13210:18;;;13203:30;13269:34;13249:18;;;13242:62;-1:-1:-1;;;13320:18:110;;;13313:36;13366:19;;8426:72:58;12989:402:110;8426:72:58;-1:-1:-1;;;;;8532:15:58;;;;;;;:9;:15;;;;;;8550:20;;;8532:38;;8590:13;;;;;;;;:23;;8564:6;;8532:15;8590:23;;8564:6;;8590:23;:::i;:::-;;;;;;;;8644:2;-1:-1:-1;;;;;8629:26:58;8638:4;-1:-1:-1;;;;;8629:26:58;;8648:6;8629:26;;;;1564:25:110;;1552:2;1537:18;;1418:177;8629:26:58;;;;;;;;8666:37;12579:121;2525:558:4;2644:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2644:37:4;-1:-1:-1;;;2644:37:4;;;2608:4;;2698:50;2733:7;:5;:7::i;:::-;2743:4;2698:26;:50::i;:::-;2691:57;;2759:13;2786:4;2775:24;;;;;;;;;;;;:::i;:::-;2759:40;-1:-1:-1;2810:10:4;;2835:3;:21;;;;;;;;:::i;:::-;;2831:223;;2880:54;2906:7;:5;:7::i;:::-;-1:-1:-1;;;;;2906:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2880:14;;2926:7;2880:25;:54::i;:::-;2872:62;;2831:223;;;2961:14;2954:3;:21;;;;;;;;:::i;:::-;;2951:103;;2999:44;:14;3025:8;3035:7;2999:25;:44::i;:::-;2991:52;3071:5;-1:-1:-1;;;;;;2525:558:4:o;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;5477:216:34:-;5590:4;5606:56;5636:4;5643:9;5654:7;5606:22;:56::i;:::-;-1:-1:-1;5679:7:34;5477:216;-1:-1:-1;;5477:216:34:o;630:585::-;916:66;;-1:-1:-1;;;916:66:34;;-1:-1:-1;;;;;13654:15:110;;;916:66:34;;;13636:34:110;13706:15;;13686:18;;;13679:43;13738:18;;;13731:34;;;900:4:34;;929;;916:32;;13571:18:110;;916:66:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1038:170;1070:1;1085:9;1108;1131:12;1157:14;1185:13;1038:18;:170::i;:::-;1031:177;630:585;-1:-1:-1;;;;;;;;;630:585:34:o;2149:147:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2251:38:58::1;2274:5;2281:7;2251:22;:38::i;:::-;2149:147:::0;;:::o;8986:389::-;-1:-1:-1;;;;;9069:21:58;;9061:65;;;;-1:-1:-1;;;9061:65:58;;14766:2:110;9061:65:58;;;14748:21:110;14805:2;14785:18;;;14778:30;14844:33;14824:18;;;14817:61;14895:18;;9061:65:58;14564:355:110;9061:65:58;9213:6;9197:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9229:18:58;;;;;;:9;:18;;;;;:28;;9251:6;;9229:18;:28;;9251:6;;9229:28;:::i;:::-;;;;-1:-1:-1;;9272:37:58;;1564:25:110;;;-1:-1:-1;;;;;9272:37:58;;;9289:1;;9272:37;;1552:2:110;1537:18;9272:37:58;;;;;;;2149:147;;:::o;5630:121:52:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:52;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:52;-1:-1:-1;;;5701:42:52;;;5685:15;:59::i;:::-;5630:121;:::o;6994:145::-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:52;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:52;-1:-1:-1;;;7077:54:52;;;7061:15;:71::i;6548:139::-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:52;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:52;-1:-1:-1;;;6628:51:52;;;6612:15;:68::i;12579:121:58:-;;;;:::o;5788:197:84:-;5874:12;5905:73;5924:6;5932:4;5905:73;;;;;;;;;;;;;;;;;:18;:73::i;941:175:83:-;1050:58;;-1:-1:-1;;;;;15734:32:110;;1050:58:83;;;15716:51:110;15783:18;;;15776:34;;;1023:86:83;;1043:5;;-1:-1:-1;;;1073:23:83;15689:18:110;;1050:58:83;;;;-1:-1:-1;;1050:58:83;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:83;-1:-1:-1;;;;;;1050:58:83;;;;;;;;;;1023:19;:86::i;1222:1479:34:-;1443:14;;;;1525:5;:22;;;;;;;;:::i;:::-;;1521:100;;-1:-1:-1;;1573:6:34;;;;1604;;;;1521:100;1633:11;1656:1;:22;;;-1:-1:-1;;;;;1650:44:34;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1632:64;;;;1712:6;1708:593;;;1746:225;1772:7;1797:8;1831:4;1854:1;:15;;;1887:1;:8;;;1913:9;1940:14;1955:1;1940:17;;;;;;;;:::i;:::-;;;;;;;1746:8;:225::i;:::-;1734:237;;1708:593;;;2014:276;2045:7;2070:8;2096:1;:22;;;2136:1;:17;;;2171:1;:15;;;2204:9;2231:14;2263:13;2014;:276::i;:::-;2002:288;;1708:593;2328:1;:6;;;-1:-1:-1;;;;;2315:19:34;:9;-1:-1:-1;;;;;2315:19:34;;2311:384;;2382:6;;;;2376:44;;-1:-1:-1;;;2376:44:34;;-1:-1:-1;;;;;15734:32:110;;;2376:44:34;;;15716:51:110;15783:18;;;15776:34;;;2376:22:34;;;;;;15689:18:110;;2376:44:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2311:384;;;2463:221;2489:1;:6;;;2513:9;2540;2567:1;:15;;;2600:1;:8;;;2626:9;2653:14;2668:1;2653:17;;;;;;;;:::i;2463:221::-;2451:233;;2311:384;1459:1242;;;1222:1479;;;;;;;;:::o;2302:159:58:-;4910:13:57;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:57;;;;;;;:::i;:::-;2414:5:58::1;:13;2422:5:::0;2414;:13:::1;:::i;:::-;-1:-1:-1::0;2437:7:58::1;:17;2447:7:::0;2437;:17:::1;:::i;181:376:52:-:0;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;6169:326:84:-;6313:12;6338;6352:23;6379:6;-1:-1:-1;;;;;6379:17:84;6397:4;6379:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:65;;;;6419:69;6446:6;6454:7;6463:10;6475:12;6419:26;:69::i;5196:642:83:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:83;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:83;;18848:2:110;5720:111:83;;;18830:21:110;18887:2;18867:18;;;18860:30;18926:34;18906:18;;;18899:62;-1:-1:-1;;;18977:18:110;;;18970:40;19027:19;;5720:111:83;18646:406:110;2708:1009:34;2931:4;2947:59;2976:8;2987:7;2996:9;2947:21;:59::i;:::-;3080:420;;;;;;;;-1:-1:-1;;;;;3080:420:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3287:15;3080:420;;;;;;;;;;;;;;;;;;-1:-1:-1;3080:420:34;;;;;;3515:45;;-1:-1:-1;;;3515:45:34;;19346:13:110;;19342:22;;3515:45:34;;;19324:41:110;19407:24;;19403:33;;19381:20;;;19374:63;19479:24;;19475:39;;;19453:20;;;19446:69;19557:24;;19553:33;;19531:20;;;19524:63;19625:24;19603:20;;;19596:54;19688:24;;19666:20;;;19659:54;19751:24;19729:20;;;19722:54;19818:24;;19814:33;;19792:20;;;19785:63;3080:420:34;;3515:37;;;;;;19258:19:110;;3515:45:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;3515:45:34;;;;;;;;-1:-1:-1;;3515:45:34;;;;;;;;;;;;:::i;:::-;;;3511:200;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3693:6;3683:17;;-1:-1:-1;;;3683:17:34;;;;;;;;:::i;3511:200::-;;;;;;;;;;;3607:9;-1:-1:-1;3600:16:34;;-1:-1:-1;3600:16:34;3724:1746;3981:14;4016:35;4054:266;;;;;;;;4100:5;-1:-1:-1;;;;;4094:22:34;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4054:266;;;;4138:24;4054:266;;-1:-1:-1;;;;;4054:266:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4297:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4297:12:34;-1:-1:-1;4054:266:34;;4368:194;;;;;;;;4420:4;4368:194;;;4331:34;4368:194;;;;;;;;;;;;;;;;4016:304;;-1:-1:-1;4331:34:34;4607:5;:22;;;;;;;;:::i;:::-;;4603:697;;4654:14;4669:1;4654:17;;;;;;;;:::i;:::-;;;;;;;4645:26;;4603:697;;;4725:13;4716:5;:22;;;;;;;;:::i;:::-;;4712:588;;4758:47;;-1:-1:-1;;;4758:47:34;;-1:-1:-1;;;;;4758:28:34;;;;;:47;;4787:10;;4799:5;;4758:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4758:47:34;;;;;;;;-1:-1:-1;;4758:47:34;;;;;;;;;;;;:::i;:::-;;;4754:536;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5268:6;5258:17;;-1:-1:-1;;;5258:17:34;;;;;;;;:::i;4754:536::-;4852:25;4880:14;4895:1;4880:17;;;;;;;;:::i;:::-;;;;;;;4852:45;;4947:13;4924:20;:36;:75;;4986:13;4924:75;;;4963:20;4924:75;4915:84;;4834:364;4806:392;4754:536;5310:66;5339:8;5350:6;5358:10;:17;;;5310:21;:66::i;:::-;5399:64;5412:6;5420:10;5432:5;5439:6;5447:15;5399:12;:64::i;:::-;5387:76;3724:1746;-1:-1:-1;;;;;;;;;;;;3724:1746:34:o;7671:628:84:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1476:19:64;;;8113:60:84;;;;-1:-1:-1;;;8113:60:84;;22596:2:110;8113:60:84;;;22578:21:110;22635:2;22615:18;;;22608:30;22674:31;22654:18;;;22647:59;22723:18;;8113:60:84;22394:353:110;8113:60:84;-1:-1:-1;8208:10:84;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;4108:223::-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;1818:573:83:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:83;;-1:-1:-1;;;2159:39:83;;2183:4;2159:39;;;22964:34:110;-1:-1:-1;;;;;23034:15:110;;;23014:18;;;23007:43;2159:15:83;;;;;22899:18:110;;2159:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:83;;23263:2:110;2121:163:83;;;23245:21:110;23302:2;23282:18;;;23275:30;23341:34;23321:18;;;23314:62;-1:-1:-1;;;23392:18:110;;;23385:52;23454:19;;2121:163:83;23061:418:110;2121:163:83;2321:62;;-1:-1:-1;;;;;15734:32:110;;2321:62:83;;;15716:51:110;15783:18;;;15776:34;;;2294:90:83;;2314:5;;-1:-1:-1;;;2344:22:83;15689:18:110;;2321:62:83;15542:274:110;5732:650:34;5970:68;;-1:-1:-1;;;5970:68:34;;5945:4;;-1:-1:-1;;;;;5970:19:34;;;;;:68;;5990:11;;6003:6;;6011:13;;6026:11;;5970:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5970:68:34;;;;;;;;-1:-1:-1;;5970:68:34;;;;;;;;;;;;:::i;:::-;;;5966:410;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6209:41;6232:6;6209:41;;;;;;;;;;;;;-1:-1:-1;;;6209:41:34;;;:22;:41::i;:::-;6205:161;;;6277:11;;-1:-1:-1;;;6277:11:34;;;;;;;;;;;6205:161;6344:6;6334:17;;-1:-1:-1;;;6334:17:34;;;;;;;;:::i;5966:410::-;6081:9;6094:1;6081:14;6077:38;;6104:11;;-1:-1:-1;;;6104:11:34;;;;;;;;;;;8821:540:84;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:84;;;;;;;;:::i;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:84;;24265:2:110;5354:81:84;;;24247:21:110;24304:2;24284:18;;;24277:30;24343:34;24323:18;;;24316:62;-1:-1:-1;;;24394:18:110;;;24387:36;24440:19;;5354:81:84;24063:402:110;5354:81:84;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:84;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;4369:212:32:-;4479:4;4567:5;4550:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4540:34;;;;;;4529:5;4512:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;4502:34;;;;;;:72;4495:79;;4369:212;;;;:::o;14:250:110:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:110;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:110;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:110:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:110;;835:42;;825:70;;891:1;888;881:12;906:315;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:110:o;1600:456::-;1677:6;1685;1693;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;1801:9;1788:23;1820:31;1845:5;1820:31;:::i;:::-;1870:5;-1:-1:-1;1927:2:110;1912:18;;1899:32;1940:33;1899:32;1940:33;:::i;:::-;1600:456;;1992:7;;-1:-1:-1;;;2046:2:110;2031:18;;;;2018:32;;1600:456::o;2250:271::-;2324:6;2377:2;2365:9;2356:7;2352:23;2348:32;2345:52;;;2393:1;2390;2383:12;2345:52;2432:9;2419:23;2471:1;2464:5;2461:12;2451:40;;2487:1;2484;2477:12;2753:127;2814:10;2809:3;2805:20;2802:1;2795:31;2845:4;2842:1;2835:15;2869:4;2866:1;2859:15;2885:249;2995:2;2976:13;;-1:-1:-1;;2972:27:110;2960:40;;3030:18;3015:34;;3051:22;;;3012:62;3009:88;;;3077:18;;:::i;:::-;3113:2;3106:22;-1:-1:-1;;2885:249:110:o;3139:1474::-;3259:6;3267;3275;3283;3291;3344:3;3332:9;3323:7;3319:23;3315:33;3312:53;;;3361:1;3358;3351:12;3312:53;3400:9;3387:23;3419:31;3444:5;3419:31;:::i;:::-;3469:5;-1:-1:-1;3493:2:110;3532:18;;;3519:32;3560:33;3519:32;3560:33;:::i;:::-;3612:7;-1:-1:-1;3671:2:110;3656:18;;3643:32;3684:33;3643:32;3684:33;:::i;:::-;3736:7;-1:-1:-1;3790:2:110;3775:18;;3762:32;;-1:-1:-1;3845:3:110;3830:19;;3817:33;3869:18;3899:14;;;3896:34;;;3926:1;3923;3916:12;3896:34;3964:6;3953:9;3949:22;3939:32;;4009:7;4002:4;3998:2;3994:13;3990:27;3980:55;;4031:1;4028;4021:12;3980:55;4067:2;4054:16;4089:2;4085;4082:10;4079:36;;;4095:18;;:::i;:::-;4141:2;4138:1;4134:10;4124:20;;4173:2;4167:9;4185:40;4221:2;4217;4213:11;4205:6;4185:40;:::i;:::-;4260:18;;;4336:11;;;4332:20;;;4294:15;;;4364:19;;;4361:39;;;4396:1;4393;4386:12;4361:39;4420:11;;;;4440:142;4456:6;4451:3;4448:15;4440:142;;;4522:17;;4510:30;;4473:12;;;;4560;;4440:142;;;4444:3;4601:6;4591:16;;;;;;;3139:1474;;;;;;;;:::o;4618:247::-;4677:6;4730:2;4718:9;4709:7;4705:23;4701:32;4698:52;;;4746:1;4743;4736:12;4698:52;4785:9;4772:23;4804:31;4829:5;4804:31;:::i;4870:556::-;4913:5;4966:3;4959:4;4951:6;4947:17;4943:27;4933:55;;4984:1;4981;4974:12;4933:55;5020:6;5007:20;5046:18;5042:2;5039:26;5036:52;;;5068:18;;:::i;:::-;5117:2;5111:9;5129:67;5184:2;5165:13;;-1:-1:-1;;5161:27:110;5190:4;5157:38;5111:9;5129:67;:::i;:::-;5220:2;5212:6;5205:18;5266:3;5259:4;5254:2;5246:6;5242:15;5238:26;5235:35;5232:55;;;5283:1;5280;5273:12;5232:55;5347:2;5340:4;5332:6;5328:17;5321:4;5313:6;5309:17;5296:54;5394:1;5370:15;;;5387:4;5366:26;5359:37;;;;5374:6;4870:556;-1:-1:-1;;;4870:556:110:o;5431:816::-;5546:6;5554;5562;5570;5578;5631:3;5619:9;5610:7;5606:23;5602:33;5599:53;;;5648:1;5645;5638:12;5599:53;5688:9;5675:23;5717:18;5758:2;5750:6;5747:14;5744:34;;;5774:1;5771;5764:12;5744:34;5797:50;5839:7;5830:6;5819:9;5815:22;5797:50;:::i;:::-;5787:60;;5900:2;5889:9;5885:18;5872:32;5856:48;;5929:2;5919:8;5916:16;5913:36;;;5945:1;5942;5935:12;5913:36;;5968:52;6012:7;6001:8;5990:9;5986:24;5968:52;:::i;:::-;5958:62;;;6070:2;6059:9;6055:18;6042:32;6083:31;6108:5;6083:31;:::i;:::-;5431:816;;;;-1:-1:-1;6133:5:110;;6185:2;6170:18;;6157:32;;-1:-1:-1;6236:3:110;6221:19;6208:33;;5431:816;-1:-1:-1;;5431:816:110:o;6252:388::-;6320:6;6328;6381:2;6369:9;6360:7;6356:23;6352:32;6349:52;;;6397:1;6394;6387:12;6349:52;6436:9;6423:23;6455:31;6480:5;6455:31;:::i;:::-;6505:5;-1:-1:-1;6562:2:110;6547:18;;6534:32;6575:33;6534:32;6575:33;:::i;:::-;6627:7;6617:17;;;6252:388;;;;;:::o;6645:380::-;6724:1;6720:12;;;;6767;;;6788:61;;6842:4;6834:6;6830:17;6820:27;;6788:61;6895:2;6887:6;6884:14;6864:18;6861:38;6858:161;;6941:10;6936:3;6932:20;6929:1;6922:31;6976:4;6973:1;6966:15;7004:4;7001:1;6994:15;6858:161;;6645:380;;;:::o;7030:127::-;7091:10;7086:3;7082:20;7079:1;7072:31;7122:4;7119:1;7112:15;7146:4;7143:1;7136:15;7162:125;7227:9;;;7248:10;;;7245:36;;;7261:18;;:::i;7292:138::-;7371:13;;7393:31;7371:13;7393:31;:::i;:::-;7292:138;;;:::o;7435:165::-;7513:13;;7566:8;7555:20;;7545:31;;7535:59;;7590:1;7587;7580:12;7605:1082;7706:6;7737:3;7781:2;7769:9;7760:7;7756:23;7752:32;7749:52;;;7797:1;7794;7787:12;7749:52;7830:2;7824:9;7860:15;;;;7905:18;7890:34;;7926:22;;;7887:62;7884:88;;;7952:18;;:::i;:::-;7992:10;7988:2;7981:22;8027:40;8057:9;8027:40;:::i;:::-;8019:6;8012:56;8101:48;8145:2;8134:9;8130:18;8101:48;:::i;:::-;8096:2;8088:6;8084:15;8077:73;8183:49;8228:2;8217:9;8213:18;8183:49;:::i;:::-;8178:2;8170:6;8166:15;8159:74;8266:49;8311:2;8300:9;8296:18;8266:49;:::i;:::-;8261:2;8253:6;8249:15;8242:74;8350:50;8395:3;8384:9;8380:19;8350:50;:::i;:::-;8344:3;8336:6;8332:16;8325:76;8435:50;8480:3;8469:9;8465:19;8435:50;:::i;:::-;8429:3;8421:6;8417:16;8410:76;8520:50;8565:3;8554:9;8550:19;8520:50;:::i;:::-;8514:3;8506:6;8502:16;8495:76;8605:50;8650:3;8639:9;8635:19;8605:50;:::i;:::-;8599:3;8587:16;;8580:76;8591:6;7605:1082;-1:-1:-1;;;;7605:1082:110:o;8900:184::-;8970:6;9023:2;9011:9;9002:7;8998:23;8994:32;8991:52;;;9039:1;9036;9029:12;8991:52;-1:-1:-1;9062:16:110;;8900:184;-1:-1:-1;8900:184:110:o;9089:127::-;9150:10;9145:3;9141:20;9138:1;9131:31;9181:4;9178:1;9171:15;9205:4;9202:1;9195:15;9221:128;9288:9;;;9309:11;;;9306:37;;;9323:18;;:::i;9354:251::-;9424:6;9477:2;9465:9;9456:7;9452:23;9448:32;9445:52;;;9493:1;9490;9483:12;9445:52;9525:9;9519:16;9544:31;9569:5;9544:31;:::i;9610:127::-;9671:10;9666:3;9662:20;9659:1;9652:31;9702:4;9699:1;9692:15;9726:4;9723:1;9716:15;10762:246;10909:2;10894:18;;10942:1;10931:13;;10921:47;;10948:18;;:::i;:::-;10977:25;;;10762:246;:::o;13776:164::-;13852:13;;13901;;13894:21;13884:32;;13874:60;;13930:1;13927;13920:12;13945:202;14012:6;14065:2;14053:9;14044:7;14040:23;14036:32;14033:52;;;14081:1;14078;14071:12;14033:52;14104:37;14131:9;14104:37;:::i;14152:407::-;14354:2;14336:21;;;14393:2;14373:18;;;14366:30;14432:34;14427:2;14412:18;;14405:62;-1:-1:-1;;;14498:2:110;14483:18;;14476:41;14549:3;14534:19;;14152:407::o;14924:317::-;15101:2;15090:9;15083:21;15064:4;15121:45;15162:2;15151:9;15147:18;15139:6;15121:45;:::i;:::-;15113:53;;15231:1;15227;15222:3;15218:11;15214:19;15206:6;15202:32;15197:2;15186:9;15182:18;15175:60;14924:317;;;;;:::o;15246:291::-;15423:2;15412:9;15405:21;15386:4;15443:45;15484:2;15473:9;15469:18;15461:6;15443:45;:::i;:::-;15435:53;;15524:6;15519:2;15508:9;15504:18;15497:34;15246:291;;;;;:::o;15821:324::-;15906:6;15914;15922;15975:2;15963:9;15954:7;15950:23;15946:32;15943:52;;;15991:1;15988;15981:12;15943:52;16014:37;16041:9;16014:37;:::i;:::-;16004:47;;16091:2;16080:9;16076:18;16070:25;16060:35;;16135:2;16124:9;16120:18;16114:25;16104:35;;15821:324;;;;;:::o;16276:545::-;16378:2;16373:3;16370:11;16367:448;;;16414:1;16439:5;16435:2;16428:17;16484:4;16480:2;16470:19;16554:2;16542:10;16538:19;16535:1;16531:27;16525:4;16521:38;16590:4;16578:10;16575:20;16572:47;;;-1:-1:-1;16613:4:110;16572:47;16668:2;16663:3;16659:12;16656:1;16652:20;16646:4;16642:31;16632:41;;16723:82;16741:2;16734:5;16731:13;16723:82;;;16786:17;;;16767:1;16756:13;16723:82;;16997:1352;17123:3;17117:10;17150:18;17142:6;17139:30;17136:56;;;17172:18;;:::i;:::-;17201:97;17291:6;17251:38;17283:4;17277:11;17251:38;:::i;:::-;17245:4;17201:97;:::i;:::-;17353:4;;17417:2;17406:14;;17434:1;17429:663;;;;18136:1;18153:6;18150:89;;;-1:-1:-1;18205:19:110;;;18199:26;18150:89;-1:-1:-1;;16954:1:110;16950:11;;;16946:24;16942:29;16932:40;16978:1;16974:11;;;16929:57;18252:81;;17399:944;;17429:663;16223:1;16216:14;;;16260:4;16247:18;;-1:-1:-1;;17465:20:110;;;17583:236;17597:7;17594:1;17591:14;17583:236;;;17686:19;;;17680:26;17665:42;;17778:27;;;;17746:1;17734:14;;;;17613:19;;17583:236;;;17587:3;17847:6;17838:7;17835:19;17832:201;;;17908:19;;;17902:26;-1:-1:-1;;17991:1:110;17987:14;;;18003:3;17983:24;17979:37;17975:42;17960:58;17945:74;;17832:201;-1:-1:-1;;;;;18079:1:110;18063:14;;;18059:22;18046:36;;-1:-1:-1;16997:1352:110:o;18354:287::-;18483:3;18521:6;18515:13;18537:66;18596:6;18591:3;18584:4;18576:6;18572:17;18537:66;:::i;:::-;18619:16;;;;;18354:287;-1:-1:-1;;18354:287:110:o;19859:179::-;19894:3;19936:1;19918:16;19915:23;19912:120;;;19982:1;19979;19976;19961:23;-1:-1:-1;20019:1:110;20013:8;20008:3;20004:18;19859:179;:::o;20043:671::-;20082:3;20124:4;20106:16;20103:26;20100:39;;;20043:671;:::o;20100:39::-;20166:2;20160:9;-1:-1:-1;;20231:16:110;20227:25;;20224:1;20160:9;20203:50;20282:4;20276:11;20306:16;20341:18;20412:2;20405:4;20397:6;20393:17;20390:25;20385:2;20377:6;20374:14;20371:45;20368:58;;;20419:5;;;;;20043:671;:::o;20368:58::-;20456:6;20450:4;20446:17;20435:28;;20492:3;20486:10;20519:2;20511:6;20508:14;20505:27;;;20525:5;;;;;;20043:671;:::o;20505:27::-;20609:2;20590:16;20584:4;20580:27;20576:36;20569:4;20560:6;20555:3;20551:16;20547:27;20544:69;20541:82;;;20616:5;;;;;;20043:671;:::o;20541:82::-;20632:57;20683:4;20674:6;20666;20662:19;20658:30;20652:4;20632:57;:::i;:::-;-1:-1:-1;20705:3:110;;20043:671;-1:-1:-1;;;;;20043:671:110:o;20908:686::-;20997:5;20991:12;20986:3;20979:25;20961:3;21050:4;21043:5;21039:16;21033:23;21092:1;21078:12;21075:19;21065:53;;21098:18;;:::i;:::-;21150:12;21143:4;21138:3;21134:14;21127:36;;21211:4;21204:5;21200:16;21194:23;21253:1;21249;21244:3;21240:11;21236:19;21307:2;21291:14;21287:23;21280:4;21275:3;21271:14;21264:47;21372:2;21364:4;21357:5;21353:16;21347:23;21343:32;21336:4;21331:3;21327:14;21320:56;;;21425:4;21418:5;21414:16;21408:23;21401:4;21396:3;21392:14;21385:47;21480:4;21473:5;21469:16;21463:23;21518:4;21511;21506:3;21502:14;21495:28;21539:49;21582:4;21577:3;21573:14;21557;21539:49;:::i;21959:430::-;22236:3;22225:9;22218:22;22199:4;22257:57;22309:3;22298:9;22294:19;22286:6;22257:57;:::i;:::-;22249:65;;22323:60;22379:2;22368:9;22364:18;22356:6;21721:12;;-1:-1:-1;;;;;21717:21:110;;;21705:34;;21802:4;21791:16;;;21785:23;21778:31;21771:39;21755:14;;;21748:63;21864:4;21853:16;;;21847:23;21843:32;;;21827:14;;;21820:56;21939:4;21928:16;;;21922:23;21915:31;21908:39;21892:14;;21885:63;21599:355;23484:574;23817:3;23806:9;23799:22;23780:4;23838:57;23890:3;23879:9;23875:19;23867:6;23838:57;:::i;:::-;23830:65;;23904:60;23960:2;23949:9;23945:18;23937:6;21721:12;;-1:-1:-1;;;;;21717:21:110;;;21705:34;;21802:4;21791:16;;;21785:23;21778:31;21771:39;21755:14;;;21748:63;21864:4;21853:16;;;21847:23;21843:32;;;21827:14;;;21820:56;21939:4;21928:16;;;21922:23;21915:31;21908:39;21892:14;;21885:63;21599:355;23904:60;23995:3;23980:19;;23973:35;;;;24039:3;24024:19;24017:35;23484:574;;-1:-1:-1;;23484:574:110:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "circulatingSupply()": "9358928b",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getExchangeRate()": "e6aa216c",
    "getExchangeRate(uint8)": "4d02a3f7",
    "getOZ()": "59c64e12",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,uint256,uint256)": "74823132",
    "name()": "06fdde03",
    "redeem(address,address,address,uint256,uint256[])": "6afa0287",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"OZError01\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError02\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorCode\",\"type\":\"string\"}],\"name\":\"OZError10\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"OZError18\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OZError19\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OZError20\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"OZError21\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum QuoteAsset\",\"name\":\"asset_\",\"type\":\"uint8\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOZ\",\"outputs\":[{\"internalType\":\"contract ozIDiamond\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ozDiamond_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"communityAmount_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ozlAmountIn_\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut_\",\"type\":\"uint256[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OZError01(string)\":[{\"details\":\"See https://eips.ethereum.org/EIPS/eip-6093\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"OZError01(string)\":[{\"notice\":\"Standard ERC20 Errors\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x43d771427b24ea00622386c93e297f880a2e015c56cc3a9ad3b65a67731706c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9256056be4b25dd96c017dc752a84a50aaa133a422b6925d5b56935763ced73c\",\"dweb:/ipfs/QmX1bHX8cK3PBV6JAKtjSTJVkuRhin7BvEsShVueT4GnyV\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b\",\"urls\":[\"bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe\",\"dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv\"]},\"contracts/OZL.sol\":{\"keccak256\":\"0xebde3accdb65b286d59842b3d10f370c1a2191f02db6e1ff95bf6b47485bf4bf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d90e729d883ba64b8fb44272edb05ae4539716bc8d66e6d953d78b3012086f1f\",\"dweb:/ipfs/QmNTUWFxoQPhSdvkdjJTpn2m2EMQhWwnrhYnMUKo1tG3ze\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZL.sol\":{\"keccak256\":\"0x4fa3c8db40e4fb2dcc19b44f9948a6ab85b477ab1cdf85c06a0d7f0418b1e41e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c529762430f4f22756f5095144206da78732c7ec8111726dd0a1f9315a4b616b\",\"dweb:/ipfs/QmRkUBpiXNCPErtVQzM1ByP2ABFgLEuNWQohgeXXM5RLqk\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387\",\"dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x382569a72697c0a7d466929c013b063b74515b1380e35e12077168b8aa27dcaa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ea6c0f8f1d1407a1e4422653648784dac3e93cfdf5218b6f60a3979ed87a250\",\"dweb:/ipfs/QmcAoKzZEA25UzvsAf2z4Gu6Wo6uW95WY3SmQja5R2aWg2\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845\",\"dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv\"]},\"contracts/libraries/TradingLib.sol\":{\"keccak256\":\"0xdbeb12107344bcf152eee362c64ca08ae91ea14f83d8fb7d9cdc38a0d21054c3\",\"urls\":[\"bzz-raw://7d71270fa9c69fe27dee475ef1c26776d161c8fa99c15d1572295b82168f8f1b\",\"dweb:/ipfs/QmYGKuJF5QseEmmQMQh8AMTWTBmen98tEpmqc8VbMTqDr1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xdbaa6fcf036f9dc8c2574d66797fed350156bce18902adf4ab7c6e7d18e1a453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179cbac435db98cceaceaaa027a332f6b9ac711a03ab01f8230a82a2f9eb462\",\"dweb:/ipfs/QmeWUWbeGsVrXZyFUEwDB9p4jMo2kuQMw85RyNyUuyCPTc\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorMsg",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError01"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError02"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "errorCode",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError10"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OZError18"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError19"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OZError20"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "OZError21"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "circulatingSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum QuoteAsset",
              "name": "asset_",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOZ",
          "outputs": [
            {
              "internalType": "contract ozIDiamond",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ozDiamond_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "communityAmount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "ozlAmountIn_",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut_",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x43d771427b24ea00622386c93e297f880a2e015c56cc3a9ad3b65a67731706c3",
        "urls": [
          "bzz-raw://9256056be4b25dd96c017dc752a84a50aaa133a422b6925d5b56935763ced73c",
          "dweb:/ipfs/QmX1bHX8cK3PBV6JAKtjSTJVkuRhin7BvEsShVueT4GnyV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x15bb911304c2284e131b59cb911537d64e81c4164a04cb5c2088313e8c159b6b",
        "urls": [
          "bzz-raw://60a9970f2800d80a85547e717db4ec0788aa25416c8f28beb4a79a06b467b6fe",
          "dweb:/ipfs/QmdysFsR3xPagULCdibUWKePvSbaxiqTmN5PjnjFxHkbjv"
        ],
        "license": null
      },
      "contracts/OZL.sol": {
        "keccak256": "0xebde3accdb65b286d59842b3d10f370c1a2191f02db6e1ff95bf6b47485bf4bf",
        "urls": [
          "bzz-raw://d90e729d883ba64b8fb44272edb05ae4539716bc8d66e6d953d78b3012086f1f",
          "dweb:/ipfs/QmNTUWFxoQPhSdvkdjJTpn2m2EMQhWwnrhYnMUKo1tG3ze"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZL.sol": {
        "keccak256": "0x4fa3c8db40e4fb2dcc19b44f9948a6ab85b477ab1cdf85c06a0d7f0418b1e41e",
        "urls": [
          "bzz-raw://c529762430f4f22756f5095144206da78732c7ec8111726dd0a1f9315a4b616b",
          "dweb:/ipfs/QmRkUBpiXNCPErtVQzM1ByP2ABFgLEuNWQohgeXXM5RLqk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x40db140ee5310859bdbb71b98da76819665cdeb7d8db9533da28f8d919aa6b0d",
        "urls": [
          "bzz-raw://20540d5166dd565854e22b5dc2eaa6b92c825f19cd2c600c2a8bf69dca867387",
          "dweb:/ipfs/QmVqxLuuMmjfXWaHvCvZqeU1Yq648F4gkNYCrxhyNV2kXe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0x382569a72697c0a7d466929c013b063b74515b1380e35e12077168b8aa27dcaa",
        "urls": [
          "bzz-raw://5ea6c0f8f1d1407a1e4422653648784dac3e93cfdf5218b6f60a3979ed87a250",
          "dweb:/ipfs/QmcAoKzZEA25UzvsAf2z4Gu6Wo6uW95WY3SmQja5R2aWg2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0x84a2f5426c21c1e76e1139f7bdcaa35a6d1e4e64c48d9e944b0798c2d3eebb4f",
        "urls": [
          "bzz-raw://de737fee4a52aa093ba7b29db8c5d82c64e8f418247d1688fe28ffe8b0cc8845",
          "dweb:/ipfs/QmWdGArovveAL9AsTprrp5RYmfh3aff9MnFRzAuR38A6wv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TradingLib.sol": {
        "keccak256": "0xdbeb12107344bcf152eee362c64ca08ae91ea14f83d8fb7d9cdc38a0d21054c3",
        "urls": [
          "bzz-raw://7d71270fa9c69fe27dee475ef1c26776d161c8fa99c15d1572295b82168f8f1b",
          "dweb:/ipfs/QmYGKuJF5QseEmmQMQh8AMTWTBmen98tEpmqc8VbMTqDr1"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xdbaa6fcf036f9dc8c2574d66797fed350156bce18902adf4ab7c6e7d18e1a453",
        "urls": [
          "bzz-raw://8179cbac435db98cceaceaaa027a332f6b9ac711a03ab01f8230a82a2f9eb462",
          "dweb:/ipfs/QmeWUWbeGsVrXZyFUEwDB9p4jMo2kuQMw85RyNyUuyCPTc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 870,
    "exportedSymbols": {
      "Address": [
        41924
      ],
      "ERC20Upgradeable": [
        37448
      ],
      "FixedPointMathLib": [
        4825
      ],
      "IERC20": [
        41182
      ],
      "IERC20Permit": [
        3722
      ],
      "OZError01": [
        299
      ],
      "OZError02": [
        301
      ],
      "OZError03": [
        323
      ],
      "OZError04": [
        329
      ],
      "OZError05": [
        333
      ],
      "OZError06": [
        341
      ],
      "OZError07": [
        349
      ],
      "OZError08": [
        355
      ],
      "OZError09": [
        361
      ],
      "OZError10": [
        305
      ],
      "OZError11": [
        309
      ],
      "OZError12": [
        313
      ],
      "OZError13": [
        317
      ],
      "OZError14": [
        321
      ],
      "OZError15": [
        363
      ],
      "OZError16": [
        365
      ],
      "OZError17": [
        367
      ],
      "OZError18": [
        371
      ],
      "OZError19": [
        375
      ],
      "OZError20": [
        377
      ],
      "OZError21": [
        381
      ],
      "OZL": [
        869
      ],
      "QuoteAsset": [
        3728
      ],
      "SafeERC20": [
        41594
      ],
      "StorageSlot": [
        42056
      ],
      "TradingLib": [
        6639
      ],
      "TradingPackage": [
        100
      ],
      "console": [
        28150
      ],
      "ozIDiamond": [
        4459
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:4875:4",
    "nodes": [
      {
        "id": 468,
        "nodeType": "PragmaDirective",
        "src": "45:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 470,
        "nodeType": "ImportDirective",
        "src": "71:108:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 37449,
        "symbolAliases": [
          {
            "foreign": {
              "id": 469,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37448,
              "src": "79:16:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 472,
        "nodeType": "ImportDirective",
        "src": "180:59:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20Permit.sol",
        "file": "./interfaces/IERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 3723,
        "symbolAliases": [
          {
            "foreign": {
              "id": 471,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3722,
              "src": "188:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 474,
        "nodeType": "ImportDirective",
        "src": "240:68:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/FixedPointMathLib.sol",
        "file": "./libraries/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 4826,
        "symbolAliases": [
          {
            "foreign": {
              "id": 473,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4825,
              "src": "248:17:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 476,
        "nodeType": "ImportDirective",
        "src": "309:74:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "file": "@openzeppelin/contracts/utils/StorageSlot.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 42057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 475,
              "name": "StorageSlot",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42056,
              "src": "317:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 478,
        "nodeType": "ImportDirective",
        "src": "384:55:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ozIDiamond.sol",
        "file": "./interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 4460,
        "symbolAliases": [
          {
            "foreign": {
              "id": 477,
              "name": "ozIDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4459,
              "src": "392:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 480,
        "nodeType": "ImportDirective",
        "src": "440:49:4",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IOZL.sol",
        "file": "./interfaces/IOZL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 3924,
        "symbolAliases": [
          {
            "foreign": {
              "id": 479,
              "name": "QuoteAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3728,
              "src": "448:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 482,
        "nodeType": "ImportDirective",
        "src": "490:66:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 41925,
        "symbolAliases": [
          {
            "foreign": {
              "id": 481,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41924,
              "src": "498:7:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 484,
        "nodeType": "ImportDirective",
        "src": "557:82:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 41595,
        "symbolAliases": [
          {
            "foreign": {
              "id": 483,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41594,
              "src": "565:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 486,
        "nodeType": "ImportDirective",
        "src": "640:70:4",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 41183,
        "symbolAliases": [
          {
            "foreign": {
              "id": 485,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41182,
              "src": "648:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 488,
        "nodeType": "ImportDirective",
        "src": "711:54:4",
        "nodes": [],
        "absolutePath": "contracts/libraries/TradingLib.sol",
        "file": "./libraries/TradingLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 6640,
        "symbolAliases": [
          {
            "foreign": {
              "id": 487,
              "name": "TradingLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6639,
              "src": "719:10:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 490,
        "nodeType": "ImportDirective",
        "src": "766:48:4",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "./AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 176,
        "symbolAliases": [
          {
            "foreign": {
              "id": 489,
              "name": "TradingPackage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 100,
              "src": "774:14:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 491,
        "nodeType": "ImportDirective",
        "src": "815:22:4",
        "nodes": [],
        "absolutePath": "contracts/Errors.sol",
        "file": "./Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 382,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 492,
        "nodeType": "ImportDirective",
        "src": "839:31:4",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 870,
        "sourceUnit": 28151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 869,
        "nodeType": "ContractDefinition",
        "src": "903:4017:4",
        "nodes": [
          {
            "id": 497,
            "nodeType": "UsingForDirective",
            "src": "943:33:4",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 495,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "949:17:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4825,
              "src": "949:17:4"
            },
            "typeName": {
              "id": 496,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "971:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 510,
            "nodeType": "VariableDeclaration",
            "src": "982:98:4",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_OZ_DIAMOND_SLOT",
            "nameLocation": "1007:16:4",
            "scope": 869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 498,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "982:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 508,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f7a4469616d6f6e642e73746f726167652e736c6f74",
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1049:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            },
                            "value": "ozDiamond.storage.slot"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_86ce1ea4932afb23386a483af3bf37658d9a562b0cc91e2c799fcb236cb30d57",
                              "typeString": "literal_string \"ozDiamond.storage.slot\""
                            }
                          ],
                          "id": 503,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1039:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1039:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1034:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1034:4:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "hexValue": "31",
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1078:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "src": "1034:45:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "id": 500,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1026:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 499,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:7:4",
                  "typeDescriptions": {}
                }
              },
              "id": 509,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1026:54:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 517,
            "nodeType": "FunctionDefinition",
            "src": "1088:53:4",
            "nodes": [],
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "1102:39:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 513,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36773,
                      "src": "1112:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:22:4"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:2:4"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:4"
            },
            "scope": 869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 564,
            "nodeType": "FunctionDefinition",
            "src": "1148:729:4",
            "nodes": [],
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "1342:535:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "1365:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 534,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "1372:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 532,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36822,
                      "src": "1352:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:28:4"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "_OZ_DIAMOND_SLOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "1417:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 537,
                            "name": "StorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42056,
                            "src": "1390:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42056_$",
                              "typeString": "type(library StorageSlot)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1402:14:4",
                          "memberName": "getAddressSlot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41978,
                          "src": "1390:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41952_storage_ptr_$",
                            "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1390:44:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$41952_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot storage pointer"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1435:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41951,
                      "src": "1390:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 543,
                      "name": "ozDiamond_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "1443:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1390:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:63:4"
                },
                {
                  "documentation": " Add here later the vesting strategy using\n OP's VestingWallet.sol / https://medium.com/cardstack/building-a-token-vesting-contract-b368a954f99\n Use linear distribution, not all unlocked at once.\n When they vest, add it to circulating supply.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 549,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1785:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$869",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$869",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1777:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 547,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1777:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "1792:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 546,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37229,
                      "src": "1771:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 557,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1834:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$869",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$869",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1826:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 555,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1826:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1826:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 559,
                        "name": "ozDiamond_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 523,
                        "src": "1841:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 560,
                        "name": "communityAmount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1853:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 554,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37173,
                      "src": "1816:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1816:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "1816:54:4"
                }
              ]
            },
            "functionSelector": "74823132",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 529,
                  "name": "initializer",
                  "nameLocations": [
                    "1330:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36694,
                  "src": "1330:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1330:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "1157:10:4",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1191:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1177:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1221:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1207:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "ozDiamond_",
                  "nameLocation": "1246:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1238:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1271:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1266:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "communityAmount_",
                  "nameLocation": "1298:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "1293:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1167:153:4"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1342:0:4"
            },
            "scope": 869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 576,
            "nodeType": "FunctionDefinition",
            "src": "1885:115:4",
            "nodes": [],
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "1940:60:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 571,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3728,
                          "src": "1978:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3728_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1989:3:4",
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3725,
                        "src": "1978:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                          "typeString": "enum QuoteAsset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                          "typeString": "enum QuoteAsset"
                        }
                      ],
                      "expression": {
                        "id": 569,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1957:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OZL_$869",
                          "typeString": "contract OZL"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1962:15:4",
                      "memberName": "getExchangeRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 639,
                      "src": "1957:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_enum$_QuoteAsset_$3728_$returns$_t_uint256_$",
                        "typeString": "function (enum QuoteAsset) view external returns (uint256)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 568,
                  "id": 574,
                  "nodeType": "Return",
                  "src": "1950:43:4"
                }
              ]
            },
            "functionSelector": "e6aa216c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "1894:15:4",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:2:4"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "1934:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1933:6:4"
            },
            "scope": 869,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 639,
            "nodeType": "FunctionDefinition",
            "src": "2007:511:4",
            "nodes": [],
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "2077:441:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 585,
                      "mutability": "mutable",
                      "name": "ONE",
                      "nameLocation": "2092:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2087:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 584,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2087:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2098:7:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:18:4"
                },
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "mutability": "mutable",
                      "name": "rETH",
                      "nameLocation": "2123:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2115:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 588,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2115:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 595,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 590,
                            "name": "getOZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "2130:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4459_$",
                              "typeString": "function () view returns (contract ozIDiamond)"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2130:7:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2138:14:4",
                        "memberName": "tradingPackage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4458,
                        "src": "2130:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                          "typeString": "function () view external returns (struct TradingPackage memory)"
                        }
                      },
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2130:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage memory"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2155:4:4",
                    "memberName": "rETH",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 97,
                    "src": "2130:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2115:44:4"
                },
                {
                  "assignments": [
                    597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 597,
                      "mutability": "mutable",
                      "name": "totalFeesRETH",
                      "nameLocation": "2174:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2169:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 596,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2169:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 604,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2227:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OZL_$869",
                              "typeString": "contract OZL"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OZL_$869",
                              "typeString": "contract OZL"
                            }
                          ],
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2219:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 602,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2219:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2219:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 599,
                            "name": "rETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "2203:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 598,
                          "name": "IERC20Permit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3722,
                          "src": "2190:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$3722_$",
                            "typeString": "type(contract IERC20Permit)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2190:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Permit_$3722",
                          "typeString": "contract IERC20Permit"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2209:9:4",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3608,
                      "src": "2190:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2169:64:4"
                },
                {
                  "assignments": [
                    609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "totalFeesQuote",
                      "nameLocation": "2249:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2244:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2244:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 610,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "2266:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 611,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3728,
                          "src": "2276:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3728_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2287:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3727,
                        "src": "2276:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "2266:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 616,
                          "name": "asset_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "2345:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                            "typeString": "enum QuoteAsset"
                          }
                        },
                        {
                          "id": 617,
                          "name": "totalFeesRETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "2353:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                            "typeString": "enum QuoteAsset"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 615,
                        "name": "_convertToQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "2329:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3728_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (enum QuoteAsset,uint256) view returns (uint256)"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2329:38:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2266:101:4",
                    "trueExpression": {
                      "id": 614,
                      "name": "totalFeesRETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "2303:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2244:123:4"
                },
                {
                  "assignments": [
                    622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 622,
                      "mutability": "mutable",
                      "name": "c_Supply",
                      "nameLocation": "2383:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 638,
                      "src": "2378:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 621,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2378:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 625,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 623,
                      "name": "circulatingSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "2394:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2378:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 626,
                      "name": "c_Supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "2428:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2440:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2428:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "nodeType": "IfStatement",
                  "src": "2424:29:4",
                  "trueBody": {
                    "expression": {
                      "id": 629,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2450:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 583,
                    "id": 630,
                    "nodeType": "Return",
                    "src": "2443:10:4"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 634,
                        "name": "totalFeesQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2486:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 635,
                        "name": "c_Supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "2502:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 632,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "2471:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2475:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4756,
                      "src": "2471:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 637,
                  "nodeType": "Return",
                  "src": "2464:47:4"
                }
              ]
            },
            "functionSelector": "4d02a3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "2016:15:4",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "2043:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "2032:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 577,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2032:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3728,
                      "src": "2032:10:4"
                    },
                    "referencedDeclaration": 3728,
                    "src": "2032:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:19:4"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "2071:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2070:6:4"
            },
            "scope": 869,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 715,
            "nodeType": "FunctionDefinition",
            "src": "2525:558:4",
            "nodes": [],
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "2614:469:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2637:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "2624:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2624:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 655,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "724554485f4554482829",
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2668:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        },
                        "value": "rETH_ETH()"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d4afb73a77947895b4c4a49890a20eceac9e96ed1bcb6e40dd675464c6fce038",
                          "typeString": "literal_string \"rETH_ETH()\""
                        }
                      ],
                      "expression": {
                        "id": 651,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2644:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2648:19:4",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "2644:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2624:57:4"
                },
                {
                  "expression": {
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 656,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "2691:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 661,
                                "name": "getOZ",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 868,
                                "src": "2733:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4459_$",
                                  "typeString": "function () view returns (contract ozIDiamond)"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2733:7:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                                "typeString": "contract ozIDiamond"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                                "typeString": "contract ozIDiamond"
                              }
                            ],
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2725:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 659,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2725:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2725:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 664,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "2743:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 657,
                          "name": "Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41924,
                          "src": "2698:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Address_$41924_$",
                            "typeString": "type(library Address)"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2706:18:4",
                        "memberName": "functionStaticCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41765,
                        "src": "2698:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (address,bytes memory) view returns (bytes memory)"
                        }
                      },
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2698:50:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2691:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:57:4"
                },
                {
                  "assignments": [
                    669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 669,
                      "mutability": "mutable",
                      "name": "reth_eth",
                      "nameLocation": "2764:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "2759:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 668,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2759:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 677,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 672,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "2786:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2793:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 673,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2793:4:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 675,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2792:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 670,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2775:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2779:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2775:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2775:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2759:40:4"
                },
                {
                  "assignments": [
                    679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 679,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "2815:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "2810:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 678,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2810:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 680,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2810:10:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                      "typeString": "enum QuoteAsset"
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 681,
                      "name": "qt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "2835:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 682,
                        "name": "QuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3728,
                        "src": "2842:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3728_$",
                          "typeString": "type(enum QuoteAsset)"
                        }
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2853:3:4",
                      "memberName": "USD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3725,
                      "src": "2842:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                        "typeString": "enum QuoteAsset"
                      }
                    },
                    "src": "2835:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                        "typeString": "enum QuoteAsset"
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 697,
                        "name": "qt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "2954:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 698,
                          "name": "QuoteAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3728,
                          "src": "2961:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3728_$",
                            "typeString": "type(enum QuoteAsset)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2972:3:4",
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3726,
                        "src": "2961:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                          "typeString": "enum QuoteAsset"
                        }
                      },
                      "src": "2954:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 710,
                    "nodeType": "IfStatement",
                    "src": "2951:103:4",
                    "trueBody": {
                      "id": 709,
                      "nodeType": "Block",
                      "src": "2977:77:4",
                      "statements": [
                        {
                          "expression": {
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 701,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "2991:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 704,
                                  "name": "reth_eth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 669,
                                  "src": "3025:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3035:7:4",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 702,
                                  "name": "totalFeesRETH_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 644,
                                  "src": "2999:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3014:10:4",
                                "memberName": "mulDivDown",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4756,
                                "src": "2999:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2999:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2991:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 708,
                          "nodeType": "ExpressionStatement",
                          "src": "2991:52:4"
                        }
                      ]
                    }
                  },
                  "id": 711,
                  "nodeType": "IfStatement",
                  "src": "2831:223:4",
                  "trueBody": {
                    "id": 696,
                    "nodeType": "Block",
                    "src": "2858:87:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 685,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "2872:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 688,
                                      "name": "getOZ",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 868,
                                      "src": "2906:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4459_$",
                                        "typeString": "function () view returns (contract ozIDiamond)"
                                      }
                                    },
                                    "id": 689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2906:7:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                                      "typeString": "contract ozIDiamond"
                                    }
                                  },
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2914:8:4",
                                  "memberName": "rETH_USD",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4346,
                                  "src": "2906:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2906:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2926:7:4",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              ],
                              "expression": {
                                "id": 686,
                                "name": "totalFeesRETH_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 644,
                                "src": "2880:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2895:10:4",
                              "memberName": "mulDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4756,
                              "src": "2880:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2880:54:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2872:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "2872:62:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 712,
                    "name": "quote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 679,
                    "src": "3071:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 648,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "3064:12:4"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToQuote",
            "nameLocation": "2534:15:4",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "qt_",
                  "nameLocation": "2561:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2550:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                    "typeString": "enum QuoteAsset"
                  },
                  "typeName": {
                    "id": 641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 640,
                      "name": "QuoteAsset",
                      "nameLocations": [
                        "2550:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3728,
                      "src": "2550:10:4"
                    },
                    "referencedDeclaration": 3728,
                    "src": "2550:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                      "typeString": "enum QuoteAsset"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "totalFeesRETH_",
                  "nameLocation": "2571:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2566:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2549:37:4"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2608:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2608:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2607:6:4"
            },
            "scope": 869,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 842,
            "nodeType": "FunctionDefinition",
            "src": "3090:1541:4",
            "nodes": [],
            "body": {
              "id": 841,
              "nodeType": "Block",
              "src": "3291:1340:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "OZ",
                      "nameLocation": "3312:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "3301:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                        "typeString": "contract ozIDiamond"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "ozIDiamond",
                          "nameLocations": [
                            "3301:10:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4459,
                          "src": "3301:10:4"
                        },
                        "referencedDeclaration": 4459,
                        "src": "3301:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 736,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 734,
                      "name": "getOZ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "3317:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4459_$",
                        "typeString": "function () view returns (contract ozIDiamond)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3317:7:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3301:23:4"
                },
                {
                  "assignments": [
                    739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "3356:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "3334:23:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                        "typeString": "struct TradingPackage"
                      },
                      "typeName": {
                        "id": 738,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 737,
                          "name": "TradingPackage",
                          "nameLocations": [
                            "3334:14:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 100,
                          "src": "3334:14:4"
                        },
                        "referencedDeclaration": 100,
                        "src": "3334:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_storage_ptr",
                          "typeString": "struct TradingPackage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 740,
                        "name": "OZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "3360:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3363:14:4",
                      "memberName": "tradingPackage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4458,
                      "src": "3360:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_TradingPackage_$100_memory_ptr_$",
                        "typeString": "function () view external returns (struct TradingPackage memory)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                      "typeString": "struct TradingPackage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3334:45:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 746,
                              "name": "tokenOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "3419:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 744,
                              "name": "OZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "3407:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                                "typeString": "contract ozIDiamond"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3410:8:4",
                            "memberName": "ozTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4437,
                            "src": "3407:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3407:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3441:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3433:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 748,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3433:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3433:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3407:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 753,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "3459:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 754,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "3472:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                              "typeString": "struct TradingPackage memory"
                            }
                          },
                          "id": 755,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3474:4:4",
                          "memberName": "WETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "3472:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3459:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3407:71:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 758,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "3494:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 759,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "3507:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                            "typeString": "struct TradingPackage memory"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3509:4:4",
                        "memberName": "rETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 97,
                        "src": "3507:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3494:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3407:106:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 767,
                  "nodeType": "IfStatement",
                  "src": "3390:161:4",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 764,
                          "name": "tokenOut_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "3541:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 763,
                        "name": "OZError18",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "3531:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3531:20:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 766,
                    "nodeType": "RevertStatement",
                    "src": "3524:27:4"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 768,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3566:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3570:6:4",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3566:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 770,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "3580:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3566:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 780,
                  "nodeType": "IfStatement",
                  "src": "3562:100:4",
                  "trueBody": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "3588:74:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 773,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "3618:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 774,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3626:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3630:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3626:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 776,
                              "name": "ozlAmountIn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "3638:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 772,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37420,
                            "src": "3602:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3602:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "3602:49:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 782,
                      "mutability": "mutable",
                      "name": "usdValue",
                      "nameLocation": "3969:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "3964:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 781,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3964:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 791,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 786,
                              "name": "QuoteAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3728,
                              "src": "4020:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_QuoteAsset_$3728_$",
                                "typeString": "type(enum QuoteAsset)"
                              }
                            },
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4031:3:4",
                            "memberName": "USD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3725,
                            "src": "4020:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                              "typeString": "enum QuoteAsset"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_QuoteAsset_$3728",
                              "typeString": "enum QuoteAsset"
                            }
                          ],
                          "id": 785,
                          "name": "getExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "4004:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_enum$_QuoteAsset_$3728_$returns$_t_uint256_$",
                            "typeString": "function (enum QuoteAsset) view returns (uint256)"
                          }
                        },
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4004:31:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4037:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 783,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "3980:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3993:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4756,
                      "src": "3980:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3980:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3964:81:4"
                },
                {
                  "assignments": [
                    793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "rETHtoRedeem",
                      "nameLocation": "4060:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 841,
                      "src": "4055:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 792,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4055:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 801,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4095:7:4",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 797,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "4104:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                              "typeString": "contract ozIDiamond"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4107:8:4",
                          "memberName": "rETH_USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4346,
                          "src": "4104:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4104:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 794,
                        "name": "usdValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4075:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4084:10:4",
                      "memberName": "mulDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4756,
                      "src": "4075:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4075:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4055:63:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 802,
                      "name": "tokenOut_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "4133:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 803,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "4146:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4148:4:4",
                      "memberName": "rETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "4146:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4133:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 825,
                  "nodeType": "IfStatement",
                  "src": "4129:190:4",
                  "trueBody": {
                    "id": 824,
                    "nodeType": "Block",
                    "src": "4154:165:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 806,
                            "name": "rETHtoRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "4172:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 807,
                              "name": "minAmountsOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 726,
                              "src": "4187:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 809,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4202:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4187:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4172:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 815,
                        "nodeType": "IfStatement",
                        "src": "4168:68:4",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 812,
                                "name": "rETHtoRedeem",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 793,
                                "src": "4223:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 811,
                              "name": "OZError19",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "4213:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4213:23:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 814,
                          "nodeType": "RevertStatement",
                          "src": "4206:30:4"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 818,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "4276:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                                  "typeString": "struct TradingPackage memory"
                                }
                              },
                              "id": 819,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4278:4:4",
                              "memberName": "rETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 97,
                              "src": "4276:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 820,
                              "name": "receiver_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 719,
                              "src": "4284:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 821,
                              "name": "rETHtoRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "4295:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 816,
                              "name": "TradingLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6639,
                              "src": "4257:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradingLib_$6639_$",
                                "typeString": "type(library TradingLib)"
                              }
                            },
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4268:7:4",
                            "memberName": "sendLSD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6575,
                            "src": "4257:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) returns (uint256)"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4257:51:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 730,
                        "id": 823,
                        "nodeType": "Return",
                        "src": "4250:58:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 828,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "4368:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        }
                      },
                      {
                        "id": 829,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "4383:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 830,
                        "name": "tokenOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "4403:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 831,
                        "name": "receiver_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "4426:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 834,
                            "name": "OZ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "4457:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                              "typeString": "contract ozIDiamond"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                              "typeString": "contract ozIDiamond"
                            }
                          ],
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4449:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 832,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4449:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4449:11:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 836,
                        "name": "ozlAmountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "4474:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 837,
                        "name": "rETHtoRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "4500:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 838,
                        "name": "minAmountsOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "4526:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradingPackage_$100_memory_ptr",
                          "typeString": "struct TradingPackage memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 826,
                        "name": "TradingLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6639,
                        "src": "4336:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradingLib_$6639_$",
                          "typeString": "type(library TradingLib)"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4347:6:4",
                      "memberName": "useOZL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6201,
                      "src": "4336:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TradingPackage_$100_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct TradingPackage memory,address,address,address,address,uint256,uint256,uint256[] memory) returns (uint256)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:214:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 730,
                  "id": 840,
                  "nodeType": "Return",
                  "src": "4329:221:4"
                }
              ]
            },
            "functionSelector": "6afa0287",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "3099:6:4",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "3123:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "3115:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "receiver_",
                  "nameLocation": "3147:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "3139:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "tokenOut_",
                  "nameLocation": "3174:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "3166:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "ozlAmountIn_",
                  "nameLocation": "3201:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "3193:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "minAmountsOut_",
                  "nameLocation": "3237:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "3223:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 724,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3223:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 725,
                    "nodeType": "ArrayTypeName",
                    "src": "3223:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3105:152:4"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3280:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "3275:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3274:16:4"
            },
            "scope": 869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 853,
            "nodeType": "FunctionDefinition",
            "src": "4655:112:4",
            "nodes": [],
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "4710:57:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 847,
                          "name": "getOZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "4727:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ozIDiamond_$4459_$",
                            "typeString": "function () view returns (contract ozIDiamond)"
                          }
                        },
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4727:7:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4735:23:4",
                      "memberName": "getOZLCirculatingSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4430,
                      "src": "4727:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4727:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 846,
                  "id": 851,
                  "nodeType": "Return",
                  "src": "4720:40:4"
                }
              ]
            },
            "functionSelector": "9358928b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "circulatingSupply",
            "nameLocation": "4664:17:4",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4681:2:4"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "4704:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4703:6:4"
            },
            "scope": 869,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 868,
            "nodeType": "FunctionDefinition",
            "src": "4773:135:4",
            "nodes": [],
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "4822:86:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 862,
                              "name": "_OZ_DIAMOND_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "4877:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 860,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42056,
                              "src": "4850:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$42056_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4862:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41978,
                            "src": "4850:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$41952_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4850:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$41952_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4895:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41951,
                        "src": "4850:50:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 859,
                      "name": "ozIDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4459,
                      "src": "4839:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$4459_$",
                        "typeString": "type(contract ozIDiamond)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4839:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "functionReturnParameters": 858,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "4832:69:4"
                }
              ]
            },
            "functionSelector": "59c64e12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOZ",
            "nameLocation": "4782:5:4",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4787:2:4"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "4810:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                    "typeString": "contract ozIDiamond"
                  },
                  "typeName": {
                    "id": 856,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 855,
                      "name": "ozIDiamond",
                      "nameLocations": [
                        "4810:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4459,
                      "src": "4810:10:4"
                    },
                    "referencedDeclaration": 4459,
                    "src": "4810:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ozIDiamond_$4459",
                      "typeString": "contract ozIDiamond"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4809:12:4"
            },
            "scope": 869,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 493,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "919:16:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37448,
              "src": "919:16:4"
            },
            "id": 494,
            "nodeType": "InheritanceSpecifier",
            "src": "919:16:4"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          869,
          37448,
          38149,
          37526,
          38751,
          36774
        ],
        "name": "OZL",
        "nameLocation": "912:3:4",
        "scope": 870,
        "usedErrors": [
          299,
          301,
          305,
          371,
          375,
          377,
          381
        ],
        "usedEvents": [
          36638,
          37460,
          37469
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 4
}