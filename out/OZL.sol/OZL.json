{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewards",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610d3a806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b806339509351146101535780634cd88b761461016657806370a082311461017957600080fd5b80630572b0cc146100d457806306fdde03146100de578063095ea7b3146100fc57806318160ddd1461011f57806323b872dd14610131578063313ce56714610144575b600080fd5b6100dc6101e3565b005b6100e661020d565b6040516100f39190610924565b60405180910390f35b61010f61010a36600461098e565b61029f565b60405190151581526020016100f3565b6035545b6040519081526020016100f3565b61010f61013f3660046109b8565b6102b9565b604051601281526020016100f3565b61010f61016136600461098e565b6102dd565b6100dc610174366004610a97565b6102ff565b610123610187366004610afb565b6001600160a01b031660009081526033602052604090205490565b6100e6610419565b61010f6101b836600461098e565b610428565b61010f6101cb36600461098e565b6104a3565b6101236101de366004610b1d565b6104b1565b61020b6040518060400160405280600781526020016668656c6c6f6f6f60c81b8152506104dc565b565b60606036805461021c90610b50565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610b50565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b5050505050905090565b6000336102ad818585610522565b60019150505b92915050565b6000336102c7858285610646565b6102d28585856106c0565b506001949350505050565b6000336102ad8185856102f083836104b1565b6102fa9190610b8a565b610522565b600054610100900460ff161580801561031f5750600054600160ff909116105b806103395750303b158015610339575060005460ff166001145b6103a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103c4576000805461ff0019166101001790555b6103ce838361088e565b8015610414576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60606037805461021c90610b50565b6000338161043682866104b1565b9050838110156104965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610398565b6102d28286868403610522565b6000336102ad8185856106c0565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61051f816040516024016104f09190610924565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526108c3565b50565b6001600160a01b0383166105845760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610398565b6001600160a01b0382166105e55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610398565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061065284846104b1565b905060001981146106ba57818110156106ad5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610398565b6106ba8484848403610522565b50505050565b6001600160a01b0383166107245760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610398565b6001600160a01b0382166107865760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610398565b6001600160a01b038316600090815260336020526040902054818110156107fe5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610398565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610835908490610b8a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088191815260200190565b60405180910390a36106ba565b600054610100900460ff166108b55760405162461bcd60e51b815260040161039890610bab565b6108bf82826108e4565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff1661090b5760405162461bcd60e51b815260040161039890610bab565b60366109178382610c44565b5060376104148282610c44565b600060208083528351808285015260005b8181101561095157858101830151858201604001528201610935565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461098957600080fd5b919050565b600080604083850312156109a157600080fd5b6109aa83610972565b946020939093013593505050565b6000806000606084860312156109cd57600080fd5b6109d684610972565b92506109e460208501610972565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a1b57600080fd5b813567ffffffffffffffff80821115610a3657610a366109f4565b604051601f8301601f19908116603f01168101908282118183101715610a5e57610a5e6109f4565b81604052838152866020858801011115610a7757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610aaa57600080fd5b823567ffffffffffffffff80821115610ac257600080fd5b610ace86838701610a0a565b93506020850135915080821115610ae457600080fd5b50610af185828601610a0a565b9150509250929050565b600060208284031215610b0d57600080fd5b610b1682610972565b9392505050565b60008060408385031215610b3057600080fd5b610b3983610972565b9150610b4760208401610972565b90509250929050565b600181811c90821680610b6457607f821691505b602082108103610b8457634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102b357634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561041457600081815260208120601f850160051c81016020861015610c1d5750805b601f850160051c820191505b81811015610c3c57828155600101610c29565b505050505050565b815167ffffffffffffffff811115610c5e57610c5e6109f4565b610c7281610c6c8454610b50565b84610bf6565b602080601f831160018114610ca75760008415610c8f5750858301515b600019600386901b1c1916600185901b178555610c3c565b600085815260208120601f198616915b82811015610cd657888601518255948401946001909101908401610cb7565b5085821015610cf45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f402fccdb71913e3031e678b0b9138aac19e19d6484769e0b4552351d28a1e0964736f6c63430008150033",
    "sourceMap": "215:337:3:-:0;;;255:53;;;;;;;;;-1:-1:-1;279:22:3;:20;:22::i;:::-;215:337;;5388:279:52;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:52;;216:2:104;5447:66:52;;;198:21:104;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:104;;;338:37;392:19;;5447:66:52;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:52;5588:15;5573:30;;;;;;5622:28;;564:36:104;;;5622:28:52;;552:2:104;537:18;5622:28:52;;;;;;;5523:138;5388:279::o;422:184:104:-;215:337:3;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b806339509351146101535780634cd88b761461016657806370a082311461017957600080fd5b80630572b0cc146100d457806306fdde03146100de578063095ea7b3146100fc57806318160ddd1461011f57806323b872dd14610131578063313ce56714610144575b600080fd5b6100dc6101e3565b005b6100e661020d565b6040516100f39190610924565b60405180910390f35b61010f61010a36600461098e565b61029f565b60405190151581526020016100f3565b6035545b6040519081526020016100f3565b61010f61013f3660046109b8565b6102b9565b604051601281526020016100f3565b61010f61016136600461098e565b6102dd565b6100dc610174366004610a97565b6102ff565b610123610187366004610afb565b6001600160a01b031660009081526033602052604090205490565b6100e6610419565b61010f6101b836600461098e565b610428565b61010f6101cb36600461098e565b6104a3565b6101236101de366004610b1d565b6104b1565b61020b6040518060400160405280600781526020016668656c6c6f6f6f60c81b8152506104dc565b565b60606036805461021c90610b50565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610b50565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b5050505050905090565b6000336102ad818585610522565b60019150505b92915050565b6000336102c7858285610646565b6102d28585856106c0565b506001949350505050565b6000336102ad8185856102f083836104b1565b6102fa9190610b8a565b610522565b600054610100900460ff161580801561031f5750600054600160ff909116105b806103395750303b158015610339575060005460ff166001145b6103a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103c4576000805461ff0019166101001790555b6103ce838361088e565b8015610414576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60606037805461021c90610b50565b6000338161043682866104b1565b9050838110156104965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610398565b6102d28286868403610522565b6000336102ad8185856106c0565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61051f816040516024016104f09190610924565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526108c3565b50565b6001600160a01b0383166105845760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610398565b6001600160a01b0382166105e55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610398565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061065284846104b1565b905060001981146106ba57818110156106ad5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610398565b6106ba8484848403610522565b50505050565b6001600160a01b0383166107245760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610398565b6001600160a01b0382166107865760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610398565b6001600160a01b038316600090815260336020526040902054818110156107fe5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610398565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610835908490610b8a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088191815260200190565b60405180910390a36106ba565b600054610100900460ff166108b55760405162461bcd60e51b815260040161039890610bab565b6108bf82826108e4565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff1661090b5760405162461bcd60e51b815260040161039890610bab565b60366109178382610c44565b5060376104148282610c44565b600060208083528351808285015260005b8181101561095157858101830151858201604001528201610935565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461098957600080fd5b919050565b600080604083850312156109a157600080fd5b6109aa83610972565b946020939093013593505050565b6000806000606084860312156109cd57600080fd5b6109d684610972565b92506109e460208501610972565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a1b57600080fd5b813567ffffffffffffffff80821115610a3657610a366109f4565b604051601f8301601f19908116603f01168101908282118183101715610a5e57610a5e6109f4565b81604052838152866020858801011115610a7757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610aaa57600080fd5b823567ffffffffffffffff80821115610ac257600080fd5b610ace86838701610a0a565b93506020850135915080821115610ae457600080fd5b50610af185828601610a0a565b9150509250929050565b600060208284031215610b0d57600080fd5b610b1682610972565b9392505050565b60008060408385031215610b3057600080fd5b610b3983610972565b9150610b4760208401610972565b90509250929050565b600181811c90821680610b6457607f821691505b602082108103610b8457634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102b357634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561041457600081815260208120601f850160051c81016020861015610c1d5750805b601f850160051c820191505b81811015610c3c57828155600101610c29565b505050505050565b815167ffffffffffffffff811115610c5e57610c5e6109f4565b610c7281610c6c8454610b50565b84610bf6565b602080601f831160018114610ca75760008415610c8f5750858301515b600019600386901b1c1916600185901b178555610c3c565b600085815260208120601f198616915b82811015610cd657888601518255948401946001909101908401610cb7565b5085821015610cf45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f402fccdb71913e3031e678b0b9138aac19e19d6484769e0b4552351d28a1e0964736f6c63430008150033",
    "sourceMap": "215:337:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:73;;;:::i;:::-;;2493:98:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:104;;1162:22;1144:41;;1132:2;1117:18;4770:197:53;1004:187:104;3581:106:53;3668:12;;3581:106;;;1342:25:104;;;1330:2;1315:18;3581:106:53;1196:177:104;5529:286:53;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;1853:36:104;;1841:2;1826:18;3430:91:53;1711:184:104;6210:234:53;;;;;;:::i;:::-;;:::i;315:153:3:-;;;;;;:::i;:::-;;:::i;3745:125:53:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:53;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;;:::i;475:73:3:-;519:22;;;;;;;;;;;;;;-1:-1:-1;;;519:22:3;;;:11;:22::i;:::-;475:73::o;2493:98:53:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:60;4907:32:53;929:10:60;4923:7:53;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:60;5712:38:53;5728:4;929:10:60;5743:6:53;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:53;;5529:286;-1:-1:-1;;;;5529:286:53:o;6210:234::-;6298:4;929:10:60;6352:64:53;929:10:60;6368:7:53;6405:10;6377:25;929:10:60;6368:7:53;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;315:153:3:-;3111:19:52;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:52;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:52;1476:19:59;:23;;;3219:66:52;;-1:-1:-1;3268:12:52;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:52;;4574:2:104;3157:201:52;;;4556:21:104;4613:2;4593:18;;;4586:30;4652:34;4632:18;;;4625:62;-1:-1:-1;;;4703:18:104;;;4696:44;4757:19;;3157:201:52;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:52;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:52;;;;;3394:65;433:28:3::1;446:5;453:7;433:12;:28::i;:::-;3483:14:52::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:52;;;3553:14;;-1:-1:-1;1853:36:104;;3553:14:52;;1841:2:104;1826:18;3553:14:52;;;;;;;3479:99;3101:483;315:153:3;;:::o;2704:102:53:-;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:60;7024:4:53;7105:25;929:10:60;7122:7:53;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:53;;5188:2:104;7140:85:53;;;5170:21:104;5227:2;5207:18;;;5200:30;5266:34;5246:18;;;5239:62;-1:-1:-1;;;5317:18:104;;;5310:35;5362:19;;7140:85:53;4986:401:104;7140:85:53;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;4066:189::-;4145:4;929:10:60;4199:28:53;929:10:60;4216:2:53;4220:6;4199:9;:28::i;4313:149::-;-1:-1:-1;;;;;4428:18:53;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;5630:121:47:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:47;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:47;-1:-1:-1;;;5701:42:47;;;5685:15;:59::i;:::-;5630:121;:::o;10447:370:53:-;-1:-1:-1;;;;;10578:19:53;;10570:68;;;;-1:-1:-1;;;10570:68:53;;5594:2:104;10570:68:53;;;5576:21:104;5633:2;5613:18;;;5606:30;5672:34;5652:18;;;5645:62;-1:-1:-1;;;5723:18:104;;;5716:34;5767:19;;10570:68:53;5392:400:104;10570:68:53;-1:-1:-1;;;;;10656:21:53;;10648:68;;;;-1:-1:-1;;;10648:68:53;;5999:2:104;10648:68:53;;;5981:21:104;6038:2;6018:18;;;6011:30;6077:34;6057:18;;;6050:62;-1:-1:-1;;;6128:18:104;;;6121:32;6170:19;;10648:68:53;5797:398:104;10648:68:53;-1:-1:-1;;;;;10727:18:53;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1342:25:104;;;10778:32:53;;1315:18:104;10778:32:53;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:53;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:53;;6402:2:104;11347:68:53;;;6384:21:104;6441:2;6421:18;;;6414:30;6480:31;6460:18;;;6453:59;6529:18;;11347:68:53;6200:353:104;11347:68:53;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:53;;7930:68;;;;-1:-1:-1;;;7930:68:53;;6760:2:104;7930:68:53;;;6742:21:104;6799:2;6779:18;;;6772:30;6838:34;6818:18;;;6811:62;-1:-1:-1;;;6889:18:104;;;6882:35;6934:19;;7930:68:53;6558:401:104;7930:68:53;-1:-1:-1;;;;;8016:16:53;;8008:64;;;;-1:-1:-1;;;8008:64:53;;7166:2:104;8008:64:53;;;7148:21:104;7205:2;7185:18;;;7178:30;7244:34;7224:18;;;7217:62;-1:-1:-1;;;7295:18:104;;;7288:33;7338:19;;8008:64:53;6964:399:104;8008:64:53;-1:-1:-1;;;;;8154:15:53;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:53;;7570:2:104;8179:72:53;;;7552:21:104;7609:2;7589:18;;;7582:30;7648:34;7628:18;;;7621:62;-1:-1:-1;;;7699:18:104;;;7692:36;7745:19;;8179:72:53;7368:402:104;8179:72:53;-1:-1:-1;;;;;8285:15:53;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:53;8391:4;-1:-1:-1;;;;;8382:26:53;;8401:6;8382:26;;;;1342:25:104;;1330:2;1315:18;;1196:177;8382:26:53;;;;;;;;8419:37;315:153:3;2116:147:53;4910:13:52;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:52;;;;;;;:::i;:::-;2218:38:53::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;181:376:47:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2269:159:53:-;4910:13:52;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:52;;;;;;;:::i;:::-;2381:5:53::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:53::1;:17;2414:7:::0;2404;:17:::1;:::i;14:548:104:-:0;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:104;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:104:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:127::-;1961:10;1956:3;1952:20;1949:1;1942:31;1992:4;1989:1;1982:15;2016:4;2013:1;2006:15;2032:719;2075:5;2128:3;2121:4;2113:6;2109:17;2105:27;2095:55;;2146:1;2143;2136:12;2095:55;2182:6;2169:20;2208:18;2245:2;2241;2238:10;2235:36;;;2251:18;;:::i;:::-;2326:2;2320:9;2294:2;2380:13;;-1:-1:-1;;2376:22:104;;;2400:2;2372:31;2368:40;2356:53;;;2424:18;;;2444:22;;;2421:46;2418:72;;;2470:18;;:::i;:::-;2510:10;2506:2;2499:22;2545:2;2537:6;2530:18;2591:3;2584:4;2579:2;2571:6;2567:15;2563:26;2560:35;2557:55;;;2608:1;2605;2598:12;2557:55;2672:2;2665:4;2657:6;2653:17;2646:4;2638:6;2634:17;2621:54;2719:1;2712:4;2707:2;2699:6;2695:15;2691:26;2684:37;2739:6;2730:15;;;;;;2032:719;;;;:::o;2756:543::-;2844:6;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;2961:9;2948:23;2990:18;3031:2;3023:6;3020:14;3017:34;;;3047:1;3044;3037:12;3017:34;3070:50;3112:7;3103:6;3092:9;3088:22;3070:50;:::i;:::-;3060:60;;3173:2;3162:9;3158:18;3145:32;3129:48;;3202:2;3192:8;3189:16;3186:36;;;3218:1;3215;3208:12;3186:36;;3241:52;3285:7;3274:8;3263:9;3259:24;3241:52;:::i;:::-;3231:62;;;2756:543;;;;;:::o;3304:186::-;3363:6;3416:2;3404:9;3395:7;3391:23;3387:32;3384:52;;;3432:1;3429;3422:12;3384:52;3455:29;3474:9;3455:29;:::i;:::-;3445:39;3304:186;-1:-1:-1;;;3304:186:104:o;3495:260::-;3563:6;3571;3624:2;3612:9;3603:7;3599:23;3595:32;3592:52;;;3640:1;3637;3630:12;3592:52;3663:29;3682:9;3663:29;:::i;:::-;3653:39;;3711:38;3745:2;3734:9;3730:18;3711:38;:::i;:::-;3701:48;;3495:260;;;;;:::o;3760:380::-;3839:1;3835:12;;;;3882;;;3903:61;;3957:4;3949:6;3945:17;3935:27;;3903:61;4010:2;4002:6;3999:14;3979:18;3976:38;3973:161;;4056:10;4051:3;4047:20;4044:1;4037:31;4091:4;4088:1;4081:15;4119:4;4116:1;4109:15;3973:161;;3760:380;;;:::o;4145:222::-;4210:9;;;4231:10;;;4228:133;;;4283:10;4278:3;4274:20;4271:1;4264:31;4318:4;4315:1;4308:15;4346:4;4343:1;4336:15;7775:407;7977:2;7959:21;;;8016:2;7996:18;;;7989:30;8055:34;8050:2;8035:18;;8028:62;-1:-1:-1;;;8121:2:104;8106:18;;8099:41;8172:3;8157:19;;7775:407::o;8313:545::-;8415:2;8410:3;8407:11;8404:448;;;8451:1;8476:5;8472:2;8465:17;8521:4;8517:2;8507:19;8591:2;8579:10;8575:19;8572:1;8568:27;8562:4;8558:38;8627:4;8615:10;8612:20;8609:47;;;-1:-1:-1;8650:4:104;8609:47;8705:2;8700:3;8696:12;8693:1;8689:20;8683:4;8679:31;8669:41;;8760:82;8778:2;8771:5;8768:13;8760:82;;;8823:17;;;8804:1;8793:13;8760:82;;;8764:3;;;8313:545;;;:::o;9034:1352::-;9160:3;9154:10;9187:18;9179:6;9176:30;9173:56;;;9209:18;;:::i;:::-;9238:97;9328:6;9288:38;9320:4;9314:11;9288:38;:::i;:::-;9282:4;9238:97;:::i;:::-;9390:4;;9454:2;9443:14;;9471:1;9466:663;;;;10173:1;10190:6;10187:89;;;-1:-1:-1;10242:19:104;;;10236:26;10187:89;-1:-1:-1;;8991:1:104;8987:11;;;8983:24;8979:29;8969:40;9015:1;9011:11;;;8966:57;10289:81;;9436:944;;9466:663;8260:1;8253:14;;;8297:4;8284:18;;-1:-1:-1;;9502:20:104;;;9620:236;9634:7;9631:1;9628:14;9620:236;;;9723:19;;;9717:26;9702:42;;9815:27;;;;9783:1;9771:14;;;;9650:19;;9620:236;;;9624:3;9884:6;9875:7;9872:19;9869:201;;;9945:19;;;9939:26;-1:-1:-1;;10028:1:104;10024:14;;;10040:3;10020:24;10016:37;10012:42;9997:58;9982:74;;9869:201;-1:-1:-1;;;;;10116:1:104;10100:14;;;10096:22;10083:36;;-1:-1:-1;9034:1352:104:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getRewards()": "0572b0cc",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string)": "4cd88b76",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewards\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZL.sol\":\"OZL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/OZL.sol\":{\"keccak256\":\"0x352627a161b270695ed3c725ce07e4910c60aeea8fef3fb5f4c44e56ff3f2494\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://eef967e5e19b0401372eaa4fbc36d006a5e67ec8587392081df0839911a917bf\",\"dweb:/ipfs/QmbZ4YshcQK9swJDF6J5gRKZhPamTpsVvVbdW6yrJcNkRf\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/OZL.sol": "OZL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/OZL.sol": {
        "keccak256": "0x352627a161b270695ed3c725ce07e4910c60aeea8fef3fb5f4c44e56ff3f2494",
        "urls": [
          "bzz-raw://eef967e5e19b0401372eaa4fbc36d006a5e67ec8587392081df0839911a917bf",
          "dweb:/ipfs/QmbZ4YshcQK9swJDF6J5gRKZhPamTpsVvVbdW6yrJcNkRf"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/OZL.sol",
    "id": 342,
    "exportedSymbols": {
      "ERC20Upgradeable": [
        35085
      ],
      "OZL": [
        341
      ],
      "console": [
        25850
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:507:3",
    "nodes": [
      {
        "id": 303,
        "nodeType": "PragmaDirective",
        "src": "45:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 305,
        "nodeType": "ImportDirective",
        "src": "71:108:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable-4.7.3/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 342,
        "sourceUnit": 35086,
        "symbolAliases": [
          {
            "foreign": {
              "id": 304,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35085,
              "src": "79:16:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 306,
        "nodeType": "ImportDirective",
        "src": "181:31:3",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 342,
        "sourceUnit": 25851,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 341,
        "nodeType": "ContractDefinition",
        "src": "215:337:3",
        "nodes": [
          {
            "id": 315,
            "nodeType": "FunctionDefinition",
            "src": "255:53:3",
            "nodes": [],
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "269:39:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 311,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34473,
                      "src": "279:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "279:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "279:22:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:2:3"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:3"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 330,
            "nodeType": "FunctionDefinition",
            "src": "315:153:3",
            "nodes": [],
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "423:45:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "446:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 326,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "453:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 324,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34521,
                      "src": "433:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "433:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "433:28:3"
                }
              ]
            },
            "functionSelector": "4cd88b76",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 321,
                  "name": "initializer",
                  "nameLocations": [
                    "411:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34394,
                  "src": "411:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "411:11:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "324:10:3",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "358:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "344:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "388:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "374:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "334:67:3"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:3"
            },
            "scope": 341,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 340,
            "nodeType": "FunctionDefinition",
            "src": "475:73:3",
            "nodes": [],
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "509:39:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68656c6c6f6f6f",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "531:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74355be75903345962ef44cf48e840b195c6de65c8d0703515ef628aa3b15171",
                          "typeString": "literal_string \"hellooo\""
                        },
                        "value": "hellooo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_74355be75903345962ef44cf48e840b195c6de65c8d0703515ef628aa3b15171",
                          "typeString": "literal_string \"hellooo\""
                        }
                      ],
                      "expression": {
                        "id": 333,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25850,
                        "src": "519:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$25850_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "527:3:3",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18381,
                      "src": "519:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "519:22:3"
                }
              ]
            },
            "functionSelector": "0572b0cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewards",
            "nameLocation": "484:10:3",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:3"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:3"
            },
            "scope": 341,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 307,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "231:16:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35085,
              "src": "231:16:3"
            },
            "id": 308,
            "nodeType": "InheritanceSpecifier",
            "src": "231:16:3"
          }
        ],
        "canonicalName": "OZL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          341,
          35085,
          35786,
          35163,
          36388,
          34474
        ],
        "name": "OZL",
        "nameLocation": "224:3:3",
        "scope": 342,
        "usedErrors": [],
        "usedEvents": [
          34338,
          35097,
          35106
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 3
}