{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2505fe1a21bcb7da5a88717ae198fb7264f0c16672466abf148faccae8732bb64736f6c63430008150033","sourceMap":"486:52261:38:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;486:52261:38;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2505fe1a21bcb7da5a88717ae198fb7264f0c16672466abf148faccae8732bb64736f6c63430008150033","sourceMap":"486:52261:38:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library of mathematical functions operating with IEEE 754 quadruple-precision binary floating-point numbers (quadruple precision numbers).  As long as quadruple precision numbers are 16-bytes long, they are represented by bytes16 type.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ABDKMathQuad.sol\":\"ABDKMathQuad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/libraries/ABDKMathQuad.sol\":{\"keccak256\":\"0x6b2ee2f605e2e60d684cd0690cd1314a8762423741cc2f80655e17e249e7194b\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://01201cfa26a4b3f82bb84dd65e0e90ead59b4f3e2d03ee2f9b351a2d41f17cb4\",\"dweb:/ipfs/QmbsF5oiAkLcuSuD9MzGnKArvAjNknGqN5w8uLa66WDHKS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@ensdomains/=node_modules/@ensdomains/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@prb/test/=lib/unchecked-counter/lib/prb-test/src/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","prb-test/=lib/unchecked-counter/lib/prb-test/src/","solady/=node_modules/solady/","src/=lib/unchecked-counter/src/","unchecked-counter/=lib/unchecked-counter/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/libraries/ABDKMathQuad.sol":"ABDKMathQuad"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/libraries/ABDKMathQuad.sol":{"keccak256":"0x6b2ee2f605e2e60d684cd0690cd1314a8762423741cc2f80655e17e249e7194b","urls":["bzz-raw://01201cfa26a4b3f82bb84dd65e0e90ead59b4f3e2d03ee2f9b351a2d41f17cb4","dweb:/ipfs/QmbsF5oiAkLcuSuD9MzGnKArvAjNknGqN5w8uLa66WDHKS"],"license":"BSD-4-Clause"}},"version":1},"id":38}