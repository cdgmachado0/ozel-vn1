{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        }
      ],
      "name": "TokenNotInRegistry",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "createOzToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610112806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063283f64ad14602d575b600080fd5b603c603836600460a6565b6058565b6040516001600160a01b03909116815260200160405180910390f35b6001600160a01b0382166000908152603e602052604081205460ff16609f576040516370f07e8560e01b81526001600160a01b038416600482015260240160405180910390fd5b5090919050565b6000806040838503121560b857600080fd5b82356001600160a01b038116811460ce57600080fd5b94602093909301359350505056fea264697066735822122084fc6bc6e041b39b400009d1963e434b40979ba6fcdbeb7dbaaf6b7bab89ea7964736f6c63430008150033",
    "sourceMap": "237:311:6:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063283f64ad14602d575b600080fd5b603c603836600460a6565b6058565b6040516001600160a01b03909116815260200160405180910390f35b6001600160a01b0382166000908152603e602052604081205460ff16609f576040516370f07e8560e01b81526001600160a01b038416600482015260240160405180910390fd5b5090919050565b6000806040838503121560b857600080fd5b82356001600160a01b038116811460ce57600080fd5b94602093909301359350505056fea264697066735822122084fc6bc6e041b39b400009d1963e434b40979ba6fcdbeb7dbaaf6b7bab89ea7964736f6c63430008150033",
    "sourceMap": "237:311:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;324:221;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;537:32:40;;;519:51;;507:2;492:18;324:221:6;;;;;;;;-1:-1:-1;;;;;453:25:6;;399:7;453:25;;;:17;:25;;;;;;;;448:65;;487:26;;-1:-1:-1;;;487:26:6;;-1:-1:-1;;;;;537:32:40;;487:26:6;;;519:51:40;492:18;;487:26:6;;;;;;;448:65;-1:-1:-1;531:6:6;;324:221;-1:-1:-1;324:221:6:o;14:354:40:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:40;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;358:2;343:18;;;;330:32;;-1:-1:-1;;;14:354:40:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createOzToken(address,uint256)": "283f64ad"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"TokenNotInRegistry\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"createOzToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/ozTokenFactory.sol\":\"ozTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0xcc5038d3f0a50363391da101e8d8db35bc4404ecc2b2e1c7f563c08f68ecff8e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bc490ebdf24bf50bdca4c474a2d183d46d646c67e7162d407573531932d9d5af\",\"dweb:/ipfs/QmV1HUiu554WvG4quh5BBhqdm4yLdbJrQXMoKb7zyc1W37\"]},\"contracts/facets/ozTokenFactory.sol\":{\"keccak256\":\"0xee876bff1053ca050be0837b9fdf26ea1be54468e0253e9d5a3bef3f23e53228\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3a78054154742ee6bbe6402d5a50a393414a714c3c4d61eb09666223107c3563\",\"dweb:/ipfs/QmRzYyiGGEP1J1GsnUz2PpYmKizMgLzoVJUNNwniGhefuW\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "erc20",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenNotInRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "erc20_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "createOzToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/facets/ozTokenFactory.sol": "ozTokenFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0xcc5038d3f0a50363391da101e8d8db35bc4404ecc2b2e1c7f563c08f68ecff8e",
        "urls": [
          "bzz-raw://bc490ebdf24bf50bdca4c474a2d183d46d646c67e7162d407573531932d9d5af",
          "dweb:/ipfs/QmV1HUiu554WvG4quh5BBhqdm4yLdbJrQXMoKb7zyc1W37"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozTokenFactory.sol": {
        "keccak256": "0xee876bff1053ca050be0837b9fdf26ea1be54468e0253e9d5a3bef3f23e53228",
        "urls": [
          "bzz-raw://3a78054154742ee6bbe6402d5a50a393414a714c3c4d61eb09666223107c3563",
          "dweb:/ipfs/QmRzYyiGGEP1J1GsnUz2PpYmKizMgLzoVJUNNwniGhefuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/facets/ozTokenFactory.sol",
    "id": 347,
    "exportedSymbols": {
      "AppStorage": [
        144
      ],
      "TokenNotInRegistry": [
        320
      ],
      "ozTokenFactory": [
        346
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:503:6",
    "nodes": [
      {
        "id": 314,
        "nodeType": "PragmaDirective",
        "src": "45:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 316,
        "nodeType": "ImportDirective",
        "src": "113:45:6",
        "nodes": [],
        "absolutePath": "contracts/AppStorage.sol",
        "file": "../AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 347,
        "sourceUnit": 188,
        "symbolAliases": [
          {
            "foreign": {
              "id": 315,
              "name": "AppStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 144,
              "src": "121:10:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 320,
        "nodeType": "ErrorDefinition",
        "src": "195:40:6",
        "nodes": [],
        "errorSelector": "70f07e85",
        "name": "TokenNotInRegistry",
        "nameLocation": "201:18:6",
        "parameters": {
          "id": 319,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 318,
              "mutability": "mutable",
              "name": "erc20",
              "nameLocation": "228:5:6",
              "nodeType": "VariableDeclaration",
              "scope": 320,
              "src": "220:13:6",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 317,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "220:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "219:15:6"
        }
      },
      {
        "id": 346,
        "nodeType": "ContractDefinition",
        "src": "237:311:6",
        "nodes": [
          {
            "id": 323,
            "nodeType": "VariableDeclaration",
            "src": "268:21:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s",
            "nameLocation": "288:1:6",
            "scope": 346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AppStorage_$144_storage",
              "typeString": "struct AppStorage"
            },
            "typeName": {
              "id": 322,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 321,
                "name": "AppStorage",
                "nameLocations": [
                  "268:10:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 144,
                "src": "268:10:6"
              },
              "referencedDeclaration": 144,
              "src": "268:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AppStorage_$144_storage_ptr",
                "typeString": "struct AppStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 345,
            "nodeType": "FunctionDefinition",
            "src": "324:221:6",
            "nodes": [],
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "408:137:6",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "452:26:6",
                    "subExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 332,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "453:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AppStorage_$144_storage",
                            "typeString": "struct AppStorage storage ref"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "455:15:6",
                        "memberName": "ozTokenRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 143,
                        "src": "453:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 335,
                      "indexExpression": {
                        "id": 334,
                        "name": "erc20_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "471:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "453:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 341,
                  "nodeType": "IfStatement",
                  "src": "448:65:6",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 338,
                          "name": "erc20_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "506:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 337,
                        "name": "TokenNotInRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "487:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "487:26:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 340,
                    "nodeType": "RevertStatement",
                    "src": "480:33:6"
                  }
                },
                {
                  "expression": {
                    "id": 342,
                    "name": "erc20_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 325,
                    "src": "531:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 331,
                  "id": 343,
                  "nodeType": "Return",
                  "src": "524:13:6"
                }
              ]
            },
            "functionSelector": "283f64ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createOzToken",
            "nameLocation": "333:13:6",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "erc20_",
                  "nameLocation": "355:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "347:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "368:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "363:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "346:30:6"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "399:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "398:9:6"
            },
            "scope": 346,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ozTokenFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          346
        ],
        "name": "ozTokenFactory",
        "nameLocation": "246:14:6",
        "scope": 347,
        "usedErrors": [
          320
        ],
        "usedEvents": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 6
}