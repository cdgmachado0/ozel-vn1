{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "querySwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "querySwap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool))": "e969f6b3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"querySwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IQueries.sol\":\"IQueries\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x2ddaabbf43e22f46a09ba0c0ce8413d9e0fb6b17adc9235243f95cffdc484699\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aea99cea23c96c570ea896959696a0d43de155b51fdd3c44c038dd961e95d8ee\",\"dweb:/ipfs/QmNVqewY4wYNHDKvyi2kmLpJpcWfteV7oQYyEH8o8LHiH9\"]},\"contracts/interfaces/IQueries.sol\":{\"keccak256\":\"0x71252b3d5bb0e12edf9ef6182340f7ab78e78a88212f86a0d2ef706f66c1e7dd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f9eef6a630bc57d17a6db66b4ddbeff3b7f7a895cdc46ece9a8c55159511346\",\"dweb:/ipfs/QmZiCchaDBZZMRSWAU772RpZFqRSnVt7wmjXrpQGJKNBGq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVault.SingleSwap",
              "name": "singleSwap",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum IVault.SwapKind",
                  "name": "kind",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetIn",
                  "type": "address"
                },
                {
                  "internalType": "contract IAsset",
                  "name": "assetOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "querySwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces/IQueries.sol": "IQueries"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x2ddaabbf43e22f46a09ba0c0ce8413d9e0fb6b17adc9235243f95cffdc484699",
        "urls": [
          "bzz-raw://aea99cea23c96c570ea896959696a0d43de155b51fdd3c44c038dd961e95d8ee",
          "dweb:/ipfs/QmNVqewY4wYNHDKvyi2kmLpJpcWfteV7oQYyEH8o8LHiH9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IQueries.sol": {
        "keccak256": "0x71252b3d5bb0e12edf9ef6182340f7ab78e78a88212f86a0d2ef706f66c1e7dd",
        "urls": [
          "bzz-raw://1f9eef6a630bc57d17a6db66b4ddbeff3b7f7a895cdc46ece9a8c55159511346",
          "dweb:/ipfs/QmZiCchaDBZZMRSWAU772RpZFqRSnVt7wmjXrpQGJKNBGq"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/IQueries.sol",
    "id": 1849,
    "exportedSymbols": {
      "IQueries": [
        1848
      ],
      "IVault": [
        1537
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:237:20",
    "nodes": [
      {
        "id": 1834,
        "nodeType": "PragmaDirective",
        "src": "45:23:20",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 1836,
        "nodeType": "ImportDirective",
        "src": "71:39:20",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IBalancer.sol",
        "file": "./IBalancer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1849,
        "sourceUnit": 1604,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1835,
              "name": "IVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1537,
              "src": "79:6:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1848,
        "nodeType": "ContractDefinition",
        "src": "113:169:20",
        "nodes": [
          {
            "id": 1847,
            "nodeType": "FunctionDefinition",
            "src": "138:142:20",
            "nodes": [],
            "functionSelector": "e969f6b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "querySwap",
            "nameLocation": "147:9:20",
            "parameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1839,
                  "mutability": "mutable",
                  "name": "singleSwap",
                  "nameLocation": "191:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "166:35:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleSwap_$1466_memory_ptr",
                    "typeString": "struct IVault.SingleSwap"
                  },
                  "typeName": {
                    "id": 1838,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1837,
                      "name": "IVault.SingleSwap",
                      "nameLocations": [
                        "166:6:20",
                        "173:10:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1466,
                      "src": "166:17:20"
                    },
                    "referencedDeclaration": 1466,
                    "src": "166:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleSwap_$1466_storage_ptr",
                      "typeString": "struct IVault.SingleSwap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1842,
                  "mutability": "mutable",
                  "name": "funds",
                  "nameLocation": "241:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "212:34:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FundManagement_$1475_memory_ptr",
                    "typeString": "struct IVault.FundManagement"
                  },
                  "typeName": {
                    "id": 1841,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1840,
                      "name": "IVault.FundManagement",
                      "nameLocations": [
                        "212:6:20",
                        "219:14:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1475,
                      "src": "212:21:20"
                    },
                    "referencedDeclaration": 1475,
                    "src": "212:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundManagement_$1475_storage_ptr",
                      "typeString": "struct IVault.FundManagement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:96:20"
            },
            "returnParameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "271:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "270:9:20"
            },
            "scope": 1848,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IQueries",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          1848
        ],
        "name": "IQueries",
        "nameLocation": "123:8:20",
        "scope": 1849,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 20
}