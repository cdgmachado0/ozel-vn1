{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_diamondCutFacet",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initializationContractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "InitializationFunctionReverted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "OZError27",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "circulatingSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingAllocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "recicledSupply",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "durationLeft",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "duration_",
          "type": "uint256"
        }
      ],
      "name": "setRewardsDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080604052604051620016f5380380620016f5833981016040819052620000269162001010565b620000318262000146565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620000485750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b81600081518110620000bb57620000bb62001048565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b03851681529081016000815260200182815250826000815181106200010e576200010e62001048565b60200260200101819052506200013c82600060405180602001604052806000815250620001ca60201b60201c565b50505050620012cc565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b0384811691821790935560405160008051602062001649833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b8351811015620003d6576000848281518110620001ee57620001ee62001048565b6020026020010151602001519050600060028111156200021257620002126200105e565b8160028111156200022757620002276200105e565b0362000285576200027f85838151811062000246576200024662001048565b60200260200101516000015186848151811062000267576200026762001048565b6020026020010151604001516200042560201b60201c565b620003c0565b60018160028111156200029c576200029c6200105e565b03620002f4576200027f858381518110620002bb57620002bb62001048565b602002602001015160000151868481518110620002dc57620002dc62001048565b602002602001015160400151620006b260201b60201c565b60028160028111156200030b576200030b6200105e565b0362000363576200027f8583815181106200032a576200032a62001048565b6020026020010151600001518684815181106200034b576200034b62001048565b6020026020010151604001516200094a60201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b5080620003cd816200108a565b915050620001cd565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516200040c93929190620010fa565b60405180910390a162000420828262000ab0565b505050565b60008151116200047b5760405162461bcd60e51b815260206004820152602b6024820152600080516020620016d583398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620003b7565b600080516020620016498339815191526001600160a01b038316620004e75760405162461bcd60e51b815260206004820152602c60248201526000805160206200169183398151915260448201526b65206164647265737328302960a01b6064820152608401620003b7565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003620005205762000520828562000b82565b60005b8351811015620006ab57600084828151811062000544576200054462001048565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620005ec5760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c72656164792065786973747300000000000000000000006064820152608401620003b7565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b03191617905583620006908162001201565b94505050508080620006a2906200108a565b91505062000523565b5050505050565b6000815111620007085760405162461bcd60e51b815260206004820152602b6024820152600080516020620016d583398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620003b7565b600080516020620016498339815191526001600160a01b038316620007745760405162461bcd60e51b815260206004820152602c60248201526000805160206200169183398151915260448201526b65206164647265737328302960a01b6064820152608401620003b7565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003620007ad57620007ad828562000b82565b60005b8351811015620006ab576000848281518110620007d157620007d162001048565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036200087e5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401620003b7565b6200088b85828462000bef565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836200092f8162001201565b9450505050808062000941906200108a565b915050620007b0565b6000815111620009a05760405162461bcd60e51b815260206004820152602b6024820152600080516020620016d583398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620003b7565b600080516020620016498339815191526001600160a01b0383161562000a2f5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d7573742062652061646472657373283029000000000000000000006064820152608401620003b7565b60005b825181101562000aaa57600083828151811062000a535762000a5362001048565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031662000a9284828462000bef565b5050808062000aa1906200108a565b91505062000a32565b50505050565b6001600160a01b03821662000ac3575050565b62000ae882604051806060016040528060288152602001620016696028913962000fcf565b600080836001600160a01b03168360405162000b05919062001232565b600060405180830381855af49150503d806000811462000b42576040519150601f19603f3d011682016040523d82523d6000602084013e62000b47565b606091505b50915091508162000aaa5780511562000b635780518082602001fd5b838360405163192105d760e01b8152600401620003b792919062001250565b62000ba781604051806060016040528060248152602001620016b16024913962000fcf565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b03821662000c6d5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401620003b7565b306001600160a01b0383160362000cde5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608401620003b7565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929162000d2f916200127e565b905080821462000e28576001600160a01b0384166000908152600186016020526040812080548390811062000d685762000d6862001048565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000dbc5762000dbc62001048565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384166000908152600186016020526040902080548062000e545762000e546200129a565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003620006ab57600285015460009062000eba906001906200127e565b6001600160a01b038616600090815260018089016020526040909120015490915080821462000f7057600087600201838154811062000efd5762000efd62001048565b6000918252602090912001546002890180546001600160a01b03909216925082918490811062000f315762000f3162001048565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b8660020180548062000f865762000f866200129a565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b818162000aaa5760405162461bcd60e51b8152600401620003b79190620012b0565b80516001600160a01b03811681146200100b57600080fd5b919050565b600080604083850312156200102457600080fd5b6200102f8362000ff3565b91506200103f6020840162000ff3565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200109f576200109f62001074565b5060010190565b60005b83811015620010c3578181015183820152602001620010a9565b50506000910152565b60008151808452620010e6816020860160208601620010a6565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015620011cf57898403607f19018652815180516001600160a01b031685528381015189860190600381106200116b57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015620011b95783516001600160e01b03191682529286019260019290920191908601906200118d565b5097850197955050509082019060010162001123565b50506001600160a01b038a16908801528681036040880152620011f38189620010cc565b9a9950505050505050505050565b60006001600160601b038281166002600160601b0319810162001228576200122862001074565b6001019392505050565b6000825162001246818460208701620010a6565b9190910192915050565b6001600160a01b03831681526040602082018190526000906200127690830184620010cc565b949350505050565b8181038181111562001294576200129462001074565b92915050565b634e487b7160e01b600052603160045260246000fd5b602081526000620012c56020830184620010cc565b9392505050565b61036d80620012dc6000396000f3fe6080604052600436106100735760003560e01c806380faa57d1161004e57806380faa57d14610251578063b88a802f14610251578063cc1a378f146101f9578063cd3daf9d146102515761007a565b80628cc262146101c55780633c6b16ab146101f95780637d098e64146102175761007a565b3661007a57005b61008660276000610265565b1561010b5760005b6028546100a19060019061ffff166102a0565b61ffff16811015610109576100c26100ba8260016102c2565b602790610265565b156100f7576100d28160016102c2565b6040516351f3013160e01b81526004016100ee91815260200190565b60405180910390fd5b80610101816102d5565b91505061008e565b505b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b03168061019f5760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064016100ee565b3660008037600080366000845af43d6000803e8080156101be573d6000f35b3d6000fd5b005b3480156101d157600080fd5b506101e66101e03660046102ee565b50600090565b6040519081526020015b60405180910390f35b34801561020557600080fd5b506101c361021436600461031e565b50565b34801561022357600080fd5b506040805160008082526020820181905291810182905260608101829052608081019190915260a0016101f0565b34801561025d57600080fd5b5060006101e6565b600881901c600090815260208390526040902054600160ff83161b1615155b92915050565b634e487b7160e01b600052601160045260246000fd5b61ffff8281168282160390808211156102bb576102bb61028a565b5092915050565b808201808211156102845761028461028a565b6000600182016102e7576102e761028a565b5060010190565b60006020828403121561030057600080fd5b81356001600160a01b038116811461031757600080fd5b9392505050565b60006020828403121561033057600080fd5b503591905056fea2646970667358221220dde8e797cbab1c31831d87c1407a7378dc02730d5fe0f64ddefaedfcea14569564736f6c63430008150033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204164642066616365742063616e277420624c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f64654c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066",
    "sourceMap": "558:2031:1:-:0;;;599:671;;;;;;;;;;;;;;;;;;:::i;:::-;687:43;715:14;687:27;:43::i;:::-;850:29;;;877:1;850:29;;;;;;;;;814:33;;850:29;;;;558:2031;;;;;;;;;-1:-1:-1;558:2031:1;;;;;;;;;;;;;;850:29;;;;;;;;;;;;-1:-1:-1;;925:15:1;;;938:1;925:15;;;;;;;;;814:65;;-1:-1:-1;889:33:1;;925:15;;;;;;;;;;;;-1:-1:-1;925:15:1;889:51;;973:31;;;950:17;968:1;950:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;950:54:1;;;:20;;;;;;;;;;:54;1023:180;;;;;;;;;-1:-1:-1;;;;;1023:180:1;;;;;;;-1:-1:-1;1023:180:1;;;;1175:17;1023:180;;;1014:3;1018:1;1014:6;;;;;;;;:::i;:::-;;;;;;:189;;;;1213:42;1235:3;1248:1;1213:42;;;;;;;;;;;;:21;;;:42;;:::i;:::-;669:601;;599:671;;558:2031;;2095:264:36;2237:16;;;-1:-1:-1;;;;;;2263:28:36;;-1:-1:-1;;;;;2263:28:36;;;;;;;;;2306:46;;-1:-1:-1;;;;;;;;;;;736:45:36;2237:16;;;;;;2306:46;;2159:25;;2306:46;2149:210;;2095:264;:::o;2807:1067::-;2963:18;2958:806;2996:11;:18;2983:10;:31;2958:806;;;3044:33;3080:11;3092:10;3080:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3044:66;;3138:30;3128:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;3124:630;;3188:93;3201:11;3213:10;3201:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3239:11;3251:10;3239:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3188:12;;;:93;;:::i;:::-;3124:630;;;3316:34;3306:6;:44;;;;;;;;:::i;:::-;;3302:452;;3370:97;3387:11;3399:10;3387:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3425:11;3437:10;3425:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3370:16;;;:97;;:::i;3302:452::-;3502:33;3492:6;:43;;;;;;;;:::i;:::-;;3488:266;;3555:96;3571:11;3583:10;3571:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3609:11;3621:10;3609:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3555:15;;;:96;;:::i;3488:266::-;3690:49;;-1:-1:-1;;;3690:49:36;;1092:2:126;3690:49:36;;;1074:21:126;1131:2;1111:18;;;1104:30;1170:34;1150:18;;;1143:62;-1:-1:-1;;;1221:18:126;;;1214:37;1268:19;;3690:49:36;;;;;;;;3488:266;-1:-1:-1;3016:12:36;;;;:::i;:::-;;;;2958:806;;;;3778:41;3789:11;3802:5;3809:9;3778:41;;;;;;;;:::i;:::-;;;;;;;;3829:38;3850:5;3857:9;3829:20;:38::i;:::-;2807:1067;;;:::o;3880:1089::-;4016:1;3988:18;:25;:29;3980:85;;;;-1:-1:-1;;;3980:85:36;;4506:2:126;3980:85:36;;;4488:21:126;4545:2;4525:18;;;4518:30;-1:-1:-1;;;;;;;;;;;4564:18:126;;;4557:62;-1:-1:-1;;;4635:18:126;;;4628:41;4686:19;;3980:85:36;4304:407:126;3980:85:36;-1:-1:-1;;;;;;;;;;;;;;;;4145:27:36;;4137:84;;;;-1:-1:-1;;;4137:84:36;;4918:2:126;4137:84:36;;;4900:21:126;4957:2;4937:18;;;4930:30;-1:-1:-1;;;;;;;;;;;4976:18:126;;;4969:62;-1:-1:-1;;;5047:18:126;;;5040:42;5099:19;;4137:84:36;4716:408:126;4137:84:36;-1:-1:-1;;;;;4264:40:36;;4231:23;4264:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;4398:21:36;;;;4394:91;;4435:27;4444:2;4448:13;4435:8;:27::i;:::-;4499:21;4494:469;4538:18;:25;4522:13;:41;4494:469;;;4596:15;4614:18;4633:13;4614:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4687:39:36;;4661:23;4687:39;;;;;;;;;;;:52;4614:33;;-1:-1:-1;;;;;;4687:52:36;4761:29;;4753:95;;;;-1:-1:-1;;;4753:95:36;;5331:2:126;4753:95:36;;;5313:21:126;5370:2;5350:18;;;5343:30;5409:34;5389:18;;;5382:62;5480:23;5460:18;;;5453:51;5521:19;;4753:95:36;5129:417:126;4753:95:36;-1:-1:-1;;;;;;7328:40:36;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7328:85:36;;;-1:-1:-1;;;;;;;;7328:85:36;;;;;;7423:40;;;;;-1:-1:-1;7423:25:36;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;7328:85;7423:74;;;;;;;;;;;;;;;;;;;;;7507:40;;;;;;;:69;;-1:-1:-1;;;;;;7507:69:36;;;;4934:18;;;;:::i;:::-;;;;4582:381;;4565:15;;;;;:::i;:::-;;;;4494:469;;;;3970:999;;3880:1089;;:::o;4975:1138::-;5115:1;5087:18;:25;:29;5079:85;;;;-1:-1:-1;;;5079:85:36;;4506:2:126;5079:85:36;;;4488:21:126;4545:2;4525:18;;;4518:30;-1:-1:-1;;;;;;;;;;;4564:18:126;;;4557:62;-1:-1:-1;;;4635:18:126;;;4628:41;4686:19;;5079:85:36;4304:407:126;5079:85:36;-1:-1:-1;;;;;;;;;;;;;;;;5236:27:36;;5228:84;;;;-1:-1:-1;;;5228:84:36;;4918:2:126;5228:84:36;;;4900:21:126;4957:2;4937:18;;;4930:30;-1:-1:-1;;;;;;;;;;;4976:18:126;;;4969:62;-1:-1:-1;;;5047:18:126;;;5040:42;5099:19;;5228:84:36;4716:408:126;5228:84:36;-1:-1:-1;;;;;5355:40:36;;5322:23;5355:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;5489:21:36;;;;5485:79;;5526:27;5535:2;5539:13;5526:8;:27::i;:::-;5578:21;5573:534;5617:18;:25;5601:13;:41;5573:534;;;5675:15;5693:18;5712:13;5693:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5766:39:36;;5740:23;5766:39;;;;;;;;;;;:52;5693:33;;-1:-1:-1;;;;;;5766:52:36;;;;5840:32;;;;5832:101;;;;-1:-1:-1;;;5832:101:36;;5967:2:126;5832:101:36;;;5949:21:126;6006:2;5986:18;;;5979:30;6045:34;6025:18;;;6018:62;6116:26;6096:18;;;6089:54;6160:19;;5832:101:36;5765:420:126;5832:101:36;5947:45;5962:2;5966:15;5983:8;5947:14;:45::i;:::-;-1:-1:-1;;;;;;7328:40:36;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7328:85:36;;;-1:-1:-1;;;;;;;;7328:85:36;;;;;;7423:40;;;;;-1:-1:-1;7423:25:36;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;7328:85;7423:74;;;;;;;;;;;;;;;;;;;;;7507:40;;;;;;;:69;;-1:-1:-1;;;;;;7507:69:36;;;;6078:18;;;;:::i;:::-;;;;5661:446;;5644:15;;;;;:::i;:::-;;;;5573:534;;6119:742;6258:1;6230:18;:25;:29;6222:85;;;;-1:-1:-1;;;6222:85:36;;4506:2:126;6222:85:36;;;4488:21:126;4545:2;4525:18;;;4518:30;-1:-1:-1;;;;;;;;;;;4564:18:126;;;4557:62;-1:-1:-1;;;4635:18:126;;;4628:41;4686:19;;6222:85:36;4304:407:126;6222:85:36;-1:-1:-1;;;;;;;;;;;;;;;;6444:27:36;;;6436:94;;;;-1:-1:-1;;;6436:94:36;;6392:2:126;6436:94:36;;;6374:21:126;6431:2;6411:18;;;6404:30;6470:34;6450:18;;;6443:62;6541:24;6521:18;;;6514:52;6583:19;;6436:94:36;6190:418:126;6436:94:36;6545:21;6540:315;6584:18;:25;6568:13;:41;6540:315;;;6642:15;6660:18;6679:13;6660:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6733:39:36;;6707:23;6733:39;;;;;;;;;;;:52;6660:33;;-1:-1:-1;;;;;;6733:52:36;6799:45;6733:2;:52;6660:33;6799:14;:45::i;:::-;6628:227;;6611:15;;;;;:::i;:::-;;;;6540:315;;;;6212:649;6119:742;;:::o;9785:::-;-1:-1:-1;;;;;9877:19:36;;9873:56;;9785:742;;:::o;9873:56::-;9938:73;9961:5;9938:73;;;;;;;;;;;;;;;;;:22;:73::i;:::-;10030:12;10044:18;10066:5;-1:-1:-1;;;;;10066:18:36;10085:9;10066:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10029:66;;;;10110:7;10105:416;;10137:12;;:16;10133:378;;10319:5;10313:12;10369:15;10361:5;10357:2;10353:14;10346:39;10133:378;10479:5;10486:9;10448:48;;-1:-1:-1;;;10448:48:36;;;;;;;;;:::i;6867:316::-;6954:77;6977:13;6954:77;;;;;;;;;;;;;;;;;:22;:77::i;:::-;7105:17;;;:24;;-1:-1:-1;;;;;7041:40:36;;;;;;;:25;;;;:40;;;;;;;:61;;:88;;;7139:37;;;;;;;;;;;;;;-1:-1:-1;;;;;;7139:37:36;;;;;;6867:316::o;7589:2190::-;-1:-1:-1;;;;;7716:27:36;;7708:95;;;;-1:-1:-1;;;7708:95:36;;7426:2:126;7708:95:36;;;7408:21:126;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;7575:25;7555:18;;;7548:53;7618:19;;7708:95:36;7224:419:126;7708:95:36;7923:4;-1:-1:-1;;;;;7898:30:36;;;7890:89;;;;-1:-1:-1;;;7890:89:36;;7850:2:126;7890:89:36;;;7832:21:126;7889:2;7869:18;;;7862:30;7928:34;7908:18;;;7901:62;-1:-1:-1;;;7979:18:126;;;7972:44;8033:19;;7890:89:36;7648:410:126;7890:89:36;-1:-1:-1;;;;;;8090:40:36;;8063:24;8090:40;;;;;;;;;;;:65;-1:-1:-1;;;;;8196:40:36;;;;8264:1;8196:25;;;:40;;;;;;:65;-1:-1:-1;;;8090:65:36;;;-1:-1:-1;;;;;8090:65:36;;8063:24;8196:69;;;:::i;:::-;8165:100;;8367:20;8347:16;:40;8343:387;;-1:-1:-1;;;;;8425:40:36;;8403:19;8425:40;;;:25;;;:40;;;;;:80;;8484:20;;8425:80;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8519:40:36;;;;:25;;;:40;;;;;;;:76;;8425:80;;;;;;;;;;;;;;-1:-1:-1;8425:80:36;;8519:40;8578:16;;8519:76;;;;;;:::i;:::-;;;;;;;;;;;;;:91;;;:76;;;;;;:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8624:43:36;;;;;;;;;;;;:95;;-1:-1:-1;;;;;8624:95:36;-1:-1:-1;;;;;;;;8624:95:36;;;;;;8343:387;-1:-1:-1;;;;;8775:40:36;;;;;;:25;;;:40;;;;;:64;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8775:64:36;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8856:40:36;;;;;;;;;;8849:47;;;8991:25;;;8987:786;;9158:17;;;:24;9123:32;;9158:28;;9185:1;;9158:28;:::i;:::-;-1:-1:-1;;;;;9231:40:36;;9200:28;9231:40;;;:25;;;;:40;;;;;;:61;;9123:63;;-1:-1:-1;9310:48:36;;;9306:338;;9378:24;9405:2;:17;;9423:24;9405:43;;;;;;;;:::i;:::-;;;;;;;;;;;9466:17;;;:39;;-1:-1:-1;;;;;9405:43:36;;;;-1:-1:-1;9405:43:36;;9484:20;;9466:39;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;9466:58:36;-1:-1:-1;;;;;9466:58:36;;;;;;9542:43;;;;;;-1:-1:-1;9542:25:36;;;:43;;;;;;:64;:87;;;9306:338;9657:2;:17;;:23;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;9657:23:36;;;;;-1:-1:-1;;;;;;9657:23:36;;;;;;;;;-1:-1:-1;;;;;9701:40:36;;;;9657:23;9701:25;;;:40;;;;;;:61;9694:68;-1:-1:-1;;7690:2089:36;;7589:2190;;;:::o;10533:261::-;10706:22;;10773:13;10755:16;10747:40;;;;-1:-1:-1;;;10747:40:36;;;;;;;;:::i;14:177:126:-;93:13;;-1:-1:-1;;;;;135:31:126;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;626:127::-;687:10;682:3;678:20;675:1;668:31;718:4;715:1;708:15;742:4;739:1;732:15;758:127;819:10;814:3;810:20;807:1;800:31;850:4;847:1;840:15;874:4;871:1;864:15;1298:127;1359:10;1354:3;1350:20;1347:1;1340:31;1390:4;1387:1;1380:15;1414:4;1411:1;1404:15;1430:135;1469:3;1490:17;;;1487:43;;1510:18;;:::i;:::-;-1:-1:-1;1557:1:126;1546:13;;1430:135::o;1679:250::-;1764:1;1774:113;1788:6;1785:1;1782:13;1774:113;;;1864:11;;;1858:18;1845:11;;;1838:39;1810:2;1803:10;1774:113;;;-1:-1:-1;;1921:1:126;1903:16;;1896:27;1679:250::o;1934:270::-;1975:3;2013:5;2007:12;2040:6;2035:3;2028:19;2056:76;2125:6;2118:4;2113:3;2109:14;2102:4;2095:5;2091:16;2056:76;:::i;:::-;2186:2;2165:15;-1:-1:-1;;2161:29:126;2152:39;;;;2193:4;2148:50;;1934:270;-1:-1:-1;;1934:270:126:o;2209:2090::-;2477:4;2506:2;2546;2535:9;2531:18;2576:2;2565:9;2558:21;2599:6;2634;2628:13;2665:6;2657;2650:22;2691:3;2681:13;;2725:2;2714:9;2710:18;2703:25;;2787:2;2777:6;2774:1;2770:14;2759:9;2755:30;2751:39;2809:4;2848:2;2840:6;2836:15;2869:1;2879:1249;2893:6;2890:1;2887:13;2879:1249;;;2958:22;;;-1:-1:-1;;2954:37:126;2942:50;;3015:13;;3102:9;;-1:-1:-1;;;;;3098:35:126;3083:51;;3173:11;;;3167:18;3055:15;;;;3225:1;3208:19;;3198:170;;3278:10;3273:3;3269:20;3266:1;3259:31;3317:4;3314:1;3307:15;3349:4;3346:1;3339:15;3198:170;3388:15;;;3381:37;3441:4;3486:11;;;3480:18;3518:15;;;3511:27;;;3599:21;;3633:24;;;;3723:23;;;;-1:-1:-1;;3679:15:126;;;;3784:236;3800:8;3795:3;3792:17;3784:236;;;3881:15;;-1:-1:-1;;;;;;3877:42:126;3863:57;;3989:17;;;;3828:1;3819:11;;;;;3946:14;;;;3784:236;;;-1:-1:-1;4106:12:126;;;;4043:5;-1:-1:-1;;;4071:15:126;;;;2915:1;2908:9;2879:1249;;;-1:-1:-1;;;;;;;1636:31:126;;4164:18;;;1624:44;4221:22;;;4214:4;4199:20;;4192:52;4261:32;4225:6;4278;4261:32;:::i;:::-;4253:40;2209:2090;-1:-1:-1;;;;;;;;;;2209:2090:126:o;5551:209::-;5589:3;-1:-1:-1;;;;;5659:14:126;;;-1:-1:-1;;;;;;5685:15:126;;5682:41;;5703:18;;:::i;:::-;5752:1;5739:15;;5551:209;-1:-1:-1;;;5551:209:126:o;6613:287::-;6742:3;6780:6;6774:13;6796:66;6855:6;6850:3;6843:4;6835:6;6831:17;6796:66;:::i;:::-;6878:16;;;;;6613:287;-1:-1:-1;;6613:287:126:o;6905:314::-;-1:-1:-1;;;;;7080:32:126;;7062:51;;7149:2;7144;7129:18;;7122:30;;;-1:-1:-1;;7169:44:126;;7194:18;;7186:6;7169:44;:::i;:::-;7161:52;6905:314;-1:-1:-1;;;;6905:314:126:o;8063:128::-;8130:9;;;8151:11;;;8148:37;;;8165:18;;:::i;:::-;8063:128;;;;:::o;8196:127::-;8257:10;8252:3;8248:20;8245:1;8238:31;8288:4;8285:1;8278:15;8312:4;8309:1;8302:15;8328:219;8477:2;8466:9;8459:21;8440:4;8497:44;8537:2;8526:9;8522:18;8514:6;8497:44;:::i;:::-;8489:52;8328:219;-1:-1:-1;;;8328:219:126:o;:::-;558:2031:1;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100735760003560e01c806380faa57d1161004e57806380faa57d14610251578063b88a802f14610251578063cc1a378f146101f9578063cd3daf9d146102515761007a565b80628cc262146101c55780633c6b16ab146101f95780637d098e64146102175761007a565b3661007a57005b61008660276000610265565b1561010b5760005b6028546100a19060019061ffff166102a0565b61ffff16811015610109576100c26100ba8260016102c2565b602790610265565b156100f7576100d28160016102c2565b6040516351f3013160e01b81526004016100ee91815260200190565b60405180910390fd5b80610101816102d5565b91505061008e565b505b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b03168061019f5760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064016100ee565b3660008037600080366000845af43d6000803e8080156101be573d6000f35b3d6000fd5b005b3480156101d157600080fd5b506101e66101e03660046102ee565b50600090565b6040519081526020015b60405180910390f35b34801561020557600080fd5b506101c361021436600461031e565b50565b34801561022357600080fd5b506040805160008082526020820181905291810182905260608101829052608081019190915260a0016101f0565b34801561025d57600080fd5b5060006101e6565b600881901c600090815260208390526040902054600160ff83161b1615155b92915050565b634e487b7160e01b600052601160045260246000fd5b61ffff8281168282160390808211156102bb576102bb61028a565b5092915050565b808201808211156102845761028461028a565b6000600182016102e7576102e761028a565b5060010190565b60006020828403121561030057600080fd5b81356001600160a01b038116811461031757600080fd5b9392505050565b60006020828403121561033057600080fd5b503591905056fea2646970667358221220dde8e797cbab1c31831d87c1407a7378dc02730d5fe0f64ddefaedfcea14569564736f6c63430008150033",
    "sourceMap": "558:2031:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:17:3;:10;1665:1;1650:14;:17::i;:::-;1646:214;;;1688:6;1683:167;1702:14;;:18;;1719:1;;1702:14;;:18;:::i;:::-;1698:22;;:1;:22;1683:167;;;1749:21;1764:5;:1;1768;1764:5;:::i;:::-;1749:10;;:14;:21::i;:::-;1745:91;;;1811:5;:1;1815;1811:5;:::i;:::-;1801:16;;-1:-1:-1;;;1801:16:3;;;;;;598:25:126;;586:2;571:18;;452:177;1801:16:3;;;;;;;;1745:91;1722:3;;;;:::i;:::-;;;;1683:167;;;;1646:214;1443:36:1::1;1735:7:::0;::::1;-1:-1:-1::0;;;;;;1735:7:1::1;1705:38:::0;;736:45:36::1;1705:38:1;::::0;;;;;;;:51;736:45:36;;-1:-1:-1;;;;;1705:51:1::1;::::0;1766:64:::1;;;::::0;-1:-1:-1;;;1766:64:1;;976:2:126;1766:64:1::1;::::0;::::1;958:21:126::0;;;995:18;;;988:30;1054:34;1034:18;;;1027:62;1106:18;;1766:64:1::1;774:356:126::0;1766:64:1::1;2027:14;2024:1;2021::::0;2008:34:::1;2171:1;2168::::0;2152:14:::1;2149:1;2142:5;2135;2122:51;2243:16;2240:1;2237::::0;2222:38:::1;2347:6:::0;2370:74;;::::1;;2501:16;2498:1;2491:27;2370:74;2409:16;2406:1;2399:27;2340:196;::::0;475:67:26;;;;;;;;;;-1:-1:-1;475:67:26;;;;;:::i;:::-;-1:-1:-1;534:4:26;;475:67;;;;598:25:126;;;586:2;571:18;475:67:26;;;;;;;;265:61;;;;;;;;;;-1:-1:-1;265:61:26;;;;;:::i;:::-;;;832:208;;;;;;;;;;-1:-1:-1;832:208:26;;;897:15;1868:25:126;;;1924:2;1909:18;;1902:34;;;1952:18;;;1945:34;;;2010:2;1995:18;;1988:34;;;2053:3;2038:19;;2031:35;;;;1855:3;1840:19;832:208:26;1611:461:126;331:72:26;;;;;;;;;;-1:-1:-1;395:4:26;331:72;;568:217:95;684:1;675:10;;;642:4;746:20;;;;;;;;;;;710:1;724:4;716:12;;710:19;746:27;:32;;568:217;;;;;:::o;14:127:126:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:171;214:6;253:10;;;241;;;237:27;;276:12;;;273:38;;;291:18;;:::i;:::-;273:38;146:171;;;;:::o;322:125::-;387:9;;;408:10;;;405:36;;;421:18;;:::i;634:135::-;673:3;694:17;;;691:43;;714:18;;:::i;:::-;-1:-1:-1;761:1:126;750:13;;634:135::o;1135:286::-;1194:6;1247:2;1235:9;1226:7;1222:23;1218:32;1215:52;;;1263:1;1260;1253:12;1215:52;1289:23;;-1:-1:-1;;;;;1341:31:126;;1331:42;;1321:70;;1387:1;1384;1377:12;1321:70;1410:5;1135:286;-1:-1:-1;;;1135:286:126:o;1426:180::-;1485:6;1538:2;1526:9;1517:7;1513:23;1509:32;1506:52;;;1554:1;1551;1544:12;1506:52;-1:-1:-1;1577:23:126;;1426:180;-1:-1:-1;1426:180:126:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claimReward()": "b88a802f",
    "earned(address)": "008cc262",
    "getRewardsData()": "7d098e64",
    "lastTimeRewardApplicable()": "80faa57d",
    "notifyRewardAmount(uint256)": "3c6b16ab",
    "rewardPerToken()": "cd3daf9d",
    "setRewardsDuration(uint256)": "cc1a378f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_diamondCutFacet\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initializationContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"InitializationFunctionReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"OZError27\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulatingSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recicledSupply\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"durationLeft\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration_\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solady/=node_modules/solady/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"contracts/AppStorage.sol\":{\"keccak256\":\"0x0a8a5117c4c9ea5b85d0664b25ed70f7846be220da158afd07184dade11c28a7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1462b6d2114986b604f54063bd7ec1936190d28f255e11b1ee204a2e509eb9c8\",\"dweb:/ipfs/QmehB9tnbtZAL1PnBceTHaaKX1Hzdgk8kXYjvWF9mPKt4k\"]},\"contracts/Diamond.sol\":{\"keccak256\":\"0xce6db6a8d06d26298f2a7c1e9aa8fca9e622db59142e023ee5cd92f9cb1d390b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41e01f9b9f5af851647f68e2291dc9949173b78559db4a7d00dc3a05e580a99\",\"dweb:/ipfs/QmVGZ8VjJufc5Usm9T7ifxk8ksnvcqzcWwJtXs1nXaMWsG\"]},\"contracts/Errors.sol\":{\"keccak256\":\"0x0ea011510f3b7c1e94741b255f08575cab5258ce10ffa1c943a5c6ddb32bcfd5\",\"urls\":[\"bzz-raw://5a8efd51df8837473e8a4bc3158146211a8dd3d53109874abc0ee7d37e60190d\",\"dweb:/ipfs/QmeGvH5tav9Xi6R5Tbna1bLDEvTPSWrBo4ViGxeuC3fMYN\"]},\"contracts/Modifiers.sol\":{\"keccak256\":\"0x8a908e6f5d22315cfd2166183fee39af967d474c20b028c64b7ad944ed62ebfb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1795cb02659a02ea3595f42d744286882edb538c88c44a82b20789e8b6989abf\",\"dweb:/ipfs/QmcWSMn8GYLi4fcYbxFATincuGU8EQ5qKqqvJqLVNGya5s\"]},\"contracts/interfaces/IBalancer.sol\":{\"keccak256\":\"0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2\",\"dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05\",\"dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC\"]},\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1\",\"dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx\"]},\"contracts/interfaces/IOZLrewards.sol\":{\"keccak256\":\"0x0c630e69a7fcd25d28c739abfac2e55efbdf4627af91ad6cb1b26b8f6a7a83db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e3efdeed8f8c3a35e4f92d8cdf0e958cec40d8ddb725dc1306c9cbb1f86f63bf\",\"dweb:/ipfs/QmfSQyFz9uTVHYCX5E6gtxCJSVRuZ1wQn8i1fhmbtnNsEC\"]},\"contracts/interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x969537551cdca97c461472e7db2f8758582675db7ba24683c9148a8951f58be9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://75c503bf6599386ff01de766deb2b22c7eaacd168866b53c907a0bcf169c22b8\",\"dweb:/ipfs/QmeTcWf9pps8nMa9EbruEW11fSsZyFrmgFJoPXjatywMMu\"]},\"contracts/libraries/FixedPointMathLib.sol\":{\"keccak256\":\"0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577\",\"dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh\"]},\"contracts/libraries/Helpers.sol\":{\"keccak256\":\"0x974cbc84fd5c8c34f0338e7094de5ed1a48720723141238dd265d30a371cbf6f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0b5626366e095786095e4fdbd1e7ff9495b5e13089c835654a0c16fc6559493d\",\"dweb:/ipfs/QmRC6gy83ztURwGMf8HzzrpEFqFPkEjfjZE5FAQgAaMQ2j\"]},\"contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x32804b629ea56692e6458dcaf1a4998c62ef289b071fe2690be171b25926f495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0e39294f81c203fbf433ad126c3fddaaedd98df9561cf3155057bd4d8519727\",\"dweb:/ipfs/QmTh5bxtsnWEq3YshbU428zifKdWwiaWvJW19DRNmAnweb\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/structs/BitMaps.sol\":{\"keccak256\":\"0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f6d9467f83ad116296f5d3f16734fa997cf333a6bc57b494b9d4771e7618fa6\",\"dweb:/ipfs/QmS5T3j2ijQQXv9QtQGMngekqdSRJSad4VEyeszRwDurMS\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_diamondCutFacet",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initializationContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "InitializationFunctionReverted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OZError27"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "earned",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsData",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rewardRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "circulatingSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pendingAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recicledSupply",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "durationLeft",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastTimeRewardApplicable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "notifyRewardAmount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "duration_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsDuration"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        "solady/=node_modules/solady/",
        "src/=lib/unchecked-counter/src/",
        "unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Diamond.sol": "Diamond"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/AppStorage.sol": {
        "keccak256": "0x0a8a5117c4c9ea5b85d0664b25ed70f7846be220da158afd07184dade11c28a7",
        "urls": [
          "bzz-raw://1462b6d2114986b604f54063bd7ec1936190d28f255e11b1ee204a2e509eb9c8",
          "dweb:/ipfs/QmehB9tnbtZAL1PnBceTHaaKX1Hzdgk8kXYjvWF9mPKt4k"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/Diamond.sol": {
        "keccak256": "0xce6db6a8d06d26298f2a7c1e9aa8fca9e622db59142e023ee5cd92f9cb1d390b",
        "urls": [
          "bzz-raw://a41e01f9b9f5af851647f68e2291dc9949173b78559db4a7d00dc3a05e580a99",
          "dweb:/ipfs/QmVGZ8VjJufc5Usm9T7ifxk8ksnvcqzcWwJtXs1nXaMWsG"
        ],
        "license": "MIT"
      },
      "contracts/Errors.sol": {
        "keccak256": "0x0ea011510f3b7c1e94741b255f08575cab5258ce10ffa1c943a5c6ddb32bcfd5",
        "urls": [
          "bzz-raw://5a8efd51df8837473e8a4bc3158146211a8dd3d53109874abc0ee7d37e60190d",
          "dweb:/ipfs/QmeGvH5tav9Xi6R5Tbna1bLDEvTPSWrBo4ViGxeuC3fMYN"
        ],
        "license": null
      },
      "contracts/Modifiers.sol": {
        "keccak256": "0x8a908e6f5d22315cfd2166183fee39af967d474c20b028c64b7ad944ed62ebfb",
        "urls": [
          "bzz-raw://1795cb02659a02ea3595f42d744286882edb538c88c44a82b20789e8b6989abf",
          "dweb:/ipfs/QmcWSMn8GYLi4fcYbxFATincuGU8EQ5qKqqvJqLVNGya5s"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IBalancer.sol": {
        "keccak256": "0x3015d4c5da923a6fb40ee6847ce86fa95219e7138781e62074af42b6f8a0426e",
        "urls": [
          "bzz-raw://d144f1d5949c47169d276c93708cc17c6c0b6a5416e9e7c02367ea295ea4fec2",
          "dweb:/ipfs/QmQYyeNMg1UtjpsrMZunScoHGNZZfob3CrMNxYrPEi6oHQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x3f642e091b5d77c3494a4f0803bb59a420961979f50c8642b3d4db58e0339800",
        "urls": [
          "bzz-raw://88d0f7e8208ac5054b71bf8271b3430ba73a535230e09c826e651f69ae7d3c05",
          "dweb:/ipfs/Qma6bPy74iD3qjupArZEwZE1FNnxo9z37WvC1SmHLi8rEC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20Permit.sol": {
        "keccak256": "0x0ccd9b5c31db01209234e9d98215ab7f8779aeff143d9276212aba8931dd2d23",
        "urls": [
          "bzz-raw://4889848bbbf6ae83ac43fef3d9d2a78fb4b3d1d4556ad4b03ade00dd4ea0cdf1",
          "dweb:/ipfs/QmdzEHNnevrWhdUF9xZT42UPDv3rAi9sbRQ8GuvujjUbKx"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IOZLrewards.sol": {
        "keccak256": "0x0c630e69a7fcd25d28c739abfac2e55efbdf4627af91ad6cb1b26b8f6a7a83db",
        "urls": [
          "bzz-raw://e3efdeed8f8c3a35e4f92d8cdf0e958cec40d8ddb725dc1306c9cbb1f86f63bf",
          "dweb:/ipfs/QmfSQyFz9uTVHYCX5E6gtxCJSVRuZ1wQn8i1fhmbtnNsEC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/ozIDiamond.sol": {
        "keccak256": "0x969537551cdca97c461472e7db2f8758582675db7ba24683c9148a8951f58be9",
        "urls": [
          "bzz-raw://75c503bf6599386ff01de766deb2b22c7eaacd168866b53c907a0bcf169c22b8",
          "dweb:/ipfs/QmeTcWf9pps8nMa9EbruEW11fSsZyFrmgFJoPXjatywMMu"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FixedPointMathLib.sol": {
        "keccak256": "0xdbc49c04fd5a386c835e72ac4a77507e59d7a7c58290655b4cff2c4152fd4f65",
        "urls": [
          "bzz-raw://103d3a287a93dad2907bb42d7b3493f7f3176c561dacd2a0185ac6d900ed4577",
          "dweb:/ipfs/QmTzdyJy6CMKYwNPGNTNPsfHEuzsoGQyJRdoYFjuCwamCh"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/libraries/Helpers.sol": {
        "keccak256": "0x974cbc84fd5c8c34f0338e7094de5ed1a48720723141238dd265d30a371cbf6f",
        "urls": [
          "bzz-raw://0b5626366e095786095e4fdbd1e7ff9495b5e13089c835654a0c16fc6559493d",
          "dweb:/ipfs/QmRC6gy83ztURwGMf8HzzrpEFqFPkEjfjZE5FAQgAaMQ2j"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x32804b629ea56692e6458dcaf1a4998c62ef289b071fe2690be171b25926f495",
        "urls": [
          "bzz-raw://f0e39294f81c203fbf433ad126c3fddaaedd98df9561cf3155057bd4d8519727",
          "dweb:/ipfs/QmTh5bxtsnWEq3YshbU428zifKdWwiaWvJW19DRNmAnweb"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/BitMaps.sol": {
        "keccak256": "0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6",
        "urls": [
          "bzz-raw://4f6d9467f83ad116296f5d3f16734fa997cf333a6bc57b494b9d4771e7618fa6",
          "dweb:/ipfs/QmS5T3j2ijQQXv9QtQGMngekqdSRJSad4VEyeszRwDurMS"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Diamond.sol",
    "id": 333,
    "exportedSymbols": {
      "Diamond": [
        332
      ],
      "IDiamondCut": [
        5155
      ],
      "LibDiamond": [
        8135
      ],
      "Modifiers": [
        656
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2558:1",
    "nodes": [
      {
        "id": 211,
        "nodeType": "PragmaDirective",
        "src": "32:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 213,
        "nodeType": "ImportDirective",
        "src": "395:56:1",
        "nodes": [],
        "absolutePath": "contracts/libraries/LibDiamond.sol",
        "file": "./libraries/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 333,
        "sourceUnit": 8136,
        "symbolAliases": [
          {
            "foreign": {
              "id": 212,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8135,
              "src": "404:10:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 215,
        "nodeType": "ImportDirective",
        "src": "452:59:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDiamondCut.sol",
        "file": "./interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 333,
        "sourceUnit": 5156,
        "symbolAliases": [
          {
            "foreign": {
              "id": 214,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5155,
              "src": "461:11:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 217,
        "nodeType": "ImportDirective",
        "src": "512:44:1",
        "nodes": [],
        "absolutePath": "contracts/Modifiers.sol",
        "file": "./Modifiers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 333,
        "sourceUnit": 657,
        "symbolAliases": [
          {
            "foreign": {
              "id": 216,
              "name": "Modifiers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 656,
              "src": "521:9:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 332,
        "nodeType": "ContractDefinition",
        "src": "558:2031:1",
        "nodes": [
          {
            "id": 289,
            "nodeType": "FunctionDefinition",
            "src": "599:671:1",
            "nodes": [],
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "669:601:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 229,
                        "name": "_contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "715:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 226,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8135,
                        "src": "687:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$8135_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "698:16:1",
                      "memberName": "setContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7416,
                      "src": "687:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "687:43:1"
                },
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "cut",
                      "nameLocation": "844:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 288,
                      "src": "814:33:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 235,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 234,
                            "name": "IDiamondCut.FacetCut",
                            "nameLocations": [
                              "814:11:1",
                              "826:8:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5142,
                            "src": "814:20:1"
                          },
                          "referencedDeclaration": 5142,
                          "src": "814:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$5142_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 236,
                        "nodeType": "ArrayTypeName",
                        "src": "814:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "877:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "850:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IDiamondCut.FacetCut memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 239,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 238,
                            "name": "IDiamondCut.FacetCut",
                            "nameLocations": [
                              "854:11:1",
                              "866:8:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5142,
                            "src": "854:20:1"
                          },
                          "referencedDeclaration": 5142,
                          "src": "854:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$5142_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 240,
                        "nodeType": "ArrayTypeName",
                        "src": "854:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "814:65:1"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "functionSelectors",
                      "nameLocation": "905:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 288,
                      "src": "889:33:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 247,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 248,
                        "nodeType": "ArrayTypeName",
                        "src": "889:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "925:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 250,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 251,
                        "nodeType": "ArrayTypeName",
                        "src": "929:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "889:51:1"
                },
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 256,
                        "name": "functionSelectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "950:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "968:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "950:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 259,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5155,
                          "src": "973:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$5155_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "985:10:1",
                        "memberName": "diamondCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5154,
                        "src": "973:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_FacetCut_$5142_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                          "typeString": "function IDiamondCut.diamondCut(struct IDiamondCut.FacetCut calldata[] calldata,address,bytes calldata)"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "996:8:1",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "973:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "950:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "950:54:1"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 264,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "1014:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1018:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1014:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$5142_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 269,
                          "name": "_diamondCutFacet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "1072:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 270,
                              "name": "IDiamondCut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5155,
                              "src": "1111:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$5155_$",
                                "typeString": "type(contract IDiamondCut)"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1123:14:1",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5133,
                            "src": "1111:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$5133_$",
                              "typeString": "type(enum IDiamondCut.FacetCutAction)"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1138:3:1",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5130,
                          "src": "1111:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$5133",
                            "typeString": "enum IDiamondCut.FacetCutAction"
                          }
                        },
                        {
                          "id": 273,
                          "name": "functionSelectors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "1175:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$5133",
                            "typeString": "enum IDiamondCut.FacetCutAction"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        ],
                        "expression": {
                          "id": 267,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5155,
                          "src": "1023:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$5155_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1035:8:1",
                        "memberName": "FacetCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5142,
                        "src": "1023:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FacetCut_$5142_storage_ptr_$",
                          "typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1058:12:1",
                        "1103:6:1",
                        "1156:17:1"
                      ],
                      "names": [
                        "facetAddress",
                        "action",
                        "functionSelectors"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1023:180:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$5142_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "src": "1014:189:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$5142_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "1014:189:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 280,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "1235:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1248:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1240:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1240:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1240:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1252:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 277,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8135,
                        "src": "1213:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$8135_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1224:10:1",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7556,
                      "src": "1213:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$5142_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:42:1"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_contractOwner",
                  "nameLocation": "619:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "611:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_diamondCutFacet",
                  "nameLocation": "643:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "635:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "610:50:1"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:0:1"
            },
            "scope": 332,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 327,
            "nodeType": "FunctionDefinition",
            "src": "1396:1156:1",
            "nodes": [],
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "1433:1119:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "1477:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "1443:36:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$7370_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 296,
                          "name": "LibDiamond.DiamondStorage",
                          "nameLocations": [
                            "1443:10:1",
                            "1454:14:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7370,
                          "src": "1443:25:1"
                        },
                        "referencedDeclaration": 7370,
                        "src": "1443:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$7370_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 299,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1443:36:1"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "1497:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "1489:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1489:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 304,
                  "initialValue": {
                    "expression": {
                      "id": 302,
                      "name": "LibDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8135,
                      "src": "1508:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LibDiamond_$8135_$",
                        "typeString": "type(library LibDiamond)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1519:24:1",
                    "memberName": "DIAMOND_STORAGE_POSITION",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7339,
                    "src": "1508:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1489:54:1"
                },
                {
                  "AST": {
                    "nativeSrc": "1593:43:1",
                    "nodeType": "YulBlock",
                    "src": "1593:43:1",
                    "statements": [
                      {
                        "nativeSrc": "1607:19:1",
                        "nodeType": "YulAssignment",
                        "src": "1607:19:1",
                        "value": {
                          "name": "position",
                          "nativeSrc": "1618:8:1",
                          "nodeType": "YulIdentifier",
                          "src": "1618:8:1"
                        },
                        "variableNames": [
                          {
                            "name": "ds.slot",
                            "nativeSrc": "1607:7:1",
                            "nodeType": "YulIdentifier",
                            "src": "1607:7:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 298,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1607:7:1",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 301,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1618:8:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 305,
                  "nodeType": "InlineAssembly",
                  "src": "1584:52:1"
                },
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "facet",
                      "nameLocation": "1697:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "1689:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1689:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 308,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "1705:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$7370_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1708:26:1",
                        "memberName": "selectorToFacetAndPosition",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7355,
                        "src": "1705:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$7344_storage_$",
                          "typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
                        }
                      },
                      "id": 312,
                      "indexExpression": {
                        "expression": {
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1735:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1739:3:1",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "src": "1735:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1705:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAddressAndPosition_$7344_storage",
                        "typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1744:12:1",
                    "memberName": "facetAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7341,
                    "src": "1705:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1689:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 316,
                          "name": "facet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "1774:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1791:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1783:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 317,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1783:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1783:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1774:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1795:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        },
                        "value": "Diamond: Function does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1766:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:64:1"
                },
                {
                  "AST": {
                    "nativeSrc": "1938:608:1",
                    "nodeType": "YulBlock",
                    "src": "1938:608:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2021:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2021:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2024:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2024:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nativeSrc": "2027:12:1",
                                "nodeType": "YulIdentifier",
                                "src": "2027:12:1"
                              },
                              "nativeSrc": "2027:14:1",
                              "nodeType": "YulFunctionCall",
                              "src": "2027:14:1"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nativeSrc": "2008:12:1",
                            "nodeType": "YulIdentifier",
                            "src": "2008:12:1"
                          },
                          "nativeSrc": "2008:34:1",
                          "nodeType": "YulFunctionCall",
                          "src": "2008:34:1"
                        },
                        "nativeSrc": "2008:34:1",
                        "nodeType": "YulExpressionStatement",
                        "src": "2008:34:1"
                      },
                      {
                        "nativeSrc": "2108:65:1",
                        "nodeType": "YulVariableDeclaration",
                        "src": "2108:65:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nativeSrc": "2135:3:1",
                                "nodeType": "YulIdentifier",
                                "src": "2135:3:1"
                              },
                              "nativeSrc": "2135:5:1",
                              "nodeType": "YulFunctionCall",
                              "src": "2135:5:1"
                            },
                            {
                              "name": "facet",
                              "nativeSrc": "2142:5:1",
                              "nodeType": "YulIdentifier",
                              "src": "2142:5:1"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2149:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2149:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nativeSrc": "2152:12:1",
                                "nodeType": "YulIdentifier",
                                "src": "2152:12:1"
                              },
                              "nativeSrc": "2152:14:1",
                              "nodeType": "YulFunctionCall",
                              "src": "2152:14:1"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2168:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2168:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2171:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2171:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nativeSrc": "2122:12:1",
                            "nodeType": "YulIdentifier",
                            "src": "2122:12:1"
                          },
                          "nativeSrc": "2122:51:1",
                          "nodeType": "YulFunctionCall",
                          "src": "2122:51:1"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nativeSrc": "2112:6:1",
                            "nodeType": "YulTypedName",
                            "src": "2112:6:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2237:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2237:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2240:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2240:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nativeSrc": "2243:14:1",
                                "nodeType": "YulIdentifier",
                                "src": "2243:14:1"
                              },
                              "nativeSrc": "2243:16:1",
                              "nodeType": "YulFunctionCall",
                              "src": "2243:16:1"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nativeSrc": "2222:14:1",
                            "nodeType": "YulIdentifier",
                            "src": "2222:14:1"
                          },
                          "nativeSrc": "2222:38:1",
                          "nodeType": "YulFunctionCall",
                          "src": "2222:38:1"
                        },
                        "nativeSrc": "2222:38:1",
                        "nodeType": "YulExpressionStatement",
                        "src": "2222:38:1"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nativeSrc": "2377:67:1",
                              "nodeType": "YulBlock",
                              "src": "2377:67:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2406:1:1",
                                        "nodeType": "YulLiteral",
                                        "src": "2406:1:1",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nativeSrc": "2409:14:1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2409:14:1"
                                        },
                                        "nativeSrc": "2409:16:1",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2409:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "2399:6:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2399:6:1"
                                    },
                                    "nativeSrc": "2399:27:1",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2399:27:1"
                                  },
                                  "nativeSrc": "2399:27:1",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2399:27:1"
                                }
                              ]
                            },
                            "nativeSrc": "2370:74:1",
                            "nodeType": "YulCase",
                            "src": "2370:74:1",
                            "value": {
                              "kind": "number",
                              "nativeSrc": "2375:1:1",
                              "nodeType": "YulLiteral",
                              "src": "2375:1:1",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nativeSrc": "2469:67:1",
                              "nodeType": "YulBlock",
                              "src": "2469:67:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2498:1:1",
                                        "nodeType": "YulLiteral",
                                        "src": "2498:1:1",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nativeSrc": "2501:14:1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2501:14:1"
                                        },
                                        "nativeSrc": "2501:16:1",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2501:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nativeSrc": "2491:6:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2491:6:1"
                                    },
                                    "nativeSrc": "2491:27:1",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2491:27:1"
                                  },
                                  "nativeSrc": "2491:27:1",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2491:27:1"
                                }
                              ]
                            },
                            "nativeSrc": "2461:75:1",
                            "nodeType": "YulCase",
                            "src": "2461:75:1",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nativeSrc": "2347:6:1",
                          "nodeType": "YulIdentifier",
                          "src": "2347:6:1"
                        },
                        "nativeSrc": "2340:196:1",
                        "nodeType": "YulSwitch",
                        "src": "2340:196:1"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 307,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2142:5:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 325,
                  "nodeType": "InlineAssembly",
                  "src": "1929:617:1"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 291,
                  "name": "isPaused",
                  "nameLocations": [
                    "1424:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 655,
                  "src": "1424:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:8:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:2:1"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:1"
            },
            "scope": 332,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 331,
            "nodeType": "FunctionDefinition",
            "src": "2558:29:1",
            "nodes": [],
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "2585:2:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:2:1"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:0:1"
            },
            "scope": 332,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 218,
              "name": "Modifiers",
              "nameLocations": [
                "578:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 656,
              "src": "578:9:1"
            },
            "id": 219,
            "nodeType": "InheritanceSpecifier",
            "src": "578:9:1"
          }
        ],
        "canonicalName": "Diamond",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          332,
          656,
          5617
        ],
        "name": "Diamond",
        "nameLocation": "567:7:1",
        "scope": 333,
        "usedErrors": [
          443,
          7334
        ],
        "usedEvents": [
          7388,
          7452
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 1
}